<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maciek's blog</title><link>https://blog.mmakowski.com/</link><description>Recent content on Maciek's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.mmakowski.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Deszcz i katar na Górze Parkowej</title><link>https://blog.mmakowski.com/travel/deszcz-i-katar-na-gorze-parkowej/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/deszcz-i-katar-na-gorze-parkowej/</guid><description>Do Krynicy pojechałem przede wszystkim towarzysko, po drugie, żeby nie siedzieć w Warszawie. Liczyłem też trochę na narty, ale nie robiłem sobie większych nadziei, bo teraz w dzień zajmuję się Zoe, Taida zaś pracuje. Narty mogłyby nawet wyjść, bo oświetlone stoki działają do 21, ale rozłożyła mnie choroba. Jeździłem raptem kilka godzin, na Jaworzynie Krynickiej, w deszczu, i nie wspominam tego miło. Poczyniłem natomiast pewne obserwacje na temat miasta, i nimi się tu podzielę.</description><content:encoded><![CDATA[<p>Do Krynicy pojechałem przede wszystkim towarzysko, po drugie, żeby nie siedzieć w Warszawie. Liczyłem też trochę na narty, ale nie robiłem sobie większych nadziei, bo teraz w dzień zajmuję się Zoe, Taida zaś pracuje. Narty mogłyby nawet wyjść, bo oświetlone stoki działają do 21, ale rozłożyła mnie choroba. Jeździłem raptem kilka godzin, na Jaworzynie Krynickiej, w deszczu, i nie wspominam tego miło. Poczyniłem natomiast pewne obserwacje na temat miasta, i nimi się tu podzielę.</p>
<p>Krynica piękna nie jest. Pijalnia wód to pewne kuriozum - pierwsze skojarzenie to dworzec kolejowy, na jednym końcu odbywają się imprezy masowe, ale w pasażu przy wejściach są też piękne rośliny tropikalne. Architektura uzdrowiskowa z początków XX wieku ma swój urok i jest jej tu trochę - drewniane wille w centrum, domy zdrojowe stary i nowy, willa Patria - w większości ginie jednak w szumie szyldozy. Reklamy karczm góralskich, kuligów, alarmów i monitoringu, atakują ze wszech stron. Architektura wartościowa rozrzedzona jest też budowlami bardzo nieciekawymi, a część zabytków jest w niezbyt dobrym stanie: z Patrii i nowego domu zdrojowego lecą tynki.</p>
<p>Odnowiona została stacja kolejki linowo-torowej na Górę Parkową oraz restauracja na górze. Bardzo podkreślono przy tym latotrzydziestość tych budowli, do tego stopnia, że w poczekalni kolejki na ekranach wyświetlają się scenki z życia kurortu w tym okresie, zaś cały czas jazdy pod górę oraz z góry umila narrator zwracający się do &ldquo;drogich wizytatorów&rdquo; z koszmarną archaizującą manierą - Taidzie się to bardzo podobało, dla mnie było nieznośne. Lubię retro, o ile mogę je przyjmować na własnych warunkach, nie podawane łopatą w anturażu wesołomiasteczkowym.</p>
<p>Z restauracją Parkową wiąże się jeszcze zabawna historia: podczas wyjazdu chodziliśmy sobie na obiady do różnych knajp, pierwszego zaś popołudnia postanowiliśmy zajść do Parkowej, bo wedle Google Maps to tylko 20 minut spacerem od naszej kwatery. Co prawda OpenStreetMap nie pokazywał ścieżki, którą Google chciał nas prowadzić, ale nie zniechęciło nas to zbytnio, jak i nie zbiła nas z tropu pani z restauracji, która wspominała coś o spacerze serpentynami. Po kilkudziesięciu metrach Google kazał skręcić w las i odtąd szliśmy pod górę w śniego. Co prawda były wydeptane jakieś ślady, ale po jakimś czasie rozrzedziły się i zaczęły podążać w dół, podczas, gdy myśmy chcieli w górę. Szedłem ze śpiącą Zoe, miałem dobre buty i było ok, część wycieczki natomiast miała mokro w butach i głośno wyrażała niezdowolenie. Na miejsce dotarliśmy po godzinie i rozwiesiliśmy mokre skarpety przy eleganckich stolikach i porcelanowych dekoracjach.</p>
]]></content:encoded></item><item><title>ChatGPT vs. salade niçoise</title><link>https://blog.mmakowski.com/travel/chatgpt-salade-nicoise/</link><pubDate>Fri, 27 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/chatgpt-salade-nicoise/</guid><description>Plan a 7 day trip to Cote d&amp;rsquo;Azur for a couple with an 8-month old toddler. They are flying to Nice mid-January and will have a rental car. First couple of days in and around Nice, the rest of the stay within 300 kilometers of Nice.
Paul na lotnisku Chopina: Nieduże pudełko, sporo czarnych oliwek, sos chyba vinegrette, bez anchovies. Zawieźliśmy do Nicei. Sałatkę nicejską.
Day 1 Arrive in Nice and check into a hotel.</description><content:encoded><![CDATA[<blockquote>
<p>Plan a 7 day trip to Cote d&rsquo;Azur for a couple with an 8-month old toddler. They are flying to Nice mid-January and will have a rental car. First couple of days in and around Nice, the rest of the stay within 300 kilometers of Nice.</p>
</blockquote>
<p><strong>Paul na lotnisku Chopina</strong>: <em>Nieduże pudełko, sporo czarnych oliwek, sos chyba vinegrette, bez anchovies. Zawieźliśmy do Nicei. Sałatkę nicejską.</em></p>
<h2 id="day-1">Day 1</h2>
<blockquote>
<p>Arrive in Nice and check into a hotel. Spend the day exploring the city, including the old town, the Promenade des Anglais, and the beach.</p>
</blockquote>
<p>Przylecieliśmy wieczorem dnia zerowego, więc checkin mieliśmy zaliczony. Eksploracja miasta była nam natomiast bardzo po myśli. Zaparkowaliśmy na komfortowym <em>Parking Sulzer</em>, przespacerowaliśmy się promenadą na wzgórze zamkowe - piękny wodospad i widoki. Po lanczu o niewłaściwej porze (po 15, a restauracje zamykają się o 14) deptak na nowszym mieście, ostrygi i ceviche na szybko (bardzo dobre) i zahaczając o sklep po wino i camemberta na kolację zwinęliśmy się do domu. Byliśmy na mieście ponad 6 godzin, Zoe trochę spała, trochę się rozglądała, dużo się uśmiechała i ani razu nie dała znać, że ma dość sytuacji.</p>
<p><strong>Mia Casa w Nicei</strong>: <em>uroczo i rodzinnie (Taida: &ldquo;jak u babci na obiedzie&rdquo;), mówiący po hiszpańsku bywalcy, pewnie argentyńscy emigranci, zachwycali się Zoe. Kilka dań obiadowych, empanadas, sałatki na zamówienie. Moja jest trochę jak nicejska, ale z kukurydzą, za to bez jajka i oliwek.</em></p>
<p><img src="https://live.staticflickr.com/65535/52650497142_6e81f64ac2_b.jpg" alt="Dachy starego miasta w Nicei"></p>
<h2 id="day-2">Day 2</h2>
<blockquote>
<p>Visit the Matisse Museum and the Chagall Museum in Nice. In the afternoon, take a drive along the scenic coastal road, the Corniche, and stop at the towns of Villefranche-sur-Mer and Eze.</p>
</blockquote>
<p>Èze jak najbardziej, ale muzea to raczej nie dla nas, zwłaszcza w obecnej konfiguracji. Wybieramy się więc do Monako, do oceanarium. Byliśmy niedawno w jednym w centrum Berlina, bardzo nam się podobało. Fajne było też ogromne, cylindryczne akwarium, w którym jeździło się windą w środku. Po kilku tygodniach od naszej wizyty rozpadło się i zalało pobliskie ulice milionem litrów wody. Wszystkie ryby zginęły.</p>
<p>Tutaj oceanarium ma więcej sensu, bo jest nad samym morzem. Są też duże zbiorniki z większymi zwierzętami (smutny rekin leżał sobie na dnie i łypał) oraz koralowcami, ale też wiele mniejszych akwariów, niektóre z bardzo nietypowo wyglądającymi stworami morskimi. Muzealna część ekspozycji niezbyt ciekawa, może poza imersyjną projekcją kolonii pingwinów. Wchodzi się do hali gdzie na trzech ścianach wyświetlany jest film nakręcony w środku kolonii pingwinów cesarskich.</p>
<p>Po oceanarium spacer do kasyna i z powrotem. Tu się zaczynają schody, i dosłownie i w przenośni. Pagóry i zbocza powodują, że w Monako nawiguje się w trzech wymiarach i tradycyjne mapy z rzutem z góry nie zawsze się sprawdzają. Taida taszczy Zoe w chuście i wszelkie pomyłki nawigacyjne odczuwa dotkliwie, ale i tak bardzo jej się podoba. Monako wygląda jak jedno z najczystszych miast na świecie. Nawet w Singapurze nie było takiego braku syfu.</p>
<p><strong>Shangri La w Monako</strong>: <em>knajpa jak Heritage przy Zbawiksie, zabudowany podcień. Szklane ściany, wszyscy na deptaku mogli oglądać jak Taida odciąga pokarm. Sałatka poprawna, Taida zachwycona carbonarą, Zoe szczęśliwa w krzesełku.</em></p>
<h2 id="day-3">Day 3</h2>
<blockquote>
<p>Visit the medieval village of Saint-Paul-de-Vence and the Fondation Maeght. In the afternoon, head to the town of Antibes and visit the Picasso Museum.</p>
</blockquote>
<p>Fondation Maeght akurat zamknięte, ale Saint Paul de Vence uroczy, jedna bardzo wąska uliczka, mury, rozległy widok po ośnieżone szczyty Alp z jednej a Morze Śródziemne z drugiej strony. Same galerie sztuki. Weszliśmy do jednej, atelier artysty o nazwisku Degav malującego bardzo jaskrawym akrylem. Marszand zachwalał jakość akrylu, płótna i werniksu i ostrzegał nas przed obrazami z Chin podpisanymi francuskimi nazwiskami. Podobały nam się twarze z drutu, ale obejrzeć z bliska trzeba by było dzownić po właściciela galerii - o tej porze roku chyba nie chce im się wysiadywać w sklepach, zostawiają numery telefonów na drzwiach - więc popatrzyliśmy tylko przez szybę.</p>
<p>Mamy jeszcze czas na Antibes, gdzie znów nie muzeum, chcemy tylko coś zjeść. Nasz rytm dnia niestety nie jest zsynchronizowany z trybem działania tutjeszych knajp, które serwują lancz 12-14:30 a potem się zamykają do wieczora. Nam pora obiadu wypada akurat koło 15 i wtedy wybór jest bardzo zawężony.</p>
<p>Dwie godziny jazdy do Cassis, włącza się range anxiety - niby dużo już elektryków jeździ w tej części Europy, ale ładowanie przy autostradach wciąż nie na każdej stacji, w mniejszych miasteczkach też może nie być łatwo o gniazdko dla samochodu. Prądu nam spokojnie wystarczy do Cassis, ale już na kręceni się po okolicy i dojazdy do calanques - tutejsze wersje fjordów - trzeba będzie podładować.</p>
<p><strong>Café des Chineurs w Antibes</strong>: <em>knajpa dla zbłąkanych turystów, nieźle się napociliśmy, żeby znaleźć coś sensownego o tej porze. Starsza niemka pali papierosa przy stole obok i orientuje się, że to nie ok, dopiero gdy idzie do kelnera po popielniczkę i dowiaduje się, że takowych tu nie ma. Taida zadowolona z kaczki (różowa w środku), ale dla mnie bardziej charakter tego miejsca oddaje czekoladowy lava cake, w jeziorze sosu, produkcja taśmowa.</em></p>
<h2 id="day-4">Day 4</h2>
<blockquote>
<p>Take a day trip to Monaco and visit the Palace of Monaco, the Oceanographic Museum, and the famous Casino de Monte-Carlo.</p>
</blockquote>
<p>W Monako już byliśmy - patrz Day 2. Dziś miały być calanques, ale nawaliłem z researchem i okazało się, że nie da się do nich dojechać. Do najbliższych jest dość długi trek, zbyt długi na możliwości Zoe. Już wczoraj ją przetrzymaliśmy cały dzień w chuście i foteliku, i podczas jazdy do Cassis wyraźnie miała dość. Poszliśmy więc na lancz do miasta - wreszcie udało się w odpowiedniej porze.</p>
<p>Z calanques poszczęściło nam się o tyle, że nasza kwatera okazała się znajdować bardzo blisko szlaku do najbliższych, przespacerowaliśmy się zatem wzdłuż portu w stronę Calanque d&rsquo;en Vau. Było miejscami stromo i kamieniście, po godzinie zawróciliśmy, ale mieliśmy namiastkę widoków.</p>
<p><strong>Chez Alfred w Cassis</strong>: <em>pêche du jour w zupie z fasolką fantastyczne. Świetne lokalne wino, dziś nie prowadzę, więc wzięliśmy całą butelkę i bardzo nam dobrze weszła.</em></p>
<h2 id="day-5">Day 5</h2>
<blockquote>
<p>Drive to the hilltop village of Gourdon and take in the views of the surrounding countryside. In the afternoon, visit the town of Grasse and visit the Fragonard Perfumery Museum.</p>
</blockquote>
<p>Gourdon i Grasse nie mamy w planach. Wracamy do Nicei. Kawałek wybrzeżem, z widokiem na calanques na zachód od Cassis. Poza tym tylko postój na lancz w Toulon - zaczęliśmy planować tak, żeby jednak jeść w porze francuskiego lanczu i nic poza tym, żeby nie nadwerężać siebie i Zoe.</p>
<p>W Terron, przedmieściu Nicei, na ktorym mieszkamy, szlak górski zaczyna się 20 metrów od bramy pensjonatu. Stromo pod górę najpierw wąską szosą, potem ścieżką przez las, na koniec kilkadziesiąt metrów ostrego podejścia, i ląduje się na ulicy idącej nad wąwozem, w którym mieszkamy. Potem zejście serpentynami, trochę okazałych willi z pięknymi widokami, trochę uroczych, wrośniętych w skarpę domków o szerokości trzech metrów i wysokości trzech pięter (z ulicy wchodzi się na najwyższe). Bardzo ciekawa okolica, ale nie wyobrażam sobie mieszkania tu. Wszędzie trzeba dojeżdżać, komunikacja publiczna jest szczątkowa. Tutaj, na tych wszystkich podjazdach, na serio przydałby się rower ze wspomaganiem elektrycznym.</p>
<p><strong>L&rsquo;Équerre w Toulon</strong>: <em>hotelowo-marynistycznie, z ambicjami, ale i długo się czeka. Ceviche, krewetki i ośmiornica. Zoe dostała talerz z warzywami, jej pierwszy restauracyjny posiłek. Już miała zasypiać, ale talerz przed nosem ją rozbudził. Białe wino dla odmiany, nie zapamiętaliśmy go w ogóle.</em></p>
<h2 id="day-6">Day 6</h2>
<blockquote>
<p>Take a day trip to the picturesque village of Moustiers-Sainte-Marie and visit the pottery workshops. In the afternoon, drive to the Verdon Gorge and take a boat ride on the Verdon River.</p>
</blockquote>
<p>Wąwóz Verdon na zdjęciach super, ale spływa się nim na oponach i tratwach. Zoe wodę lubi, ale wolimy ją z nią zapoznawać łagodnie. Podobno zresztą i tak w tym sezonie wysechł i nie ma jak spływać. Trochę więc pudło tutaj.</p>
<p>Za to nadrabiamy propozycję z dnia drugiego. Èze bardzo podobne do Saint Paul de Vence, tylko ma widoki na morze oraz piękny Jardin Exotique. Po lanczu i drinku w chateau, który okazał się już nadużyciem dobrej woli Zoe, zostaje nam jeszcze czas na willę Béatrice Ephrussi de Rothschild. Różowy pałac z początków XX wieku to połączenie renesansu z gotykiem, bardzo interesująca choć niezbyt gustowna budowla postawiona przez dziedziczkę fortuny Rotszyldów. Najlepsze są ogrody: jak ogród botaniczny podzielony na części w różnych stylach: ogród francuski, prowansalski, japoński, gaj bambusowy, sukulenty, ogród skalny. Wszystko trochę się sypie, bo utrzymanie tego musi kosztować majątek, a posiadłość nie jest już sponsorowana przez miliarderów, lecz została przekazana fundacji. Przelatujemy trochę biegiem, bo mamy tylko godzinę do zamknięcia. Bardzo warto odwiedzić.</p>
<p><strong>Chez Jean-Marc w Èze</strong>: <em>w pustym poza sezonem miasteczku wszystkie restauracje pozamykane, a starszy pan otworzył swoją knajpkę. Sam gotuje i podaje. Pewnie kilkadziesiąt lat temu odziedziczył rodzinny biznes i sobie go spokojnie sam prowadzi mając w dupie to, co się dzieje na świecie. Cudowne miejsce, kilka stołów w zaułku. Jedzenie bez rewelacji, ale atmosfera, zwłaszcza bez tłumów turystów, niepowtarzalna.</em></p>
<h2 id="day-7">Day 7</h2>
<blockquote>
<p>Spend the day in the town of Cannes, known for its film festival and shopping. Afternoon drive back to Nice and depart.</p>
</blockquote>
<p>Cannes nie tym razem. Nigdzie już dalej nie jedziemy. Nicea. Lancz i zakupy pamiątkowe.</p>
<p><strong>Chez Acchiardo w Nicei</strong>: <em>lancz w środku tygodnia, a knajpa napakowana po brzegi miejscowymi. Kompletna odwrotność wczorajszego chez. Głośno, tłoczno, ale miło. Z plebiscytu wynika, że w sałatce nicejskiej obowiązkowe składniki to tuńczyk, jajko i pomidory. Oliwki też są częste, natomiast fasolka szparagowa już niekoniecznie. Częściej spotyka się rzodkiewkę i seler.</em></p>
<p><img src="https://live.staticflickr.com/65535/52650998606_5fbbb14c50_b.jpg" alt="Sałatka nicejska"></p>
<blockquote>
<p>Note: It&rsquo;s important to check the opening and closing hours of the above mentioned places, Also it&rsquo;s always good to have a backup plan in case of unexpected closures.</p>
</blockquote>
]]></content:encoded></item><item><title>Zoe z Siódmego Lasu</title><link>https://blog.mmakowski.com/travel/zoe-z-siodmego-lasu/</link><pubDate>Fri, 05 Aug 2022 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/zoe-z-siodmego-lasu/</guid><description>Szybko wyrobiła sobie opinię spokojnej. Drugiej nocy krzyczy, bo jest głodna, a ja myślę o sąsiadach, czy ich nie pobudzi, czy nie będą na nas źli. To jej pierwszy wyjazd i pierwszy nasz z nią wyjazd, jeszcze nie wiemy jak z nią żyć wśród ludzi. Ludzi, którzy przyjechali zrelaksować się wśród pól, lasów i wąwozów, praktykując jogę. Nie słuchać krzyków niemowlaka w dzień i w nocy. Wszyscy (wszystkie) mili, chcą ją dotykać, nosić.</description><content:encoded><![CDATA[<p>Szybko wyrobiła sobie opinię spokojnej. Drugiej nocy krzyczy, bo jest głodna, a ja myślę o sąsiadach, czy ich nie pobudzi, czy nie będą na nas źli. To jej pierwszy wyjazd i pierwszy nasz z nią wyjazd, jeszcze nie wiemy jak z nią żyć wśród ludzi. Ludzi, którzy przyjechali zrelaksować się wśród pól, lasów i wąwozów, praktykując jogę. Nie słuchać krzyków niemowlaka w dzień i w nocy. Wszyscy (wszystkie) mili, chcą ją dotykać, nosić. My bronimy granic, jej i swoich.</p>
<p>Prawie nie ma tu zasięgu komórek, można by się nawet odciąć od świata i newsów, ale o wojnie zapomnieć trudno: mleko trzymamy w lodówce, z której korzystają ukraińscy uchodźcy mieszkający w sąsiednim domku. Internet jest na recepcji, sięga też do jadalni, dwudziestolatki przy stole scrollują. Ja też spędzam sporo czasu przyklejony do telefonu, zwłaszcza, gdy leży mi na brzuchu. Aż sforsowałem kciuk prawej dłoni od scrollowania. Czasem zamiast newsów z telefonu czytam Ulyssesa, na głos, chyba go lubi.</p>
<p>Atmosfera mniej retreatowa niż <a href="https://blog.mmakowski.com/travel/p%C4%81r%C5%9Bvako%E1%B9%87%C4%81sana-w-harszu/">w Harszu</a>. Joga jest w tle, rozcieńczona chodzeniem na zmianę, jedno z dzieckiem, drugie na praktyce. Nie ma charyzmatycznego guruji i agresywnych korekt. Jest medytacja z płomieniem. Wschodnie szkoły filozoficzne, w tym jogiczna, kultywują postać wszechwiedzącego nauczyciela, przewodnika nie tylko po praktyce fizycznej, ale i po wszystkich innych aspektach życia. Trzeba zadufania by stawiać się w tej roli. Można też uczyć jogi nie udając, że zjadło się wszystkie rozumy. Z jednej strony to po ludzku fajniejsze, z drugiej odbiera uczniom poczucie obcowania z absolutem.</p>
<p>Kawa pięciu przemian. Inka i Anatol, imbir, kardamon, miód, sól? Coś tam jeszcze.</p>
<p>Mililitry, centyle, zmory wielu rodziców. Statystyka mówi, że będzie ok, ale z własnym dzieckiem trudno tak myśleć, radość jak je, niepokój jak nie. Próbuje połknąć swoją łapkę, wszyscy twierdzą, że jest głodna. Żrą ją komary. Przyzwyczajamy ją do komarów od drugiego miesiąca, na szczepienia przyjeżdża cała w bąblach. Nic sobie z nich nie robi, pewnie jeszcze nie ma wykształconego układu swędzenia, jak i łaskotek. Łaskotać próbuję ją prawie od urodzenia, wciąż nie działa. Spacery, upał, ona w chuście, wraca cała mokra od mojego potu. Na polach słońce, parasol, w lasach gzy i komary. Nawet nie da się takiego ubić jak na niej siada, gdy jest w chuście.</p>
<p>Podczas posiłków wygłasza ody do żyrandola. Trzy razy dziennie, przez sześć dni. Rozbraja to wszystkich, z nami na pierwszym miejscu. Jej zachwyt udziela się nam. Jest super.</p>
<p><img src="https://live.staticflickr.com/65535/52265959654_764f734eeb_b.jpg" alt="ścieżka wśród krzewów"></p>
]]></content:encoded></item><item><title>Welcome to the Fediverse</title><link>https://blog.mmakowski.com/technology/welcome-to-the-fediverse/</link><pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/welcome-to-the-fediverse/</guid><description>In April, in the wake of Elon Musk&amp;rsquo;s move to acquire Twitter, Andi McClure left that platform for Mastodon. Andi&amp;rsquo;s tweets and retweets have been for me a continuous source of wonder and delight, so I moved after her.
Unlike Twitter, which is centralised, Mastodon is a collection of servers (instances) that communicate with each other. They use the ActivityPub protocol, which is a W3C-recommended standard for publishing and receiving all kinds of status updates.</description><content:encoded><![CDATA[<p>In April, in the wake of Elon Musk&rsquo;s move to acquire Twitter,  <a href="https://runhello.com/">Andi McClure</a> <a href="https://twitter.com/mcclure111/status/1518666068021202946">left</a> that platform for <a href="https://mastodon.social/@mcc">Mastodon</a>. Andi&rsquo;s tweets and retweets have been for me a continuous source of wonder and delight, so I moved after her.</p>
<p>Unlike Twitter, which is centralised, Mastodon is a collection of servers (<em>instances</em>) that communicate with each other. They use the <a href="https://activitypub.rocks/">ActivityPub</a> protocol, which is a W3C-recommended standard for publishing and receiving all kinds of status updates. Each instance is administered separately and can decide which other instances to communicate with. What is more, the instances can run different software - not necessarily Mastodon - and still participate in the global, federated network. The <em>fediverse</em> (or <em>fedi</em> for short) refers to this global network, and also includes federated services that might be using communication protocols other than ActivityPub.</p>
<p>All this means that creating a &ldquo;Mastodon&rdquo; account requires first <a href="https://joinmastodon.org/">choosing an instance</a>, whose domain will become part of our user handle and who will act as our window into the federated network. I&rsquo;ve read in one of the joining guides (I can&rsquo;t recall which one) that it&rsquo;s better to not default to the biggest servers, such as <a href="https://mstdn.social/">mstdn.social</a>, because there I&rsquo;d miss out on the sense of community that distinguishes fediverse from big social media sites, so I chose a smaller instance with a couple of thousand accounts.</p>
<p>The first impression of the federated feed was a confusion. What is all this right-wing shit? Are these swastikas for real, or is it a particularly tasteless trolling? And what about all that porn - is no one moderating it? I soon discovered the ability to mute users and - particularly useful - block entire domains, servers that might be lax on moderation or attract people I&rsquo;d rather not interact with. In this way I was able to largely recreate the info-bubble I have enjoyed on other platforms.</p>
<p>On Mastodon, this is supposed to work as follows: each instance&rsquo;s admin defines the content policy; for example, they might disallow racist and sexist posts, or permit anything that the law of a specific country does not forbid. The administrators are then responsible for enforcing this policy via moderation of posts on their server, as well as not federating with instances whose members post content that violates these policies. In this way the choice of the instance is the first line of defense against offensive content.</p>
<p>While the fedi content distribution and moderation model makes a lot of sense, and my own experience has thus far been positive, I suspect it might not scale to the hundreds of millions of real and bot accounts that the largest social media sites have to deal with. It could also prove vulnerable to the sophisticated state-funded abuse and manipulation. Popularity, should it ever happen, might turn out to be fediverse&rsquo;s undoing. But that&rsquo;s fine; nothing lasts forever, and if fedi degenerates into another cesspool, something else will spring up.</p>
<iframe src="https://toot.liw.fi/@liw/108221592372159265/embed" class="mastodon-embed" style="max-width: 100%; border: 0" width="400" allowfullscreen="allowfullscreen"></iframe>
<p>For now, Mastodon is a good place to be. Largely thanks to the interactions feeling more meaningful than on the large commercial platforms, the presence there not being about promoting a persona or building a brand and monetisable following, but participating in communities with common interests and causes. Even the user interface, with content warning support for hiding posts that some readers might find upsetting, and marking media as sensitive for the same reason, conveys a sense of empathy and care about others&rsquo; feelings.</p>
<p>While Mastodon might be the most widely recognised, there are federated alternatives for many popular social media platforms:</p>
<table>
<thead>
<tr>
<th>Big Tech</th>
<th>Fediverse</th>
</tr>
</thead>
<tbody>
<tr>
<td>Twitter</td>
<td>Mastodon, Pleroma, MissKey</td>
</tr>
<tr>
<td>YouTube</td>
<td>PeerTube</td>
</tr>
<tr>
<td>Facebook</td>
<td>Friendica</td>
</tr>
<tr>
<td>Instagram</td>
<td>Pixelfed</td>
</tr>
</tbody>
</table>
<p>and <a href="https://fedidb.org/software">many more</a>.</p>
<p>Twitter, Facebook, YouTube, you name it, made us accustomed to seeing a feed generated by an algorithm whose objective is to maximise the ad revenue, not our experience. Our behaviour is tracked and analysed to help the corporate bottom line, sometimes also to influence elections or other political outcomes. Mastodon, and, by extension, fediverse, allows us to take back control of our information feeds. We see the posts from accounts we followed, in a chronological order, not some random mashup of activity we follow with promoted posts, overt ads and other noise.</p>
<p>In this and some other ways fedi feels like a return to the 1990s, when the early web was a collection of independent websites, some publishing useful info, some utter garbage, but without the Googles and Facebooks deciding what we see or not and tracking our every step, us trading the privacy and freedom of exploration for convenience. It&rsquo;s positively exhilarating.</p>
<p>The sense that Big Tech has appropriated the space for digital human connection, exchange of opinions, community forming, entertainment and creativity, is widespread. One well-known movement that tries to break free from the corporate confines is web3. As far as I understand - and I am not able to make much sense out of most of web3 discourse - the focus of this effort is asset tracking and monetisation of works and services that does not rely on the centralised channels controlled by the Big Tech. In this sense, it is politically opinionated: the capital and wealth creation is its core tenet. Perhaps that&rsquo;s why <a href="https://a16z.com/web3-policy/">venture capitalists do their best to promote web3</a>.</p>
<p>In contrast, fediverse does not care much about the technology, funding sources or profit: it is about the ephemeral human connection. Its politics is just about the freedom of individuals to interact and form communities without the corporate surveillance. This is a very wide umbrella that can accommodate libertarians, anarchists, communists and progressive liberals alike. It shares a lot of characteristics and ethos with the Free Software movement. Take the control over computing away from corporations and large institutions, empower individuals to use the computers in the way that serves their interests.</p>
<p>Fedi is more ethical than the corporate social networks as far as resource usage is concerned. The sole purpose of the network is to let people communicate with each other, and the dominant funding model, where the users and instance operators chip in to pay for running the instances, promotes the use of just enough infrastructure capacity to support this core function. The commercial networks, on the other hand, are funded by ads, which are paid for by brands that in turn get their revenue from our consumption of ever more goods and services we don&rsquo;t necessarily need. The commercial network&rsquo;s infrastructure must not only support the social interactions, but also ad serving and optimisation, thus consuming more resources than necessary to let people talk to each other.</p>
<p>The fediverse is perhaps the most exciting thing in the social use of computing I encountered over the last 15 years. Sure, there are hiccups, imperfections, abandoned instances, abuse. But compared with the curated, sanitised walled gardens offered by the Big Tech, this patch of wild growth feels like a breath of fresh air.</p>
]]></content:encoded></item><item><title>Korona Gór Polskich: 1 - Łysica</title><link>https://blog.mmakowski.com/travel/korona-g%C3%B3r-polskich/1-%C5%82ysica/</link><pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/korona-g%C3%B3r-polskich/1-%C5%82ysica/</guid><description>Fajnie jest robić rzeczy razem. Ja lubię chodzić po górach, Taida zdobywać odznaki, zapisaliśmy się więc do Klubu Zdobywców Korony Gór Polski, wyrobiliśmy książeczki i zrobiliśmy spreadsheet ze szczytami do zdobycia. Na tym się na jakiś czas skończyło.
Ostatnio zbliżające się narodziny Kaczki uświadomiły nam, że wkrótce realizacja tej ambicji spadnie na daleki plan, warto więc ruszyć tyłki póki się da. Łysica to oczywisty wybór: można obrócić z Warszawy w jeden dzień, wejście jest proste, powinno dać radę i w 7 miesiącu ciąży.</description><content:encoded><![CDATA[<p>Fajnie jest robić rzeczy razem. Ja lubię chodzić po górach, Taida zdobywać odznaki, zapisaliśmy się więc do  Klubu Zdobywców Korony Gór Polski, wyrobiliśmy książeczki i zrobiliśmy spreadsheet ze szczytami do zdobycia. Na tym się na jakiś czas skończyło.</p>
<p>Ostatnio zbliżające się narodziny Kaczki uświadomiły nam, że wkrótce realizacja tej ambicji spadnie na daleki plan, warto więc ruszyć tyłki póki się da. Łysica to oczywisty wybór: można obrócić z Warszawy w jeden dzień, wejście jest proste, powinno dać radę i w 7 miesiącu ciąży. Opinie fejsbukowych ekspertów były, jak się można spodziewać, spolaryzowane, jedni twierdzili że chyba nas popierdoliło, inni, że z palcem w dupie. Miałem trochę obaw, ale i dużo zaufania do Taidy, że jak coś będzie nie tak, to powie, i zawrócimy. Oraz nadzieję, że nie wywróci się nieszczęśliwie.</p>
<p><img src="https://live.staticflickr.com/65535/51856647627_23d6c22b43_c.jpg" alt="droga przez ośnieżony las"></p>
<p>Standardowy szlak prowadzi ze św. Katarzyny. Jednostajne podejście szeroką, prostą drogą, niecałe 2 km, wchodzi się może godzinę. Podobno miejscowi spacerują sobie tam po mszy. Bardzo stromo nie jest, ale w zimie może być ślisko, a jako że minimalizacja ryzyka upadku była dla nas priorytetem, wybraliśmy alternatywę: wejście z Kakonina. Dystans jest dwa razy dłuższy, ale podejście trochę mniej strome. Okazało się to świetną decyzją: szliśmy po świeżym, ale płytkim śniegu, wokól ośnieżone drzewa i przebijające między chmurami słońce — widok jak z bajki. Szlak w miarę oczywisty, trudno go zgubić, choć raz nam się prawie udało. Rozmawiając i drepcząc pod górę ani się obejrzeliśmy jak stanęliśmy na przełęczy św. Mikołaja. Stamtąd już granią, płasko, przez skałę Agaty na Łysicę — na tej części szlaku zaczęliśmy spotykać więcej ludzi. Zejście do św. Katarzyny było najmniej przyjemne: mocno wydeptane przez dziesiątki spacerowiczów, miejscami bardzo śliskie.</p>
<p><img src="profil.png" alt="profil wejścia i zejścia"></p>
<p>Taida pierwszy raz miała nowy sprzęt: buty, kije i raczki. Sprawdził się doskonale, choć do raczków przylepiał się śnieg tworząc pod podeszwami buły, które trzeba było regularnie usuwać. Tym niemniej, na śliskim zejściu okazały się niezwykle pomocne. Przede wszystkim jednak jej rozsądkowi i niezwykle ostrożnemu schodzeniu zawdzięczamy, że ten spacer przyniósł tylko pozytywne emocje.</p>
]]></content:encoded></item><item><title>Granie Turbacza</title><link>https://blog.mmakowski.com/travel/granie-turbacza/</link><pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/granie-turbacza/</guid><description>Dojazd PKP, ale z Krakowa jest bus; orientuję się dopiero w pociągu, choć na bilecie jest na czerwono: bus zastępczy. Trochę korków, w stronę Krakowa pierwsze trzy kilometry to 40 minut, ale mimo tego daję radę, zdążamy na nasz pociąg. Otwarte wagony są lepsze niż przedziały. W przedziale nie da się rozprostować nóg, i jest problem jak współpasażer brzydko pachnie albo głośno słucha muzyki na słuchawkach.
Na stacji w Nowym Targu wpadamy w łapy taksówkarza, już nas nie opuści do końca wyjazdu.</description><content:encoded><![CDATA[<h1 id="dojazd">Dojazd</h1>
<p>PKP, ale z Krakowa jest bus; orientuję się dopiero w pociągu, choć na bilecie jest na czerwono: <em>bus zastępczy</em>. Trochę korków, w stronę Krakowa pierwsze trzy kilometry to 40 minut, ale mimo tego daję radę, zdążamy na nasz pociąg. Otwarte wagony są lepsze niż przedziały. W przedziale nie da się rozprostować nóg, i jest problem jak współpasażer brzydko pachnie albo głośno słucha muzyki na słuchawkach.</p>
<p>Na stacji w Nowym Targu wpadamy w łapy taksówkarza, już nas nie opuści do końca wyjazdu. Wozi na szlak i do knajpy, zatrzymuje się przy sklepie, radzi gdzie zjeść śniadanie. Raz tylko musieliśmy poczekać godzinę, bo akurat był na meczu. Podhale pokonało Resovię 1:0, już mu brakuje tylko punktu do Siarki.</p>
<h1 id="śnieg">Śnieg</h1>
<p>się utrzymuje przez kilka dni. Na słońcu gorąco, w cieniu zimno, ale nie wykorzystujemy wszystkich warstw. Kurtka z primaloftu przydaje się dopiero do położenia pod tyłek, gdy kładziemy się w krzakach jagód, na mokrej od topniejącego śniegu ziemi, i przez godzinę podziwiamy chmury. Zmieniają się nieustannie, tak jak nasza sytuacja. Jednego dnia wydaje się, że jesteśmy w najgorszej dupie, ale po jakimś czasie się układa.</p>
<p><img src="https://live.staticflickr.com/65535/51600652514_dd7e72c884_b.jpg" alt="https://live.staticflickr.com/65535/51600652514_dd7e72c884_b.jpg"></p>
<p>Dużo tu papieża, chadzał kiedyś tymi szlakami. Marek mówi, że w polsce trójca święta to Jezus, Matka Boska i JP2. Spotykamy strażnika parku, ma siekiero-ciupagę, sam zrobił. Podobno przydaje się na krnąbrnych turystów, a i można gwoździk przybić albo gałązkę urąbać. Powiedziałby nam co myśli o drewnianych chodnikach, leżących tu i ówdzie na szlaku na Gorc, ale jest jeszcze w pracy.</p>
<p>My za to nie mamy zahamowań żeby mówić co myślimy o motorach na szlaku. Bardzo nam się nie podobają, a jeździ nich sporo, zwłaszcza zielonym między Nowym Targiem a Obidową. Pieszych też dużo, ale nie przeszkadzają aż tak. W końcu to weekend, piękna pogoda, szlaki łatwo dostępne.</p>
<h1 id="żarcie">Żarcie</h1>
<p>na Turbaczu podobno najlepsze w polskich górach. Menu zajmuje wielką tablicę. Szarlotka, smażone rydze, placki ziemniaczane, naleśniki, kotlety, kawa z ekspresu — choć ta akurat niesmaczna. Wszystko na wielką skalę, bo przez schronisko przewalają się tłumy. Budynek niczego sobie, kilkadziesiąt pokoi, a mimo tego nie mają dla nas miejsca z soboty na niedzielę. Tylko kibli mało, trzy na piętro.</p>
<p>W schronisku nie ma miejsca, więc ostatnia noc w Nowym Targu. Gramy w bilard i jemy. <em>Absynt</em> miał swoje pięć minut sławy gdy odwiedziła go Magda Gessler. Można te pięć minut oglądać w kółko na telewizorze za barem. Wystrój odjazdowy, Gaudi, Alicja w krainie czarów i psychodeliczna halucynacja w jednym. Jedzenie robi mniejsze wrażenie, choć do łopatki jagnięcej trudno się było przyczepić. <em>Kaprys</em> z pretensjami, szklana ścianka z płynem i bąbelkami, atmosfera weselno-małomiasteczkowa. Śniadanie całkiem niezłe. Szef za barem bezbłędnie identyfikuje nas jako wychowanków ostatniej dekady XX w i puszcza przeboje 2Unlimited.</p>
<p>W <em>Deja Vue</em> (sic!) też lata 90, ale z innej parafii zupełnie — grunge. Dobrze się komponuje z ristretto i mało słodkim, mocno tłustym tiramisu. My, sybaryci!</p>
<p><a href="https://www.flickr.com/gp/mmakowski/Bt51a3">Turbacz</a></p>
]]></content:encoded></item><item><title>Pārśvakoṇāsana w Harszu</title><link>https://blog.mmakowski.com/travel/p%C4%81r%C5%9Bvako%E1%B9%87%C4%81sana-w-harszu/</link><pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/p%C4%81r%C5%9Bvako%E1%B9%87%C4%81sana-w-harszu/</guid><description>Najpierw dowiedzieliśmy się, że joga to oddychanie. Nic więcej. Wdech i wydech. Wdech i wydech.
Potem, że joga to rozluźnianie. Nie rozciąganie, Żeby dobrze oddychać trzeba być luźnym, mieć dostęp do brzucha. Jesteśmy spięci, siedzenie przy biurku nas spina, sport nas spina, współczesne życie jest szkodliwe. Trzeba się rozluźnić. Trzeba też dobrze ustawić miednicę. Wtedy oddech jest swobodny, z brzucha.
Ważne jest, żeby jelito grube, nasz drugi mózg, było czyste. Wtedy propriocepcja działa, czujemy co się w nas dzieje, i lepiej też czujemy, co się dzieje w innych.</description><content:encoded><![CDATA[<p>Najpierw dowiedzieliśmy się, że joga to oddychanie. Nic więcej. Wdech i wydech. Wdech i wydech.</p>
<p>Potem, że joga to rozluźnianie. Nie rozciąganie, Żeby dobrze oddychać trzeba być luźnym, mieć dostęp do brzucha. Jesteśmy spięci, siedzenie przy biurku nas spina, sport nas spina, współczesne życie jest szkodliwe. Trzeba się rozluźnić. Trzeba też dobrze ustawić miednicę. Wtedy oddech jest swobodny, z brzucha.</p>
<p>Ważne jest, żeby jelito grube, nasz drugi mózg, było czyste. Wtedy propriocepcja działa, czujemy co się w nas dzieje, i lepiej też czujemy, co się dzieje w innych. Rozpoznajemy z kim nam dobrze, a z kim źle. Należy jeść lekko, wtedy jelito grube jest czyste.</p>
<p>To teoria, i było jej więcej, ale najważniejsza jest praktyka. Przede wszystkim regularna, sześć dni praktykujemy, siódmego odpoczywamy, do tego przerwy na nów i pełnię. Nie musi być dużo, w wersji minimum wystarczą powitania słońca i trzy pozycje zamykające.</p>
<p>Od tego zaczynam; potem dochodzi świeca z wariantami oraz pozycje stojące; tyle mi wystarczy. I tak moje Utthita Trikoṇāsana i Utthita Pārśvakoṇāsana wymagają stałych korekt. Z jednej strony nie należy się napinać, można zgiąć nogę jak trzeba, ale z drugiej korekty nogi te prostują. Teoretycznie wystarczy się rozluźnić, w praktyce nie zawsze to wychodzi. Przede wszystkim trzeba oddychać.</p>
<p>Oddychamy podczas medytacji. Trudno się siedzi przez 15 minut tak, żeby i kręgosłup był prosty, i brzuch rozluźniony. Utrzymanie pozycji absorbuje, mało jest miejsca między bodźcem a reakcją — a to miejsce to właśnie medytacja. Na leżąco trenujemy oddechy na raty wdech — wydech podzielony na 3, 4, 5 części. Ta ostatnia to jak wyciskanie pasty do zębów z tubki — wydaje się, że już nic nie zostało, a jeszcze da się trochę wydobyć.</p>
<p><img src="https://live.staticflickr.com/65535/51434556143_d22207c173_c.jpg" alt="studio jogi z widokiem na jezioro"></p>
<p>Jest pięknie. Budynek starej szkoły, obrośnięty pnączami, z wielkim bocianim gniazdem na dachu, wewnątrz stare drewno, klasy. Sala ćwiczeń — galeria obrazów, widać z niej jezioro. Jak przyjdzie się na zajęcia wcześnie, można wybrać, czy chce się je widzieć w pozycji góry czy psa z głową w dół.</p>
<p>Jedzenie znakomite, wegetariańskie. Owsianki, jaglanki i inne kaszanki, zupy-kremy, curry z jackfruitem, kalafiory, fasole, hummusy i inne pasty. Znalezione przez nas kanie. Świetnie przyprawione. Jelito grube jest szczęśliwe.</p>
<p>Są filmy. Jest koncert — zagrany na tybetańskich misach. Sesja access bars rozluźnia i wprawia w znakomity nastrój na cały dzień. Spacery. Fajne towarzystwo. Taida ma 17 urodziny i zostaje przewodniczącą klasy. Będzie szyła ciuchy do jogi i masowała lomilomi. Idylla.</p>
<p>Tylko za kotami trochę tęsknię.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/4943w0">Yoga in Harsz</a></p>
]]></content:encoded></item><item><title>Nad Zielonym</title><link>https://blog.mmakowski.com/travel/nad-zielonym/</link><pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/nad-zielonym/</guid><description>Czy jestem na wsi, czy w mieście, żyję w izolacji, w bańce. Na polu biwakowym tak się nie da, jest się blisko ludzi — może nie do końca przypadkowych, bo już ci, którzy decydują się spędzać czas w namiotach, to wyselekcjonowana grupa — lecz wciąż nie tak sprofilowana jak moje codzienne otoczenie.
Okazuje się, że nie ma się czego bać. Groźnie wyglądający brodacz w kamuflarzu i łysy w czarnym t-shircie przynoszą nam świeżo zrąbany pień na ognisko.</description><content:encoded><![CDATA[<p>Czy jestem na wsi, czy w mieście, żyję w izolacji, w bańce. Na polu biwakowym tak się nie da, jest się blisko ludzi — może nie do końca przypadkowych, bo już ci, którzy decydują się spędzać czas w namiotach, to wyselekcjonowana grupa — lecz wciąż nie tak sprofilowana jak moje codzienne otoczenie.</p>
<p>Okazuje się, że nie ma się czego bać. Groźnie wyglądający brodacz w kamuflarzu i łysy w czarnym t-shircie przynoszą nam świeżo zrąbany pień na ognisko. Rodzina w Defenderze jest przemiła, karmi dzieci budyniem, towarzyszy nam przy ognisku. Czasem ktoś nieprzychylnie skomentuje zachowanie dzieci, albo brak reakcji z naszej strony, ale wszystko w dość cywilizowany sposób.</p>
<p><img src="https://live.staticflickr.com/65535/51387479497_ea014d3143_c.jpg" alt="odciąg namiotu przypięty do ziemi śledziem"></p>
<p>Rodzinne biwakowanie, jak i pewnie wszystkie inne okazje, obraca się wokół potrzeb dzieci. Mogą się bawić w wodzie, ganiać z rówieśnikami, a w czasie, gdy tego nie robią, trzeba im zapewnić rozrywki. Trzeba karmić, przebierać, myć, kłaść spać. To zajmuje prawie cały dzień. Czasem są &ldquo;grzeczne&rdquo; (czyli robią to, czego od nich oczekujemy), często nie, rodzice się stresują, nie-rodzicom udziela się nerwowa atmosfera.</p>
<p>Bez prysznica da się żyć, zwłaszcza, gdy obok jest jezioro. Po wodę pitną trzeba chodzić, ale to niecałe 10 minut w jedną stronę, nawet dobrze, można zażyć trochę ruchu. Drewno na ognisko da się pozyskać z lasu, jest sporo gałęzi, ale z grubszymi cienko. Chyba, że brodacz z łysym pozyskają i przyniosą.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/830S63">Nad Zielonym (2021)</a></p>
]]></content:encoded></item><item><title>Czterech facetów w dwóch łódkach</title><link>https://blog.mmakowski.com/travel/czterech-facet%C3%B3w-w-dw%C3%B3ch-%C5%82%C3%B3dkach/</link><pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/czterech-facet%C3%B3w-w-dw%C3%B3ch-%C5%82%C3%B3dkach/</guid><description>Spływ pontonowy Bugiem z Tuchlina do Młynarzy odbył się po raz drugi, można więc uznać, że to już impreza cykliczna. Liczba uczestników oraz jednostek pływających wzrosła o sto procent. Poza pontonem &amp;ldquo;dla dwóch zakochanych wędkarzy&amp;rdquo; zwodowaliśmy też trzyosobowego Jastrzębia Morskiego. Załogę mniejszej jednostki stanowili Kozło i Jordan, zaś do większej wsiadł Marek wraz z niżej podpisanym, przy czym miejsce trzeciej osoby zajęła sterta bagaży — wyposażeni byliśmy też znacznie lepiej niż przed rokiem.</description><content:encoded><![CDATA[<p>Spływ pontonowy Bugiem z Tuchlina do Młynarzy odbył się po raz drugi, można więc uznać, że to już impreza cykliczna. Liczba uczestników oraz jednostek pływających wzrosła o sto procent. Poza pontonem &ldquo;dla dwóch zakochanych wędkarzy&rdquo; zwodowaliśmy też trzyosobowego Jastrzębia Morskiego. Załogę mniejszej jednostki stanowili Kozło i Jordan, zaś do większej wsiadł Marek wraz z niżej podpisanym, przy czym miejsce trzeciej osoby zajęła sterta bagaży — wyposażeni byliśmy też znacznie lepiej niż przed rokiem. Były bagietki, Camembert i wino truskawkowe.</p>
<p>Z każdym dodatkowym uczestnikiem wycieczki trudność koordynacji wzrasta geometrycznie. Tu trzeba odwieźć córkę na basen, tu zostawić żonie samochód, tam skoordynować się z przyjaciółmi, są ograniczenia czasowe, ten weekend nie, ten tak, ale w niedzielę trzeba być w Warszawie o 19&hellip; niemal cud, że udało nam się wygospodarować te półtora dnia w weekend, w środku lata.</p>
<p>Plan był taki, żeby z grubsza powtórzyć zeszłoroczną, <a href="https://blog.mmakowski.com/travel/dw%C3%B3ch-facet%C3%B3w-w-%C5%82%C3%B3dce/">pionierską wyprawę</a>, ale zamiast noclegu na zarośniętej wyspie przybić gdzieś na łące, zrobić sobie ognisko i pójść spać w cywilizowanych warunkach. Poza tym miało być podobnie, wypływamy po południu, nocujemy, wypływamy rano i na miejscu jesteśmy wczesnym popołudniem dnia kolejnego.</p>
<p>Wyruszyliśmy po 17, czyli dwie godziny później niż w zeszłym roku — ale też dni w lipcu są znacznie dłuższe niż we wrześniu. Od początku zdajemy się na nurt i nie wiosłujemy, z wyjątkiem drobnych korekt gdy wyrzuca nas w stronę brzegu. Bug płynie wartko, niesie nas z prędkością około 3 km/h.</p>
<p><img src="https://live.staticflickr.com/65535/51346037866_1fc60e7ac5_c.jpg" alt="https://live.staticflickr.com/65535/51346037866_1fc60e7ac5_c.jpg"></p>
<p>Były przygody. W okolicy Szumina pojawiają się na środku rzeki zatopione drzewa, trzeba uważać. Jak na złość, Kozło gubi pióro od wiosła — szczęśliwie drugi ponton, wciaż sterowny i z napędem, omija sterczący konar i przechwytuje płynącą z nurtem zgubę. Druga stresująca sytuacja miała miejsce przy lądowaniu. Upatrzyliśmy sobie ładny las za Szuminem, w okolicy Nadkola, na lewym brzegu. Dostęp był dość trudny, stroma skarpa bez dogodnych miejsc do lądowania, ale postanowiliśmy przybić mimo tego. Kozło i Jordan bezpiecznie dotarli do brzegu, nasz ponton natomiast przy przybijaniu nadział się na sterczący pod wodą fragment pnia. Rozległ się głośny syk — przebita została zewnętrzna komora. Wydostaliśmy łodzie na brzeg, ale skala uszkodzenia nie pozostawiała złudzeń: w takim stanie Jastrząb nie wypłynie kolejnego dnia.</p>
<p>Nie mieliśmy zestawu naprawczego, byliśmy w lesie, z dala od wszelkiej pomocy, ale po krótkiej konsternacji wykluł się plan: rozbijamy namioty, rozpalamy ognisko, a Marek idzie do odległeog o 2.5 km Nadkola popytać o taśmę klejącą bądź inne materiały, przy pomocy których moglibyśmy załatać dziurę. Misja zakończyła się pełnym sukcesem, po godzinie ognisko płonęło a Marek powrócił ze zwojem taśmy do łatania dachów z uspokoajającym napisem <em>einfach gut</em>. Załataliśmy nim ponton, napompowaliśmy i rano okazało się, że trzyma dobrze, można płynąć.</p>
<p><img src="https://live.staticflickr.com/65535/51346267573_714aeb1985_c.jpg" alt="https://live.staticflickr.com/65535/51346267573_714aeb1985_c.jpg"></p>
<p>Z tego wszystkiego nie mogliśmy należycie docenić zachodu słońca, który jak zwykle był piękny. Były też i nietoperze, choć nie w takich ilościach, jakie dane nam było oglądać rok wcześniej z rzeki. Za to ognisko bardzo udane.</p>
<p>Dzień drugi był długi i upalny. Zmyliło nas trochę to, że z Kozło przepłynęliśmy z wyspy do Młynarzy w sześć godzin, intensywnie wiosłując. Nie byłem przekonany, czy to wiosłowanie coś zmienia; okazuje się, że tak, bowiem nasz drugi dzień to niemal dziewięć godzin. Co prawda startowaliśmy ze dwa kilkometry wcześniej, doszedł też dłuższy postój w Wyszkowie (złe warunki do przybijania pod mostem, chyba lepiej by było nieco dalej, za parkiem) aby uzupełnić wodę, której mieliśmy za mało.</p>
<p>Rozmowy o związkach, tak trwałych jak i przelotnych (Marek i Jordan mieli tu trochę wspólnych punktów do omówienia) i o religii, natomiast najbardziej utkwiła w pamięci wszystkich historia o logo zespołu <em>Stan miłości i zaufania</em>, które przedstawiało krokodyla pożerającego człowieka. Albo raczej człowieka, który tak zaufał krokodylowi, że włożył mu głowę do paszczy.</p>
<p>My zaś, beztrosko, oddaliśmy swój los rzece, i dobrze na tym wyszliśmy. Oby cykle trwały nadal.</p>
<h3 id="statystyki">Statystyki</h3>
<p>Na kolejne imprezy z cyklu, warto brać pod uwagę następujące parametry trasy:</p>
<ul>
<li>Odległość: <strong>38 km</strong></li>
<li>Czas spływu: <strong>13 h</strong></li>
</ul>
<h3 id="ciekawostki">Ciekawostki</h3>
<ul>
<li>Na środku rzeki nie ma komarów, podobno mogą za jednym razem przelecieć tylko kilka metrów — <a href="https://www.sciencedirect.com/science/article/pii/S0075951113001011">to chyba mit</a>, ale faktycznie z dala od brzegu jest ich niewiele. Należy natomiast zabierać repelent na okoliczność postojów i noclegu.</li>
<li>Tyczki nie zawsze oznaczają mielizny, czasem przy tyczce jest głębiej niż gdzie indziej.</li>
<li>W wielu miejscach rzeka jest dość płytka, można na środku iść dnem i woda nie sięga nawet do pasa.</li>
<li>Do gaszenia małego ogniska potrzeba kilku litrów wody.</li>
<li>Pieńki sterczące z wody należy omijać.</li>
</ul>
<p><a href="https://www.flickr.com/gp/mmakowski/3S4djn">Bug 2021</a></p>
]]></content:encoded></item><item><title>GSB, Bartne-Komańcza</title><link>https://blog.mmakowski.com/travel/gsb-bartne-koma%C5%84cza/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/gsb-bartne-koma%C5%84cza/</guid><description>Start Odkąd zapanował dobrobyt i wolny rynek, w góry dojechać się da tylko własnym samochodem. W zeszłym roku do Świeradowa-Zdroju dotarliśmy z Jeleniej Góry taksówką. Tym razem możliwości dojazdu do Małastowa wydają się jeszcze bardziej ograniczone. Z ratunkiem spieszy mama, oferując, że nas zawiezie samochodem. Podróż na Przełęcz Małastowską mija szybko i przyjemnie, na miejsce docieramy wczesnym popołudniem, potem jeszcze 20 minut spaceru pod górę i jesteśmy w schronisku PTTK.</description><content:encoded><![CDATA[<h2 id="start">Start</h2>
<p>Odkąd zapanował dobrobyt i wolny rynek, w góry dojechać się da tylko własnym samochodem. W zeszłym roku do Świeradowa-Zdroju dotarliśmy z Jeleniej Góry taksówką. Tym razem możliwości dojazdu do Małastowa wydają się jeszcze bardziej ograniczone. Z ratunkiem spieszy mama, oferując, że nas zawiezie samochodem. Podróż na Przełęcz Małastowską mija szybko i przyjemnie, na miejsce docieramy wczesnym popołudniem, potem jeszcze 20 minut spaceru pod górę i jesteśmy w schronisku PTTK.</p>
<p>Schronisko na Magurze Małastowskiej wyglądałoby pięknie, gdyby nie rozpoczęta kilka late temu rozbudowa. Do eleganckiej, drewnianej bryły dokleił się prostopadłościan z gazobetonu. Wewnątrz, w starej, drewnianej części mieści się główna izba oraz sypialnie, zaś dobudówka zawiera ubikacje i łazienkę – a raczej zawierać będzie, bo obecnie z ubikacji działa z grubsza jedna, zaś łazienka składa się z brodzika na gołym betonie i dziur między betonowymi blokami, przez które oglądać można las. Sypialnie widziały lepsze lata: w naszej szyby w oknie zrobione są z foliowego worka.</p>
<p>Gospodarze schroniska rezydowali kiedyś w Chacie Socjologa na Otrycie, i część otryckiego towarzystwa, której mniej jest po drodze z obecnie panującym tam reżimem, jeździ na Magurę. Stan techniczny schroniska na Magurze może pozostawiać trochę do życzenia, za to atmosfera jest bardzo luźna, i zjeść można pyszne zupy z miejscowych ziół. Ale Lubosz i Żyrafka będą tu na gospodarstwie tylko do końca czerwca. Zupy znikną, rozgrzebana budowa zostanie.</p>
<h2 id="magura-małastowska---kąty">Magura Małastowska - Kąty</h2>
<p>Wyruszamy rano, w sporym deszczu, odziani w kurtki przeciwdeszczowe, z parasolami w dłoniach. Odprowadzamy mamę na przełęcz, do samochodu, a potem maszerujemy niebieskim szlakiem w stronę Bartnego. Deszcz nie dokucza zbytnio, parasolki i warstwy przeciwdeszczowe wystarczają, żebyśmy nie przemokli do suchej nitki. Najbardziej uciążliwe jest zalegające w niektórych miejscach szlaku błoto – tak już zostanie do końca wycieczki.</p>
<p>Na ten wyjazd spakowałem się ultralekko – szesnastolitrowy plecak, jedna zmiana bielizny, najcieplejsza rzecz to cienka bluza z merynosa. Na chłodnieszjych etapach mam na sobie wszystko poza drugą parą majtek i w trakcie marszu jest w porządku, zastanawia mnie tylko, co będzie gdy na bieszczadzkich połoninach będzie mocno wiało. Na kolejny taki wyjazd powinienem się zaopatrzyć w cienką kurtkę puchową. Nic nie waży i zajmuje mało miejsca, a bardzo dobrze izoluje od chłodu. Tym razem w sytuacji awaryjnej musiałbym chyba jakoś przyodziać śpiwór. Marek wyposażył się bardziej odpowiednio, nosi dwa razy więcej, ale ma polar i soft shell, jak będzie bardzo źle to będę mógł je pożyczyć.</p>
<p>Po trzech godzinach marszu w deszczu dochodzimy do bacówki w Bartnem. To też schronisko zarządzane przez byłego gospodarza otryckiego, Andrzeja, dawniej, i dla przyjaciół, Lenina. Zjadamy tam lancz, Marek nawiązuje konwersację na temat Otrytu. Dowiadujemy się, że kiedyś przyjeżdżały tam same nietuzinkowe postacie, a teraz środowisko w okół chaty się zdegenrowało. Dostajemy też użyteczny tip: największe bagno na GSB znajduje się niecały kilometr dalej i leży na dwóch bokach szkółki – należy je obejść pozostałymi dwoma bokami.</p>
<p>Na koniec dnia strome zejście z Kamienia w stronę Kątów. Robi się ciemno, wpadamy co jakiś czas w bagna, a Markowi zaczyna dokuczać kolano. Na umówiony nocleg w agroturystyce w Kątach docieramy po 22, udaje się jeszcze wyrwać gospodynię z łóżka, pozwala nam zostawić mokre rzeczy na piecu. Do rana będą z grubsza suche. W pokoju za to zimno, ale za to można wziąć ciepły prysznic. Rozkładamy całą pozostałą, wilgotną zawartość plecaków na wolnych łóżkach i idziemy spać.</p>
<p><em>37.4 km, 12.5 h</em></p>
<p><img src="https://live.staticflickr.com/65535/51237580080_416f74206c_h.jpg" alt="widok na zielone góry na GSB"></p>
<h2 id="kąty---iwonicz-zdrój">Kąty - Iwonicz-Zdrój</h2>
<p>Rano śniadanie pod sklepem w Kątach, i ruszamy dalej. Wypogodziło się, świeci słońce i jest optymistycznie. Marka kolano zregenerowało się przez noc, idziemy bez przeszkód przez Łysą Górę i Polanę, do Chyrowej, gdzie liczymy na obiad w schronisku. W Chyrowej okazjuje się, że to nie schronisko, tylko ośrodek wypoczynkowy, zamknięty w tej chwili. Udaje man się jednak dodzwonić do gospodyni, która przyjażdża po paru minutach i oferuje nam rosół oraz pierogi ruskie. Siadamy przed budynkiem, pod foliowym daszkiem, i jemy, a tym czasem na horyzoncie pojawiają się ciemne chmury. Początkowo nie wyglądają groźnie, jednak wystarczy dwadzieścia minut aby zerwała się burza i gradobicie. Mieliśmy szczęście, że nie złapały nas gdzieś na szlaku. A tak, po 15 minutach, spokojnie wyruszamy, świeci słońce, tylko temperatura spadła o dobre kilka stopni i znów muszę ubrać się we wszystko, co mam, z kurtką przeciwdeszczową włącznie.</p>
<p>Na trasie mamy jeszcze tego dnia dwie atrakcje. Pierwsza to sanktuarium Św. Jana z Dukli, bardzo ładnie położone i mieszczące źródełko, w którym możemy napełnić bukłaki wodą, bardzo smaczną, zdaniem Marka – ja tam nie odróżniam smaku wody, chyba, że jest rzeczywiście źle. Zejście z sanktuarium zdobią tablice z sentencjami o bogoojczyźnianym i patriarchalnym charakterze; ścieżka nosiła imię Stefana Wyszyńskiego, z niego to więc zapewne były cytaty. Drugi, i lepszy jeszcze interesujący punkt, to wieża widokowa na Cergowej. Sama konstrukcja jest już bardzo ładna, wysoka, z potężnych krzyżujących się belek. Widok z platformy widokowej jeszcze lepszy, widać Krosno, a przy przejrzystym powietrzu nawet i Tatry. Trafiamy na szczyt trochę przed zachodem, światło i widoki są rewelacyjne.</p>
<p>Nocleg mamy zaplanowany w Iwoniczu-Zdroju, znów mamy obsuwę czasową, tym razem zadzwoniliśmy, żeby się nas w hotelu (Natura Wellness &amp; Spa) spodziewali około północy. Znów strome zejście, Marka kolano się odzywa, po zmroku trafiamy na szosę, i nią jeszcze drepczemy 5 km, przez lubatową, do hotelu faktycznie docierając trochę przed północą. Bardzo zmęczeni rozgaszczamy się w pokoju, biorę prysznic. Woda ciurka niemrawo. “Może się rozkręci”, myślę – ale, jak to w takich sytuacjach bywa, strumień znika niemal kompletnie w momencie, gdy stoję namydlony. Mydło z trudem spłukuję ostatnimi kroplami kapiącymi z końcówki prysznica.</p>
<p><em>35.7 km, 14 h</em></p>
<h2 id="iwonicz-zdrój---chata-w-przybyszowie">Iwonicz-Zdrój - Chata w Przybyszowie</h2>
<p>Rano Marek próbuje skorzystać z prysznica, woda kapie tak jak zeszłego wieczora, idzie więc na recepcję, gdzie dają mu klucz do sąsiedniego pokoju. Tam prysznic działa jak należy, w odróżnieniu od spłuczki do kibla. Gdy oddajemy klucz i wspominamy o tym recepcjoniście, słyszymy, jak kolejny gość skarży się na taką samą usterkę. Hotel zbudowany był w 2015 roku, wedle opisu ma “wyposażenie pokoi w standardzie czterogwiazdkowym”. Śniadanie w pakiecie za to zupełnie w porządku i oszczędza nam sporo czasu w porównaniu z kombinowaniem na własną rękę. Dzień jest jeszcze ładniejszy niż wczoraj, znów więc wyruszamy w dobrych nastrojach.</p>
<p>W Rymanowie-Zdroju spotykamy pierwszego wędrowca podążającego GSB w przeciwnym kierunku. Robi cały szlak, wyruszył z Wołosatego trzy dni temu, pokonuje ponad 50 km dziennie. Później spotkamy jeszcze kilka osób i okaże się, że to standard wśród tych, którzy mają ambicję przejść cały GSB. Nam zaś spacerowe tempo całkiem odpowiada.</p>
<p>Na zakończenie kolejnego szosowego odcinka, przez Tarnawkę i Puławy, trafiamy do restauracji <em>Amadeus by Kiczeraski</em>, kuchnia austriacko-czeska. Wielki jak tależ Wiener Schnitzel z prawdziwej cielęciny, gulasz z knedliczkami, piwo i puchar lodowy nastrajają nas pozytywnie przed ostatnim odcinkiem tego dnia: do Chaty w Przybyszowie. Biorąc pod uwagę doświadczenia ostatnich dóch dni, znów zapowiadamy się telefonicznie na późny wieczór. Telefon na Facebooku i w Google Maps okazuje się być nieaktualny, ale od spotkanego wędrowca dostajemy ten właściwy. Wieczorne zejście z Tokarni do Chaty nie pozostawia wątpliwości: z kolanem Marka nie jest dobrze, następnego dnia trzeba będzie się rozejrzeć za możliwościami skrócenia trasy i transportu na Otryt.</p>
<p>Chata w Przybyszowie, gdzie docieramy o 23, okazuje się uroczym górskim szałasem z jedną izbą i piętrową pryczą. Prócz nas zatrzymują się na tę noc czterej rowerzyści górscy. Gospodyni, Ola, jest przemiła, miło późnej pory oferuje napar ziołowy. W chacie brak jest bieżącej wody, jest za to trochę światła z paneli słonecznych, i do wychodka nie jest daleko. Znakomite miejsce noclegowe na GSB.</p>
<p><em>34.6 km, 13.5 h</em></p>
<h2 id="chata-w-przybyszowie---komańcza">Chata w Przybyszowie - Komańcza</h2>
<p>Rano po grupowym śniadaniu przyrządzonym przez Olę (szakszuka górska, znakomita) ruszamy do Komańczy, gdzie chcemy złapać jakąś podwózkę w stronę Otrytu. Pogoda znów piękna, idzie się dobrze, trochę szkoda, że bedziemy kończyli w połowie zaplanowanej trasy, że nie zobaczymy chatki pod Chryszczatą i schroniska Koliba – ale możliwość kontuzji jest wpisana w takie przedsięwzięcia, fajnie, że udało się przejść i połowę.</p>
<p><em>12.8 km, 4.5 h</em></p>
<h2 id="chata-socjologa">Chata Socjologa</h2>
<p>W schronisku PTTK Komańcza dowiadujemy się, że na transport publiczny nie ma co liczyć, nic nie jeździ do Wetliny ani Cisnej. Jemy więc pizzę (taka sobie) i udajemy się do wsi, żeby w sklepie zapytać, czy ktoś by nas nie podwiózł. Ledwie wychodzimy na szosę, nadjeżdża PKS. Jedzie tylko do Nowego Łupkowa, ale to nasz kierunek, wsiadamy zatem. Na kolejny odcinek próbujemy łapać stopa, i po pięciu minutach zatrzymuje się przy nas bus: Darek, właściciel agroturystyki w Komańczy, jedzie akurat do Dwernika odebrać materac. Dowiadujemy się, że pochodzi z Ursynowa i przez 20 lat był w Warszawie taksówkarzem. W marcu tego roku przeprowadził się z rodziną do Komańczy. Planuje nocować wędrowców z GSB, oferując im pakiety zawierające odbiór paczek z czystymi ciuchami i wysyłkę brudnych.</p>
<p>Ostatecznie w Chacie Socjologa lądujemy we środę po południu i zamiast jednego wieczoru spędzamy tam ponad trzy dni. Na długi weekend przybywa pełno gości, życie towarzyskie kwitnie w kuchni i sali kominkowej, ja kładę się koło północy, ale Marek do białego rana rozprawia o życiu, religii i innych ciekawych sprawach. Poza tym, i wyprawami do Chmiela na ognisko oraz do Lutowisk po zakupy, relaks. Jeden dzień spędzamy na łące podziwiając chmury, drzewa i zioła kołyszące się na wietrze.</p>
<h2 id="brzegi-górne---dwernik">Brzegi Górne - Dwernik</h2>
<p>Udało nam się przejść jeszcze jeden fragment zaplanowanej trasy: końcówkę, z Brzegów Górnych do Dwernika. Podjechaliśmy samochodem do Brzegów weszliśmy na Połoninę Caryńską. Dużo ludzi, ale za to imponujący widok na Wielką Rawkę i inne szczyty, gdzie ostały się resztki śniegu. Potem zejście zielonym szlakiem do Koliby, a stamtąd po posiłku, niebieskim szlakiem do Dwernika. Końcówka drogi była tak zryta przez maszyny zrywające drewno, że trzeba było przedzierać się lasem. Z Dwernika musiliśmy łapać stopa do Brzegów, gdzie został samochód, i znów mieliśmy szczęście: po paru minutach zostaliśmy zabrani przez Krzyśka, laureata drugiego miejsca w Biegu Rzeźnika. Wraz z kolegą z drużyny przebiegli 83 km w 10 godzin. To niewiele więcej, niż nam zajęło tego dnia pokonanie niecałych 18 km.</p>
<p><em>17.6 km, 8.5 h</em></p>
<h2 id="meta">Meta</h2>
<p>Ostatnią niewiadomą był powrót do Warszawy. Tu zadziałał urok osobisty Marka, okazało się bowiem że towarzysząca nam w spacerze przez Caryńską i Kolibę Agata ma trzy wolne miejsca w samochodzie. Agata w noc przed powrotem “zasiedziała się” i spała tylko 3 godziny, Marek około dwóch, za to ja byłem świeży jak skowronek, siadłem więc za kierownicą samochodu Agaty. Jedyne emocje podczas powrotu wiązały się z rozładowującymi się komórkami i brakiem nawigacji. Pomimo tych trudności, około północy dotarliśmy do mety przy Dworcu Wileńskim.</p>
]]></content:encoded></item><item><title>Gran Bis</title><link>https://blog.mmakowski.com/travel/gran-bis/</link><pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/gran-bis/</guid><description>Spaleni słońcem Wydawało się, że spacer będzie lajtowy, 10 km, głównie z górki. Nie wziąłem pod uwagę uruchamiającej agorafobię ekspozycji, odwodnienia i niewystraczającej ochrony przed słońcem – ramiona spalone, brak picia na szczęście bez większych konsekwencji. Będę musiał bardziej na serio podchodzić do roli przewodnika, pilnować smarowania i naciskać na sikanie w krzakach. Za to dzięki budzącym lęk ekspozycjom wiem już, która przyjaciółka odziedziczy którą paletę. Mi zostaną koty.
Gospodarze Daniel i Marcin są jedną nogą wyprowadzeni na stałe na Kanary.</description><content:encoded><![CDATA[<h2 id="spaleni-słońcem">Spaleni słońcem</h2>
<p>Wydawało się, że spacer będzie lajtowy, 10 km, głównie z górki. Nie wziąłem pod uwagę uruchamiającej agorafobię ekspozycji, odwodnienia i niewystraczającej ochrony przed słońcem – ramiona spalone, brak picia na szczęście bez większych konsekwencji. Będę musiał bardziej na serio podchodzić do roli przewodnika, pilnować smarowania i naciskać na sikanie w krzakach. Za to dzięki budzącym lęk ekspozycjom wiem już, która przyjaciółka odziedziczy którą paletę. Mi zostaną koty.</p>
<h2 id="gospodarze">Gospodarze</h2>
<p>Daniel i Marcin są jedną nogą wyprowadzeni na stałe na Kanary. Bo w Polsce kobieta i mężczyzna, strefy wolne, nagonka i te sprawy. I przez to fajni ludzie uciekają. Jeden z tego plus, możemy u nich mieszkać. Samo centrum Maspalomas, trzy kroki od Yumbo Center, duży, ładny apartament, basen, którego jestem jedynynm użytkownikiem. Chłopaki są super, Daniel kręci Tiktoki, Marcin paczkuje gry komputerowe. Jest i trzeci wspólokator, Marcin, też fajny.</p>
<p><img src="https://live.staticflickr.com/65535/51158430377_f324da2e38_z.jpg" alt="https://live.staticflickr.com/65535/51158430377_f324da2e38_z.jpg"></p>
<h2 id="finca">Finca</h2>
<p>Wbiliśmy się na obchody rocznicy updadku faszyzmu we Włoszech. Odbywają się na ekologicznej farmie. Samochód trzeba zostawić w wiosce (super żarcie w lokalnej knajpie) i iść 3 kilometry dnem kanionu. Na farmie palmy, pomidory, fasola, banany, samowystarczalny prąd, kurczaki i jurta z liści palmy, basen w zbiorniku retencyjnym. W ogóle pięknie, ale najbardziej w pamięć mi zapadło tiramisu.</p>
<h2 id="jazz">Jazz</h2>
<p>Jak to jest jak się wypali wiadro jazzu. Zaleganie w łóżku. A ja kompulsywnie zmywam naczynia. Nie podoba mi się. Choć bardziej chyba sam akt palenia, niż efekty, te nie są specjalnie widoczne. Pracuje się na pół gwizdka, jazz czy nie.</p>
<h2 id="znajoma-egzotyka">Znajoma egzotyka</h2>
<p>Fajnie jest wrócić w egzotyczne miejsce, nieznane nie stresuje, niecodzienne ekscytuje. Jak jest nowy skład, to można zgrywać bywalca. Pierwszy posiłek, z polecenia Daniela, jemy w <em>Taberna el Picoteo</em>, i miłe zaskoczenie, bo tu też jadłem pierwszą kolację poprzednio, a nie jest to wcale oczywiste miejsce. Drugie deja vu to <em>La Sirena</em> na plaży, jedna z licznych knajp w szeregu, i znów to do niej akurat trafiamy. Podejrzewam, że dobre oceny na TripAdvisorze albo Google Maps zwiększyły prawdopodobieństwo tych zdarzeń. Skoro już jesteśmy przy żarciu: <em>Lola</em> i <em>Calma Chicha</em> serwują wykwintne kolacje, całkiem dobre. Niby jest covidowy dołek, hotele pozamykane, turystów jak na lekarstwo, a i tak trzeba rezerwować stoliki.</p>
<h2 id="ribera">Ribera</h2>
<p>Eksploracje kulinarne zaowocowały jednym istotnym odkryciem: Ribera del Duero. Smakuje jak Rioja, ale jest dużo bardziej niszowe i najtańsze więcej kosztuje, więc można zabłysnąć w towarzystwie.</p>
]]></content:encoded></item><item><title>Krzyżne</title><link>https://blog.mmakowski.com/travel/krzy%C5%BCne/</link><pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/krzy%C5%BCne/</guid><description>W Bukowinie Tatrzańskiej, na stokach Wierchu Olczańskiego, stawiałem swoje pierwsze kroki na nartach, pierwszy raz skręciłem z pługa, pierwszy raz spadłem z orczyka i chyba też pierwszy raz poczułem, jaką frajdę może dawać zasuwanie z górki na dwóch deskach, przy zachowaniu elementarnej kontroli. To było grubo ponad 30 lat temu. Od tego czasu jeździłem do większych ośrodków, przywyczaiłem się do dziesiątków kilometrów tras, których zwiedzenie zajmuje wiele dni, wychodzenia z kwatery na nartach i tak też wracania do niej.</description><content:encoded><![CDATA[<p>W Bukowinie Tatrzańskiej, na stokach Wierchu Olczańskiego, stawiałem swoje pierwsze kroki na nartach, pierwszy raz skręciłem z pługa, pierwszy raz spadłem z orczyka i chyba też pierwszy raz poczułem, jaką frajdę może dawać zasuwanie z górki na dwóch deskach, przy zachowaniu elementarnej kontroli. To było grubo ponad 30 lat temu. Od tego czasu jeździłem do większych ośrodków, przywyczaiłem się do dziesiątków kilometrów tras, których zwiedzenie zajmuje wiele dni, wychodzenia z kwatery na nartach i tak też wracania do niej. Teraz, na skutek kombinacji okoliczności pandemiczno-towarzyskich, wylądowałem tam znowu.</p>
<p>Okazuje się, że da się tu jeździć. Karnet Tatry Super Ski działa na kilkanaście ośrodków; najrozleglejszym chyba jest Kotelnica i przyległe góry. To technicznie Białka, nie Bukowina, ale tak czy siak dojeżdża się samochodem, więc bez większej róznicy. My jeździmy dziurawą szutrówką na Jankulakowski Wierch stanowiący część kompleksu. Nie są to Alpy, czy nawet Szczyrk, najdłuższy zjazd trwa raptem ze trzy minuty, zaliczenie wszystkich połączonych ze sobą tras to może około godziny, ale stoki są dobrze przygotowane do sezonu, leży gruba warstwa śniegu i nawet w gorące dni można przyjemnie pojeździć. Trasy otwarte są od 9 do 22; między 9 a 10 można jeszcze liczyć na gładziutki, świeżo przeratrakowany śnieg. Potem robi się gęściej – choć i tak podobno znacznie luźniej niż w zeszłych latach, bowiem nie było żadnej pewności, że w tym tygodniu wyciągi wciąż będą czynne i że będzie pogoda do jeżdżenia. Najlepiej jest jednak po zmroku – robi się znacznie luźniej, śnieg z powrotem zamarza, a muldy pojawiają się tylko w nielicznych miejscach.</p>
<h3 id="--">* * *</h3>
<p>Nawet najlepiej przygotowany stok po kilkudziesięciu zjazdach może się znudzić. Prognoza słońca i ponad 10 stopni oraz stosunkowo niskiego zagrożenia lawinowego (drugi poziom) skłoniła mnie do zamiany jednego dnia jeżdżenia na spacer po Tatrach. Za cel obrałem sobie przełęcz Krzyżne. Przed 7 rano pojawiłem się na parkingu w Palenicy Białczańskiej (30 zł gotówką za wjazd, zaczyna się już zapełniać o tej porze!) i wyposażony w czekan, raki, mgliste pojęcie jak ich używać, oraz mocne postanowienie, że zawrócę pod byle pretekstem, wyruszyłem.</p>
<p><img src="krzyzne-profile.png" alt="profil podejścia na Krzyżne"></p>
<p>Najpierw lasem w stronę Rusinowej Polany. Od razu zaczyna się lód na szlaku, ale nie chcę zakładać raków, żeby nie tracić na to pięciu minut, a potem nie sciągać ich za 100 metrów, jak zaczną się kamienie. Po 10 minutach, i kilku zjazdach ze stromego podejścia, zakładam je jednak; okazuje się, że warunki są takie, iż spokojnie mogę w rakach pokonać resztę trasy. Po Rusinowej Polanie zaczyna się mordercze podejście na Gęsią Szyję. Pomimo wczesnej pory, wciąż ujemnej temperatury i cienia szybko zostaję w samej koszulce, tak moża się rozgrzać. Obawiałem się, że raki będą mnie spowalniały, w rzeczywistości chyba idę szybciej niż w warunkach letnich i bezśniegowych. Na Gęsiej Szyi jestem po półtorej godziny marszu, tu też czeka na mnie pierwsza nagroda: widok na masyw Koszystej.</p>
<p>Zejście do Równi Waksmundzkiej bez emocji, potem półtorej godziny doliną do szlaku z Hali Gąsienicowej. Póki co nie napotkałem żadnych przesłanek do odwrotu: pogoda jest piękna, szlak w śniegu przetarty, czas mam bardzo dobry. Stąd, wedle drogowskazu, już tylko dwie godziny na Krzyżne. Tu też widzę pierwszych dzisiaj ludzi na szlaku: parę skitourowców. Liczne ślady nart w dolinie sugerują, że to popularny tutaj środek lokomocji; śladów butów jest niewiele.</p>
<p>Stoicyzm jest chyba dość kompatybilny z moim usposobieniem. Jedną ze stoickich praktyk jest trening, który polega na celowym stawianiu się w niekomfortowych sytuacjach, zmuszanie organizmu do oswojenia fizycznych i psychicznych przeciwności. Nie wiem, czy ten spacer mogę zakwalifikować jako ów trening: owszem, jest męczący, ale i bardzo przyjemny, widoki są cudowne, poczucie swobody upajające. Ostatni odcinek to podejście żlebem: około godziny stromego śniegu, trzeba wbijać przody butów, asekurować się czekanem, przystaję co 10 kroków żeby zaczerpnąć tchu. Idę prosto pod góre, przede mną zygzakiem podchodzi kilkoro narciarzy.</p>
<p>Na przełęczy słońce, śnieg, widoki i masa endorfin. Piknikują tu narciarze, których widziałem na podejściu, pierwszy raz w trakcie tego marszu znajduję się na tyle blisko kogoś, żeby zamienić parę słów. Z akcentu sądząc, są miejscowi. Na stronę doliny Roztoki schodzi jednen samotny ślad piechura – nikt się tam teraz nie zapuszcza, to podobno bardzo niebezpieczny szlak zimą. Ślady nart widać na Orlej Perci.</p>
<p><img src="https://live.staticflickr.com/65535/51017287376_fc674f29e6_c.jpg" alt="Orla Perć"></p>
<p>Spędzam na górze pół godziny, słońce grzeje i jest błogo, ale trzeba wracać. Zejście całkiem wygodne, gruba warstwa śniegu dobrze amortyzuje. Dalszy powrót bez przygód, tylko wody trochę brakuje, bo bryła śniegu, którą nabrałem do pustej butelki, nie chce się roztopić pomimo ostrego słońca. Na Gęsiej Szyi pojawiają się ludzie i jest ich sporo aż do parkingu. Sporo osób bez raków czy raczków, zjeżdżają po lodzie, ja zadwolony z siebie maszeruję fachowo w rakach.</p>
<h3 id="---1">* * *</h3>
<p>Schronisko Bukowina otworzyło się nielegalnie. Zasadniczo jestem za przestrzeganiem wszelkich zakazów i odpowiedzialnym zachowaniem, ale nie mogłem sobie odmówić wizyty. Potrawy, od najbardziej do najmniej polecanej:</p>
<ul>
<li>tiramisu malinowe to niesamowita bomba kaloryczna, po ćwiartce nie byłem w stanie więcej, ale zjadłem, bo pyszne. Warto wymienić główne danie na ten deser.</li>
<li>tatar z tuńczyka: awokado, chilli, jakaś śmiesznie spreparowana rzodkiewka, truskawki – wszystko bardzo fajnie skomponowane</li>
<li>jagnięcina z pieca, krucha i delikatna, nie ustępowała dobrym pieczeniom jagnięcym, które jadłem w Anglii i Walii – a tam naprawdę wiedzą jak to mięso przyrządzać</li>
<li>tatar wołowy ginął wśród dodatków: rukoli, marynowanych grzybków, ogórków konserwowych, suszonego chilli, musztardy z maliną. Wolę jak wołowina jest na pierwszym planie, może trochę cebulki i tyle.</li>
</ul>
<p><img src="https://live.staticflickr.com/65535/51017287011_76f4fc64d6_w.jpg" alt="tatar z tuńczyka i czerwone wino w restauracji"></p>
<ul>
<li>grillowany pstrąg – próbowali z niego zrobić wykwintne danie przy pomocy dekoracji, buraczków i wiśni, ale sama ryba bez właściwości, można taką zjeść w byle barze.</li>
</ul>
<p><a href="https://www.flickr.com/gp/mmakowski/81N448">Bukowina and Krzyżne</a></p>
]]></content:encoded></item><item><title>Granica</title><link>https://blog.mmakowski.com/travel/granica/</link><pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/granica/</guid><description/><content:encoded>&lt;p>&lt;img src="Granica.svg" alt="">&lt;/p></content:encoded></item><item><title>Seafood Paella from Memory</title><link>https://blog.mmakowski.com/cooking/seafood-paella-from-memory/</link><pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/seafood-paella-from-memory/</guid><description>Once something is out on the internet, it’s there forever. Of course, the websites come and go, entire provinces disappear, but the information stays there in some form, in search engine caches, in the Wayback Machine, often copied across multiple sites. Or so I hoped recently, while looking for a paella recipe, which I originally found around ten years ago and then used, with some success, through the years. No luck.</description><content:encoded><![CDATA[<p><img src="https://live.staticflickr.com/7493/15860148732_eb3c0f7b61_z.jpg" alt="https://live.staticflickr.com/7493/15860148732_eb3c0f7b61_z.jpg"></p>
<p>Once something is out on the internet, it’s there forever. Of course, the websites come and go, entire provinces disappear, but the information stays there in some form, in search engine caches, in the <a href="https://archive.org/web/">Wayback Machine</a>, often copied across multiple sites. Or so I hoped recently, while looking for a paella recipe, which I originally found around ten years ago and then used, with some success, through the years. No luck. Oh well, we’ll have to do it from memory. As far as the ingredients are concerned, you’ll need:</p>
<ul>
<li>one red onion</li>
<li>four cloves of garlic</li>
<li>a tin of chopped tomatoes</li>
<li>spanish smoked paprika</li>
<li>sweet paprika</li>
<li>one red and one yellow pepper</li>
<li>seafood: prawns, squid, mussels, anything else you like</li>
<li>stock: can be vegetable, fish, chicken</li>
<li>rice: ideally spanish bomba, but italian risotto rice such as arborio is a good substitute</li>
<li>saffron threads</li>
<li>a small cup of green peas, defrosted</li>
<li>some chopped parsley</li>
</ul>
<h2 id="stage-1-the-sofrito">Stage 1: The Sofrito</h2>
<p>Finely dice the onion and chop 3 cloves of garlic. Fry the onion on olive oil for a few minutes, until translucent, then add garlic and fry another minute or two. Then add the chopped tomatoes, a spoonful of smoked paprika and another spoonful of sweet paprika, and cook over low fire until most of the liquid evaporates. Then transfer the <em>sofrito</em> to a bowl and wipe the pan with a paper towel – we’ll be using the pan for all subsequent stages.</p>
<h2 id="stage-2-the-peppers">Stage 2: The Peppers</h2>
<p>Finely dice the peppers and cook on olive oil for around 10 minutes. At the end again, transfer to a bowl (could just dump it into sofrito) and wipe the pan.</p>
<h2 id="stage-3-the-seafood">Stage 3: The Seafood</h2>
<p>Fry the seafood on olive oil with one clove of garlic, finely chopped. If you want to be fancy, cook each type of creature – squid, mussels, prawns, whatever else you’ve got – separately, for finer control. Ideally you wouldn’t get any liquid out of the seafood, but I always do and just add it to the stock.</p>
<h2 id="stage-4-combine">Stage 4: Combine</h2>
<p>Make sure the stock is to hand. Add back the sofrito and peppers to the pan, along with a cup of rice. Mix it all well so that the rice is covered with the paste. Add the stock, a pinch of saffron threads (maybe two, if you’re feeling generous), and mix. Some add white wine alongside the stock; I don’t think it’s necessary or even important. Try for yourself and see.</p>
<p>Now, all recipes say that you should not stir the paella rice while it’s cooking. If it does burn and stick to the pan, that’s great, it’s a highly prized part of the dish. Now, I’m not so sure, so I tend to stir it every now and then, especially if the pan’s bottom is on the thin side. That said, in a nod to the tradition, I do turn up the heat for a minute or two towards the end, when the rice is almost soft. Sometimes it does produce a slightly crispier bottom layer.</p>
<h2 id="stage-5-finish">Stage 5: Finish</h2>
<p>Once the rice is cooked, take the pan off the heat and press the seafood into the top layer. Sprinkle freshly ground black pepper, scatter some defrosted grean peas and chopped parsley on top and leave for 10 to 15 minutes before serving.</p>
<p>I cannot vouch for the authenticity of this seafood paella, having never been to continental Spain, but it is tasty alright.</p>
]]></content:encoded></item><item><title>Dwóch facetów w łódce</title><link>https://blog.mmakowski.com/travel/dw%C3%B3ch-facet%C3%B3w-w-%C5%82%C3%B3dce/</link><pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/dw%C3%B3ch-facet%C3%B3w-w-%C5%82%C3%B3dce/</guid><description>Wrzesień to trochę późno na tego rodzaju eskapady. Pogoda niepewna, może być chłodno. Dopisało nam szczęście, weekend jest ciepły i suchy, wodujemy więc ponton przy ujściu Tuchełki i rozpoczynamy przygodę.
Przed Brańszczykiem Bug wije się wśród łąk. Wysokie skarpy zamieszkały jaskółki, rzeka gdzieniegdzie zabiera grunt spod porastających wybrzeża sosen, te walą się do wody i trzeba je omijać. Powoli zapada zmierzch, nad nami pojawiają się nietoperze, a na brzegach wędkarze i korzystający z pogodnego weekendu piknikowicze.</description><content:encoded><![CDATA[<p>Wrzesień to trochę późno na tego rodzaju eskapady. Pogoda niepewna, może być chłodno. Dopisało nam szczęście, weekend jest ciepły i suchy, wodujemy więc ponton przy ujściu Tuchełki i rozpoczynamy przygodę.</p>
<p>Przed Brańszczykiem Bug wije się wśród łąk. Wysokie skarpy zamieszkały jaskółki, rzeka gdzieniegdzie zabiera grunt spod porastających wybrzeża sosen, te walą się do wody i trzeba je omijać. Powoli zapada zmierzch, nad nami pojawiają się nietoperze, a na brzegach wędkarze i korzystający z pogodnego weekendu piknikowicze. Rzeka niesie nas niespiesznie, czerwona kula zachodzącego słońca wyziera niekiedy zza drzew. Jest pięknie.</p>
<p>Nocleg organizujemy sobie na wyspie. Wyjście na brzeg stanowi wyzwanie, dno jest pokryte mułem, który przywiera do stóp tak, że nie da się go po prostu zmyć, trzeba pracowicie zdrapywać. Nasza wyspa porośnięta jest gęstymi krzewami, ale udaje się znaleźć miejsce na namiot. Lokalizujemy też opuszczony szałas, zbity z pozyskanego na miejscu drewna, zwisa z niego porwana folia, w środku stoi wersalka; ktoś tu musiał kiedyś mieszkać.</p>
<p>Wyruszamy o świcie. Słońce nisko nad horyzontem i poranne mgły tworzą baśniową atmosferę. Dajemy się ponieść nurtowi dalej, obok Brańszczyka, i dalej, w stronę Wyszkowa. Wiosłujemy, choć nie jest jasne, jak bardzo to pomaga w pontonie. W okolicach Wyszkowa Bug rozlewa się szeroko, pojawiają się mielizny, na których czasem osiadamy.</p>
<p>Ponton zbliża. Monotonia spływu sprzyja rozmowom, ale też i fizycznie jesteśmy blisko. Jest mało miejsca, siedzimy na bagażach, przy wiosłowaniu łatwo towarzysza stuknąć w nogi. Trzeba się lubić, żeby tak spływać we dwójkę. Za Wyszkowem rzeka zmienia charaketer, wybrzeża są niskie, koryto szerokie, nurt miejscami uregulowany. Pojawia się wiatr, a nawet i fale. Wiosłujemy zapamiętale. Do celu dobijamy trochę po południu, po dziesięciu godzinach na rzece.</p>
<p>Trzeba będzie tę trasę kiedyś powtórzyć. Może w nocy. Może bez wiosłowania. Ale na pewno tak, żeby był i wieczór, i ranek. Te, na Bugu, są magiczne.</p>
<p><img src="https://live.staticflickr.com/65535/50359216917_f024f98446_z.jpg" alt="ponton przy przegu i wschód słońca nad Bugiem"></p>
]]></content:encoded></item><item><title>GSS, etap I</title><link>https://blog.mmakowski.com/travel/gss-etap-i/</link><pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/gss-etap-i/</guid><description>Droga Jest szeroko, wygodnie, choć bywa stromo pod górę. Najpierw szosa, potem szutrówka grzbietami gór, czasem chodnik z finezyjnie ułożonych kamieni, to znów trylinka inkrustowana granitem z okolicznych gór. Tak jest przez Góry Izerskie i Karkonosze. Później, w Rudawach Śląskich, Górach Kruczych i Kamiennych, też jest droga, ale czasem szlak się gubi, odchodzi mało znaczącą dróżką przez łąkę, przerwany jest wiatrołomem. Znaki znikają na kilkaset metrów. Zagadujemy się – na temat Houellebecqua, muzyki, płci mózgu, związków… my idzemy tam, szlak gdzie indziej.</description><content:encoded><![CDATA[<h2 id="droga">Droga</h2>
<p>Jest szeroko, wygodnie, choć bywa stromo pod górę. Najpierw szosa, potem szutrówka grzbietami gór, czasem chodnik z finezyjnie ułożonych kamieni, to znów trylinka inkrustowana granitem z okolicznych gór. Tak jest przez Góry Izerskie i Karkonosze. Później, w Rudawach Śląskich, Górach Kruczych i Kamiennych, też jest droga, ale czasem szlak się gubi, odchodzi mało znaczącą dróżką przez łąkę, przerwany jest wiatrołomem. Znaki znikają na kilkaset metrów. Zagadujemy się – na temat Houellebecqua, muzyki, płci mózgu, związków… my idzemy tam, szlak gdzie indziej. Trzeba wracać się, szukać. Trafia się też szosa, ale to najwyżej kilka kilometrów, da sie wytrzymać. Jest raczej sucho. Kilka przejść przez błoto w Izerskich, po ulewie, i później, na mniej uczęszczanej części szlaku. Pod koniec też łapie nas deszcz. Przydaje się parasolka – Marek myślał, że to obciach, że dla bab, ale następnych razem chyba sam weźmie. Buty przemakają, ale tułów jest chroniony. Droga też bez zarzutu.</p>
<p>Jest pusto. W okolicach Polany Izerskiej sporo rowerzystów (przednia zębatka mniejsza niż tylna), przy Śnieżce też tłumy, dużo Czechów, ale gdzie indziej można iść cały dzień i poza miejscowościami nie spotkać żywej duszy. Koło Kowar, Bukową chadzają miejscowi, ale przejeżdża też strażnik leśny. Rozbijanie się przy drodze to był zły pomysł. Każe nam się wynosić, bo w lasach nie wolno biwakować. Gdybyśmy mieli hamak i tarpa to co innego, ale namiot jest absolutnie niedozwolony. Potem robi mu się chyba nas żal, i wskazuje wiatę na Wilczysku, gdzie możemy przenocować na stole. Ale w namiocie – w żadnym wypadku.</p>
<p><img src="https://live.staticflickr.com/65535/50075358952_68d2363983_b.jpg" alt="szutrowa droga przez zielone góry, pochmurne niebo, zanosi się na deszcz"></p>
<h2 id="jedzenie">Jedzenie</h2>
<p>Okazuje się, że nie wystarczy zapytać, czy befsztyk aby na pewno jest z polędwicy. Przynoszą kotlet mielony. Za to pierogi z kapustą i grzybami w Świeradowie bardzo dobre, ze słodkiej kapusty. Później, w schroniskach, będą już gorsze, z kiszonej, zbyt słone. Inne <em>staple foods</em> w schroniskach to placki po węgiersku i naleśniki z jagodami (nie próbowałem ani razu, ale Marek jadał chętnie). W czeskim schronisku były też knedliczki, niedopieczona bułka z bigosowo-gulaszowym sosem, zupełnie w porządku. Highlight kulinarny to Gościniec Kowalova w Kowalowej: finezyjne podane, duże porcje, niedrogo; do tego rzemieślnicze piwa z lokalnego mikrobrowaru.</p>
<p>Mamy Jetboila, więc żywimy się też we własnym zakresie. Urządzenie jest przystosowane przede wszystkim do szybkiego gotowania wody, co Marek wykorzystuje do zalewania chińskich zupek marki Vifon (złoty kurczak i curry). Ja jestem sceptyczny, ze względu na niską wartość kaloryczną i wysoką zawartość substancji, które podejrzewam o niekorzystny wpływ na organizm. W jetboilu można też zaparzyć kawę i herbatę – pokrywka ma nawet specjalne dziurki, które pozwalają na odfiltrowanie fusów podczas picia. Gorzej jest z substancjami innymi niż woda: zakupione w Dino gotowe dania, ryż z kurczakiem i kaszotto, nawet dają się odgrzać, ale trzeba bezustannie mieszać i usuwać kawałki, które przywarły, w długim procesie płukania i skrobania palcem. Jest też owsianka, <em>overnight oats</em>, z orzechami i suszonymi owocami. Podobnie skomplikowana w podgrzaniu, i Marek kręci nosem, wspomina coś o smakach z przedszkola, ale mi daje to energię na cały czwarty dzień.</p>
<p>W miasteczkach bywa cienko z jedzeniem. W Lubawce jest pizzeria, i to nie mikrofalowa, z prawdziwym piecem. Marek w porę orientuje się, że sosy na pizzy to spirale majonezu i ketchupu, zamawiamy więce bez tego dodatku. Jest za to patriotycznie:<br>
– czeskie piwo? Nie wypiłbym tego nawet za darmo! – deklaruje szef lokalu.</p>
<p>Z Wałbrzychem mamy na pieńku od samego początku.<br>
– Przepraszam pana, którędy do centrum? – pytamy.<br>
– Tu jest centrum!<br>
Na śniadanie nie ma co liczyć. Najwyżej McMuffin z jajkiem z proszku. My, nie obeznani w realiach, szukamy jakiejś kawiarni, albo miejsca, gdzie można zjeść jajecznicę. Jest Caffe M przy dworcu Miasto, ale tam dają tylko piwo. Trafiamy do baru mlecznego Kanka, tam długa kolejka budowlańców i hydraulików, po dania obiadowe. Stajemy w niej, ale po kilku minutach przychodzi jakiś facet i odzywa się do nas napastliwie. Atmosfera jest napięta, nie chcemy tu jeść. Lądujemy w ciastkarni Frąckowiak, dwa ciastka i kawa muszą posłużyć za śniadanie. Resztę przedpołudnia spędzamy na stacji benzynowej Circle K – mają tu przynajmniej kawę, kanapki i lody.</p>
<h2 id="hotel">Hotel</h2>
<p>W Świeradowie wszystko jest pod Niemca. Nawet nazwa hotelu: Kurhaus St Lukas. Może plastikowe ozdoby udające stare drewniane belki i żelazne okucia też. Dobrze by się komponowały z gipsowymi krasnoludkami. Ogłoszenie o koncercie na ksylofon jest po polsku i po niemiecku. Na koncercie same szlagiery: Beatlesi, Abba, Lambada. Facet gra melodię na ksylofonie, do tego elektroniczny podkład z playbacku. Ośrodek niby pusty, bo covid, bo turyści poodwoływali urlopy, ale połowa stolików kawiarnianych zajęta, ludzie słuchają z uwagą, biją brawo. Na śniadaniu też raczej pełno, już od początku, od ósmej rano. Nie chciałbym tu być gdy mają pełne obłożenie.</p>
<p>Odwieczny problem z namiotem: znalazienie miejsca wystarczająco równego, suchego, osłoniętego, blisko wody. Hilleberg jest wielki, za każdym razem zaskakuje mnie ile miejsca potrzebuje na długość. Ale to jest uzasadnione, w przedsionku można zdjąć mokre ciuchy i nie moczyć śpiwora. Marabut rozkładał się w trzy minuty i był malutki, za to nie miał przedsionka i ważył więcej. Wolę Hilleberga, tylko trzeba chodzić głębiej w las, żeby strażnik nie znalazł.</p>
<p>Osławiony Hotel Gołębiewski w Karpaczu widać dobrze ze Skalnego Stołu, pewnie ze Śnieżki też, choć akurat wtedy nie patrzyłem w tym kierunku. Wrośnięty w zbocze góry, laureat krajowych nagród architektonicznych (makabryła). Rozumiem oburzenie, ale jak dla mnie tragedii nie ma. Tryumf ducha przedsiębiorczości nad siłami przyrody. Pomnik późnego kapitalizmu. Może kiedyś będzie atrakcją taką jak dziś gigantyczne socjalistyczne monumenty w krajach posowieckich. Albo piramidy w Gizie.</p>
<p>W Lubawce jest jeden hotel, a my jesteśmy jedynymi jego gośćmi. Dostajemy klucz od drzwi wejściowych do hotelu, bo recepcjoniście nie kalkuluje się siedzieć po godzinach i czekać aż wrócimy z kolacji (hotelowa restauracja nie działa). Nasze pojawienie się chyba spowodowało zamieszanie, na śniadanie sciągają obsługę – nas dwóch, sześć osób personelu. Facet kłóci się z kobietą wydająca śniadania o zepsutą rybę, miała ją zostawić dla kota, ale chyba wyrzuciła.</p>
<p>Sokołowsko jak z <em>Grand Budapest Hotel</em>, uzdrowisko, którego świetność przypadła na rządy Habsburgów, a od tego czasu było tylko gorzej. Pozostały fantazyjnie rozrzeźbione budynki, w tym ogromna, ceglana bryła sanatorium gruźliczego – je przynajmniej ktoś robi, może się znów otworzy. Murale ze scenami z Kieślowskiego, atmosfera art i hip. Warto tu kiedyś, w lepszych czasach, przyjechać, pewnie są festiwale i inteligentne rozmowy. My się zadowalamy czytaniem 27bslash6 na kwaterze.</p>
<p>W Wałbrzychu, nieopodal dworca Miasto, straszy hotel Sudety. Kiedyś to musiał być wypas, największy budynek w mieście, zaraz przy stacji, wokoło góry i uzdrowiska. Teraz ponury gmach, zamknięty na głucho. Przypomina bloki w czernobylskiej zonie, przez brudne szyby wyzierają porozwalane szafy sprzed pół wieku. Symbol minionej epoki i upadku miasta. Nie ma gdzie zjeść śniadania.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/25m6Lf">GSS Stage 1</a></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Bell in Horndon on the Hill</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-bell-in-horndon-on-the-hill/</link><pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-bell-in-horndon-on-the-hill/</guid><description>For many years my mental map of SW Essex contained just two good dining places: Magic Mushroom and The Bell. It still does, though I have not visited Magic Mushroom for a long time. The Bell used to be the place to take foreign visitors to, to show them a historic English pub and impress with fancy food. The downside: dinners had to be booked a week in advance. Lunches were usually walk-in though.</description><content:encoded><![CDATA[<p>For many years my mental map of SW Essex contained just two good dining places: Magic Mushroom and The Bell. It still does, though I have not visited Magic Mushroom for a long time. The Bell used to be the place to take foreign visitors to, to show them a historic English pub and impress with fancy food. The downside: dinners had to be booked a week in advance. Lunches were usually walk-in though.</p>
<p><img src="https://live.staticflickr.com/65535/48910784941_2a57a78fc3.jpg" alt="grandfather&amp;rsquo;s clock and old buns hanging from the beam"></p>
<p>Today again we weren’t in the mood for a chain or an adventure in the more depressed parts of Basildon, and it’s been years since the last visit in The Bell, so there we went. The Bell is still there, as it was for the last 400 years or so. The buns still hang from the beams, the walls and ceiling are as crooked as before, Crouch Valley Brewer’s Gold is still on tap – a firm favourite. No vegan dishes, but the kitchen was quite accommodating to Z’s dietary requirements, modifying a la carte options to remove all traces of animals. They were also upfront about having a single fryer that is also used for meat – bonus points for honesty.</p>
<p>The prices are something else, though. With many mains over £20, and no options for less than £15, this is basically a fancy restaurant in a historic pub building. The portions are small and the presentation is elaborate, with paper-thin slices of radishes, blobs of curried mayo, the food stacked into sophisticated towers, garnished with bundles of cress or other herbs I know no names of. It is also quite tasty; that said, for £20 you would expect nothing less, and perhaps even a bit more. As far as food value for money goes, the Bell will not rate very highly. The entire experience, though, with the buns, the Brewer’s Gold, the warm bread served before the meal, the nice service, keeps us coming back. If only once every few years.</p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The King's Head in Billericay</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-kings-head-in-billericay/</link><pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-kings-head-in-billericay/</guid><description>When I set off on this pub quest, I wanted to treat it as an anthropological endeavour. We would go, without prejudice, to all the posh gastropubs as well as the neighbourhood boozers, experience the vibe, appreciate the cultural baggage of the landlords, the patrons, the decor, the drink, the food. In reality though, we found, sometimes we just don’t have the patience, the curiosity, the inner strength to endure the smell of beer-stained and rarely cleaned carpets, the pastry soggy from gravy, the Greene King IPA.</description><content:encoded><![CDATA[<p>When I set off on this pub quest, I wanted to treat it as an anthropological endeavour. We would go, without prejudice, to all the posh gastropubs as well as the neighbourhood boozers, experience the vibe, appreciate the cultural baggage of the landlords, the patrons, the decor, the drink, the food. In reality though, we found, sometimes we just don’t have the patience, the curiosity, the inner strength to endure the smell of beer-stained and rarely cleaned carpets, the pastry soggy from gravy, the Greene King IPA. Today was one of those days. Z wanted somewhere with a vegan menu, I didn’t want another Harvester, so we settled on King’s Head.</p>
<p>Not a Harvester, perhaps, but still a part of a chain: Vintage Inns. Maybe it’s the profile of that particular chain, maybe it was the location (Billericay), but the place looked posh and was pricey: £50 for food and drinks for two. As usual in such places, the decor was rustic chic, pleasant, if a bit lacking in character (yes, they do pipe music in). The drink selection was acceptable, with three real ales (Doombar, Ghost Ship and Holy Grail) plus some Thornbridge crafts in bottles. I tried Chieftain IPA on tap, which turned out quite awful.</p>
<p>Vintage seem serious on vegan, with the dedicated menu containing at least three options for each of starter, mains and pudding. Z chose a pasty, a burger and apple pie, and liked all of them. I offset that with a pork belly mains – quite nice, though far from the best pork belly I’ve head (that award would go to <a href="/travel/powr%C3%B3t-do-dartmoor/"><em>The Elizabethan</em> in Luton, Devon</a>). Yeah, no burger this time; I was still recovering from the amazing one I’ve had in Les Ateliers des Capucins in Brest. In the end, this was Z’s favourite find on this quest thus far, mostly due to the range and quality of vegan food, as well as two wines specifically marked as vegan. As for me, I prefer independents; it being a chain, the high prices and the sleek decor reduce the notes a bit. That said, on both the decor and the food front it seemed a bit better than similarly priced <a href="/travel/sw-essex-pub-quest/the-dukes-head-in-little-burstead/">Duke’s Head</a>, so it might be worth another visit.</p>
<p><img src="https://live.staticflickr.com/65535/48833849153_968247f65d_c.jpg" alt="https://live.staticflickr.com/65535/48833849153_968247f65d_c.jpg"></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Quays in Basildon</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-quays-in-basildon/</link><pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-quays-in-basildon/</guid><description>We arrive in Festival Leisure Park and struggle to pass through to the opposite end, to today’s venue. One road is blocked by a delivery truck, another has lots of cars parked alongside it, despite almost empty car parks next to Premier Inn, Holiday Inn and Travelodge. We eventually manage to get to the corner of the Park by A127, where, nestled between Premier Inn, lake with wakeboarding ramps and cables, skips and temporary fencing is the lunch haunt for today: The Quays.</description><content:encoded><![CDATA[<p>We arrive in Festival Leisure Park and struggle to pass through to the opposite end, to today’s venue. One road is blocked by a delivery truck, another has lots of cars parked alongside it, despite almost empty car parks next to Premier Inn, Holiday Inn and Travelodge. We eventually manage to get to the corner of the Park by A127, where, nestled between Premier Inn, lake with wakeboarding ramps and cables, skips and temporary fencing is the lunch haunt for today: The Quays. Not being in a particularly exploratory mood, we opted for another, after <a href="/travel/sw-essex-pub-quest/the-four-seasons-in-laindon/">The Four Seasons</a>, establishment in the Hungry Horse chain. Expected were rock-bottom prices, large portions, and questionable food quality. What did we find?</p>
<p>First impression, from the outside, was mixed, at best. Noise from A127, aforementioned skips and cars parked everywhere did not imbue one with a sense relaxation. There is a deck with lake view, though the “lake” is heavily adapted for water sports and again does not offer any natural beauty; besides, the view is largely obscured by brambles that surround the railing, with rubbish strewn in them. As was the case in The Four Seasons, dirty plates are left on the tables outside. Finally, Z was upset to find many bee/wasp traps around the decked area. We went inside.</p>
<p>Inside the bar is large and quite pleasant, with restaurant and bar areas. We took a cosy table under the staircase, which was in the restaurant part. This meant that we had to enquire the waitress about available beverages, and she had to run back and forth to check what’s still left (they apparently ran out of booze and were expecting a delivery on the next day), including bringing us a bottle of Hop House Lager to confirm with us whether it’s an pale ale or not (it is not). It would have been much more efficient if we just went to the bar. It turned out in the end that, alongside the ubiquitous Greene King IPA (called just “IPA” in these parts), they also had Ruddles County (also by Greene King), which we went for, and which was pretty decent.</p>
<p>Food options were plentiful, as long as what you were looking for was beef. We were not, so that simplified the choice somewhat. There was a deal of 2 vegan mains for £10, I opted for chickpea and sweet potato curry – pretty tasty, except for poppadum, which, although broke easily, had an unpleasant, chewy texture. Z, feeling more adventurous, tried fishless fish and chips. The interior of the battered “fillets” smelled vaguely of fish, the texture was more mushy, it was hard to figure out what it was, exactly. I prefer to eat things of more obvious provenance. The undressed salad and sub-standard chips did not improve things, so Z will not be having this again. The curry, on the other hand, is a keeper, if vegan is the name of the game.</p>
<p>All in all, the experience was mostly in line with our expectations. The standout feature of The Quays, the lake view, is not something that would entice me to come back. If I were in a mood for Hungry Horse – which, frankly, would be a rare occasion – I’d rather go to The Four Seasons, because it is closer.</p>
<h3 id="the-z-score">The Z-Score</h3>
<table>
<thead>
<tr>
<th>Category</th>
<th>Score</th>
</tr>
</thead>
<tbody>
<tr>
<td>Availability of vegan food</td>
<td>★★</td>
</tr>
<tr>
<td>Food quality</td>
<td>★</td>
</tr>
<tr>
<td>Drinks</td>
<td>★★</td>
</tr>
<tr>
<td>Ambience</td>
<td>★★</td>
</tr>
<tr>
<td>Surroundings</td>
<td>★★</td>
</tr>
<tr>
<td>Bathrooms</td>
<td>★★</td>
</tr>
<tr>
<td>Service</td>
<td>★★</td>
</tr>
<tr>
<td>Cheapness</td>
<td>★★★</td>
</tr>
</tbody>
</table>
<p><img src="https://live.staticflickr.com/65535/48588013122_81a3c3156a_z.jpg" alt="me at a table under the stairs, with a pint and a half of beer"></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Duke's Head in Little Burstead</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-dukes-head-in-little-burstead/</link><pubDate>Tue, 13 Aug 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-dukes-head-in-little-burstead/</guid><description>We are approaching Billericay on our quest. Things are getting posh. Pastel-coloured walls, wrought iron fireplaces. Scallops for a starter. A burger for £16. But, let us not forget, this is still south Essex; the music is a bit too loud, the bar focuses on lagers at the expense of ales. I don’t want to suggest this is a rule, but we are charged for a beer we did not order.</description><content:encoded><![CDATA[<p>We are approaching Billericay on our quest. Things are getting posh. Pastel-coloured walls, wrought iron fireplaces. Scallops for a starter. A burger for £16. But, let us not forget, this is still south Essex; the music is a bit too loud, the bar focuses on lagers at the expense of ales. I don’t want to suggest this is a rule, but we are charged for a beer we did not order. Welcome to Duke’s Head.</p>
<p>That came out wrong. We liked it there. It just feels more interesting to highlight the quirks and imperfections, rather than praise. And praise Duke’s Head deserves: firstly, its location, by a narrow road in a woodland area between Little Burstead and Billericay, is nicely isolated from the noise and bustle of surrounding roads and towns. Secondly, the food, while pricey, is rather good quality. On the outside Duke’s Head looks like a traditional country pub. The inside decor seems recent, a bit rustic, a bit modern, not always tasteful (I’m looking at you, faux-marble topped bar). The view from the restaurant is the front car park – could be better, but the trees in the background make up for it to a certain extent. I’m not sure what the deal is with [background music]({{ relref &ldquo;The Old Doge Inn in Herongate Tye&rdquo; }}) in pubs that try to give off the rural, rustic vibe, but to me it seems quite out of place.</p>
<p>Choice of real ales is restricted to two – Doombar and London Pride – but both are acceptable. There is also Adnam’s Mosaic pale ale, and that’s it for drinks as far as we are concerned. No bottled options to speak of. The choice of food, on the other hand, is wide, including an extensive vegan menu. The lunch deal, £13.50 for two courses, is a bit more restricted, but there are still a few options to choose from. For the mains Z has a veggie flatbread (not so great), I go for a wholefood salad, pretty good. The desserts – apple and rhubarb crumble and a warm chocolate brownie – do not disappoint. Despite the lunch offer it ends up quite pricey, including drinks, more than £30 for the two of us – even if we discount that extra pint, which got refunded in the end. Still, I am tempted to come back one day for a more substantial meal. Perhaps even that £16 burger.</p>
<p><img src="https://live.staticflickr.com/65535/48531337426_86d6f7e220_c.jpg" alt="pastel-coloured walls and a fireplace"></p>
<p>20/08/2019  update: the (retrospective) Z-score:</p>
<table>
<thead>
<tr>
<th>Category</th>
<th>Score</th>
</tr>
</thead>
<tbody>
<tr>
<td>Availability of vegan food</td>
<td>★★★</td>
</tr>
<tr>
<td>Food quality</td>
<td>★★★</td>
</tr>
<tr>
<td>Drinks</td>
<td>★★</td>
</tr>
<tr>
<td>Ambience</td>
<td>★★★</td>
</tr>
<tr>
<td>Surroundings</td>
<td>★★★</td>
</tr>
<tr>
<td>Bathrooms</td>
<td>★★</td>
</tr>
<tr>
<td>Service</td>
<td>★★</td>
</tr>
<tr>
<td>Cheapness</td>
<td>★★</td>
</tr>
</tbody>
</table>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Boar's Head in Herongate</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-boars-head-in-herongate/</link><pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-boars-head-in-herongate/</guid><description>A bonus pub visit this week. On the hottest day of the year so far, we went to Thorndon Country Park. It is a lovely area, where one can walk for hours among ancient woodland, dense rhododendron groves, forest clearings and meadows, or just lie down on a grass and read a book (which we did). There are two entrances and car parks, the northern one, from the Brentwood side, which is where we usually go, and the southern one, by A127.</description><content:encoded><![CDATA[<p>A bonus pub visit this week. On the hottest day of the year so far, we went to Thorndon Country Park. It is a lovely area, where one can walk for hours among ancient woodland, dense rhododendron groves, forest clearings and meadows, or just lie down on a grass and read a book (which we did). There are two entrances and car parks, the northern one, from the Brentwood side, which is where we usually go, and the southern one, by A127. This time we used the latter, and while the park grounds were spectacular, the proximity of a busy dual carriageway and, perhaps more importantly, a function venue blaring dance music, made the visit less enjoyable than it would have been in quieter circumstances. In the future we will stick to the North.</p>
<p>On the way back we passed by one of the pubs on our list, and Z was hungry, so we stopped by. The Boar’s Head is a historic-looking building close to the centre of Herongate village, but in a reasonably quite location, by a minor road leading from Herongate to Billericay; about three-quarters of a mile down the road you’ll find <a href="/travel/sw-essex-pub-quest/the-old-doge-inn-in-herongate-tye/">The Olde Dog</a>, which we tried a few weeks back. We were lucky to turn up at 5 PM, which is quieter time at pubs, so we had no trouble finding a nicely shaded table outside. With the temperature approaching 30°C I was not interested in food, so settled on just rhubarb crumble sundae (very nice), but I must say that the menu looked very enticing and I’d be eager to visit again and try their burger with salt beef or the ribs. As for Z, there was a separate veggie menu with a few very interesting items in it, and they were really happy with a seasonal veg bowl with harissa rice balls. I found the speed at which it was served somewhat suspicious, suggesting a microwave, but the primary customer was satisfied. They had three cask ales: Greene King IPA, Yardbird – which I had <a href="/travel/sw-essex-pub-quest/the-dog-and-partridge-in-orsett/">a week ago</a> and quite liked, and a Black Sheep, so not too bad overall. Exceptionally, due to the weather conditions, I opted for something colder, and partook in Z’s pitcher of Pimm’s.</p>
<p>We liked the Boar’s Head a lot, and plan to visit again. This endorsement must be qualified first by me only having a dessert and basing the judgment about food mostly on the contents of the menu and on what I could spot on other patrons’ plates. Second, the external circumstances play a big role, and we are likely more generous on a nice, sunny and leisurely day like today. Who knows, perhaps if we visited <a href="/travel/sw-essex-pub-quest/the-dog-and-partridge-in-orsett/">The Dog and Partridge</a> on a day like this, instead of gloomy Wednesday, we’d judge it less harshly? In the end that does not matter: what does is that we had a very pleasant stop-over at Boar’s Head this time round.</p>
<p><img src="https://live.staticflickr.com/65535/48154572911_533e68995d_c.jpg" alt="https://live.staticflickr.com/65535/48154572911_533e68995d_c.jpg"></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Dog and Partridge in Orsett</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-dog-and-partridge-in-orsett/</link><pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-dog-and-partridge-in-orsett/</guid><description>Last Sunday I visited The Four Seasons again, to watch the England vs. Cameroon world cup game. There were some pleasant and unpleasant surprises. The pleasant one was that the ales on tap have changed, and they now had Yardbird pale ale, from Greene King, but pretty decent. The bad was that even though the game was shown on the TV screens around the bar, the sound was off and noone paid any attention.</description><content:encoded><![CDATA[<p>Last Sunday I visited <a href="/travel/sw-essex-pub-quest/the-four-seasons-in-laindon/">The Four Seasons</a> again, to watch the England vs. Cameroon world cup game. There were some pleasant and unpleasant surprises. The pleasant one was that the ales on tap have changed, and they now had Yardbird pale ale, from Greene King, but pretty decent. The bad was that even though the game was shown on the TV screens around the bar, the sound was off and noone paid any attention. England. Playing the round of 16. In a football World Cup. In an Essex pub. Noone paying any attention. Unbelievable. I left at half time, for – <a href="http://www.27bslash6.com/timesheets.html">as one online comedian put it</a> – the fear that the lack of atmosphere will cause my eyes to pop out, like in the <em>Total Recall</em> movie with Arnold Schwarzenegger.</p>
<p>This week we are (almost) in Orsett. For an Essex village south of A127 Orsett is quite posh, it has an airstrip and even a small hospital, much nicer than the infamous Basildon hospital. Sadly, the fortunes of Orsett have recently turned for the worse, as it was announced that the planned <a href="https://highwaysengland.co.uk/lower-thames-crossing-in-my-area/">Lower Thames Crossing</a> motorway route will pass just to the West of it, likely resulting in increased air, noise and light pollution, and reduced property prices. Meanwhile though, there are a few pubs in or around Orsett that we were planning to explore, and today it was the turn of the Dog and Partridge.</p>
<p>The pub occupies a solitary building by the busy A128, also known as Brentwood Road. There is a bar area to the front and a restaurant at the back, very bright, with the glass sliding doors revealing the focus pieces of the entire estate – a garden with a sizeable duck pond. It did look nice from the inside, although I suspect that sitting in the garden might not be as pleasant due to it only being separated from A128 by a hedge over whose top we could see the tops of lorries passing by.</p>
<p>The choice of ale was a nice surprise, as there were two available, and neither was Greene King. First was Ridley’s Rite, a very nice bitter, the second was some botanical variety, I do not remember exactly, probably from <a href="https://www.botanic.co.uk/eat-drink/botanical-ales/">Ventnor</a>, also quite okay. One weird thing was that although they seemed to be real ales, both were served chilled, like lager or craft beers. Perhaps that has something to do with the local taste, which seems to prefer lagers.</p>
<p>There was reasonable choice of food, mostly typical pub fare, with very limited veggie/vegan options. The kitchen was happy to accommodate Z’s dietary requirements, although the vegan burger was served with a non-vegan mayo coleslaw, which was a bit of an oversight. The burger was mediocre, and Z didn’t feel well afterwards, but that happens often and might not be the food per se, so do not take it as any indication of safety or hygiene concerns. I tried a chip from Z’s dish and there was something odd in the taste and texture, so maybe it was not fully cooked.</p>
<p>My chicken fajitas were served sizzling, perhaps a bit too charred, but eadible. The guacamole looked like the grayish-green semi-liquid paste you can buy in squeezable tubes in supermarkets, salsa was probably of similar provenance. Not a culinary highlight, but definitely not the worst thing I’ve eaten in a pub (I might discuss <em>that</em> experience some other time). At around £12, a bit on the expensive side, for what it was.</p>
<p>In summary, Dog and Partridge might be an okay place for a pint – that is, assuming you are okay with chilled ale, and if it’s just one, since the only way to get there is to drive. It might also be good for admiring the pond from behind the glass, but the combination of location, decor, ambience and food does not add up to something that leaves long and pleasant memories. In the months to come we will see how other Orsett pubs fare in comparison.</p>
<p>The Z-score is back this week, as is the crappy photo.</p>
<h3 id="the-z-score">The Z-Score</h3>
<table>
<thead>
<tr>
<th>Category</th>
<th>score</th>
</tr>
</thead>
<tbody>
<tr>
<td>Availability of vegan food</td>
<td>★</td>
</tr>
<tr>
<td>Food quality</td>
<td>★</td>
</tr>
<tr>
<td>Drinks</td>
<td>★★</td>
</tr>
<tr>
<td>Ambience</td>
<td>★★</td>
</tr>
<tr>
<td>Surroundings</td>
<td>★★★</td>
</tr>
<tr>
<td>Bathrooms</td>
<td>★★</td>
</tr>
<tr>
<td>Service</td>
<td>★★</td>
</tr>
</tbody>
</table>
<p><img src="https://live.staticflickr.com/65535/48133822262_4099c42a8f_c.jpg" alt="https://live.staticflickr.com/65535/48133822262_4099c42a8f_c.jpg"></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Honey Pot Harvester in Basildon</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-honey-pot-harvester-in-basildon/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-honey-pot-harvester-in-basildon/</guid><description>This week we had a place called The Owl and Pussycat in our schedule, but a quick look at Google reviews suggested it’s a town bar similar to the Plough and Tractor, i.e. lager and sports on TV, but no food. Perhaps some other time then; for lunch we went to the Honey Pot Harvester instead.
Yes, a Harvester is not really a pub. But then, the criteria I used for the quest are far from precise.</description><content:encoded><![CDATA[<p>This week we had a place called The Owl and Pussycat in our schedule, but a quick look at Google reviews suggested it’s a town bar similar to the <a href="/travel/sw-essex-pub-quest/the-noak-bridge/">Plough and Tractor</a>, i.e. lager and sports on TV, but no food. Perhaps some other time then; for lunch we went to the Honey Pot Harvester instead.</p>
<p>Yes, a Harvester is not really a pub. But then, the criteria I used for the quest are far from precise. For example, there is a historic pub building in a lovely spot on top of the hill close to us; long-time locals sometimes refer to it as The Crown. It used to be a Harvester, but a few years ago it got converted to a Miller&amp;Carter steakhouse. Now it is a restaurant with glitzy furnishings and smart casual dress code, but also overstretched waiters and quite mediocre food (steaks are good though). It is also the only place I know where crème brûlée is just a bowl of custard, without the caramelised top, because health and safety prevents the kitchen from operating the torch. So, it didn’t make the list. But if it still was a Harvester, who knows?</p>
<p>In the case of the Pot, it manifestly is not a pub. Set between the sprawling car parks of Basildon’s infamous Festival Leisure Park, and a busy road, just next to TGI Friday’s, it closely resembles a provincial American diner. There is a small bar section, with a choice of lagers and even mojito on the tap, but mostly it is just a chain restaurant, with table service and vaguely rustic decor. The interior is actually quite pleasant, despite too much reliance on artificial plants, and Z found the toilet to be lovely.</p>
<p>Ales on tap they have none, but there is a bottled Ghost Ship (good) and one more, which escaped me. The menu is a standard chain affair, with relatively expensive, £10-12 burgers, and a wide selection of alternatives, including a handful of vegetarian and vegan options. The lunch set can be a good value, under £10 for two courses, but this time I resisted the temptation of a burger or chilli, and went à la carte for a vegan tagine with aubergine. It was okay, although any semblance of Moroccan cuisine was very superficial, with some kind of chilli being the main spice in the mix. The side of hummus was served with a tortilla substituted for a more middle-eastern type of flatbread, which perhaps was an attempt at fusion, but came across more as either ignorance or cost-cutting. I didn’t feel it was worth the £11 or so they charged for it. Z had piri-piri tofu skewers with a salad; cheaper, but not something I would consider having again. There was also a salad buffet, included with every meal. The coleslaw was okay, I was not impressed by the other options available.</p>
<p>As far as chains are concerned, the Honey Pot beats <a href="/travel/sw-essex-pub-quest/the-moon-on-the-square-in-basildon/">Moon on the Square</a> on the ease of parking and cleanliness, but substantially loses on the ale selection, value for money, and, perhaps most importantly for this quest, on pubiness. It is quite close, both in terms of the location and the standard, to <a href="/travel/sw-essex-pub-quest/the-noak-bridge/">The Noak Bridge</a>, with the latter again offering more pub-like ambience. Unless there are items on the Harverster menu (sundaes, perhaps?) that particularly strike your fancy, there are better options around.</p>
<p><img src="https://live.staticflickr.com/65535/48094172772_88d829e0eb_c.jpg" alt="modern chain pub interior"></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Old Doge Inn in Herongate Tye</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-old-doge-inn-in-herongate-tye/</link><pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-old-doge-inn-in-herongate-tye/</guid><description>The Olde Dog Inn was a pleasant break from our recent exploration of chain pubs in the town centre. Located in a tiny village of Herongate Tye, The Dog has all the trappings of a country pub, with low ceilings, crooked walls, Tudor beams, a number of small rooms with tables, and a decent selection of beer. If there is one thing that spoils this rustic inn charm, that’s the music; I suppose the 1980s pop hits are appreciated by the clientele though, with all of the guests on this Wednesday lunchtime being in their 50s or 60s.</description><content:encoded><![CDATA[<p>The Olde Dog Inn was a pleasant break from our recent exploration of chain pubs in the town centre. Located in a tiny village of Herongate Tye, The Dog has all the trappings of a country pub, with low ceilings, crooked walls, Tudor beams, a number of small rooms with tables, and a decent selection of beer. If there is one thing that spoils this rustic inn charm, that’s the music; I suppose the 1980s pop hits are appreciated by the clientele though, with all of the guests on this Wednesday lunchtime being in their 50s or 60s.</p>
<p>The ale selection is wider than would appear at the first glance. On the counter, other than the lagers, without which no Essex pub could survive, there is an Old Dog IPA, brewed by Crouch Vale, and really quite good, Abbott (meh), and Icebraker – craft pale ale, apparently brewed by Greene King (ewww!), but actually very pleasant, with strong elderflower aroma. Beside those, however, there are kegs lying on a shelf behind the bar, with some less common guests. I spied Crouch Vale Brewer’s Gold, an awesome, light and floral ale, there was also one other option that I do not remember. All that is to say, in terms of ale Old Doge is miles beyond most of the pubs we’ve visited in recent weeks.</p>
<p>Food can be had in the bar or in a dedicated restaurant area, with table service. The menu is relatively compact and to the point: pub classics, such as fish and chips, burger, bangers and mash, fried sea bass, lamb shank. Pretty short on vegetarian options, and nothing vegan, but the kitchen was more then happy to accommodate Z’s dietary requirements by preparing a vegan version of mushroom and spinach risotto; Z said it was great. Me, in the absence of a clear favourite I usually default to a burger, and more often than not am disappointed by its lack of juiciness. Say what you want about Byron, but they know how to make a tasty burger. The Olde Dog tries to address the problem of dry patty in an unusual way: by drowning the contents of the bun in melted cheese and tartar sauce. I honestly don’t think I’ve before encountered a burger with tartar sauce, and that’s perhaps for the better. All in all, however, it was one of the better burgers I have so far eaten on this quest, but not quite justifying the price tag of over £12. Also, I would prefer for the beef patty to stand out on its own, so to speak, and to be the focal point; here it seemed somewhat lost among the other fillings.</p>
<p>We liked it at the Doge, and it is a strong contender for the best nearby – not really local, we still have to drive. The prices are perhaps not excessively high, but it was twice the cost of the Weatherspoons. Was it twice as good? That really depends on what you are looking for: if for the country pub ambience, then (save for the music), it ticks all the boxes.</p>
<p>Z is busy, so no scores this time round. Instead, you’ll get a photo that is not ridiculously blurry.</p>
<p><img src="https://live.staticflickr.com/65535/48051051393_a41473863a_c.jpg" alt="https://live.staticflickr.com/65535/48051051393_a41473863a_c.jpg"></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Moon On The Square in Basildon</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-moon-on-the-square-in-basildon/</link><pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-moon-on-the-square-in-basildon/</guid><description>Ah, Weatherspoons! I used to swear by them. The ales for under two pounds a pint – and good too! The gourmet burgers, the curries, all cheap and cheerful. Sure, they’ve lost some of the appeal with this whole brexit thing. The good-old-times interiors seem less welcoming than five years ago, magazines spew out pro-brexit propaganda and today we could even hear a guest asking the waitress in an unfriendly manner “You don’t speak English!</description><content:encoded><![CDATA[<p>Ah, Weatherspoons! I used to swear by them. The ales for under two pounds a pint – and good too! The gourmet burgers, the curries, all cheap and cheerful. Sure, they’ve lost some of the appeal with this whole brexit thing. The good-old-times interiors seem less welcoming than five years ago, magazines spew out pro-brexit propaganda and today we could even hear a guest asking the waitress in an unfriendly manner “You don’t speak English! Where did you come from?”. Yet, the thing is: Weatherspoons is the pub chain to end all pub chains. There is simply nothing else that offers similar balance of choice, quality and value for money. I do have misgivings about the political activism of JD Weatherspoons owner, but I don’t think a boycott of this business would do anyone any good, so this lunchtime we went to Moon On The Square in central Basildon.</p>
<p>The pub is next door to our last week’s feature, <a href="/travel/sw-essex-pub-quest/the-beehive-in-basildon/">The Beehive</a>. The decor is actually fairly similar, again with slot machines taking a prominent place in the very middle of the hall. The prices are even lower. The ale selection is in a different league to all the places we’ve visited so far: 8 real ales on the tap, each for £1.99, I tried Wakering Gold from George’s Brewery and it was very good. In addition there is a limited selection of bottled and canned craft beers. Nothing to complain about on this front. This being Thursday, it was a curry day, so I went for lamb Rogan Josh, which was a marked improvement on Beehive’s chicken tikka last week: the curry itself was alright, nothing special, but the rice was actually pilau basmati, there was a naan and the popadums were tasty. Z loves that they have a dedicated vegetarian and vegan menu and, went for noodles teriyaki (which tasted more like black bean than teriyaki to me). When ordering, I was asked if we want chicken with that, so perhaps vegetarianism has not caught on in Basildon yet. Of course, for £6 or so the quality and execution are not going to be top notch; we could put together a meal of similar quality by throwing together a few ready-made ingredients from Tesco’s. That said, the food was quite alright, and served very quickly.</p>
<p>I’ve known this place for years, and Whetherspoons itself since my early days in the UK, so this lunch was not a revelation, just a confirmation that Moon On The Square is <em>the</em> place to have lunch in Basildon centre.</p>
<h3 id="the-z-score">The Z-Score</h3>
<table>
<thead>
<tr>
<th>Category</th>
<th>score</th>
</tr>
</thead>
<tbody>
<tr>
<td>Availability of vegan food</td>
<td>★★★</td>
</tr>
<tr>
<td>Food quality</td>
<td>★★★</td>
</tr>
<tr>
<td>Drinks</td>
<td>★★★</td>
</tr>
<tr>
<td>Ambience</td>
<td>★★</td>
</tr>
<tr>
<td>Surroundings</td>
<td>★</td>
</tr>
<tr>
<td>Bathrooms</td>
<td>★★★</td>
</tr>
<tr>
<td>Service</td>
<td>★★</td>
</tr>
<tr>
<td>Cheapness</td>
<td>★★★★</td>
</tr>
</tbody>
</table>
<p><img src="moononthesquare.jpg" alt="blurry photo of the pub interior"></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Beehive in Basildon</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-beehive-in-basildon/</link><pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-beehive-in-basildon/</guid><description>It occurred to me that my long-held belief about lack of pubs in South-West Essex stemmed from a peculiar understanding of what a pub is. What I had in mind was a place that is local and quaint, has unique character and is a bit out of the beaten track. None of the pubs we visited so far had this feel, vindicating in some sense my earlier conviction. Today’s feature, The Beehive in central Basildon, definitely does not alter this conclusion.</description><content:encoded><![CDATA[<p>It occurred to me that my long-held belief about lack of pubs in South-West Essex stemmed from a peculiar understanding of what a pub is. What I had in mind was a place that is local and quaint, has unique character and is a bit out of the beaten track. None of the pubs we visited so far had this feel, vindicating in some sense my earlier conviction. Today’s feature, The Beehive in central Basildon, definitely does not alter this conclusion.</p>
<p>There are two pubs next to the former site of Basildon Market: The Beehive and Moon On The Square (a Weatherspoons). I know the latter well, having visited it many times for drinks and food after choral concerts in the nearby St. Martin’s church, and will probably describe it in a future installment of this series. Being part of the Colors nightclub, closer to the road and the railway station, Beehive always appeared more seedy, addressed to younger and noisier crowd. This lunchtime we went to finally pay a visit.</p>
<p>Inside it is a fairly standard bar, with a raised seating area on one side, and prominently and centrally displayed slot machines, or whatever these gambling devices are called. The bar, apart from the obligatory row of Carlings, Fosters and Stellas, sports two ales, and – surprise, surprise! – neither of them is Greene King. We have London Pride and Spitfire; the former well-known and quite decent, the latter rather unpleasant, with notes of Master Brew and barley wine – even though it’s just 4.2%. There were no interesting bottled beers in sight.</p>
<p>The food menu did not offer an abundance of interesting options. We have staples such as burgers, pies or fish and chips, but not much in terms of low-processed food. There are a few vegan dishes, but our attempt to order a veggie bake caused a general confusion, as it turned out noone has ever ordered this before, and they don’t make it; perhaps there is some causal relationship between the two. We ended up with two curries, a vegan one and a chicken tikka masala. They were served without undue delay, and I am pleased to report that chicken tikka was quite eadible. The papadum seemed a bit superfluous, without any chutney or dip, and the rice was long grain rather than basmati, but otherwise not much to complain about. I was less impressed by the veggie one, which, understandably, came without naan bread, but instead with mexican-style rice that felt out of place. That said, for £8.22 per person, including a pint of ale each, it was pretty decent.</p>
<p>So, is The Beehive a good lunchtime option in central Basildon? I’m afraid it isn’t, and not so much down to its own flaws, but because of its neighbour. Beehive is cheap, the food is so-so, but not disgusting, there is one passable ale – but next door we have a Weatherspoons with a wide selection of very reasonably priced beers, food that offers great value for money and includes an entire menu dedicated to veggie dishes. I’ll have more to say on the subject of Weatherspoons in general some other time, but suffice to say it’s hard to compete with them on cheap food and beers. It’s good there is a choice, though.</p>
<p>Starting from this installment, we will include ratings given by Z. The Z-score is assigned in eight categories on the scale from zero to four stars, with two representing an average experience, zero truly awful, and four exceptional. Here is how the Beehive fared:</p>
<h3 id="the-z-score">The Z-Score</h3>
<table>
<thead>
<tr>
<th>Category</th>
<th>Score</th>
</tr>
</thead>
<tbody>
<tr>
<td>Availability of vegan food</td>
<td>★</td>
</tr>
<tr>
<td>Food quality</td>
<td>★</td>
</tr>
<tr>
<td>Drinks</td>
<td>★</td>
</tr>
<tr>
<td>Ambience</td>
<td>★</td>
</tr>
<tr>
<td>Surroundings</td>
<td></td>
</tr>
<tr>
<td>Bathrooms</td>
<td>★</td>
</tr>
<tr>
<td>Service</td>
<td>★★</td>
</tr>
<tr>
<td>Cheapness</td>
<td>★★★★</td>
</tr>
</tbody>
</table>
<p><img src="beehive.jpg" alt="blurry photo of two half-pints of beer and attraction schedule on a pub table"></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Robin in Brentwood</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-robin-in-brentwood/</link><pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-robin-in-brentwood/</guid><description>This wasn’t planned, as we’ve already done our pub quest round this week, but we ended up in Brentwood and Z was hungry, so we popped into The Robin. Located in the North of the town, not far from A12, by a main street, this was an interesting change from chains to a local. Inside a small bar, regulars watching a football match, a few tables, most of the free ones were in the vicinity of a particularly noisy group of children.</description><content:encoded><![CDATA[<p>This wasn’t planned, as we’ve already done our pub quest round this week, but we ended up in Brentwood and Z was hungry, so we popped into The Robin. Located in the North of the town, not far from A12, by a main street, this was an interesting change from chains to a local. Inside a small bar, regulars watching a football match, a few tables, most of the free ones were in the vicinity of a particularly noisy group of children. The garden outside with a view onto a busy street, we opted for a table inside. Only two ales on the tap, one of them inescapable Greene King IPA, but the other – yay! – Doombar. That’s a good start. No craft beer bottles or cans anywhere to be seen, but Doombar will do just fine.</p>
<p>The menu is “American”, i.e. it has mac’n’cheese and burgers named “Texan”, “New York” and “Mexican”. The burgers start at £11, pricey, but perhaps that’s commesurate with quality, so I order one. There is a dedicated vegan section of the menu with three options to choose from, shepherd’s pie is Z’s pick. The food is nicely presented and voluminous, the salad very good; sadly the burger does not live up to its hefty price – the patty looks like it’s made from heavily processed substance ground into a paste with bubbles of air, offering no discernible texture and cooked to the state where all moisture evaporated. At the end I feel bloated and not really satisfied with the quality. That might partially be my fault, as not being super hungry I could have chosen something lighter, but a burger is always tempting. Z’s impression of the vegan shepherd’s pie was not much different, so it is fair to say that we were not particularly impressed with the food.</p>
<p>Despite unattractive surroundings, and slightly disappointing first food impression (in particular considering the price), the Robin is pleasant enough inside, serves (one) proper ale, and while not really a place I would specifically travel to, if passing by, why not pop in for a pint of Doombar, and perhaps a light snack?</p>
<p><img src="robin.jpg" alt="a blurry photo of the pub interior"></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Noak Bridge</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-noak-bridge/</link><pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-noak-bridge/</guid><description>This week it was meant to be The Plough and Tractor in Basildon. Set in a slightly deprived part of town, surrounded by terraced houses and blocks of council flats the pub does not exude character. There is a food truck parked next to the entrance, suggesting that getting lunch inside might be problematic. Indeed, the nice barmaid says they don’t serve food, but we can get something from a nearby chippy and have it here, over a drink.</description><content:encoded><![CDATA[<p>This week it was meant to be The Plough and Tractor in Basildon. Set in a slightly deprived part of town, surrounded by terraced houses and blocks of council flats the pub does not exude character. There is a food truck parked next to the entrance, suggesting that getting lunch inside might be problematic. Indeed, the nice barmaid says they don’t serve food, but we can get something from a nearby chippy and have it here, over a drink. Worse still, there is not a single ale among the long row of taps – just lagers and ciders. No bottled ales either! The clientele at midday consists of a pair of middle aged ladies and three teenage girls, all finishing their morning pints. The bar area is large and empty, the ceiling low. Decor is dated, but couches look inviting and the book cases by the walls are a nice touch. I wouldn’t mind sitting here for a while if there was anything to eat or drink. But since there isn’t, we smile, say goodbye and leave.</p>
<p>On to the next one on the list then, The Noak Bridge in a village by the same name. This is Greene King chain pub which immediately sets my expectations fairly low – I have never been a fan of their ales. Inside it is spacious and bright, with some of the walls nicely tiled, very pleasant on a sunny day like today. As expected, ales are a letdown, just Greene King IPA and Abbot Ale on tap. Fortunately, there are is a bottle or two of craft IPAs, plus Punk IPA on the tap. I had Big Bang, a bit too malty and not hoppy enough for my tastes, but overall quite okay. The food is a typical chain pub fare, with a choice of burgers, curries, sandwiches, and pizza in a few variants, but each with Cheddar cheese on top. This time I go for a burger, which turns out to be edible, if a bit dry – not just the meat, but also the bun. It is salvaged somewhat by a piece of bacon. Z has a vegan burger, impression similar: not the worst, and not the best by far they tried. We both agree that fries are the highlight of the meal: despite them being the skinny type, not chips, there is actual substance and texture to them, with a lovely, crispy skin on the outside. In summary, not a place for gourmet meal or a good ale, but with quite a lot of space, inoffensive background music and a few reasonable drink options, a decent spot to hang out at lunch time.</p>
<p><img src="noak-bridge.jpg" alt="a bottle of beer on a table"></p>
]]></content:encoded></item><item><title>SW Essex Pub Quest: The Four Seasons in Laindon</title><link>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-four-seasons-in-laindon/</link><pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/sw-essex-pub-quest/the-four-seasons-in-laindon/</guid><description>I live in a cultural and culinary desert. At least that is the sentiment I got used to expressing whenever the subject of the area I settled in was brought up in the context of food, pubs, social life, entertainment. There are no good restaurants, no decent pubs within miles of my humble abode. I developed this preconceptions shortly after moving to south-west Essex, and have held it for well over a dozen years.</description><content:encoded><![CDATA[<p>I live in a cultural and culinary desert. At least that is the sentiment I got used to expressing whenever the subject of the area I settled in was brought up in the context of food, pubs, social life, entertainment. There are no good restaurants, no decent pubs within miles of my humble abode. I developed this preconceptions shortly after moving to south-west Essex, and have held it for well over a dozen years. Truth be told, I never put any effort to find out what the local scene really is like, and just a look at a map reveals there is well over a hundred pubs within 15 mile radius. Time to go and explore.</p>
<p>I am hoping this can develop into a series that could be a guide to the world of south-west Essex pubs. The selection criteria was as follows: any place that serves food and drink and looks to me like a pub, that is within 15 miles from my house (as the crow flies), outside of M25, north of the Thames. Without prejudice for chains (Weatherspoons, Greene King, Harvester), seedy locations, unpromising external appearance <a href="https://chadwell-arm.business.site/">or websites</a>. We have to start somewhere – why not in Laindon?</p>
<p>The Four Seasons in Laindon is part of Hungry Horse chain – one I have no knowledge or experience of. It is located in an extensive, free-standing building between a residential area that appears if not poor, then definitely not very wealthy, and an industrial estate. Surrounded by lawns and trees, the location is quite attractive. So is the building, with a two storey-high central section housing the bar, topped by a spire made mostly of glass and letting in a lot of light. Surrounding this is the “restaurant area”, a few dozen tables decently spaced out. Wednesday at 7 PM turned out to be reasonably busy, with only a few tables free, but not noisy at all. Some music was playing in the background, but at comfortable volume that did not disrupt a conversation. Only around 8 PM the volume was turned up and the weekly pub quiz was about to start – but by then, we were ready to leave.</p>
<p>Drinks are nothing to write home about. Just three ales: Abbot, Landlord and Greene King IPA, none of them good from what I recall (I’ve had Abbot this time); otherwise just lagers. But it is cheap – £3 a pint, cocktails £4, premium cocktails (think double vodka and Red Bull) £4.50. Cheap is the name of the game here. The clientele comprised mostly couples in their fifties and sixties having dinners, a friendly, talkative regular at the bar, and a few builders recovering after hard day’s work over a pint and a fag (outside).</p>
<p>Burger would be my default pub order, but the price tag of £5.99 makes me feel uncomfortable, so I look instead for something where I can be reasonably certain what went into it. Thankfully for a tenner you can have a sizzler skillet of your choice with sauce and two sides, so I go for a salmon with piri-piri sauce, corn on the cob and mexican rice. The salmon comes on a bed of onions and peppers partially burned to charcoal and stuck to the surface of skillet, but the fish itself is quite edible, especially when drowned in the abundance of spicy piri-piri sauce. The sauce comes in a separate cup, so can be entirely avoided if desired. Corn was completely soaked in water, so every bite sent sprays of liquid flying around. The rice was okay, slightly spicy, with a few beans here and there. Meanwhile, the other side of the table is happy that there is a vegan option. The Asian veggie burger was just a bun, a lentil patty with chinese spices, and a few bits of spring onion as a an excuse for the promised tomato and lettuce, but hey, no animals were harmed.</p>
<p>All in all, it was better than I anticipated. Do not expect centuries of history, refinement, choice of drinks or food quality. Not for this price, not in this location. In terms of food and entourage it resembles US diners, and if you treat that as your point of reference, the Four Seasons can be a relatively pleasant place to have a mid-week dinner.</p>
<p><img src="four-seasons.jpg" alt="The four seasons pub from the outside"></p>
]]></content:encoded></item><item><title>Robale z Wharfedale</title><link>https://blog.mmakowski.com/travel/robale-z-wharfedale/</link><pubDate>Sun, 28 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/robale-z-wharfedale/</guid><description>W Yorkshire Dales byliśmy po raz pierwszy. Obawiałem się, że na północy Anglii pogoda może nie dopisać, ale weekend wielkanocny był słoneczny i bardzo ciepły również tam; do tego stopnia, że Z się przegrzewała, i musieliśmy robić dłuższe postoje w cieniu.
Pętla z Kettlewell Mieszkaliśmy w Kettlewell. Myślałem, żeby w sobotę rano wstać wcześnie, pojechać do Ribblesdale, zaparkować gdzieś i z tamtąd zrobić pętlę przez największą górę regionu, Pen-y-ghent, ale szczęśliwie poszedłem po rozum do głowy i zdecydowałem jednak przejść się po Wharfedale.</description><content:encoded><![CDATA[<p>W Yorkshire Dales byliśmy po raz pierwszy. Obawiałem się, że na północy Anglii pogoda może nie dopisać, ale weekend wielkanocny był słoneczny i bardzo ciepły również tam; do tego stopnia, że Z się przegrzewała, i musieliśmy robić dłuższe postoje w cieniu.</p>
<h2 id="pętla-z-kettlewell">Pętla z Kettlewell</h2>
<p>Mieszkaliśmy w Kettlewell. Myślałem, żeby w sobotę rano wstać wcześnie, pojechać do Ribblesdale, zaparkować gdzieś i z tamtąd zrobić pętlę przez największą górę regionu, Pen-y-ghent, ale szczęśliwie poszedłem po rozum do głowy i zdecydowałem jednak przejść się po Wharfedale. Do Ribblesdale jechałoby się z godzinę w jedną stronę, potem pewnie nie byłoby nigdzie miejsc parkingowych, a na trasie do Pen-y-ghent byłyby tłumy. W Wharfedale natomiast cicho i spokojnie, ładna trasa grzbietem po wschodniej stronie doliny. Po drodze na Buckden Pike jest monument upamiętniający bombowiec który się tam rozbił podczas drugiej wojny światowej. Pilotowali go Polacy, w katastrofie zginęli wszyscy poza jednym, któremu udało się później dotrzeć do wsi w dolinie.</p>
<p>Słońce grzało, co niezbyt odpowiadało Z, a jak usiedliśmy w cieniu murka po 20 minutach namierzyły nas owady – takie małe żuczki, których tysiące zaczęły wokół nas krążyć i nas obłazić. Mi to zbytnio nie przeszkadzało, bo nie gryzły, ale Z była negatywnie do tej sprawy nastawiona, tak że pospiesznie zakończyliśmy wypoczynek, a później jak tylko wiatr przestawał wiać i robale się zbierały, maszerowaliśmy żwawo aby utrudnić im lądowanie.</p>
<p>W Buckden chcieliśmy pójść do <em>West Winds Tearooms</em>, ale były zamknięte, więc wylądowaliśmy w pustym prawie pubie <em>Buck Inn</em>. Wróciliśmy dnem doliny, wzdłóż rzeki Wharfe, pod koniec wchodząc jeszcze na wzgórze i schodząc kamienistą drogą służącą kiedyś jako dojazd do kamieniołomu. Miałem też w zanadrzu dłuższą opcję, na którą nie starczyło nam czasu: z Buckden przez Birks Fell do Litton, później kawałek w dół Littondale do Arncliffe, a potem z powrotem przez grzbiet do Kettlewell.</p>
<iframe src="https://www.google.com/maps/d/embed?mid=1RL8kk0H5fpQ_Ft07T-s7UuEzEilYsE7a&ehbc=2E312F" width="640" height="480"></iframe>
<h2 id="malham-cove-i-gordale-scar">Malham Cove i Gordale Scar</h2>
<p>Atrakcji nie odpuściłem do końca, bo drugą planowaną trasę przez okoliczne hity zrobiliśmy w niedzielę. Zobaczyliśmy Malham Cove i Gordale Scar, oba spektakularne, ale najbardziej chyba jestem zadowolony ze obranego szlaku: start i meta na parkingu przy Malham Tarn. Tak Cove jak i Scar są łatwo dostępne dla spacerowiczów z wioski Malham, tak że przy nich, i na szlaku pomiędzy, był dziki tłum, natomiast na większości naszej trasy, na północ od tych dwóch punktów, przepiękne ścieżki wąwozami lub łąkami, i prawie nikogo. Po drodze można też zobaczyć ładny wodospad Janet’s Foss, ale o tym zapomniałem jak szliśmy.</p>
<p><img src="https://live.staticflickr.com/65535/32729073007_1ea253f91c_c.jpg" alt="https://live.staticflickr.com/65535/32729073007_1ea253f91c_c.jpg"></p>
<p>W ramach tej wycieczki można też obejść zbiornik wodny Malham Tarn, ale myśmy z tego zrezygnowali, bo chcieliśmy jeszcze tego dnia obskoczyć prywatne wodospady w Ingleton. To było trochę nieporozumienie, bo wodospady owszem, bardzo piękne, ale tego dnia oblężone przez turystów w stopniu nieznośnym, do tego części odwiedzających brakowało kultury osobistej, co przejawiało się w paleniu papierosów an szlaku. Pewnie warto to odwiedzić, bo na przykład wodospad Thornton Force prezentuje się bardzo pięknie, ale jakoś poza sezonem, w dołku popularności. Teraz była długa kolejka żeby wejść na półkę za wodospadem.</p>
<iframe src="https://www.google.com/maps/d/embed?mid=10K5vwNJKX69arjcB_5xEbgn6yBPoTfoB&ehbc=2E312F" width="640" height="480"></iframe>
<h2 id="york">York</h2>
<p>York prezentuje się bardzo sympatycznie, na ile przez trzy godziny byliśmy w stanie ocenić. Czasu starczyło nam na lancz na Shambles Market (rewelacyjny kurczak po persku w Los Moros), zwiedzenie York Minster i kawę w kawiarni Mad Hatter, nad sklepem z pluszakami. Minster to ogromna katedra, lecz jej rozmiarów nie byliśmy w stanie w pełni docenić, bowiem tuż za transeptem stanęło rusztowanie zasłaniające tak z jedną trzecią długości. Wdrapaliśmy się na wieżę, bardzo fajne widoki na York. W podziemiach jest wystawa o historii katedry i archeologii okolic. Można też zobaczyć końcówki dziesiątek prętów zbrojeniowych które trzymają ten kościół w kupie – w latach 50 XX w. okazało się, że może się zaraz zawalić, bo fundamenty mają problem z utrzymaniem ciężaru całej struktury.</p>
<h2 id="kings-head-w-kettlewell">King’s Head w Kettlewell</h2>
<p>Słowo uznania należy się pubowi w którym mieszkaliśmy, i to nie akurat za warunki zakwaterowania – nasz pokój był malutki, z oknem wychodzącym na wylot kuchennego wentylatora – lecz za jedzenie. Tu mówię głównie za siebie, bo odkąd Z przerzuciła się na weganizm, sprawą numer jeden jest żeby nie było produktów zwierzęcych, a walory smakowe schodzą na dalszy plan; tym niemniej jej śniadaniowe tosty z awokado i kolacyjne risotto z grzybami wyglądały bardzo apetycznie. W moim przypadku natomiast tak śniadania jak i kolacja (tylko raz jedliśmy ją w King’s Head) były znakomite. Na śniadanie raz wziąłem full English, i było bardzo dobre, choć bez rewelacji, natomiast kolejnym razem zamówiłęm <em>breakfast classics</em>, czyli owsiankę, a potem jajka w koszulce i wędzony plamiak (coś w stylu dorsza) w sosie holenderskim. Danie takie samo w sobie to nic specjalnego, wszystko to kwestia wykonania – tu było pierwsza klasa, i podane też w bardzo atrakcyjny sposób. Na kolację zjadłem zrazy z bażanta zawinięte w pancettę. Ten bażant przyszedł mi do głowy jak jeździłem po dolinach i co kilkadziesiąt metrów widziałem takiego ptaka w postaci rozpłaszczonej na drodze. Mięso, prawdę mówiąc, niezbyt ciekawe, natomiast wszystkie dodatki i sposób podania zrobiły z tego super danie. Ale i tak hitem wieczoru było wino: libańskie Chateau Musar z 2007 roku. Wybitne. Nawet sześć przegranych z rzedu partii Magica nie zepsuło mi po tym humoru.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/0UgN2W">Yorkshire Dales</a></p>
]]></content:encoded></item><item><title>Creating slide decks in Jupyter notebook</title><link>https://blog.mmakowski.com/technology/creating-slide-decks-in-jupyter-notebook/</link><pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/creating-slide-decks-in-jupyter-notebook/</guid><description>My job involves organising and analysing data, and training and evaluating machine learning models. In addition, the customers like to see demonstrations or progress updates for their models, so every now and then I also have to put together a slide deck. For better or worse, I use Jupyter notebooks as the main tool for the data management part, so I thought it would be convenient to prepare my slides in the same environment.</description><content:encoded><![CDATA[<p>My job involves organising and analysing data, and training and evaluating machine learning models. In addition, the customers like to see demonstrations or progress updates for their models, so every now and then I also have to put together a slide deck. For better or worse, I use Jupyter notebooks as the main tool for the data management part, so I thought it would be convenient to prepare my slides in the same environment.</p>
<p>Jupyter has built in support for generating <a href="https://revealjs.com/">reveal.js presentations</a>, so I decided to give that a go. This post first goes through the steps I took to make the slides, in case anyone was looking for a cookbook-style instructions. At the end, there are a few remarks regarding my experience with this way of creating slide decks.</p>
<p><img src="jupyter-slides.png" alt="Jupyter notebook cell producing a line plot"></p>
<h2 id="guide">Guide</h2>
<h3 id="slide-metadata">Slide metadata</h3>
<p>A reveal.js slide deck can be generated from a regular Jupyter notebook, with static content written in Markdown cells and dynamic generated from Python cells. The slideshow metadata can be controlled from a cell toolbar that is enabled through the menu: <em>View &gt; Cell Toolbar &gt; Slideshow</em>. It amounts to a single property, <em>Slide Type</em>. When set to <em>Slide</em>, it indicates that the cell will be a start of a new slide in the deck. <em>Fragment</em> and <em>-</em> (hyphen, or empty) slide type indicate that the cell forms a part of the slide that started earlier. <em>Fragment</em> will cause the content of the cell to be initially hidden, and be revealed on pressing “next” during the presentation. The <em>-</em> type attaches the content to the current slide without requiring additional key presses. It is useful for combining static and dynamic content in a section that should be shown together. <em>Skip</em> cells do not feature in the deck at all, this type is useful for cells that contain blocks of code that does not generate any output that we want included in the deck. <em>Notes</em> cells are for speaker notes; not shown in the main deck, but displayed in the presenter view offered by reveal.js. There is also <em>Sub-Slide</em> type, which I have not used, but which I assume provides the vertical branches in reveal.js.</p>
<h3 id="slide-deck-export">Slide deck export</h3>
<p>Plain Jupyter cannot display the slide decks in their final format. There are extensions that <a href="https://damianavila.github.io/RISE/">provide that functionality</a>, but I am yet to try them out, so in this tutorial we will stick to what is available out of the box, which is HTML export. The HTML file will require a reveal.js library to be present, so we will need to download it. Assume we have the following directory structure in our project:</p>
<pre tabindex="0"><code>/project-root
    /demos
       /1
       /lib
    /notebooks
</code></pre><p>We will store the notebook in <code>notebooks</code> directory, and will want to keep the files for the current slide deck in <code>demos/1</code> directory. Let us first make sure reveal.js is available: download the current release from the <a href="https://github.com/hakimel/reveal.js/releases">GitHub releases page</a> and unzip it to <code>demos/lib</code>. As a result we should end up with the library in a directory such as <code>demos/lib/reveal.js-3.7.0</code>. With that in place, we can now export the notebook to a slide deck using <code>jupyter nbconvert</code>. I do it by placing the following cell (<code>Slide Type=Skip</code>) at the top of the notebook:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>!jupyter nbconvert demo1-slides.ipynb <span style="color:#d14">\
</span></span></span><span style="display:flex;"><span><span style="color:#d14"></span>    --to slides <span style="color:#d14">\
</span></span></span><span style="display:flex;"><span><span style="color:#d14"></span>    --output-dir ../demos/1 <span style="color:#d14">\
</span></span></span><span style="display:flex;"><span><span style="color:#d14"></span>    --reveal-prefix<span style="color:#000;font-weight:bold">=</span>../lib/reveal.js-3.7.0
</span></span></code></pre></div><p>The <code>output-dir</code> and <code>reveal-prefix</code> arguments make the export aware of our directory structure. Once run, you should end up with the file <code>demos/1/demo1-slides.slides.html</code>, which can be opened in a browser and should immediately work as a reveal.js presentation.</p>
<h3 id="styling">Styling</h3>
<p>The Jupyter reveal.js export is by default set up to export both the code and output of Python cells. The audience of my demos is non-technical, and they do not care about the code. <code>nbconvert</code> provides configuration options to exclude the code, as well as the <code>out</code> prompts. We can modify the export cell to include them:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>!jupyter nbconvert demo1-slides.ipynb <span style="color:#d14">\
</span></span></span><span style="display:flex;"><span><span style="color:#d14"></span>    --to slides <span style="color:#d14">\
</span></span></span><span style="display:flex;"><span><span style="color:#d14"></span>    --output-dir ../demos/1 <span style="color:#d14">\
</span></span></span><span style="display:flex;"><span><span style="color:#d14"></span>    --TemplateExporter.exclude_input<span style="color:#000;font-weight:bold">=</span>True <span style="color:#d14">\
</span></span></span><span style="display:flex;"><span><span style="color:#d14"></span>    --TemplateExporter.exclude_output_prompt<span style="color:#000;font-weight:bold">=</span>True <span style="color:#d14">\
</span></span></span><span style="display:flex;"><span><span style="color:#d14"></span>    --reveal-prefix<span style="color:#000;font-weight:bold">=</span>../lib/reveal.js-3.7.0
</span></span></code></pre></div><p>Another feature of the export that is non-ideal is that the output text from <code>print</code>s is shown as preformatted, in HTML <code>&lt;pre&gt;</code> tag. This can be addressed by importing <code>display</code> and <code>HTML</code> functions (<code>from IPython.core.display import display, HTML</code>) and then using <code>display(HTML(&quot;...&quot;))</code> in place of <code>print</code>. The static content appears more indented than the output of code cells, which is due to an empty prompt area being shown to the left of the static content. To eliminate this, include the following in the first markdown <em>Slide</em> cell:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>&lt;<span style="color:#000080">style</span>&gt;
</span></span><span style="display:flex;"><span>.<span style="color:#458;font-weight:bold">prompt</span> { <span style="color:#000;font-weight:bold">min-width</span>: <span style="color:#099">0</span><span style="color:#458;font-weight:bold">ex</span>; }
</span></span><span style="display:flex;"><span><span style="color:#000080">div</span>.<span style="color:#458;font-weight:bold">prompt</span> { <span style="color:#000;font-weight:bold">width</span>: <span style="color:#099">0</span><span style="color:#458;font-weight:bold">ex</span>; }
</span></span><span style="display:flex;"><span>&lt;/<span style="color:#000080">style</span>&gt;
</span></span></code></pre></div><p>In general, all styling can be configured comprehensively in a theme stylesheet, and I will probably look into that if I have to make more slide decks in Jupyter, but for the time being I found it expedient to modify the styles directly in the notebook. Other CSS modifications I found useful were elimination of table borders, which makes Pandas dataframes render nicely:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-css" data-lang="css"><span style="display:flex;"><span>.<span style="color:#458;font-weight:bold">rendered_html</span> <span style="color:#000080">table</span><span style="color:#000;font-weight:bold">,</span> .<span style="color:#458;font-weight:bold">rendered_html</span> <span style="color:#000080">tr</span><span style="color:#000;font-weight:bold">,</span> .<span style="color:#458;font-weight:bold">rendered_html</span> <span style="color:#000080">td</span><span style="color:#000;font-weight:bold">,</span> .<span style="color:#458;font-weight:bold">reveal</span> <span style="color:#000080">table</span> <span style="color:#000080">th</span><span style="color:#000;font-weight:bold">,</span> .<span style="color:#458;font-weight:bold">reveal</span> <span style="color:#000080">table</span> <span style="color:#000080">td</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">border</span>: <span style="color:#099">0</span><span style="color:#458;font-weight:bold">px</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>.<span style="color:#458;font-weight:bold">reveal</span> <span style="color:#000080">thead</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">border-bottom</span>: <span style="color:#099">2</span><span style="color:#458;font-weight:bold">px</span> <span style="color:#000;font-weight:bold">solid</span> <span style="color:#099">#8c8c8c</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="plots">Plots</h3>
<p>I used matplotlib for plotting, in the same way I would in a regular notebook. I prefer to output SVG for nice scaling, and also wanted the plots to take the entire slide, so I did the following:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">matplotlib.pyplot</span> <span style="color:#000;font-weight:bold">as</span> <span style="color:#555">plt</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">%</span>matplotlib inline
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">%</span>config InlineBackend<span style="color:#000;font-weight:bold">.</span>figure_formats <span style="color:#000;font-weight:bold">=</span> [<span style="color:#d14">&#39;svg&#39;</span>]
</span></span><span style="display:flex;"><span>plt<span style="color:#000;font-weight:bold">.</span>figure(figsize<span style="color:#000;font-weight:bold">=</span>(<span style="color:#099">12</span>,<span style="color:#099">6</span>))
</span></span></code></pre></div><h3 id="pdf-export">PDF export</h3>
<p>It is a good practice to share the slides with the audience after the presentation, ideally in PDF format, which is easy to open on most computers. Reveal.js’s support for PDF export relies on a custom stylesheet enabled through a query parameter, and the browser’s print to PDF functionality. For the custom stylesheet to work, the presentation has to be delivered by a web server, not just opened from a file on disk. Fortunately, it is easy to start up an ad-hoc web server using Python. In <code>demos</code> directory run:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>python3 -m http.server
</span></span></code></pre></div><p>You should now be able to open [[http://0.0.0.0:8000/1/demo1-slides.slides.html?print-pdf]] in a web browser (annoyingly, reveal.js only fully supports Chrome/Chromium for PDF export) and “print” the page to PDF.</p>
<p>If you use <em>fragments</em> to gradually reveal portions of the slide, each fragment will result in a separate slide in the PDF version of the deck. This is not something I wanted, and the behaviour can be configured through a reveal.js <code>pdfSeparateFragments</code> option, but <code>jupyter nbexport</code> does not provide convenient access to this option, so I ended up hacking the setting into the HTML file directly by adding the following in the export cell, directly after the <code>jupyter nbexport</code> call:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>!sed -i <span style="color:#d14">&#39;s/Reveal\.initialize({/Reveal.initialize({pdfSeparateFragments: false,/&#39;</span> ../demos/1/demo1-slides.slides.html
</span></span></code></pre></div><h2 id="observations">Observations</h2>
<p>The great thing about using Jupyter for creating slide decks is that I could easily access all the data in the environment, in the way I am used to. For example, I wanted to make a plot of how the progress subject matter experts made on labelling the data over time. I could use pyspark SQL to query the relevant data and then matplotlib to output the plot. In theory tables are also easy to render with the use of Pandas, but I found that less useful in practice: in most cases I wanted to highlight particular cells to draw attention to certain aspects or better explain the data, which meant that I had to include the table in the static content and style it by hand. I only ended up with one case where I could use the dynamic output directly; in all others I ran the calculations in <em>Skip</em> cells to then use those results to hand-design a slide. It is still nice to have the calculations available inline, but copying the data and formatting it separately takes away one of the most compelling arguments for Jupyter as slide deck construction tool.</p>
<p>And there are disadvantages. For one thing, Jupyter does not support collaborative editing of a notebook, so there is no straightforward way for more than one person to work on the slide deck – if you do, you risk overwriting each other’s changes. Potentially using separate instances of Jupyter and merging the changes to the notebook file using git might work, but I suspect merges of IPython notebook JSON files can be problematic. Secondly, previewing the result requires going through the export and, in case of working with remote Jupyter, downloading of the output HTML file, which is cumbersome and annoying. Previously I used <a href="https://www.rstudio.com/">RStudio</a> with RMarkdown, where just pressing cltr+K rendered the current version of the slides in the preview window. Move to Jupyter feels like a step back. Finally, the default settings, with code and <code>In</code>/<code>Out</code> prompts being included, suggest the slideshow functionality was designed as a way to present notebooks in technical talks rather than design bespoke slide decks that include data-driven elements.</p>
<p>In summary, in my slideshowing use-case, Jupyter does not provide much advantage over RStudio. I get direct access to the data, but then I have to go through an export cycle to look at the slides. Conversely, with RStudio I have to first export the data in order to use it in the slides, but then viewing the rendered slides is easy – and I tend to do the latter much more frequently than the former. Plus, I get to use <a href="https://ggplot2.tidyverse.org/">ggplot2</a> – probably the best plotting library out there!</p>
]]></content:encoded></item><item><title>Flooded Queensland Penne</title><link>https://blog.mmakowski.com/cooking/flooded-queensland-penne/</link><pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/flooded-queensland-penne/</guid><description>January 2011 found us in eastern Australia, desperately trying to get to from Cairns to Sydney in time for our flight back home. Despite having a few weeks at our disposal, us reaching Sydney on time was far from certain, due to epic floods that affected much of coastal Queensland. So, we drove around trying to find a passable way South, coming across what looked like deserted towns, with empty shelves at grocery stores and rationed bread, as supplies could not be delivered due to flooded roads.</description><content:encoded><![CDATA[<p>January 2011 found us in eastern Australia, desperately trying to get to from Cairns to Sydney in time for our flight back home. Despite having a few weeks at our disposal, us reaching Sydney on time was far from certain, due to epic floods that affected much of coastal Queensland. So, we drove around trying to find a passable way South, coming across what looked like deserted towns, with empty shelves at grocery stores and rationed bread, as supplies could not be delivered due to flooded roads. Cooking on the road restricts one’s creativity in the best of times, and in crisis circumstances is positively challenging. It helps to have a few recipes ready that call for ingredients that are generally available. I remember that one such recipe proved successful in the unusual circumstances of Australian summer floods: pesto chicken and mushroom penne. Given below is the variant I prepare at home, but in an emergency feel free to do without some of the ingredients.</p>
<ul>
<li>two chicken breasts</li>
<li>250g of penne pasta</li>
<li>a jar of basil pesto</li>
<li>200g of mushrooms – any kind, although I usually use chestnut</li>
<li>extra virgin olive oil</li>
<li>an onion</li>
<li>a few cloves of garlic</li>
<li>flat leaf parsley</li>
<li>herbes de Provence</li>
<li>parmesan, shaved</li>
<li>salt and black pepper</li>
</ul>
<p><img src="https://farm5.staticflickr.com/4112/5394564094_0f016453f2.jpg" alt="empty shelves in Queensland"></p>
<p>You will need a pot for cooking the pasta and a large pan for everything else. Start boiling salted water in the pot. Cut the chicken into 2 cm cubes, dice the onion – finely, if possible – and slice the mushrooms. Put the pan on high heat, when it gets hot add a bit of olive oil (take care that it does not burn) then immediately the chicken. Fry the chicken for a few minutes, until it starts turning golden on the outside, liberally sprinkling with herbes de Provence some time along the way. Set chicken aside, reduce the heat and put onion in the pan; after one or two minutes add the mushrooms, and after another minute or so press the garlic. When the onion softens and the mushrooms shrink, add the chicken back to the pan and cook everything until the chicken is cooked through. Add freshly ground black pepper and feel free to top up the herbs; finally, add pesto and mix everything.</p>
<p><img src="https://farm6.staticflickr.com/5131/5391927220_7a0e39a080_z.jpg" alt="https://farm6.staticflickr.com/5131/5391927220_7a0e39a080_z.jpg"></p>
<p>Some time mid way through cooking onions, mushrooms and chicken the water for pasta should start to boil; add the pasta, checking on it every few minutes to make sure it doesn’t overcook. When it is <em>al dente</em>, drain it and add to the pan with everything else and mix. Take the pan off heat. Serve in bowls, sprinkled with the parsley, parmesan shavings and some more freshly ground pepper.</p>
]]></content:encoded></item><item><title>One Pound Soup</title><link>https://blog.mmakowski.com/cooking/one-pound-soup/</link><pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/one-pound-soup/</guid><description>I took my first steps towards independent, adult living one summer in the middle of my university course. I stayed for two months in a shared apartment in central London. It was a summer internship, well paid, but not being used to a regular income, freaked out by the prices of everything in London being a few times higher than in Warsaw, I tried to live on a very tight budget of £50 a week – that included food and tube tickets.</description><content:encoded><![CDATA[<p>I took my first steps towards independent, adult living one summer in the middle of my university course. I stayed for two months in a shared apartment in central London. It was a summer internship, well paid, but not being used to a regular income, freaked out by the prices of everything in London being a few times higher than in Warsaw, I tried to live on a very tight budget of £50 a week – that included food and tube tickets. Let it be a testament to my frugality that at the end of the eight-week internship I managed to shave enough off these weekly allowances to afford a digital camera, Kyocera FC-S3, that must have cost more than 200 pounds at the time.</p>
<p>Needless to say, spending money on food seemed like a wasteful luxury. I seem to recall cheddar on toast for breakfast and as a packed lunch. A lot of spaghetti in tomato sauce must also have been involved, for sure. Once I tried to make rice in a pot covered with a glass lid, which I put in an oven. The lid shattered, but I was determined to not let the rice go to waste and eat it anyway; fortunately, my more sensible flatmate talked me out of it.</p>
<p>My culinary experimentation usually took the form of mimicry, and the memorable summer of 2002 also marks my first foray into that territory. Fed up with the spaghetti, I recalled a particular Provençal-style soup my mum once made, and attempted to reproduce it. All I remembered was that it contained tomatoes, beans, herbes de Provence and a peculiar type of home-made dumpling, which is made with just wheat flour and egg dough (no filling), scooped up with a spoon and put in a boiling water for a few minutes. Consequently, I visited Elephant &amp; Castle Asda store and purchased a few cans of baked beans, peeled plum tomatoes, eggs, flour, herbs, onion and garlic. It all cost about a pound, and the result was a reasonably tasty soup that lasted me a few days. I make variants of this soup until this day, though it does not cost a pound any more – both due to the monetary and lifestyle inflation.</p>
<p>To start with, finely chop <strong>two onions</strong>, heat some olive oil in a large pot and soften the onion on low heat for a few minutes. Add <strong>whole allspice</strong> and <strong>bay leaf</strong>, fry for another minute or two, but without browning the onion. If you would like the spicy version of the soup, you might want to add at this stage a few <strong>chillies</strong>, cut lengthwise and deseeded. Add two or three cans of <strong>chopped tomatoes</strong> in tomato sauce, mix and let it heat up. Press a few cloves of <strong>garlic</strong>, add <strong>herbes de Provence</strong>. It might be a good idea to add little bit of <strong>tomato purée</strong> for more intense tomato flavour. Pour in half a litre of <strong>stock</strong> (vegetable or chicken works well), to make it a liquid, then bring to boil. Grind in some black pepper. Add more herbes de Provence. Throw in a few cans of various types of <strong>beans</strong> – I always use butter beans and red kidney beans, cannellini or borlotti beans also work well. Bring to boil again, and boil on a low heat for 5 or 10 minutes, stirring frequently. You might want to cover the pot, since the relatively thick mixture has a tendency to sputter and make a mess of everything around.</p>
<p>For the dumplings, break two or three whole <strong>eggs</strong> into a pint glass, add a spoon of <strong>wheat flour</strong> and mix into a loose dough. Keep gradually adding more flour until the dough is quite thick. I usually melt a spoonful of <strong>butter</strong> and add to the dough – I am not sure how much difference it makes, but it is part of my mum’s recipe, so I am sticking to it. Bring a small pot of lightly salty water to boil, scoop bits of dough with the tip of a spoon and put them in the water. After every eight or ten dumplings, take them out of the water and leave in a sieve or a colander to drain. Meanwhile, cook the next batch; put the drained dumplings in the pot with the soup.</p>
<p>The soup lasts the two of us a good few days and is perfect for the cold autumn and winter evenings. Serve with chopped fresh <strong>parsley</strong>.</p>
<p><img src="https://farm9.staticflickr.com/8292/7615937576_bb1d8a3c57_z.jpg" alt="the soup"></p>
]]></content:encoded></item><item><title>Jamie's Fish</title><link>https://blog.mmakowski.com/cooking/jamies-fish/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/jamies-fish/</guid><description>There are recipes that I gleaned from the Internet, and which I am very fond of. It would be presumptious and unfair to the fine people who first published them online to plagiarise their efforts on this humble blog. But then, if I had prepared a certain dish dozens of times, if I made custom adjustments and modifications, if the sequence of activities is so ingrained in my synapses that preparing it is like driving a car or putting my shoes on – then perhaps it is fair game, after all?</description><content:encoded><![CDATA[<p>There are recipes that I gleaned from the Internet, and which I am very fond of. It would be presumptious and unfair to the fine people who first published them online to plagiarise their efforts on this humble blog. But then, if I had prepared a certain dish dozens of times, if I made custom adjustments and modifications, if the sequence of activities is so ingrained in my synapses that preparing it is like driving a car or putting my shoes on – then perhaps it is fair game, after all? There is another reason I wanted to share some of these gems. With Z not eating any living, or formerly living, creatures any more, there are few occasions for me to practice many of these great recipes, and I am worried about these perfected, personal versions of publicly available recipes being irretrievably lost. Let us then start with one of my favourites: Jamie’s fish.</p>
<p>In addition to extra virgin olive oil, garlic and good white wine – not cheap, cooking type, we will be drinking it! – which I assume you permanently stock, we will need:</p>
<ul>
<li>two <strong>red onions</strong></li>
<li>one medium-sized <strong>fennel</strong></li>
<li>a tin or a jar of <strong>anchovies</strong> in oil</li>
<li>some <strong>red chillies</strong></li>
<li>a whole <strong>lemon</strong></li>
<li>four <strong>rainbow trout fillets</strong> – I tried various other types of fish, and a sea bass is a very good alternative. In Tennessee, U.S., I could only get a tilapia, and it was not nearly as good, but could pass in the absence of anything better.</li>
<li><strong>fresh pasta</strong> – linguine or tagliatelle</li>
</ul>
<p>Blend the onions and fennel in food processor; you can also finely chop or grate it by hand, but it is a tedious and lachrymose process. Also finely chop a few cloves of garlic, but keep them separate for the time being. Heat some olive oil in a large pan and add the onion and fennel blend. While it is softening up on medium heat, wash the lemon, dry it with a paper towel, and with a very sharp knife shave some peel off it; do it very thinly. A parmesan grater can be used instead, but I found shaving to produce a nicer effect. A few minutes after the onions and fennel went into the pan, add the garlic, and then, the anchovies, together with the oil they are in. Stir so that the anchovies are evenly distributed, and leave bubbling for some more minutes. Meanwhile, finely chop a few red chillies.</p>
<p>After a few minutes – perhaps 10 minutes in total since the start of cooking – the anchovies will dissolve. Once that happens, turn the heat up to high and add some white wine – 100 to 200 ml – and some freshly ground black pepper. Leave on high heat while the concoction reduces, which will take another 3 to 5 minutes. At the end, there should still be some liquid left. Now, reduce the heat to low and place the trout fillets on top, skin up; squeeze the juice of the lemon onto them, then add a good glug of olive oil, sprinkle the lemon peel and chillies, add some more black pepper. Cook covered for another 10 minutes, until the fish is done. Keep checking that there is enough liquid and that the mix does not stick to the pan.</p>
<p>Try to time the fresh pasta to be ready at the same time as the fish, remembering that it only needs about a minute in boiling water. If your timing is not impeccable, it is better to do the pasta later, while the fish rests – it is important that the past is al dente. Drain the pasta, put in bowls, add some olive oil so that it does not stick. Place some of the onion/fennel/achovy substance in each of the bowls, and then, on top of each, a whole trout fillet. Eat with the remainder of the wine used for cooking.</p>
<p><img src="https://farm6.staticflickr.com/5138/5492943084_9d8dbb6fdc_z.jpg" alt="pasta with fish"></p>
<p>As you could probably gather from the name, the recipe is courtesy of Jamie Oliver. I would have linked to the original, but it seems to have been lost in the depths of the Internet. It might be ten years since I originally found it.</p>
]]></content:encoded></item><item><title>KDD 2018: The Rest</title><link>https://blog.mmakowski.com/technology/kdd-2018-the-rest/</link><pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/kdd-2018-the-rest/</guid><description>KDD 2018 was intense. Workshops and keynotes started at 8 AM and the poster sessions were runing until 9 PM. There was a dozen tracks running in parallel, so choosing the session to attend was hard – there was always something else potentially interesting going on at the same time. For the first two days I tried to pay close attention and write up comprehensible notes from the tutorials and workshops, but that was not sustainable, so from the third day on I sat back, relaxed, listened more, wrote less.</description><content:encoded><![CDATA[<p>KDD 2018 was intense. Workshops and keynotes started at 8 AM and the poster sessions were runing until 9 PM. There was a dozen tracks running in parallel, so choosing the session to attend was hard – there was always something else potentially interesting going on at the same time. For the first two days I tried to pay close attention and <a href="https://blog.mmakowski.com/technology/kdd-2018-deep-learning-for-computational-health/">write</a> <a href="https://blog.mmakowski.com/technology/kdd-2018-explainable-models-for-healthcare-ai/">up</a> <a href="https://blog.mmakowski.com/technology/kdd-2018-common-model-infrastructure/">comprehensible</a> <a href="https://blog.mmakowski.com/technology/kdd-2018-quantum-machine-learning/">notes</a> from the tutorials and workshops, but that was not sustainable, so from the third day on I sat back, relaxed, listened more, wrote less. Below are a few random things from that part of the conference that stuck in my memory – not necessarily due to being the most significant or groundbreaking, perhaps just most relevant or interesting to me at this time.</p>
<h2 id="piecewise-linear-models">Piecewise-linear models</h2>
<p>It always struck me that calling ReLU nonlinear is a bit of a stretch: there is just one point where the tangent changes, but otherwise it is a combination of two linear functions. Other than its (for me, surprising) effectiveness in deep learning, another result of this piecewise linearity is that useage of ReLU, or similar activations, across all layers, allows decomposition of the deep learning model into a large set of linear models: each member of that set corresponds to a “configuration” that describes which linear part of the activation function is in use for each unit in the network. This allows explanation of model predictions in terms of the features that influenced the choice of configuration (a convex polytope within the input space), and then the features that determined the prediction of the linear classifier chosen. More details in <a href="https://arxiv.org/pdf/1802.06259.pdf">the paper</a>.</p>
<p><img src="kdd2018-plnn.png" alt="diagram illustrating piecewise-linear models"></p>
<h2 id="aws-streaming">AWS Streaming</h2>
<p>Some vendors – Baidu, Amazon – were talking about “democratising machine learning”, i.e. making it accessible to a wide range of companies that do not currently have staff with experience necessary to develop and deploy machine learning models, presumably, while locking them in to the vendor’s platform. Either way, Amazon’s effort in this area is called <a href="https://aws.amazon.com/sagemaker/">SageMaker</a>. While other vendors – Google, Microsoft – offer similar end-to-end platforms, the striking feature/constraint of Amazon’s offering is that all machine learning algorithms running on it must support streaming. Perhaps it is due to my day-to-day work only involving batched learning, but I found this restriction, and the architectural benefits it brings – distribution, incremental training – fascinating. It is also a reminder that in the practical deployments the quality of model’s output is just one of many considerations – others being the ease of management, monitoring and evolution of the model over its lifetime. Being stuck knee-deep in the multitude of techniques and new results in achieving “state of the art predictions”, it is easy to forget about those other factors.</p>
<h2 id="event-registry">Event registry</h2>
<p><a href="http://eventregistry.org/">Event Registry</a> consumes feeds from 30,000 news sources in 100 languages, cleans them up, identifies common concepts using a cross-lingual ontology <a href="http://wikifier.org/">extracted from Wikipedia</a> and uses them to construct a timeline of world events. On a closer look, a number of those events are opinions, it is also not clear how susceptible the service is to misinformation attacks, or multiple stories in multiple languages originating in a single, unreliable source. Still, the idea is compelling, and the authors experimented with predicting future events based on the data collected – reportedly, with useful outcomes, though no published results were mentioned.</p>
]]></content:encoded></item><item><title>KDD 2018: Quantum Machine Learning</title><link>https://blog.mmakowski.com/technology/kdd-2018-quantum-machine-learning/</link><pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/kdd-2018-quantum-machine-learning/</guid><description>It must be an exciting time for quantum computing researches. Up until a few years ago all work in this domain was about building theoretical models of what will be possible once we have a quantum computer. Today, a number of companies have built and made available physical quantum computers. So far those are toy-size, proofs of concept, with no practical application, but this gives hope that practical devices will become available in a few years’ time, so wider community should take notice.</description><content:encoded><![CDATA[<p>It must be an exciting time for quantum computing researches. Up until a few years ago all work in this domain was about building theoretical models of what will be possible once we have a quantum computer. Today, a number of companies have built and made available physical quantum computers. So far those are toy-size, proofs of concept, with no practical application, but this gives hope that practical devices will become available in a few years’ time, so wider community should take notice.</p>
<h2 id="quantum-computing">Quantum Computing</h2>
<p>Two main approaches to the architecture of a quantum computer are gate-based universal quantum computers and special-purpose annealers. The majority of players – IBM, Google, Microsoft, Rigetti – work towards a universal device. Quantum annealers are made by D-Wave, the first company to release a commercially available quantum computer. Programming a universal device resembles classical programming somewhat: the state of the system is modified by the use of gates similar to logical gates in the classical computer. Annealers work in a more exotic fashion: given a Hamiltonian describing the problem, they smoothly evolve the state of the system from initial state to ground (approximately lowest energy) state corresponding to the Hamiltonian given.</p>
<p>To give a better idea of what universal quantum computing is about, here is a nice definition based in linear algebra only, given by Maria Schuld (a great speaker, by the way):</p>
<ol>
<li>A quantum computer is a quantum physical system of $n$ binary subsystems (qubits) that can be measured in $2^n$ basis states. A computer is in a superposition of the states, and measurement gives us one of them.</li>
<li>The state of the QC is described by a $2^n$-dimensional amplitude vector $a$;
<ul>
<li>the entries are complex numbers;</li>
<li>the probability of measuring $i$th basis state is $|a_i|^2$.</li>
</ul>
</li>
<li>Quantum algorithm is a manipulation of the physical system that transforms the amplitude vector;
<ul>
<li>every quantum algorithm can be decomposed into elementary transformations (gates) acting on only one or two subsystems.</li>
</ul>
</li>
</ol>
<p>It is acknowledged that quantum processing units (QPUs) are only suitable for certain, specialised tasks, and will not replace classical CPUs (perhaps at some point the “C” will evolve to stand for “classical” rather than “central”?). Rather, it is expected that QPUs will become co-processors, like today’s GPUs – perhaps only available remotely, in the cloud.</p>
<h2 id="quantum-machine-learning">Quantum Machine Learning</h2>
<p>The physical quantum devices available today have state of less than 100 imperfect (non-error-corrected, NISQ) qubits. To run the seminal Shor’s factorisation algorithm that breaks RSA we need in the order of 1,000 perfect, or 1 million imperfect qubits. It should come as no surprise that the applications to machine learning are also currently in the realm of theory. What are those potential future applications?</p>
<p>At a very high level, certain classes of algorithms applicable in machine learning are known to be asymptotically faster on a quantum processor. Firstly, optimisation, estimation and constraint satisfaction problems, exemplified by Grover’s unstructured search algorithm, where quantum computers offer a square root (only; but can be significant in practice!) speed-up over the classical algorithms. This can be applied to accelerate Monte Carlo methods. Secondly, high-dimensional linear equations can be efficiently “solved” on a quantum computer, which has found theoretical application in recommender systems. Thirdly, adiabatic algorithm (function minimisation by evolution of quantum Hamiltonian at zero temperature), and its relative, annealing (implemented in D-Wave’s hardware), can be used for heuristics – for example, finding approximate solutions to optimisation problems.</p>
<p>More specific applications of quantum computers to machine learning are speculative, but the results are often theoretically proven. It turns out that translating standard neural networks to quantum mechanics is hard; on the other hand, restricted Boltzmann machines map naturally to the D-Wave style annealer. Another construct that translates very well, this time to universal quantum device, are kernel calculations. A setup where the majority of the learning algorithm runs on a CPU, but kernel computation is handed off to a QPU, would be (in theory) relatively simple to implement. Further in the realm of hypothetical are GANs, it turns out that if the data, generator and discriminator are all quantum, then the classical GAN property of generator learning the distribution of the data at Nash equilibrium holds; however, a classical generator will not be able to fool quantum-enabled discriminator if the data is quantum in nature – there are distributions from which a quantum device can sample that a classical device can not.</p>
<p>In a rare example of a practical experiment, Piotr Gawron presented work where Markov random field was applied to image segmentation. The four-level Potts Markov random field model is NP-hard, but could be efficiently computed on D-Wave annealer. The trick was mapping the structure of the problem – image pixels – to the topology of D-Wave’s qubit network, the Chimera graph. The results were encouraging: first of all, the approach worked, secondly, D-Wave execution took a few seconds while a simulation needed minutes. The simulation was naive and it is likely that a highly optimised classical algorithm would beat the annealer at the current stage, but the asymptotic advantage of the quantum architecture means that the classical supremacy’s lifetime is very limited.</p>
<p>In conclusion, the experts agree: quantum machine learning can be done, but it will be some years – perhaps five, perhaps more – before the hardware is developed that will make it practical.</p>
<p><a href="https://www.quantummachinelearning.org/qmlkdd2018.html">Quantum Machine Learning Workshop at KDD 2018</a></p>
]]></content:encoded></item><item><title>KDD 2018: Common Model Infrastructure</title><link>https://blog.mmakowski.com/technology/kdd-2018-common-model-infrastructure/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/kdd-2018-common-model-infrastructure/</guid><description>Go away and have fun building models like there is no tomorrow. After all, we do the real creative work, innovation, science. The software and operations engineers just deal with the plumbing and have an easy, predictable job compared to us, data scientists. This might not be a mindset many would admit to, but subconciously we do tend to underestimate the importance of others’ jobs. To be fair, the enginneering and operations folks are not much better in this respect – everyone tends to think their work is more demanding and output more valuable than average.</description><content:encoded><![CDATA[<p>Go away and have fun building models like there is no tomorrow. After all, <em>we</em> do the real creative work, innovation, <em>science</em>. The software and operations engineers just deal with the plumbing and have an easy, predictable job compared to us, data scientists. This might not be a mindset many would admit to, but subconciously we do tend to underestimate the importance of others’ jobs. To be fair, the enginneering and operations folks are not much better in this respect – everyone tends to think their work is more demanding and output more valuable than average.</p>
<p>The laissez-faire approach to building and deploying machine learning models is not unfamiliar to software developers, who over the last twenty years of explosive growth of information technology got used to pushing half-baked, poorly tested and code with no formal guarantees to production. It does make the old school civil engineer raise an eyebrow, though. After all, she does not get to dream up a bridge, build it, and let people loose onto it. We do it with machine learning models all the time, with no concern for social consequences of either technical or conceptual failure.</p>
<p>The Common Model Infrastructure workshop was put together by machine learning practicioners particularly concerned with the state of tooling and the resultant brittleness and waste of machine learning workflows. The format was unusual, with short talks lasting for 10 minutes, long talks 15 minutes, and keynotes allotted a whopping 25 minute slots. All that in one morning.</p>
<h2 id="practices-and-concerns">Practices and Concerns</h2>
<p>As far as deployment of models to production was concerned, two main approaches advocated for seem to be containers (read Docker) and portable model formats (PMML, PFA, ONNX) that can be deployed into scoring engines. While container are all the rage, one should take a lesson from the virtualisation hype, and not hope that the container we construct today will still be able to run five years down the road. Longevity of those solutions might be an illusion. Also, while standing up a Docker+Kubernetes based platform might not take much effort, what is really difficult is managing the entire lifecycle: how data is submitted, how exceptions are handled, how quality control is ensured, how monitoring is set up.</p>
<p><img src="kdd2018-cmi-mlcode.png" alt="A block diagram showing ML code being a tiny part of the entier ML-based system"></p>
<p>There was a metion of company-wide feature stores (Twitter has one), where embeddings are kept, for reuse by different teams in different models. Twitter advocates for “pipeline as a product” (as opposed to “model as a product”): treating entire machine learning pipeline, from data collection to model evaluation, as an artifact that is shipped and reused. A very specific practice suggested by two guys from a small startup was to put content hashes in file names, to avoid accidental overwriting or using a differnt version of a file when reproducing a model. Databases should be temporal, or a snapshot should be taken, so that queries are reproducible. Use the same code online (in production) and offline (when working on the models). One should capture and record the context – who and when produced a given piece of data, etc.</p>
<p>A concern mentioned in passing, but quite important, was the privacy considerations. Provenance tracking is essential for that, since, unless proven otherwise, any machine learning model should be assumed to be tainted by the training data – in other words, since this data can in principle be reverse engineered from the model, the model is as sensitive as the training data. This is not a common perception among the practicioners in the industry, as far as I can tell.</p>
<h2 id="epsilon-spaces">Epsilon Spaces</h2>
<p>Epsilon spaces is a concept only tenuously related to the subject of the workshop, but which, ironically, happended to be the most interesting part as far as I am concerned – probably due to the problem being close to what I encountered in practice. Under the guise of a clever-sounding name hides a fairly simple concept. Imagine a setting where we need to build a model based on data from multiple sources, but cannot aggregate this data in a single place – perhaps those are patient records from different hospitals, or the data on a smartphone of a user concerned about their privacy. The idea behind epsilon spaces is that an agent runs in each such location, close to the data, and calculates a set of models from a specified family – for example, 2-layer neural networks, or logistic regression – that achieve loss lower than a given epsilon. Those sets are then submitted back to a central agent, who takes their intersection (if one exists) and chooses a model close to the centre of this intersection. There are some complications to account e.g. for neural networks that might include neurons with functionality specific to individual agents, but, in a nutshell, that is it. Appears simple and useful, though it is not immediately clear to me how feature selection is performed, and how it relates to the dictum that data taints the model.</p>
<h2 id="products">Products</h2>
<p>A number of talks mentioned particular prodcuts developed by organisations large and small. The big players design platforms around their offering that already has significant uer base. There is TensorFlow Extended and TensorFlow Hub from Google, the first one offering the infrastructure around ML models – ingestion pipelines, feature engineering, evaluation, serving – that forms the 99% of the complete system, the second allowing reuse of not just models, but parts of models – individual layers, embeddings, transformers. All built around TensorFlow, of course. Microsoft has Azure ML with its own system for data preparation, based on Azure DataBricks, and Docker-based deployment. Beaker from AI2 is again a Docker-based platform, dataset tracking and workflow system, somewhat similar to <a href="https://dotscience.com/">Dotscience</a>. Baidu has AutoDL, a system for automated architecture search, currently just for computer vision. Both Beaker and AutoDL might become publicly available later this year.</p>
<h2 id="--">* * *</h2>
<p>My impression from <a href="https://blog.mmakowski.com/technology/rapids-2018/">RAPIDS</a> stands: there is currently no clear leader in the space of data science workflow management. There is a lot of activity, with many established players (Google, Microsoft, Amazon) building solutions that tie the users to their platform, a number of fledgling startup-like establishments (Beaker, Dotscience) trying to make their mark, open source solutions (Pachyderm) that are half-measures at best, since they still require a dedicated ops team to run. The difficulty of building a comprehensive and widely applicable tooling for data science is a hard task – as one of the panel members observed, the solution must suit organisations of different sizes and structures, with different processes, constraints and legacy technology. It will be really hard to come up with one-size-fits-all.</p>
]]></content:encoded></item><item><title>KDD 2018: Explainable Models for Healthcare AI</title><link>https://blog.mmakowski.com/technology/kdd-2018-explainable-models-for-healthcare-ai/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/kdd-2018-explainable-models-for-healthcare-ai/</guid><description>The Explainable Models for Healthcare AI tutorial was presented by a trio from KenSci Inc. that included a data scientist and a clinician. The premise of the session was that explainability is particularly important in healthcare applications of machine learning, due to the far-reaching consequences of decisions, high cost of mistakes, fairness and compliance requirements. The tutorial walked through a number of aspects of interpretability and discussed techniques that can be applied to explain model predictions.</description><content:encoded><![CDATA[<p>The Explainable Models for Healthcare AI tutorial was presented by a trio from KenSci Inc. that included a data scientist and a clinician. The premise of the session was that explainability is particularly important in healthcare applications of machine learning, due to the far-reaching consequences of decisions, high cost of mistakes, fairness and compliance requirements. The tutorial walked through a number of aspects of interpretability and discussed techniques that can be applied to explain model predictions.</p>
<h2 id="seven-pillars">Seven Pillars</h2>
<p>While the interpretability is usually mentioned in the context of the models, it spans the entire system, from features to algorithm, to the model parameters, and eventually the model itself. The tutorial was built around what the presenters called the “seven pillars” of explainable models:</p>
<ol>
<li><em>Transparency</em> – the ability for the user to understand what drives the predictions; even if the user is not familiar with the details of the model, or the model itself is opaque (as in the case of deep learning), key factors that drive the decision can be identified and explained.</li>
<li><em>Domain sense</em> – the explanation must itself be comprehensible for the target user, and must consider the background and the needs of that user. It is important that different roles – doctor, nurse, manager – are considered when building the explanations. It is also important to focus on factors that are actionable, rather than just important for the prediction. This is not always an obvious criterion to apply; for example, high patient BMI might be an important factor in a model prediction, but how much a physician can intervene on it is debatable. It is also important to remember that “actionable” does not mean “causal” – causality in machine learning models is a controversial subject and at this point it is safest to assume none.</li>
<li><em>Consistency</em> – the explanations should be consistent across different models and different runs of the same model.</li>
<li><em>Parsimony</em> – the simplest explanation should be preferred, particularly in an environment where the users are constantly bombarded by data. The number of factors presented to the user and the time it takes to process them are important to the usefulness of the explanation.</li>
<li><em>Generalisability</em> – the explanation technique should not be devised separately for each model; ideally it should be general enough to apply to a variety of models, and even algorithms.</li>
<li><em>Trust</em> – both model and the explanation should match human perfornamce, and when they make mistakes, those should be similar to the mistakes made by humans.</li>
<li><em>Fidelity</em> – the explanation should represent what the model really did; be an <em>explanation</em> rather than <em>justification</em>.</li>
</ol>
<p>While we should strive for all of those qualities, there are inherent trade-offs, for example between generalisability and fidelity. Usually the former is prioritised.</p>
<h2 id="techniques">Techniques</h2>
<p>The most suitable form of the explanation depends on the type of model. The learning algorithms can roughly be split into three families:</p>
<ul>
<li><em>rule-based</em> (for example, decision tree) – explained by specifying the rules that triggered;</li>
<li><em>factor-based</em> (for example, logistic regression) – explained by listing the most important features (factors);</li>
<li><em>case-based</em> (for example, k nearest neighbours) – explained by providing cases similar to the one being predicted on.</li>
</ul>
<p>Ensembles, heavily engineered features or deep learning complicate the task of explanation quite a bit. Generic techniques that sacrifice fidelity in the interest of generalisibility include locally interpretable model explanations (LIME), where a simple (for example, linear) model is constructed for a specific case. While it can generate a simple explanation, the LIME model does not necessarily faithfully reproduce the decision process of the original model; it also does not scale well, since an explanation model has to be created for each example individually. Alternatively, Shapley values are a game-theoretic approach to determining the contribution of individual features to the model decision; however, they suffer from even heavier scalability issues than LIME. Mimic models – simple, interpretable models trained on the input data and the predictions of the real model as the label – are another technique that while not faithful to the original derivation of the prediction, can provide a justification for it. The slides contain a comparison of explanation approaches along a number of axes in a large table towards the end of the deck.</p>
<h2 id="challenges">Challenges</h2>
<p>The most urgent challenges identified by speakers included ranking of explanations, and lack of good theoretical foundations for that task. Kendall’s tau and W statistics are commonly used to compare rankings, but they seem like a crude tool and not the last word in this space. Another area of concern were imputed values – those are extremely problematic in medical applications, since an incorrect imputation can have disastrous consequences. Explanations need to be robust with respect to those. Model scale and increasing number of features also poses problems for explanations, since as the number of features increases, the most informative features might not be very informative in the absolute sense.</p>
<p>An aspect that deserved, and received, a separate mention was that of fairness. Underrepresentation of certain parts of population in the data and resulting bias of machine learning models have been discussed for a while, but the same issue affects the explanations: if a certain group is underrepresented, the explanation techniques that work satisfactorily for the majority of population might give incorrect or misleading results for that group, depriving it of equal access to quality healthcare.</p>
<p>An even higher level issue is that we, humans, often cannot explain our decisions. Apparently, <a href="https://deepblue.lib.umich.edu/bitstream/handle/2027.42/92167/TellingMoreThanWeCanKnow.pdf">our introspection abilities are very limited</a>, and while we are well adapted to constructing plausible narratives and retrospective justifications, we do not have direct access to the mental processes responsible for making decisions, and there is no reason to think that physicians are unaffected by this limitation. Should we then require the computers to meet standards that humans cannot? I think so. While the civilisation has developed redundancies around and resiliency to human error, we are yet to appreciate the havoc that can be wreaked by systematic mistakes made by machines. Perhaps we are lucky that the first indications of that were the lot of the <a href="http://www.michaeleisen.org/blog/?p=358">retail</a> and <a href="https://en.wikipedia.org/wiki/Knight_Capital_Group">financial</a> industries.</p>
<p><a href="https://mlhealthcare.github.io/"></a></p>
]]></content:encoded></item><item><title>KDD 2018: Deep Learning for Computational Health</title><link>https://blog.mmakowski.com/technology/kdd-2018-deep-learning-for-computational-health/</link><pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/kdd-2018-deep-learning-for-computational-health/</guid><description>The Deep Learnig for Computational Health tutorial was presented by Jimeng Sun, Edward Choi and Cao Xiao. With the electronic health record (EHR) data comprising free text, structured codes, time series and images, a wide range of deep learning techniques has been successfully applied to their analysis. The presenters focussed on capturing the information about the sequence of patient’s visits, interpretability of models and representation learning for textual and structured data.</description><content:encoded><![CDATA[<p>The Deep Learnig for Computational Health tutorial was presented by Jimeng Sun, Edward Choi and Cao Xiao. With the electronic health record (EHR) data comprising free text, structured codes, time series and images, a wide range of deep learning techniques has been successfully applied to their analysis. The presenters focussed on capturing the information about the sequence of patient’s visits, interpretability of models and representation learning for textual and structured data. Image processing was not discussed, except for a mention of last-year&rsquo;s skin cancer Nature article.</p>
<h2 id="overview">Overview</h2>
<p>A few recent results that span different types of data were presented as proofs of usefulness of deep learning in EHR classification tasks.</p>
<h3 id="caml">CAML</h3>
<p>Assignment of clinical codes (for example, ICD-10) is a laborious and error-prone process performed manually by clinical “coders”, who, in the case of ICD-10 coding system, need to assign a subset of 68,000 codes to patient records. Inaccuracies in the assignment can lead to lost revenue or charges of fraud. Mullenbach et al. (including Sun) in <a href="https://arxiv.org/abs/1802.05695"><em>Explainable Prediction of Medical Codes from Clinical Text</em></a> try to address this issue with a machine learning model that assigns mutliple ICD-10 codes to clinical notes. The architecture is relatively simple, with the text of the note scanned sequentially with a CNN that constructs representations of short phrases. Attention mechanism is then employed to weigh those representations and select phrases that are important for coding.</p>
<h3 id="leap">LEAP</h3>
<p>Classification using structured data was exemplified by the Zhang et al. <a href="http://keg.cs.tsinghua.edu.cn/jietang/publications/KDD17-Zhang-et-al-LEAP-DL-pred-Healthcare.pdf"><em>Leap: learning to prescribe effective and safe treatment combinations for multimorbidity</em></a>. Multi-morbidity, or multiple diseases cooccurring in a single patient, present a challenge when it comes to prescribing medication, as different drugs can interact with each other in complex ways. The LEAP model uses a sequence-to-sequence RNN that takes patient conditions as an input and outputs a sequence of medications to prescribe, so there is no limit on the number of drugs predicted. While the initial model did not take known adverse interactions of drugs into consideration, that knowledge was later imparted through reinforcement fine-tuning.</p>
<h3 id="skin-cancer">Skin cancer</h3>
<p>The <a href="https://sci-hub.tw/https://www.nature.com/articles/nature21056"><em>Dermatologist-level classification of skin cancer with deep neural networks</em></a> paper published in Nature last year, Esteva et. al present a complex CNN model based on Inception v3 architecture that, in conjunction with expert-curated hierarchy of skin deseases distinguishes skin cancers from benign conditions with accuracy higher than the mean accuracy of dermatologists.</p>
<h2 id="sequence-processing">Sequence processing</h2>
<p>The first topic discussed in depth was that of sequence modelling, where the sequences considered were patient visits or hospital admissions. All papers in this section have been co-authored by the presenters.</p>
<h3 id="doctor-ai">Doctor AI</h3>
<p>In <a href="http://proceedings.mlr.press/v56/Choi16.pdf"><em>Doctor AI: Predicting Clinical Events via Recurrent Neural Networks</em></a>, Choi (the presenter) et al. attempted to model disease progression using patients visists, i.e. predict what will happen on visit 3 given visits 1 and 2. Each visit was represented using a sparse vector encoding coditions present on a given visit, then an RNN was trained on the sequence of visits in a manner similar to how language models are built: by having the network at each step predict the next input. The dataset used was obtained from Sutter Health and data from 260,000 patients captured over ten years. To make the dimensionality manageable, the ICD-9 codes used as output have been truncated to first three digits, resulting in 1,183 distinct values. The resulting model outperformed simpler approaches; interestingly, predicting the most frequent reason for a givne patient worked better than logistic regression in this task.</p>
<p>An additional interesting result was that this model is suitable for transfer learning: significantly better results were obtained on MIMIC-III when starting with a model pretrained on Sutter Health data than when the model was trained from scratch, even though the two datasets contained different types of data, with Sutter covering primary care and MIMIC intensive care units (ICU).</p>
<h3 id="retain">RETAIN</h3>
<p>Another paper by Choi et al., <a href="http://papers.nips.cc/paper/6321-retain-an-interpretable-predictive-model-for-healthcare-using-reverse-time-attention-mechanism.pdf"><em>RETAIN: An Interpretable Predictive Model for Healthcare using Reverse Time Attention Mechanism</em></a> tackles the question of interpretability, which the <em>Doctor AI</em> RNN lacked. The RETAIN model uses a linear embedding of sparsely-encoded input to generate an interpretable hidden state, which in turn is attended to by two RNNs: one that determines the weight of a specific visit, another that assigns weights the individual variables (coordinates) within a visit. The results are combined into prediction by linear weighting of the features within subsequent visits, which then allows drawing timeline plots that illustrate the importance of findings over time:</p>
<p><img src="kdd2018-diehr-retain.png" alt="Illustration from the paper: contribution of diagnoses over time."></p>
<p>Illustration from the paper: contribution of diagnoses over time.</p>
<p>I particularly liked this paper for achieving close to state-of-the art performance with an algorithm that provides a clean mapping to how humans assess the EHRs.</p>
<h3 id="raim">RAIM</h3>
<p><a href="https://arxiv.org/pdf/1807.08820.pdf"><em>RAIM: Recurrent Attentive and Intensive Model of Multimodal Patient Monitoring Data</em></a> by Xu et al. is another attention model, this time for for predicting patient outcomes (length of stay, mortality) based on data from ICU sensors, tests and notes. Aggregating this multi-channel, multimodal (observed at different frequencies) data in a way that allows predicting in an interpretable way (a recurring theme in healthcare models!) presented a challenge. It was addressed using a combination of CNN to summarise short-term, dense signals such as sensor readings over larger time windows, and then an RNN to model the long-term sequential pattern, with lab tests and medications used to guide which time windows are most relevant. Interpretability could then be achieved by plotting the channels over time, highlighting the time windows and channels that contributed most to the final prediction. The accuracy of length of stay prediction was very impressive.</p>
<p><img src="kdd2018-diehr-raim.png" alt="llustration from the paper: channels and significant time steps."></p>
<p>llustration from the paper: channels and significant time steps.</p>
<h3 id="content">CONTENT</h3>
<p>Readmission – a patient being admitted to a hospital within a short time, typically less than 30 days after discharge – affects almost 18% patients in the US. It is estimated that up to 76% of those readmissions are potentially avoidable, and each costs a lot, adding up to nearly $18 billion a year. <a href="http://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0195024&amp;type=printable"><em>Readmission prediction via deep contextual embedding of clinical concepts</em></a> by Xiao (the presenter) et al. is similar to RAIM in that it uses a different technique to capture long-term context and near-term dependencies. RNN is used for the latter, but the LSTM and GRU units, claimed to be capable of remembering long-distance dependencies, have been found to not performe very well over long sequences, and pose difficulties in optimisation. Topic modelling was therefore used to model the global context, i.e. the long-term history of admissions. The readmission indicator is then computed as a weighted average of the long and near-term context. The optimisation of the model is performed using an inference network.</p>
<h2 id="representation-learning">Representation learning</h2>
<p>Concept embedding was the second area of application for deep learning in healthcare that was discussed at length. Again, the presenters summarised their own work.</p>
<h3 id="med2vec">Med2vec</h3>
<p>Word2vec algorithm (in the skip-gram version) learns representation vectors of words by predicting the context in which the word appears. Edward Choi, and co-authors of <a href="http://www.kdd.org/kdd2016/papers/files/rpp0303-choiA.pdf"><em>Multi-layer Representation Learning for Medical Concepts</em></a>, wanted to apply this idea to structured EHR data, where each patient visit is represented by a sparse, one-hot-encoded vector, and neighbouring visits form the context in which a given visit is evaluated. The demographic data about the patient is incorporated into training through concatentation with the embedded visit vector. The model was trained on data from 3.3 million visits by 500,000 patients obtained from Children’s Healthcare of Atlanta. The trained embeddings of medical codes can then be used as the feature representation classification tasks, for example by attaching a logistic regression model.</p>
<h3 id="gram">GRAM</h3>
<p>Data-driven representation learning, as exemplified by Med2vec, is appropriate when there is a lot of data. In other cases the performance of machine learning models can be boosted by incorporating expert domain knowledge. [[<em>GRAM: Graph-based Attention Model for Healthcare Representation Learning</em>]] (Choi et al.) describes such approach, where the attention mechanism is applied to ontology graph of medical concepts in order to construct representations of each of the leaf nodes. The leaf nodes correspond to medical concepts used in the EHRs, while the inner nodes represent more general concepts, and are used as a context for the representation vector. This process produces an embedding matrix which can then be used to embed a patient visit vector. The embeddings were trained end-to-end, together with the final classifier. When compared to other embedding techniques, the GRAM provided most advantage with little training data. Another interesting result was the comparison with embeddings learned from random ontology graph (fake knowledge) – the classifiers based on those performed the worst among the group analysed, leading to the conclusion that if we are to incorporate domain knowledge, we would better make sure the knowledge is reliable!</p>
<h3 id="t-lstm">T-LSTM</h3>
<p>Patient subtyping involves seeking patient groups with similar disease progression pathways based on longitudinal EHR. Time elapsed between visits or admissions is significant in clinical decision making, and LSTMs work on implicit assumptions of uniform time steps. To remove this restriction, Baytas et al. in <a href="http://www.kdd.org/kdd2017/papers/view/patient-subtyping-via-time-aware-lstm-networks"><em>Patient Subtyping via Time-Aware LSTM Networks</em></a> devised a new type of gate, time-aware LSTM, or T-LSTM. Those gates were then used in an autoencoder that learned patient representations, which could then be clustered to form the patient groups sought.</p>
<h3 id="drug-similarity-and-graph-cnn">Drug Similarity and Graph CNN</h3>
<p>Drug-drug interactions are rarely observed in clinical trials, since the number of drug combinations that can be tested in this setting is limited. The interactions cannot also be inferred directly from the molecular structure, yet they might lead to increased or decreased action of a drug, and have adverse effects. It is assumed that similar drugs may interact with the same drug, so similarity metrics can be useful in identifying unwanted interactions. <a href="https://arxiv.org/pdf/1804.10850.pdf"><em>Drug Similarity Integration Through Attentive Multi-view Graph Auto-Encoders</em></a> by Ma et al. attempts to help by modelling drug similarity as a graph, using data from multiple sources: label side effects, off-label side effects as observed by clinicians, molecular structure, drug indication and others. The drugs are represented as nodes in a graph, with edges representing similarity. A graph CNN (GCN) is then used to construct representation of each drug that includes information about its neighbourhood.</p>
<h2 id="data-augmentation">Data Augmentation</h2>
<p>We are talking generative adversarial networks, of course. As deep learning models require lots of data, and in helthcare that is hard to obtain and comes with sever restrictions related to sensitive information, generation of medical data might open up new realms of applicability for deep learning models.</p>
<h3 id="medgan">MedGAN</h3>
<p>In <a href="http://proceedings.mlr.press/v68/choi17a/choi17a.pdf"><em>Generating Multi-label Discrete Patient Records using Generative Adversarial Networks</em></a>, Choi et al. took on the task of synthesising structured patient records, with the objective that the data is statistically similar to the real records, and that it does not divulge individual patient information. For simplicity, instead of generating a sequence of records, the generator produced aggregated patient vector, with counts of diagnoses stored in dimensions corresponding to conditions. To convert the continuous output to discrete records a pretrained decoder was used to transform the continuous values to discrete vectors. In addition to statistical tests to confirm reasonable distribution of generated variables, a physician was asked to act as the discriminator and assess the “fakeness” of 50 real and 50 generated samples. The distribution of scores for the two sets was almost identical, with just a few outliers, where e.g. both male and female conditions were generated in a single record. As far as privacy preservation was concerned, an attribute disclosure attack model was assumed: someone knows certain facts about an aquaintance; how much more can they learn from the set? Statistical analysis has shown that ifs someone knows 1% of target patient’s attributes, they can correctly estimate at most 10% positive unknown attributes, and the size of synthetic data has little influence on the effectiveness of the attack.</p>
<h3 id="rcgan">RCGAN</h3>
<p>The final paper review concerned <a href="https://arxiv.org/pdf/1706.02633.pdf"><em>Real-Valued (Medical) Time Series Generation with Recurrent Conditional GANs</em></a> by Hyland, Esteban and Rätsch, which describes the use of LSTM GAN for regularly timestamped time series – for example those see in ICU sensor readings. The authors then trained a random forest classifier on both synthetic and real data, and evaluated the performance on real test data, observing that the generated data could be used for training with minor performance penalty. They could not, however, reject the null hypothesis that the GAN has not memorised the training data.</p>
<h2 id="--">* * *</h2>
<p>Tutorial website: <a href="http://dl4health.org/">http://dl4health.org/</a></p>
]]></content:encoded></item><item><title>Precision confidence interval in the presence of unreliable labels</title><link>https://blog.mmakowski.com/technology/precision-confidence-interval-in-the-presence-of-unreliable-labels/</link><pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/precision-confidence-interval-in-the-presence-of-unreliable-labels/</guid><description>Consider a binary classifier that produced the following counts of true positives (TP) and false positives (FP) on test data.
tp_observed = 5285 fp_observed = 3184 We would like to know the 95% confidence interval for precision metric of this classifier. Goutte and Gaussier showed that precision follows the Beta distribution with the counts of TPs and FPs as parameters, adjusted for prior. We will use uniform prior, $Beta(1,1)$.
import pymc3 as pm with pm.</description><content:encoded><![CDATA[<p>Consider a binary classifier that produced the following counts of true positives (TP) and false positives (FP) on test data.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>tp_observed <span style="color:#000;font-weight:bold">=</span> <span style="color:#099">5285</span>
</span></span><span style="display:flex;"><span>fp_observed <span style="color:#000;font-weight:bold">=</span> <span style="color:#099">3184</span>
</span></span></code></pre></div><p>We would like to know the 95% confidence interval for precision metric of this classifier. <a href="https://pdfs.semanticscholar.org/e399/9a46cb8aaf71131a77670da5c5c113aad01d.pdf">Goutte and Gaussier</a> showed that precision follows the Beta distribution with the counts of TPs and FPs as parameters, adjusted for prior. We will use uniform prior, $Beta(1,1)$.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">pymc3</span> <span style="color:#000;font-weight:bold">as</span> <span style="color:#555">pm</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">with</span> pm<span style="color:#000;font-weight:bold">.</span>Model() <span style="color:#000;font-weight:bold">as</span> model:
</span></span><span style="display:flex;"><span>    precision_reliable <span style="color:#000;font-weight:bold">=</span> pm<span style="color:#000;font-weight:bold">.</span>Beta(<span style="color:#d14">&#39;precision_reliable&#39;</span>, tp_observed <span style="color:#000;font-weight:bold">+</span> <span style="color:#099">1</span>, fp_observed <span style="color:#000;font-weight:bold">+</span> <span style="color:#099">1</span>)
</span></span></code></pre></div><p>The distribution and 95% confidence interval can be plotted by sampling this variable.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">%</span>matplotlib inline
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">from</span> <span style="color:#555">IPython.core.pylabtools</span> <span style="color:#000;font-weight:bold">import</span> figsize
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">matplotlib.pyplot</span> <span style="color:#000;font-weight:bold">as</span> <span style="color:#555">plt</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">numpy</span> <span style="color:#000;font-weight:bold">as</span> <span style="color:#555">np</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> <span style="color:#900;font-weight:bold">plot_dist</span>(variable, confidence_level_percent<span style="color:#000;font-weight:bold">=</span><span style="color:#099">95</span>):
</span></span><span style="display:flex;"><span>    figsize(<span style="color:#099">16</span>, <span style="color:#099">4</span>)
</span></span><span style="display:flex;"><span>    samples <span style="color:#000;font-weight:bold">=</span> variable<span style="color:#000;font-weight:bold">.</span>random(size<span style="color:#000;font-weight:bold">=</span><span style="color:#099">100000</span>)
</span></span><span style="display:flex;"><span>    _, ax <span style="color:#000;font-weight:bold">=</span> plt<span style="color:#000;font-weight:bold">.</span>subplots()
</span></span><span style="display:flex;"><span>    plt<span style="color:#000;font-weight:bold">.</span>hist(samples, bins<span style="color:#000;font-weight:bold">=</span><span style="color:#099">100</span>, normed<span style="color:#000;font-weight:bold">=</span><span style="color:#000;font-weight:bold">True</span>, histtype<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">&#34;stepfilled&#34;</span>)
</span></span><span style="display:flex;"><span>    plt<span style="color:#000;font-weight:bold">.</span>title(<span style="color:#d14">&#34;Posterior distribution for </span><span style="color:#d14">%s</span><span style="color:#d14">&#34;</span> <span style="color:#000;font-weight:bold">%</span> variable<span style="color:#000;font-weight:bold">.</span>name)
</span></span><span style="display:flex;"><span>    plt<span style="color:#000;font-weight:bold">.</span>xlim(<span style="color:#099">0</span>, <span style="color:#099">1</span>)
</span></span><span style="display:flex;"><span>    conf_interval_min <span style="color:#000;font-weight:bold">=</span> np<span style="color:#000;font-weight:bold">.</span>percentile(samples, (<span style="color:#099">100</span><span style="color:#000;font-weight:bold">-</span>confidence_level_percent) <span style="color:#000;font-weight:bold">/</span> <span style="color:#099">2</span>)
</span></span><span style="display:flex;"><span>    conf_interval_max <span style="color:#000;font-weight:bold">=</span> np<span style="color:#000;font-weight:bold">.</span>percentile(samples, confidence_level_percent  <span style="color:#000;font-weight:bold">+</span>  (<span style="color:#099">100</span><span style="color:#000;font-weight:bold">-</span>confidence_level_percent) <span style="color:#000;font-weight:bold">/</span> <span style="color:#099">2</span>)
</span></span><span style="display:flex;"><span>    ax<span style="color:#000;font-weight:bold">.</span>axvline(x<span style="color:#000;font-weight:bold">=</span>conf_interval_min, ymin<span style="color:#000;font-weight:bold">=</span><span style="color:#099">0</span>, ymax<span style="color:#000;font-weight:bold">=</span><span style="color:#099">1</span>, color<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">&#39;r&#39;</span>, linewidth<span style="color:#000;font-weight:bold">=</span><span style="color:#099">1</span>)
</span></span><span style="display:flex;"><span>    ax<span style="color:#000;font-weight:bold">.</span>text(x<span style="color:#000;font-weight:bold">=</span>conf_interval_min<span style="color:#000;font-weight:bold">-</span><span style="color:#099">0.04</span>, y<span style="color:#000;font-weight:bold">=</span>ax<span style="color:#000;font-weight:bold">.</span>get_ylim()[<span style="color:#099">1</span>]<span style="color:#000;font-weight:bold">/</span><span style="color:#099">2</span>, s<span style="color:#000;font-weight:bold">=</span><span style="color:#0086b3">round</span>(conf_interval_min, <span style="color:#099">3</span>), color<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">&#39;r&#39;</span>)
</span></span><span style="display:flex;"><span>    ax<span style="color:#000;font-weight:bold">.</span>axvline(x<span style="color:#000;font-weight:bold">=</span>conf_interval_max, ymin<span style="color:#000;font-weight:bold">=</span><span style="color:#099">0</span>, ymax<span style="color:#000;font-weight:bold">=</span><span style="color:#099">1</span>, color<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">&#39;r&#39;</span>, linewidth<span style="color:#000;font-weight:bold">=</span><span style="color:#099">1</span>)
</span></span><span style="display:flex;"><span>    ax<span style="color:#000;font-weight:bold">.</span>text(x<span style="color:#000;font-weight:bold">=</span>conf_interval_max<span style="color:#000;font-weight:bold">+</span><span style="color:#099">0.01</span>, y<span style="color:#000;font-weight:bold">=</span>ax<span style="color:#000;font-weight:bold">.</span>get_ylim()[<span style="color:#099">1</span>]<span style="color:#000;font-weight:bold">/</span><span style="color:#099">2</span>, s<span style="color:#000;font-weight:bold">=</span><span style="color:#0086b3">round</span>(conf_interval_max, <span style="color:#099">3</span>), color<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">&#39;r&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plot_dist(precision_reliable)
</span></span></code></pre></div><p><img src="01-unreliable-labels_5_0.png" alt="posterior distribution of precision_reliable, 95% confidence interval is 0.614-0.634"></p>
<p>We suspected the labels used to identify positives and negatives in the test set were inaccurate, so we reviewed randomly selected observed TPs and FPs, 100 from each group, and counted how many of them had incorrect labels.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>reviewed_tp <span style="color:#000;font-weight:bold">=</span> <span style="color:#099">100</span>
</span></span><span style="display:flex;"><span>mislabelled_tp <span style="color:#000;font-weight:bold">=</span> <span style="color:#099">7</span>
</span></span><span style="display:flex;"><span>reviewed_fp <span style="color:#000;font-weight:bold">=</span> <span style="color:#099">100</span>
</span></span><span style="display:flex;"><span>mislabelled_fp <span style="color:#000;font-weight:bold">=</span> <span style="color:#099">31</span>
</span></span></code></pre></div><p>How can we account for the mislabelling when calculating the posterior of precision?</p>
<p>One way would be to consider the true mislabelling rates to follow a certain probability distribution, and caculate the posterior based on the available evidence. Beta distribution again looks like a good candidate, seeing that it can be used to describe the probability of success – “success” meaning a given example being mislabelled, in our case. Again, we will assume uninformative prior, i.e. $Beta(1,1)$.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> <span style="color:#900;font-weight:bold">precision_with_unreliable_labels</span>(prior_tp<span style="color:#000;font-weight:bold">=</span>(<span style="color:#099">1</span>,<span style="color:#099">1</span>), prior_fp<span style="color:#000;font-weight:bold">=</span>(<span style="color:#099">1</span>,<span style="color:#099">1</span>)):
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">with</span> pm<span style="color:#000;font-weight:bold">.</span>Model() <span style="color:#000;font-weight:bold">as</span> model:
</span></span><span style="display:flex;"><span>        mislabel_rate_tp <span style="color:#000;font-weight:bold">=</span> pm<span style="color:#000;font-weight:bold">.</span>Beta(<span style="color:#d14">&#39;mislabel_rate_tp&#39;</span>, mislabelled_tp <span style="color:#000;font-weight:bold">+</span> prior_tp[<span style="color:#099">0</span>], reviewed_tp <span style="color:#000;font-weight:bold">-</span> mislabelled_tp <span style="color:#000;font-weight:bold">+</span> prior_tp[<span style="color:#099">1</span>])
</span></span><span style="display:flex;"><span>        mislabel_rate_fp <span style="color:#000;font-weight:bold">=</span> pm<span style="color:#000;font-weight:bold">.</span>Beta(<span style="color:#d14">&#39;mislabel_rate_fp&#39;</span>, mislabelled_fp <span style="color:#000;font-weight:bold">+</span> prior_fp[<span style="color:#099">0</span>], reviewed_fp <span style="color:#000;font-weight:bold">-</span> mislabelled_fp <span style="color:#000;font-weight:bold">+</span> prior_fp[<span style="color:#099">1</span>])
</span></span><span style="display:flex;"><span>        tp_actual <span style="color:#000;font-weight:bold">=</span> tp_observed <span style="color:#000;font-weight:bold">*</span> (<span style="color:#099">1</span><span style="color:#000;font-weight:bold">-</span>mislabel_rate_tp) <span style="color:#000;font-weight:bold">+</span> fp_observed <span style="color:#000;font-weight:bold">*</span> mislabel_rate_fp
</span></span><span style="display:flex;"><span>        fp_actual <span style="color:#000;font-weight:bold">=</span> fp_observed <span style="color:#000;font-weight:bold">*</span> (<span style="color:#099">1</span><span style="color:#000;font-weight:bold">-</span>mislabel_rate_fp) <span style="color:#000;font-weight:bold">+</span> tp_observed <span style="color:#000;font-weight:bold">*</span> mislabel_rate_tp
</span></span><span style="display:flex;"><span>        <span style="color:#000;font-weight:bold">return</span> pm<span style="color:#000;font-weight:bold">.</span>Beta(<span style="color:#d14">&#39;precision_unreliable&#39;</span>, tp_actual <span style="color:#000;font-weight:bold">+</span> <span style="color:#099">1</span>, fp_actual <span style="color:#000;font-weight:bold">+</span> <span style="color:#099">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plot_dist(precision_with_unreliable_labels())
</span></span></code></pre></div><p><img src="01-unreliable-labels_9_0.png" alt="posterior distribution of precision_unreliable, 95% confidence interval is 0.644-0.74"></p>
<p>In reality we probably have some prior expectation regarding the mislabelling rates. For example, we might believe it likely that less than half of the examples is mislabelled, or that positives are more likely to be incorrectly labelled as negatives than vice versa. Those beliefs can be encoded by the priors used for mislabelling rates.</p>
<p>Say, before reviewing the samples we were very certain the proportion of mislabelled FPs is small, but we were not so sure about the TPs. This can be modelled as appropriate shape parameters for the prior Beta distributions.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scipy.stats</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>prior_tp <span style="color:#000;font-weight:bold">=</span> (<span style="color:#099">1.4</span>, <span style="color:#099">1.8</span>)
</span></span><span style="display:flex;"><span>prior_fp <span style="color:#000;font-weight:bold">=</span> (<span style="color:#099">1</span>, <span style="color:#099">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x <span style="color:#000;font-weight:bold">=</span> np<span style="color:#000;font-weight:bold">.</span>linspace(<span style="color:#099">0</span>, <span style="color:#099">1.0</span>, <span style="color:#099">100</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#000;font-weight:bold">.</span>plot(x, scipy<span style="color:#000;font-weight:bold">.</span>stats<span style="color:#000;font-weight:bold">.</span>beta<span style="color:#000;font-weight:bold">.</span>pdf(x, <span style="color:#000;font-weight:bold">*</span>prior_tp), label<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">&#34;TP mislabelling prior&#34;</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#000;font-weight:bold">.</span>plot(x, scipy<span style="color:#000;font-weight:bold">.</span>stats<span style="color:#000;font-weight:bold">.</span>beta<span style="color:#000;font-weight:bold">.</span>pdf(x, <span style="color:#000;font-weight:bold">*</span>prior_fp), label<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">&#34;FP mislabelling prior&#34;</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#000;font-weight:bold">.</span>legend()
</span></span><span style="display:flex;"><span>plt<span style="color:#000;font-weight:bold">.</span>show()
</span></span></code></pre></div><p><img src="01-unreliable-labels_11_0.png" alt="prior Beta distributions for mislabelling rates, FP fast converging to 0, TP closer to uniform"></p>
<p>How does it affect the precision confidence interval?</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>plot_dist(precision_with_unreliable_labels(prior_tp, prior_fp))
</span></span></code></pre></div><p><img src="01-unreliable-labels_13_0.png" alt="posterior distribution of precision_unreliable with altered priors, 95% confidence interval is 0.633-0.726"></p>
<ul>
<li><a href="http://nbviewer.jupyter.org/github/mmakowski/datasci/blob/master/01-unreliable-labels.ipynb">source notebook</a></li>
</ul>
]]></content:encoded></item><item><title>Pink Soup</title><link>https://blog.mmakowski.com/cooking/pink-soup/</link><pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/pink-soup/</guid><description>From my childhood I remember that to maintain the staple lunch of a soup and a main course through the summer heatwaves, the soup had to be replaced with a cold, often milk-based concoction. It is a peculiarly eastern European thing. From Balkans to the Baltic, from tarator to cold borscht, you will find a multitude of summer recipes for a cold soup. Somehow, the westerners often find the idea repulsive.</description><content:encoded><![CDATA[<p>From my childhood I remember that to maintain the staple lunch of a soup and a main course through the summer heatwaves, the soup had to be replaced with a cold, often milk-based concoction. It is a peculiarly eastern European thing. From Balkans to the Baltic, from tarator to cold borscht, you will find a multitude of summer recipes for a cold soup. Somehow, the westerners often find the idea repulsive. During my recent visit in Poland we tried to serve that to an American nine-year-old, but she would have none of that: “Ewww! Pink soup! Gross!”.</p>
<p>An approximation of one of the variants of cold borscht can be quite easily achieved here, in the UK. In my house cold borscht was made primarily from beetroot and beets, with a little bit of soured cream to make it more, well, creamy. This will be an inversion, primarily based on dairy. If you can get your hands on kefir or maślanka those would be perfect, but if not, then a 1 kilo pot of <strong>natural yoghurt</strong> will do. Get a bunch of <strong>beetroot</strong>, peel and chop into 5 mm cubes, then cook in a very small amount of water – just enough to cover it initially – uncovered, so that the liquid reduces. Finely chop some <strong>radishes</strong> (next avocado!), a bunch of <strong>dill</strong> (essential), hard-boil a few <strong>eggs</strong>. The beetroot will take at least half an hour, once cooked let it cool. Finally mix the yoghurt, beetroot, including the liquid, radishes, dill. If you used yoghurt, then press a few cloves of <strong>garlic</strong>; that should not be necessary in case of kefir base, since kefir has a bite of its own. Before serving, cut the egg – once cooled, of course – into eight pieces, and also finely chop some <strong>cucumber</strong> and mix with the soup. The cucumber could also be added immediately, but I tend to keep the chłodnik – that’s a generic Polish name for those cold soups – in a fridge for a few days, and the cucumber could get mushy and unplesant if kept in the liquid for so long.</p>
<p>That American girl – she did not know what she missed.</p>
<p><img src="https://farm1.staticflickr.com/940/43651357802_6e1da1ffec_z.jpg" alt="the pink soup"></p>
]]></content:encoded></item><item><title>RAPIDS 2018</title><link>https://blog.mmakowski.com/technology/rapids-2018/</link><pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/rapids-2018/</guid><description>Having for the last year incessantly worried about the day when someone asks how we achieved a certain model metric, and not being able to answer or even replicate the result, I found the subject of Reproducibility and Provenance in Data Science mini-conference – RAPIDS in short – much to my interest. The solutions to the provenance tracking and reproducibility problem I came up with so far were hand-cranked and built on top of tools whose selection was influenced more by my personal preferences than the prevailing industry practices.</description><content:encoded><![CDATA[<p>Having for the last year incessantly worried about the day when someone asks how we achieved a certain model metric, and not being able to answer or even replicate the result, I found the subject of <em>Reproducibility and Provenance in Data Science</em> mini-conference – RAPIDS in short – much to my interest. The solutions to the provenance tracking and reproducibility problem I came up with so far were hand-cranked and built on top of tools whose selection was influenced more by my personal preferences than the prevailing industry practices. As a result, I looked forward to learning what the fellow data scientists in the broader community do.</p>
<p>Many of the speakers, independently, came to the conclusion that as far as machine learning model reproducibility is concerned, the three types of artifacts that need to be tracked and versioned are</p>
<ol>
<li>the code,</li>
<li>the data, and</li>
<li>the environment, meaning the configuration of the machine and all libraries used to train the model.</li>
</ol>
<p>There was also general consensus on the tools of choice for each of the three: Git for code, AWS S3 for data, Docker for environment. There are caveats with these: while everyone seemed happy with Docker, it was acknowledged that the Git workflow might not be well suited to fast iterations in a notebook (would we commit after every parameter change?), not to mention the infamous <code>git</code> command line user experience. As far as Amazon S3 is concerned, while it offers versioning, that is a fairly low-level feature and requires some abstraction layer for convenient use.</p>
<p>This is where dedicated data science workflow software comes in. The admission to the conference being free, one could expect it to be a showcase for some such product. Indeed, RAPIDS 2018 was put together by Dotmesh, vendor of an upcoming product called Dotscience, which coordinates Docker, Git and S3 to deliver a data, code, environment, model and performance tracking system. In its current form the system spins up a Docker container running Jupyter notebook, and tracks metadata about inputs and outputs of each notebook by the way of specially formatted cell output, for example:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DOTSCIENCE_INPUTS<span style="color:#000;font-weight:bold">=</span>[<span style="color:#d14">&#34;combined-houses&#34;</span>]
</span></span><span style="display:flex;"><span>DOTSCIENCE_OUTPUTS<span style="color:#000;font-weight:bold">=</span>[<span style="color:#d14">&#34;model&#34;</span>]
</span></span><span style="display:flex;"><span>DOTSCIENCE_LABELS<span style="color:#000;font-weight:bold">=</span>{<span style="color:#d14">&#34;model_type&#34;</span>: <span style="color:#d14">&#34;linear_regression&#34;</span>}
</span></span></code></pre></div><p>This is then parsed to build the provenance graph of data and models and to record experiments and their results. The provenance graph can be viewed in the web UI of Dotscience, and looks like this:</p>
<p><img src="dotscience-provenance-graph.jpg" alt="model provenance graph"></p>
<p>While the demonstrations of Dotscience relied on Jupyter, the relevant API can be invoked explicitly from scripts, if required. In fairness to the organisers, the demonstration and workshop on Dotscience did not take too much of the conference time, with the majority of the talks and workshops dedicated to general practices and more fundamental tools, such as Docker and Git.</p>
<p>A data scientist/devops engineer duo from Headstart recruitment company described the continuous model deployment setup they use. It involves automated training of the model in Circle CI, in a Docker container built based to the specification stored alongside the code in Git repository. Model metrics are then captured and compared with the production model, and if the results are satisfactory, a production Docker image is built, load-tested and deployed to production. The container exposes the model via simple Flask-based web API. That last solution was something I have heard proposed as a model deployment architecture that allows for mixing, for example, a JVM-based application with a Python-based model runtime environment. I have not been a fan, due to concerns about ownership and testing of the HTTP service code, but with data science and devops/software engineering working closely, it might be a convenient deployment model.</p>
<p>Finally, on the subject more removed from my day-to-day work, but fascinating nonetheless, a number of talks gave an insight into the challenges to research reproducibility in an academic setting. With the focus on “innovative” results and publications, academic system of incentives does not reward investment in reproducibility. As a consequence, many researchers, in particular those working in less technical fields such as humanities or social sciences, are not familiar with the available tooling – they exchange data via email, copy-and-paste formulae, data and graphs, store multiple copies on local hard drives, and so on. Resulting errors and lack of reproducibility can not only damage the reputation of science and lead to public mistrust in e.g. climate science and vaccinations, but can also have very dramatic and immediate impact on tens of millions of lives. Reinhart and Rogoff’s 2010 <a href="https://en.wikipedia.org/wiki/Growth_in_a_Time_of_Debt">Growth in a Time of Debt</a> paper was cited as one of the scientific arguments for austerity policies in early 2010s. Later, significant data processing errors were discovered in the Excel spreadsheet used by the researchers, to the extend that the data did not support the conclusions of the paper.</p>
<p>In summary, the sense in the community seems to be that while a number of targeted data science process products, such as Pachyderm, DVC, and now Dotscience, start competing for the share of the market, we are still best off with lower-level tools that have seen widespread use in software development and devops communities, and should wait on the sidelines until a clear leader emerges.</p>
]]></content:encoded></item><item><title>Kuzyni Any Rity</title><link>https://blog.mmakowski.com/travel/kuzyni-any-rity/</link><pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/kuzyni-any-rity/</guid><description>Alentejo Mam do krajów śródziemnomorskich sentyment. Kombinacja klimatu, jedzenia, kultury, architektury, usposobienia, a pewnie w głównej mierze jakieś abstrakcyjne, atrakcyjne pojęcie “śródziemnomorskości”, ciągną mnie w ten rejon. Do Portugalii zawsze jednak przyjeżdżam pod jakimś pretekstem. Poprzednio było to rodzinne spotkanie w okolicach Porto, teraz odwiedziny u pary przyjaciół, Any Rity i Davida, mieszkających w Castro Verde, niewielkim miasteczku w regionie Alentejo, dwie godziny jazdy na południe od Lizbony. To dobra baza do wycieczek nad morze, zarówno na zachodnie (Alentejo) jak i południowe wybrzeże (Algarve).</description><content:encoded><![CDATA[<h2 id="alentejo">Alentejo</h2>
<p>Mam do krajów śródziemnomorskich sentyment. Kombinacja klimatu, jedzenia, kultury, architektury, usposobienia, a pewnie w głównej mierze jakieś abstrakcyjne, atrakcyjne pojęcie “śródziemnomorskości”, ciągną mnie w ten rejon. Do Portugalii zawsze jednak przyjeżdżam pod jakimś pretekstem. Poprzednio było to rodzinne spotkanie w okolicach Porto, teraz odwiedziny u pary przyjaciół, Any Rity i Davida, mieszkających w Castro Verde, niewielkim miasteczku w regionie Alentejo, dwie godziny jazdy na południe od Lizbony. To dobra baza do wycieczek nad morze, zarówno na zachodnie (Alentejo) jak i południowe wybrzeże (Algarve). Mamy tylko półtora dnia, odwiedzamy więc Mértola, historyczne miasteczko nad rzeką Guadiana, a potem jedziemy na plażę w Monte Gordo, w pobliżu granicy z Hiszpanią. To podobno mało turystyczna miejscowość, w piątkowe popołudnie plażowiczów jest całkiem sporo, ale bez tłumów, woda przyjemna, na brzegu stosunkowo chłodny wiatr pozwala odpocząć od upału panującego w głębi lądu.</p>
<p>W Castro Verde co druga napotkana osoba to jakiś kuzyn Any Rity, albo przynajmniej przyjaciel. Wieczorem wybieramy się na festyn, który Ana Rita polecała jako miejsce gdzie jest “tanie piwo i muzyka”. Andrea (kuzyn) dość zagadkowo opisywał muzykę jako “tradycyjną, do zabawy, nie to co można usłyszeć w radiu i telewizji – pewnie w Polsce też takie coś macie”. Istotnie, pierwsze moje skojarzenie to coś jak Disco Polo, ale nie Polo, bo z lokalnym charakterem. Mieszkańcy dobrze się bawią, są stoiska z piwem, jedzeniem, ciastami, jest dmuchany zamek dla dzieci – jak to na południu, nikt nie oczekuje od najmłodszych, że po dobranocce będą zaraz w łóżku. Kuzyni zdają się dobrze tym miastem zarządzać, jest hub technologiczny, są maszyny do ćwiczenia w parku, lokalna społeczność wydaje się być dobrze zintegrowana i zaangażowana w sprawy miasta.</p>
<p><img src="https://live.staticflickr.com/1809/42312651434_612099e3cb_c.jpg" alt="https://live.staticflickr.com/1809/42312651434_612099e3cb_c.jpg"></p>
<h2 id="lizbona">Lizbona</h2>
<p>Znalazłem nam bardzo fajne mieszkanko na Alfamie. Przy jednej z tych wąskich uliczek, na pierwszym piętrze, schodami stromymi jak drabina, z widokiem na uliczkę z jednej strony, a na dachy Alfamy i Tagus z drugiej. Gustownie urządzone. Wieczorami głośno, bo na uliczkach imprezy, za to rano cichutko, nie słychać w ogóle miasta, tylko ptaki śpiewają. W Lizbonie też mamy tylko półtora dnia, więc nie spędzamy na kwaterze zbyt wiele czasu.</p>
<p>W sobotę odwiedzamy Castelo de São Jorge, z pięknymi widokami na wszystkie strony Lizbony i ciekawym obszarem prac archeologicznych, gdzie załapujemy się akurat na obchód z przewodnikiem. Rekonstrukcje mauretańskich domów, z zachowanymi oryginalnymi fragmentami dekoracji, bardzo ciekawe. Praça do Comércio podzielone na dwie części, na jednej strefa kibica, na drugiej LGBTQ pride, wszędzie atmosfera festynu. Wieczorem kolacja w restauracji Ponto Final w Almada, na południowym brzegu rzeki. Najpierw płynie się promem z Cais do Sodré, później kilometrowy spacer ścieżką nad samą wodą. W restauracji trzeba czekać na stolik, co umilamy sobie małą butelką vinho verde. Stoliki są nad samą wodą, zajadając sardynki możemy przyglądać się imponującemu mostowi 25 kwietnia, zachodzącemu słońcu oraz przypływowi. Bardzo malownicze miejsce.</p>
<p>Niedziela stoi pod znakiem kolejek. Chcieliśmy dostać sie do Belém komunikacją miejską, okazuje się, że metro tam nie jeździ, trzeba wziąć pociąg Cais do Sodré, a tam kolejka po bilety na pół godziny minimum. Wołamy więc taksówkę; aplikacja mytaxi jest trochę irytująca, bo nie da się łatwo skorygować miejsca na mapie, ale ogólnie działa. W Belém chcemy zjeść śniadanie w Pastéis de Belém, tam kolejka przed wejściem, ale każdy choć trochę ogarnięty przecież wie, że to na wynos, a w środku są setki stolików. Zagłębiamy się więc w niekończące się sale jadalne, a tam też kolejka – do stolików. Szczęśliwie posuwa się szybko, i przed południem jeszcze udaje nam się skonsumować śniadanie składające się z sześciu tradycyjnych ciasteczek z budyniem. Całkiem fajne, choć ja od ciasta francuskiego, czy z czego tam tych tart nie robią, wolę kruche.</p>
<p>Następnie klasztor Jerónimos, klejnot architektury manuelińskiej, podobno trzeba zobaczyć. Są dwie kolejki, jedna do kościoła, druga do klasztoru, stajemy w tej do klasztoru, na oko godzina czekania. Z nudów czytam recenzje na Google Maps, a te podpowiadają, że szybciej jest kupić bilety w muzeum archeologicznym – istotnie, jest tam trzecia kolejka, znacznie krótsza, przenosimy się więc, i bilety mamy już za pół godziny. Oglądamy zatem muzeum, skoro kupiliśmy i na nie bilety, a później klasztor i kościół. W klasztorze do zwiedzania jest właściwie tylko krużganek – dekoracje istotnie fenomenalne, lecz proporcje rozmiaru obiektu do czasu oczekiania w kolejce po bilet pozostawiają pewien niedosyt. Mimo tego na pewno warto było pójść.</p>
<p>W Belém jest też stojąca w wodzie wieża z której podobno jest ładny widok, oraz pomnik odkrywców, z którego szczytu również można podziwiać panoramę. Do obu obiektów były (niespodzianka) kolejki, postanowiliśmy się więc zadowolić widokiem z zewnątrz. Później, w Baixa chcieliśmy się przejechać windą z początku XX w., ale też kolejka nas zniechęciła. Bez kolejki, i z miejscami siedzacymi, udało się nam za to przejechać tramwajem linii 28E kluczącej ciasnymi i stromymi uliczkami Alfamy. Kolejki również nie było w Ginginha do Carmo, kantorku pod schodami, gdzie serwują likier wiśniowy w czekoladowych kubeczkach. W cenie są dwa polania, po drugim można kubeczek zjeść.</p>
<p>Włoskie jedzenie w Portugalii to dość podejrzany pomysł, ale Ana Rita i David tak nam chwalili Casanostra w Bairro Alto, że tam wybieramy się na ostatnią kolację. Linguine w sosie cytrynowym rzeczywiści bardzo dobre, jak i czerwone house wine, które choć portugalskie, przypominało mi wina, którymi nas raczono na Sardynii. Hitem wieczoru jest jednak deser: tort lodowy z gorącym sosem czekoladowym.</p>
<p>Kolejki czy nie, Lizbona to strasznie fajne miasto.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/ZotZ73">Castro Verde &amp; Lisbon</a></p>
]]></content:encoded></item><item><title>Franklin, tygodnie 7-9</title><link>https://blog.mmakowski.com/travel/franklin-tygodnie-7-9/</link><pubDate>Sun, 10 Jun 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/franklin-tygodnie-7-9/</guid><description>Konie, joga i Trump The Log House się prawie nie zmienił, woda wciąż wali siarą, zasięgu komórki wciąż nie ma, nadal jest to miejsce, które uwielbiam. Trochę go owady zżerają, i więcej gości – podobno czerwiec to sezon. Najpierw pojawiają się Christie i Larry, który jak nie wie co powiedzieć, to mówi “rock’n’roll”. Przywieźli na weekend osiem koni – na jednym się przejechałem, było fajnie. Przez dwa tygodnie pod dwójką urzęduje Kenneth, sprzedawca materacy, któreg prawie nie widuję, bo pracuje siedem dni w tygodniu, wstaje po tym jak wyjdę, a wraca jak już leżę w łóżku.</description><content:encoded><![CDATA[<h2 id="konie-joga-i-trump">Konie, joga i Trump</h2>
<p>The Log House się prawie nie zmienił, woda wciąż wali siarą, zasięgu komórki wciąż nie ma, nadal jest to miejsce, które uwielbiam. Trochę go owady zżerają, i więcej gości – podobno czerwiec to sezon. Najpierw pojawiają się Christie i Larry, który jak nie wie co powiedzieć, to mówi “rock’n’roll”. Przywieźli na weekend osiem koni – na jednym się przejechałem, było fajnie. Przez dwa tygodnie pod dwójką urzęduje Kenneth, sprzedawca materacy, któreg prawie nie widuję, bo pracuje siedem dni w tygodniu, wstaje po tym jak wyjdę, a wraca jak już leżę w łóżku. Na drugi weekend robi sie pełno, Lynda, Erin i Kathryn przyjechały na kurs więziennej jogi, a Peggy – jedna z pierwszych kobiet-pilotów w Kanadzie – dla towarzystwa. Fajnie się z całą czwórką rozmawia wieczorami, pierwszy raz mam do czynienia z elektronicznym aplikatorem medycznej marihuany. W końcu Brandon – spec od liczenia, ile ziemi trzeba wywieźć z placu budowy. Fan Trumpa, zwolennik zamknięcia Hillary Clinton, przeciwnik dostępu do aborcji. Dowiaduję się od niego o teorii, jakoby ten samolot, który uderzył w Pentagon dziewiątego września 2001 roku, tak akurat trafił, że zniszczył dokumenty na temat bilionów dolarów, które w konsekwencji ktoś sobie przywłaszczył. Towarzystwo ciekawe, ale brakuje mi trochę zeszłorocznej pustelni.</p>
<p><img src="https://live.staticflickr.com/1758/42695364411_8a912ea615_c.jpg" alt="https://live.staticflickr.com/1758/42695364411_8a912ea615_c.jpg"></p>
<p>W ośrodku – “retreat” – wciąż nie wiem jak się zachować. Mili bardzo ludzie, tylko trochę nawiedzeni, nie jestem w stanie nic mądrego powiedzieć na temat “mit o Persefonie a rolnictwo ekologiczne”. Grają na gitarach, bębnach i fletach, śpiewają. Jednego razu cała podłoga zastawiona jest misami z brązu – przyjechał Tybetańczyk, zbiera na szkołę muzyczną dla tybetańskich uchodźców w Indiach.</p>
<h2 id="impossible-hot-chicken">Impossible hot chicken</h2>
<p>Powoli wyczerpuję zasoby rozrywek oferowanych przez Nashville i okolice. Zostało jeszcze <em>Country Music Hall of Fame</em>, gdzie nie ciągnie mnie specjalnie, ale prawie się tam wybrałem, żeby przeczekać ulewę. Prawie, bo parkomat zażądał $35, więc powiedziałem mu “fuck off” i pojechałem na Prince’s hot chicken.</p>
<p>Jak pytam znajomych gdzie zjeść hot chicken, ten najbardziej nashvillski z nashvillskich przysmaków, wszyscy najpierw odpowiadają “Hattie B!”, ale później dodają, że jeśli chcę takiego <em>prawdziwego</em>, to Prince’s. Lokal otwarty jest w godzinach 14-4, pojawiam się trochę przed otwarciem, a przed drzwiami już czeka kolejka na kilkadziesiąt osób. Dotarcie do okienka zajmuje mi 45 minut, później jeszcze 20 minut czekania na jedzenie. Wnętrze obskurne, kilka stolików, siadam przy jednym z moją papierową torbą zawierającą smażonego kurczaka, sałatkę coleslaw oraz trzy kromki chleba służące do odsączania tłuszczu. Nad głową tłum składający się z tych stojących jeszcze w kolejce oraz oczekujących już na jedzenie. Mięso bardzo gorące, bardzo tłuste, dość pikantne (zamówiłem wersję “hot”, trzy na pięciostopniowej skali), ale nie w stopniu, który zupełnie niweluje pozostałe wrażenia. Jem rękami, straszny syf się robi, później nie ma gdzie umyć, bo kibel zajęty. Atmosfera niepowtarzalna, jedzenie znośne, ale nie wiem o co to halo, i kolejka na trzy kwadranse. Drugi raz nie odwiedzę – wolę Edley’s, gdzie też można dostać hot chicken, a także mostek wołowy – znacznie lepszy.</p>
<p>Wśród znajomych i nie tylko szerzy się wegetarianizm i weganizm, a mi też nie w smak jest zarówno masowe zarzynanie zwierząt jak i destrukcyjny wpływ przemysłowej hodowli na środowisko, wybieram się więc na impossible burger. Jest to hamburger zrobiony z substancji pochodzenia roślinnego, tak przetworzonych, że mają przypominać mięso – łącznie z czerwoną wydzieliną imitującą krew. Firma Impossible Foods dostarcza to do kilkudziesięciu knajp w USA, ja trafiam do Hopdoddy przy dwudziestej pierwszej alei. Substytut okazuje się znakomity, gdybym nie wiedział co to, uznałbym za bardzo przyzwoitego, wołowego burgera. Jest jeszcze nadzieja dla naszej planety.</p>
<h2 id="wino-i-śpiew">Wino i śpiew</h2>
<p>W poszukiwaniu weekendowych atrakcji udaję się do winnic w Arrington. To popularne miejsce na pikniki, w weekendy czasem można tu też posłuchać muzyki na żywo. Tym razem jest jazz na dzedzińcu i bluegrass w stodole, grać mieli od 14, ale zaczynają dopiero o 16, zaś po kwadransie zespół bluegrassowy musi się zwijać, bo zaczyna padać, a scena przed stodołą jest pod gołym niebem. Nie grali fajnie, nie jest mi szkoda. Na dziedzińcu jest zadaszenie, ale pod nim pełno ludzi, więc jazzu nie posłuchałem. Byłem za to na degustacji. W Arrington hodują różne gatunki winogron, ale większość win robią mieszając własne winogrona ze sprowadzanymi. Próbuję dwóch białych i dwóch czerwonych. Sauvignon Blanc i Riesling oba wodniste – gdzie im tam do nowozelandzkich czy niemieckich odpowiedników. Takie zresztą miałem dotychczas wrażenia ze wszystkich amerykańskich białych win, jakich próbowałem – jakby rozcieńczone wodą 1:1. Ciekawiej się robi przy czerwonych. Antebellum leżakowane jest w beczkach po whiskey, z tego pewnie ma trochę dymny, trochę skórzany smak, ostry, zmaderyzowany. Nie jest może super smaczne, ale na pewno oryginalne. KB 915 to Cabernet Sauvignon ze specjalnie wybranych winogron, wyższa półka. Bardzo ciężkie, czuć jak garbniki znieczulają jamę ustną. Chyba bardzo dobre, ale pewnie powinno trochę odstać.</p>
<h1 id="--">* * *</h1>
<p>Spośród wielu moich słabości jednej jestem w pełni świadom: sprzęt turystyczny, a zwłaszcza plecaki. W zeszłym roku jeden strasznie mi się spodobał, ale niezwykłym wysiłkiem woli powstrzymałem się przez zakupem. W tym roku przecena w REI to już zbyt wiele ma moje skromne możliości, kupiłem więc ów upatrzony rok temu model: oliwkowy North Face Kaban.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/3N53uN">Franklin (June 2018)</a></p>
]]></content:encoded></item><item><title>Machine Learning in Three Pages</title><link>https://blog.mmakowski.com/technology/machine-learning-in-three-pages/</link><pubDate>Sat, 19 May 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/machine-learning-in-three-pages/</guid><description>A supervised machine learning problem can be viewed as approximating an unknown target function $f:\mathcal{X}\rightarrow \mathcal{Y}$ by constructing a function $\hat{f}:\mathcal{X}\rightarrow \mathcal{Y}$ using a set of $k$ training examples $T=\{\left&amp;lt;X_i, Y_i\right&amp;gt; | i=1..k, X_i\in\mathcal{X}, Y_i=f(X_i)\}$. The function $\hat{f}$ is referred to as a model. The goal of machine learning is to construct the model in such a way that its results on $X\in\mathcal{X}\setminus T$ are close – according to some measure – to $f(X)$.</description><content:encoded><![CDATA[<p>A supervised machine learning problem can be viewed as approximating an unknown target function $f:\mathcal{X}\rightarrow \mathcal{Y}$ by constructing a function $\hat{f}:\mathcal{X}\rightarrow \mathcal{Y}$ using a set of $k$ training examples $T=\{\left&lt;X_i, Y_i\right&gt; | i=1..k, X_i\in\mathcal{X}, Y_i=f(X_i)\}$. The function $\hat{f}$ is referred to as a <em>model</em>. The goal of machine learning is to construct the model in such a way that its results on $X\in\mathcal{X}\setminus T$ are close – according to some measure – to $f(X)$. It is assumed that the training set $T$ is drawn from a fixed, but unknown, probability distribution. Under typical assumptions, the machine learning model trained on this set is only expected to perform well on previously unseen samples drawn from the same distribution.</p>
<p>For instance, if we consider the problem of predicting whether a source code file contains a security vulnerability, then the input space $\mathcal{X}$ is the set of all source code files and the output space $\mathcal{Y}$ is the set of class labels ${\mathrm{vulnerable}, \mathrm{not\ vulnerable}}$; the function $f$ assigns to each source file its true vulnerability status. Given a training set $T$ of source files with their true vulnerability label we would like to construct a model $\hat{f}$ that, given any source file, accurately predicts whether the file contains a vulnerability.</p>
<p>The model $\hat{f}$ is chosen from a hypothesis space $\mathcal{H}$. The size of this space determines the <em>model capacity</em>, that is the range of target functions $f$ a model can accurately approximate. While high capacity allows the model to accurately fit the training data, that is not always desirable, since it might lead to a phenomenon known as <em>overfitting</em>, where the model yields accurate predictions for the elements of the training set, but generalises poorly to previously unseen data. As an informal example, restricting $\mathcal{H}$ to linear functions might make it difficult to accurately fit the training set $T$; expanding $\mathcal{H}$ to polynomials of degrees up to 10 could provide a model that can perfectly fit all of the points in $T$, but in doing so might also fit the noise inherent in the training sample.</p>
<p>Controlling the model capacity is one of the greatest challenges in applied machine learning. It can be achieved not only by restricting the family of functions from which the model is chosen, but also by placing constraints on the chosen models that promote certain functions (usually considered “simpler” according to some metric) over alternatives. For example, in case of polynomials, a constraint might be placed that prioritises those with lower sum of coefficients, or those where the largest number of coefficients is set to zero. Placing such constraints on the models is known as <em>regularisation</em>.</p>
<p>The task of constructing the model $\hat{f}$ is typically performed in two steps. First, the family of models, that is the hypothesis space $\mathcal{H}$, is chosen – in applied machine learning this step is sometimes referred to as <em>model selection</em>. All models in $\mathcal{H}$ can be represented as $\hat{f}(X, \alpha)$, where $X\in\mathcal{X}$ and $\alpha$ is a parameter that determines the specific member of $\mathcal{H}$. The second step then involves finding the $\alpha$ that minimises a certain <em>loss function</em> $L(\alpha)$, where the choice of the loss function is task-specific. This second step is often called <em>model training</em> or <em>model fitting</em>.</p>
<p>For instance, consider the case where $\mathcal{X}$ and $\mathcal{Y}$  are both the set of real numbers $\mathbb{R}$ and in the first step of model construction $\mathcal{H}$ has been restricted to the linear functions $\mathbb{R}\to\mathbb{R}$. Each member of $\mathcal{H}$ can be represented as $\hat{f}(X, \left&lt;a, b\right&gt;) = aX+b$; the pair $\left&lt;a,b\right&gt;$ is the parameter $\alpha$ that uniquely identifies a member of $\mathcal{H}$. A loss function commonly used in such scenario is the squared error:</p>
<p>$$
L(\left&lt;a,b\right&gt;) = \sum\limits_{\left&lt;X,Y\right&gt;\in T}\left(\hat{f}(X, \left&lt;a,b\right&gt;)-Y\right)^2
$$</p>
<p>and the choice of optimal parameters involves finding the minimum of this function.</p>
<p>In general, the task of model training typically involves function optimisation. A particularly widely used algorithm in this context is <em>gradient descent</em>, where the gradient $\nabla L$ is used to determine the direction towards the $\alpha_0$ that minimises $L(\alpha)$. It should be noted that the tractability of optimisation depends on the specific loss function. Complex models can give rise to complex loss functions that, even if differentiable, can have multiple local minima, saddle points or flat regions, which make them difficult to optimise.</p>
<p>A wide range of model families is discussed in the literature and used in practice. Below we will survey a few of the widely used families, with particular focus on those applicable to <em>classification</em> problems, where the output space $\mathcal{Y}$ is a finite set of class labels. Unless indicated otherwise, we will assume that $\mathcal{X}=\mathbb{R}^n$, and we will refer to individual components of input vectors $X$ as <em>features</em>.</p>
<h2 id="logistic-regression">Logistic Regression</h2>
<p>A class of models used for binary classification, with the two classes represented as $0$ and $1$. The models are functions of the form</p>
<p>$$
\hat{f}(X, \theta)=\frac{1}{1+e^{-\theta^T X}}
$$</p>
<p>— the logistic sigmoid functions, where the vector of coefficients (weights) $\theta\in\mathbb{R}^n$ represents relative significance of each feature when determining the output class<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>. The range of $\hat{f}$ is the interval $(0,1)$, and the result can be interpreted as the confidence that the input $X$ belongs to class $1$; it is mapped to the output space $\mathcal{Y}={0,1}$ by rounding the output to the nearest whole number<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. Logistic regression is one of the fundamental classification approaches thanks to relatively straightforward interpretation and availability of efficient training algorithms. It is considered a <em>linear classifier</em>, since the decision boundary $\hat{f}(X, \theta) = \frac{1}{2}$ is the solution of an equation $\theta^T X=0$ that is linear with respect to $X$. Linear binary classifiers can be understood as hyperplanes that separate the space $\mathbb{R}^n$ into two regions, corresponding to the two classes. Such classifiers often do not perform well if the classes are not linearly separable.</p>
<h2 id="naive-bayes">Naive Bayes</h2>
<p>The Bayes’s conditional probability theorem, $P(Y|X)=\frac{P(X|Y)P(Y)}{P(X)}$, gives rise to a classifier family where $Y$ is the predicted class and $X$ is the input. The conditional probability $P(Y|X)$ is proportional to joint probability $P(Y, X)$, which, under the assumption that the features $x_1,\dots x_n$ in $X$ are independent, can be rewritten as $P(Y)\prod_{i=1}^n P(x_i|Y)$. A classifier can then be constructed by enumerating the joint probabilities for all possible output classes $Y\in\mathcal{Y}$ and the input $X$, and choosing the class with the highest probability:</p>
<p>$$
\hat{f}(X)=\mathrm{argmax}_ {Y\in\mathcal{Y}}P(Y)\prod_{i=1}^n P(x_i|Y)
$$</p>
<p>The probabilities $P(Y)$ and $P(x_i|Y)$ can be estimated from the training data. While the independence assumption typically does not hold in real world applications (hence the “naive” in the name), this classification approach has proven surprisingly effective in domains such as spam detection. This efficacy, coupled with efficient training algorithm, makes naive Bayes one of the baseline classification methods.</p>
<h2 id="support-vector-machine-svm">Support vector machine (SVM)</h2>
<p>A learning algorithm that constructs a linear classifier whose hyperplane is chosen to maximise the gap between the two classes. For this reason it is called a <em>large margin</em> classifier. It can be extended to nonlinear classification using so called <em>kernel trick</em>, where the input space $\mathcal{X}$ is implicitly mapped through a nonlinear kernel function to a higher dimensional $\mathcal{Z}$. A linear hyperplane learned in $\mathcal{Z}$ then corresponds to a nonlinear boundary in $\mathcal{X}$. Support vector machine provides state-of-the-art classification performance in many applications.</p>
<h2 id="random-forest">Random forest</h2>
<p>A <em>decision tree</em> is a model that represents the class prediction process as a tree where the inner nodes specify conditions on the input features – for instance, the value of a specific feature being in a certain range – and a subtree is chosen depending on whether the condition is met; the leaf nodes specify which class is predicted. Decision tree learning can lead to highly irregular decision boundaries, and as a result is prone to overfitting. To address this, an <em>ensemble</em> of such trees can be constructed, where each tree is trained on a different subset of the training set $T$ – an approach known as <em>bagging</em>. The class prediction of a random forest classifier is then based on an average vote of all trees in the ensemble.</p>
<h2 id="neural-network">Neural network</h2>
<p>A single in a neural network can be understood as a function $h(X) = g(\theta^TX)$, where $X$ is the input vector, $\theta$ is a weight vector and $g$ is a nonlinear <em>activation function</em> $\mathbb{R}\to\mathbb{R}$; popular activation functions include the logistic function, hyperbolic tangent and $\mathrm{ReLU}(x)=\max(0,x)$. A neural network <em>layer</em> is then a sequence of $m$ such neurons, each with its own weight vector $\theta_i$. If we denote by $W$ an $m\times n$ matrix whose rows are the weight vectors $\theta_i^T$, then the output of such layer is a vector in $\mathbb{R}^m$ and can be represented as $g(W X)$. A (feedforward) neural network is a sequence of consecutive layers, where the output of each layer is used as the input to the subsequent one. Such network can be used for binary classification by having the final layer contain a single neuron with logistic activation function; the output value of this neuron can then be interpreted in the same way as in the case of logistic regression. As a matter of fact, a single layer, single neuron network with logistic activation function is equivalent to logistic regression. Stacking of layers allows neural networks to approximate arbitrarily complex functions.</p>
<h2 id="recurrent-neural-network">Recurrent neural network</h2>
<p>In certain machine learning problems the input $X$ is most conveniently represented not as a single vector in $\mathbb{R}^n$, but as an unbounded sequence of such vectors. For instance, when processing audio, each vector can represent the frequency spectrum histogram in a unit of time; when classifying text, each vector can encode a single token. Recurrent neural network is formed by extending a feedforward neural network with the concept of discrete time, and with each neuron’s output not only providing an input to the subsequent layer, but also to the same layer in the next time step. The output of a single layer of size $m$ in time step $t$ can be described as $H_t = g(W X_t + V H_{t-1})$, where $X_t$ is the layer input at time step $t$ and $V$ is an $m\times m$ weight matrix corresponding to the connections through time; the initial state $H_0$ can be given or learned. A recurrent network can process sequential input by taking the vectors in the sequence as the inputs to the network in consecutive time steps. The network produces a single output in each time step. If the problem calls for a single class prediction at the end of the sequence then all of those outputs except for the final one can be discarded; since prior network states feed into future time steps, this last output is a function of the entire sequence of inputs.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>The notation $\theta^T$ represents a transposition from a column to row vector; therefore the product $\theta^TX$ is a scalar.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>Such rounding corresponds to the choice of the value $\frac{1}{2}$ as the <em>decision boundary</em>, or <em>classification threshold</em>. In practice other thresholds can be used if appropriate for a given task.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>Wywiad z rewolucjonistą</title><link>https://blog.mmakowski.com/travel/wywiad-z-rewolucjonist%C4%85/</link><pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wywiad-z-rewolucjonist%C4%85/</guid><description>Nazwa: Dulux Trade London Revolution
Co? Charytatywny rajd rowerowy dookoła Londynu: 300 km w dwa dni.
Limit czasu: około 12 godzin na każdy z dwóch odcinków.
Przesłanki: kiedyś, chyba ze trzynaście lat temu, przejechałem na rowerze trochę ponad 200 km w trzy dni, i było fajnie.
Przygotowanie: pętla przez Upminster i Brentwood, około 50 km w 4 godziny; wycieczka do Bradwell on Sea, około 110 km w 11 godzin; wycieczka do Sevenoaks, około 120 km w 11 godzin.</description><content:encoded><![CDATA[<p><strong>Nazwa:</strong> Dulux Trade London Revolution</p>
<p><strong>Co?</strong> Charytatywny rajd rowerowy dookoła Londynu: 300 km w dwa dni.</p>
<p><strong>Limit czasu:</strong> około 12 godzin na każdy z dwóch odcinków.</p>
<p><strong>Przesłanki:</strong> kiedyś, chyba ze trzynaście lat temu, przejechałem na rowerze trochę ponad 200 km w trzy dni, i było fajnie.</p>
<p><strong>Przygotowanie:</strong> pętla przez Upminster i Brentwood, około 50 km w 4 godziny; wycieczka do Bradwell on Sea, około 110 km w 11 godzin; wycieczka do Sevenoaks, około 120 km w 11 godzin.</p>
<p><strong>Noclegi:</strong> przed startem, w obskurnym hostelu w Edmonton; między odcinkami, w dość podłym pubie w Windsor.</p>
<p><strong>Wyżywienie:</strong> kanapki i czekolada 90% podczas jazdy pierwszego dnia; befsztyk na kolację pierwszego dnia; kanapki, ciasteczka Digestive z ciemną czekoladą i banany drugiego dnia.</p>
<p><strong>I sprawdziło się?</strong> Szczególnie ciasteczka. Idealne przed stromym podjazdem.</p>
<p><strong>No właśnie, jak z podjazdami?</strong> Lepiej niż się spodziewałem. Pierwszego dnia sporo pchałem rower pod górę, drugiego większość wzgórz pokonałem w siodle, bardzo powoli, ale skutecznie.</p>
<p><strong>Skoro powoli, to jaki był czas?</strong> 11 godzin każdego dnia.</p>
<p><strong>Co było najgorsze?</strong> Chyba połącznie deszczu z ruchem samochodowym i stresem, że trzeba się spieszyć żeby zmieścić się w limicie czasu. No i dreszcze plus gorączka wieczorem po pierwszym etapie.</p>
<p><img src="https://farm1.staticflickr.com/975/40393552520_c3d9939137_z.jpg" alt="https://farm1.staticflickr.com/975/40393552520_c3d9939137_z.jpg"></p>
<p><strong>Drugi dzień:</strong> stwierdziłem, że spróbuję, pojadę powoli i najwyżej wycofam się po drodze. Okazało się, że było całkiem przyjemnie i udało się dojechać przed zamknięciem mety.</p>
<p><strong>Nowe doświadczenie:</strong> gdy wszyscy jadący na tradycyjnych rowerach mnie wyprzedzali, krzyczeli słowa zachęty i uznania. Podczas rajdu uczestnicy tworzą społeczność, pomagają sobie na wzajem i się wspierają. To bardzo miłe.</p>
<p><strong>Specjalne podziękowania:</strong> Z., za to, że pozbierała mnie do kupy po pierwszym dniu, gdy tylko chciałem siedzieć pod kołdrą i nigdzie dalej nie jechać.</p>
<p><strong>Jeszcze raz?</strong> może za parę lat, jak już zapomnę jak było momentami ciężko. I jeśli będę miał z kim jechać.</p>
]]></content:encoded></item><item><title>Przyroda i arystokracja</title><link>https://blog.mmakowski.com/travel/przyroda-i-arystokracja/</link><pubDate>Wed, 16 May 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/przyroda-i-arystokracja/</guid><description>W zeszłym roku Z. wpadła na pomysł, żeby kupić samochód i robić sobie długoweekendowe wypady do parków narodowych. No więc kupiłem, trzynastoletniego Forda StreetKa, któremu po pięciu minutach jazdy wystrzeliła uszczelka z pod głowicy, tak że później bałem się nim jechać dalej niż 10 mil, i ostatecznie sprzedałem go dwóm Rumunom za 300 funtów. Do parków tym niemniej jeździmy, wynajętymi autami, co ma same prawie zalety: wychodzi taniej, samochody są nowiutkie, i można sobie zrobić testy jak się z różnymi autami żyje.</description><content:encoded><![CDATA[<p>W zeszłym roku Z. wpadła na pomysł, żeby kupić samochód i robić sobie długoweekendowe wypady do parków narodowych. No więc kupiłem, trzynastoletniego Forda StreetKa, któremu po pięciu minutach jazdy wystrzeliła uszczelka z pod głowicy, tak że później bałem się nim jechać dalej niż 10 mil, i ostatecznie sprzedałem go dwóm Rumunom za 300 funtów. Do parków tym niemniej jeździmy, wynajętymi autami, co ma same prawie zalety: wychodzi taniej, samochody są nowiutkie, i można sobie zrobić testy jak się z różnymi autami żyje. Ostatnio dostaliśmy Mini Cooper Countryman w kolorze kremowym, śliczny samochód z dwuskrzydłowymi drzwiami z tyłu i przydającymi retro-uroku owalnymi detalami. Wszystko to trochę przerost formy nad treścią, którego kulminacją jest podświetlenie wielkiej, okrągłej konsoli centralnej, z kolorem zmieniającym się w zależności od aktualnej funkcji wyświetlacza oraz humoru autka. Choć jeździło się nim nawet nieźle, nie kupiłbym sobie takiego – może i urodziwy, ale mało ekonomiczny, <a href="Blog/Travel/Na%20po%C5%82udnie%20od%20Nashville.md">Prius</a> wciąż jest dla mnie na topie.</p>
<h2 id="--">* * *</h2>
<p>Wyjazd ten dostałem w prezencie urodzinowym od Z., ona pozałatwiała zakwaterowanie i wymyśliła co kiedy robimy. W odróżnieniu od poprzednich wyjazdów do parków narodowych, które składały się w głównej mierze z forsownych marszów przez mokradła, w South Downs skupiliśmy się w większej mierze na dzedzictwie kulturowym i okazach przyrodniczych. Niektóre z atrakcji okazały się nadspodziewanie efektowne. Chronologicznie:</p>
<p><strong>Kaplica w Lancing College</strong> ma najwyższe w Anglii sklepienie. Gdyby nie to, że jest mało zabrudzona i że główne wrota wciąż są w budowie, nie zorientowałbym się, że to wiktoriańskie neo, a nie oryginalny gotyk. Efektowny obiekt, można go obejrzeć w 15 minut i jechać dalej. Sam koledż jest bardzo ładnie położony na wzgórzu i idealnie pasuje do stereotypu prestiżowej, prywatnej szkoły średniej z internatem, ale poza kaplicą nie ma w nim nic do zwiedzania.</p>
<p><strong>Zamek w Arundel</strong> to siedziba księcia Norfolk (skoro Norfolk, to czemu siedzi w West Sussex?), jego najstarsza część pochodzi z XI wieku, z czasów normańskich, zaś najnowsza jest wiktoriańska. Budynek jest okazały – na obejrzenie części otwartej dla zwiedzających warto poświęcić z półtorej godziny – a widoki z murów jak z bajki: zabytkowe miasteczko, w oddali wijąca się zakolami wśród zielonych wzgórz rzeka – po prostu idylla.</p>
<p><img src="https://live.staticflickr.com/944/27268273847_e540a6c862_c.jpg" alt="https://live.staticflickr.com/944/27268273847_e540a6c862_c.jpg"></p>
<p>Większą jeszcze atrakcją okazały się otaczające zamek ogrody, a w szczególności część położona w sąsiedztwie katedry, gdzie twórczo zakomponowane palmy, żywopłoty i łany tulipanów zrobiły na nas obojgu duże wrażenie. Chyba najciekawsze miejsce jakie odwiedziliśmy podczas tego wyjazdu.</p>
<p>W mieszczącym się na mokradłach <strong>rezerwacie ptaków Pullborough Brooks</strong> widzieliśmy pisklaka sowy – ledwo co, bo ukryty był w koronie drzewa – oraz dzięcioła zielonego. Był akurat sezon na słowiki, ale myśmy żadnego ani nie widzieli, ani nie słyszeli. W rozmieszczonych co kilkaset metrów kryjówkach do obserwacji ptaków można spokojnie spędzić z pół dnia, wpatrując się w łąki i wypatrując przez lornetkę (można wypożyczyć za £3) ciekawych okazów.</p>
<p><strong>Petworth House</strong> jest, podobnie jak zamek w Arundel, posiadłością jakiegoś arystokratycznego rodu. Miejsce jest znane z dużej kolekcji pejzarzy Turnera, z których część została stworzona jako część całościowego projektu wystroju sal pałacowych. Warta obejrzenia jest też wielka klatka schodowa, klasycystycznie wymalowana od podłogi do sufitu. Z. przyciągnęła tu wystawa o Elizabeth Illive, malżonce pana tej posiadłości, która uznawana była za niezwykle inteligentną – dostała między innymi medal królewskiego towarzystwa technicznego za ulepszoną wersję dźwigni do podnoszenia głazów w kamieniołomach. Wystawa składała się z jednej salki, w której umieszczono kilka plansz z biografią pani Illive oraz rekonstrukcję laboratorium, która owa zaradna kobieta zbudowała w celu prowadzenia eksperymentów nad wartością odżywczą ziemniaków.</p>
<p>Największą atrakcją sąsiadującego z Petworth House <strong>Petworth Deer Park</strong> nie są wcale jelonki, których setka przynajmniej pasie się na rozległych łąkach w centrum parku, lecz wiekowe drzewa – dęby i kasztany jadalne. Najstarszy dąb ma około tysiąca lat, jest bardzo gruby i wygląda na całkiem żywy. Na stronie National Trust znaleźć można opis trasy przechodzącej obok wszystkich godnych uwagi drzew, warto zarezerwować sobie na nią około dwóch godzin.</p>
<p>Tuż obok Brighton leży polodowcowa dolinka <strong>Devil’s Dyke</strong>. Ze szczytu wzgórza, gdzie mieści się spory parking i skąd rozciąga się piękna perspektywa South Downs, zaczyna się szereg tras. Najdłuższa pętla zajmuje około dwóch godzin, w połowie drogi odpocząć można w kawiarence na zabytkowej farmie. Dolinka jeste efektowna, o trawiastych zboczach i regularnym profilu litery “v”.</p>
<p><img src="https://live.staticflickr.com/969/42139163071_982f880aec_c.jpg" alt="https://live.staticflickr.com/969/42139163071_982f880aec_c.jpg"></p>
<p><strong>Brighton Pavillon</strong> to kuriozalny pałac, zlepek kolonialnych, indyjsko-chińskich inspiracji, pokazujący jak Europejczycy z początku XIX wieku wyobrażali sobie orient. Kazał go sobie wybudować książę regent Jerzy, żeby spędzać czas nad morzem i mieć gdzie ukrywać swoje rosnące brzucho. Gdy tron przejęła królowa Wiktoria, pawilon nie przypadł jej do gustu, bowiem pospólstwo miało do niego zbyt łatwy dostep – pałac mieści się na miejskim skwerze, w otoczeniu kamienic – a na domiar złego morza z niego nie widać, pomimo że odległe jest o raptem 200 metrów. Wyprowadziła się więc do zamku w Windsor, zaś pawilon sprzedała miastu Brighton, które używało go do celów reprezentacyjnych, jako szpitala podczas Pierwszej Wojny Światowej, a kilkadziesiąt lat temu zaczęło go restaurować i udostępniać zwiedzającym. Kicz to czy geniusz trudno powiedzieć, ale zobaczyć trzeba.</p>
<h2 id="---1">* * *</h2>
<p>Jak widać, w cztery dni zaliczyliśmy sporo interesujących wycieczek, a i tak nie wymieniłem wszystkich – bardzo udany był to wyjazd, słowa uznania należą się Z. za plan i realizację. Co jeszcze? Nasza kwatera w King’s Arms w Fernhurst przyjemna, choć trochę słychać było przebiegającą obok A286. Na miejscu jedzenie pubowe (befsztyk bardzo smaczny) oraz, tuż obok, hinduska restauracja Banyan, curry bez rewelacji, ale w zupełnie jadalne (jak zwykle zamówiliśmy zbyt dużo). Inne przetestowane przez nas jadłodajnie to Angel Inn w Petworth – kuchnia trochę z ambicjami, ale nie nadmiernie wyszukana, dobrze wcelowali, moim zdaniem – oraz Robin Hood Inn w Rowland’s Castle – przyzwoity standard na lancz. W Brighton jedliśmy w wegetariańskim Food for Friends, dość efekciarskie, niby dużo różnych rzeczy na talerzu, ale bogactwem smaków nie mogło się równać z mistrzowskimi, wyrafinowanymi kompozycjami londyńskiego Vanilla Black. Aby dotrzeć do centrum Brighton odstaliśmy 30 minut w koszmarnym korku – warto o tym następnym razem pamiętać wybierając się nad morze w gorący, weekendowy dzień, i jakoś inaczej planować transport.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/4i454z">South Downs</a></p>
]]></content:encoded></item><item><title>Arabba Fennel salad, cold or hot</title><link>https://blog.mmakowski.com/cooking/arabba-fennel-salad-cold-or-hot/</link><pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/arabba-fennel-salad-cold-or-hot/</guid><description>A skiing week in a rented apartment usually means serious culinary constraints. So, we have picked the location that is close to the slopes, so that we do not have to take a bus, or walk for 20 minutes in ski boots, and that is not going to break the bank – but other considerations, such as well-equipped kitchen or proximity to the shops inevitably were of secondary importance. We could eat in the resturant, sure, but if we could afford the extortionate prices the resort eateries charge, then presumably we could have stayed in a proper hotel instead of a holiday apartment?</description><content:encoded><![CDATA[<p>A skiing week in a rented apartment usually means serious culinary constraints. So, we have picked the location that is close to the slopes, so that we do not have to take a bus, or walk for 20 minutes in ski boots, and that is not going to break the bank – but other considerations, such as well-equipped kitchen or proximity to the shops inevitably were of secondary importance. We could eat in the resturant, sure, but if we could afford the extortionate prices the resort eateries charge, then presumably we could have stayed in a proper hotel instead of a holiday apartment? Be it as it may, the situation is this: we are in an unfamiliar kitchen, with an unpredictable assemblage of pots, pans and utensils, but with the basic ingredients, such as olive oil, herbs, salt and pepper, probably missing. It is half an hour walk to get the groceries. What do we do?</p>
<p>First, make an inventory of the kitchen equipment, check if there is a working oven, look in the cupboards for any remaining herbs and spices. Then set off on a trip to the shops, and get the basics such as olive oil, herbs etc. to last you a week. Then look for some nice, local ingredients that could be made into a meal. This might be the most challenging step, since in our daily lives we are probably used to a selection of ingredients that are unobtainable in an average grocery store in a skiing resort; conversely, depending on a region, you might find some unfamiliar, but enticing provisions. Keeping in mind the constraints of the rented kitchen, one potential approach to cooking on a skiing trip is to keep things simple, with few ingredients and uncomplicated preparation. It is a good idea to keep a few recipes that use only widely available ingredients up your sleeve, and impress your party with the ingenuity in the face of adverse culinary conditions.</p>
<p>So, here is one simple idea, which I cooked up – metaphorically, as well as literally – on the recent Italian trip. All ingredients should be easily available in Italy:</p>
<ul>
<li>a half of large fennel</li>
<li>one apple</li>
<li>a handful of shelled walnuts</li>
<li>extra virign olive oil</li>
<li>balsamic vinegar (optionally)</li>
</ul>
<p><img src="https://farm1.staticflickr.com/791/27010637598_25c0fd872a_n.jpg" alt="alpine view"></p>
<p>We will need a working oven, but in my experience it is usually available. Put the walnuts on a roasting tray – no need to add any fat, they are very fatty by themselves – and roast for 30 minutes at a low temperature, 120°C should be fine. Meanwhile, cube the apple (no need to peel) and the fennel. Once the walnuts are roasted and cooled, mix everything in a bowl, add a splash of olive oil, and (optionally) a little bit of balsamic vinegar. That is it. This salad is good on its own, but can also be used as an accompaniment to mountain cheeses.</p>
<p>As a bonus, a discovery my mum made: if you had some salad left over in the fridge, and do not fancy eating it cold – it is winter, after all! – you can fry it briefly on a pan, with a little bit of butter. I have not tried that, but reportedly it is delicious!</p>
]]></content:encoded></item><item><title>Wizja lokalna: Cairngorms</title><link>https://blog.mmakowski.com/travel/wizja-lokalna_-cairngorms/</link><pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wizja-lokalna_-cairngorms/</guid><description>Minęły już dwa lata od Kilimandżaro, nawyższy więc czas znów się trochę sponiewierać. Naczytawszy się Cherry-Garrarda i Shackletona wymyśliłem zimową ekspedycję. Na Grenlandię, czy nawet Svalbard, drogo, i niebezpiecznie – niedźwiedzie polarne, daleko od cywilizacji. Możnaby więc wybrać się gdzieś na północ UK, gdzie leży śnieg – do Cairngorms, na przykład – i powyobrażać sobie, że się jest polarnym podróżnikiem. Wymyśliłem nawet trasę: Aviemore – Glen Dee – Inverey – Glen Tilt – Blair Atholl.</description><content:encoded><![CDATA[<p>Minęły już dwa lata od <a href="/travel/osiem-dni-na-szczycie-afryki/">Kilimandżaro,</a> nawyższy więc czas znów się trochę sponiewierać. Naczytawszy się Cherry-Garrarda i Shackletona wymyśliłem zimową ekspedycję. Na Grenlandię, czy nawet Svalbard, drogo, i niebezpiecznie – niedźwiedzie polarne, daleko od cywilizacji. Możnaby więc wybrać się gdzieś na północ UK, gdzie leży śnieg – do Cairngorms, na przykład – i powyobrażać sobie, że się jest polarnym podróżnikiem. Wymyśliłem nawet trasę: Aviemore – Glen Dee – Inverey – Glen Tilt – Blair Atholl. Z namiotem i jedzeniem na plecach powinno dać się zrobić w pięć dni.</p>
<p>W niecodziennym przebłysku zdrowego rozsądku skonstatowałem, że nie mam pojęcia jak zimowe Cairngorms wyglądają w rzeczywistości i jakiego rodzaju sprzęt będzie wskazany. Zapisałem się więc na odbywający sie w okolicach Aviemore kurs chodzenia po górach w zimie i zarezerwowałem sobie dodatkowe kilka dni na rozpoznanie terenu. Kurs w porządku, przerabialiśmy techniki jak te z <a href="https://www.youtube.com/watch?v=QN58FtFy7dU">wideł BMC</a>, a także pozyskiwaliśmy cenną wiedzę na temat zasady zachowania energii (należy zachowywać energię i wybierać najmniej fatygującą trasę) oraz interpretacji prognóz lawinowych. Wizja lokalna okazała się bardzo owocna: na początku był piękny śnieg, ale po dwóch dniach przyszła odwilż i wszystko spłynęło. Nie ma więc co liczyć na <em>immersive polar experience</em> w dolinach Cairngorms.</p>
<p>Kolejny pomysł: Hardangervidda. Nawet w lecie było zimno, polarnik Marek Kamiński trenował tam podobno przed wyprawami na bieguny. Znalezienie taniego lotu do Oslo lub Bergen nie powinno sprawić problemu.</p>
<p><img src="https://live.staticflickr.com/4705/39897256812_c556f17aed_c.jpg" alt="https://live.staticflickr.com/4705/39897256812_c556f17aed_c.jpg"></p>
<p><a href="https://www.flickr.com/gp/mmakowski/uU1Q7W">Cairngorms Reconnaissance</a></p>
]]></content:encoded></item><item><title>What do you do with celeriac</title><link>https://blog.mmakowski.com/cooking/what-do-you-do-with-celeriac/</link><pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/what-do-you-do-with-celeriac/</guid><description>Having decided to live apart from civilisation, on the outskirts of a tiny hamlet, two hundred thousand souls, I am at the mercy of my local Tesco as far as food supplies are concerned. Some years ago they decided to stop carrying avocados for a few months. Imagine that! You city folks do not understand what real hardship is. Now there is no celeriac. Last autumn celeriac was in constant supply, but somehow it has fallen out of favour this year.</description><content:encoded><![CDATA[<p>Having decided to live apart from civilisation, on the outskirts of a tiny hamlet, two hundred thousand souls, I am at the mercy of my local Tesco as far as food supplies are concerned. Some years ago they decided to stop carrying avocados for a few months. Imagine that! You city folks do not understand what real hardship is. Now there is no celeriac. Last autumn celeriac was in constant supply, but somehow it has fallen out of favour this year. Go figure. A really bad timing; a few weeks ago Rhik Samadder asked in the Guardian: <a href="https://www.theguardian.com/lifeandstyle/2017/nov/01/cooking-for-dummies-rhik-sammader-tests-recipe-uks-top-boxes">“what do you do with celeriac?”</a>, and I wanted to answer: “why, a salad!”, and make that salad, and eat it. But I had to content myself with the imagination of this “winter is coming” treat.</p>
<p>Provided you do not live in a shithole with no respectable grocery store that carries the vegetable in question, you go to said grocery store, purchase one <strong>celeriac</strong>, two large, or four small <strong>oranges</strong>, two pots of <strong>soured cream</strong> and a pack of <strong>pecans or walnuts</strong> – they taste remarkably similar to my unsophisticated palate, and both will work. Get some <strong>raisins</strong> if you manage to not have any at home – I have lived for close to forty years and am yet to run out of raisins.</p>
<p>You will need a good veggie peeler, since celeriac is notoriously awkward to peel, with all those protrusions, those Cthulhu-like tentacles and cavities around them that fill with dirt, it is a bit of a chore. For one portion of salad we will use half of everything. It is better to not make too much in advance and keep it, as celeriac will turn brown and look less appealing on the next day, and even less so on the day after.</p>
<p>Peel half of the celeriac then, and grate either coarsely or finely – the former gives more satisfying, crunchy texture, while the latter looks more fancy. Coarsely chop the nuts, peel and cut the orange or oranges, mix everything, add soured cream, and you are done.</p>
<p><img src="https://farm1.staticflickr.com/695/31180533533_71ec5547be.jpg" alt="the celeriac salad"></p>
<p>“What with the raisins?”, I hear you asking. Well, nothing in particular – one should have some in their pantry, so the shopping trip was as good an opportunity as any to stock up on raisins. Okay, okay – see, I have been making this salad for years without any consideration for raisins, and enjoyed it all the same. But something changed a year or two ago: I discovered that raisins, soaked in spirit, are like butter, or like bacon, in that they improve the flavour of any dish. There is some skill, perhaps artistry even, involved in choosing the right spirit, though. For the fruit salad <a href="https://blog.mmakowski.com/cooking/a-proper-fruit-salad/">it was gin</a>, whose bitter spiciness cut through all the fructose. For this salad, the creamy earthiness should be complemented by something fruity – a good grappa does the job beautifully.</p>
<p>Easy, Rhik.</p>
]]></content:encoded></item><item><title>A Software Developer's Take on Zeppelin Notebooks</title><link>https://blog.mmakowski.com/technology/a-software-developers-take-on-zeppelin-notebooks/</link><pubDate>Sat, 02 Sep 2017 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/a-software-developers-take-on-zeppelin-notebooks/</guid><description>For the past two months I have used Zeppelin-based notebooks as my primary IDE for data exploration, experiment documentation and prototyping of production code. While the former two notebook use cases are perfectly legitimate, I would argue that Zeppelin is poorly suited for production code prototyping. This is primarily due to high barrier to extraction of common code to libraries. In Jupyter, for example, all it takes to extract a function to a shareable module is to copy it from the notebook to a Python file stored in the same directory as the notebook.</description><content:encoded><![CDATA[<p>For the past two months I have used <a href="https://zeppelin.apache.org/">Zeppelin</a>-based notebooks as my primary IDE for data exploration, experiment documentation and prototyping of production code. While the former two notebook use cases are perfectly legitimate, I would argue that Zeppelin is poorly suited for production code prototyping. This is primarily due to high barrier to extraction of common code to libraries. In Jupyter, for example, all it takes to extract a function to a shareable module is to copy it from the notebook to a Python file stored in the same directory as the notebook. That file can then be incorporated in the production code base, unit tests can be written for it using the stard testing frameworks, and so on. In Zeppelin + Scala Spark, for an extracted function to be available to the notebooks, the function has to be copied to a file, compiled to a <code>.class</code> file, added to the classpath of the interpreter, and the interpreter has to be restarted. As a result, noone bothers; the code lives on in the notebook, and any unit tests developed (in the notebook) around it have to be ported to whatever testing framework is used in the production code base.</p>
<p><img src="zeppelin.png" alt="Zeppelin notebook UI"></p>
<p>The reality of the environment I ended up working in was such, though, that prototyping in a Zeppelin notebook appeared the least cumbersome option. In the process, I have developed a few working practices which I would like to share here. They are applicable to both prototyping and purely experimental notebooks.</p>
<h2 id="version-control">Version Control</h2>
<p>Zeppelin notebooks are stored in JSON files, code and output together, with the code encoded in such a way that line breaks are not present in the JSON. This makes it poorly suited for comparing different versions using standard tools such as <code>diff</code>. Collaboration on a single notebook is also tricky, since merging of changes does not work. Still, version control is essential for reproducibility of the experiments. I store all notebooks in git, and after running each experiment create a tag in the git repository, with the tag name corresponding to the experiment id. The exact way to work with a git repository would depend on the specific setup of the Zeppelin; in my case, the Zeppelin server runs on a remote machine, so instead of SSH-ing in every time I need to checkpoint my work I found it convenient to create a dedicated notebook that performs the git committing and tagging using a shell cell.</p>
<h2 id="structure">Structure</h2>
<p>As noted, the sharing of code across Zeppelin notebooks is inconvenient. Things look a bit better when it comes to avoiding unnecessary code duplication within a single notebook, although here we also run into an obvious restriction: since the cells are meant to execute in sequence, the functionality must be built bottom-up. This means gradually creating more and more complex building blocks from those defined previously, and eventually putting them all together into the desired, top-level functionality. It is the opposite to how I prefer to read the code: first high-level logic, then the implementation details. That concern aside, it is still perfectly possible to apply the usual practices of extracting common code into reusable functions and keeping each function small and to the point. Scala offers good syntactic support for that.</p>
<p>I attempt to ensure that the experiment or prototyping notebooks I develop are safe to run in their entirety; the side effects should not destroy any previously created data. If a notebook writes out any data – and all experiment notebooks should save the results in some form – I write it under file name or Parquet key that is either derived from the experiment id or input parmeters, or is a GUID. Where possible, I try to make the notebooks deterministic. Wherever a random number generator is used, I always pass a constant seed in. This acts as an additional safeguard against accidental overwrite of previous results: if they do get overwritten, as long as nothing significant has changed in the notebook the new results will be the same. Finally, all writing in my notebooks tends to happen in the final cell. If there is any risk that a rerun could overwrite some data, or if I just don’t want to save on every run, it is easy to disable execution of this single cell.</p>
<p>In summary, this is the high-level structure that works well for the majority of notebooks I develop:</p>
<ul>
<li>description: one-paragraph summary of what the notebook does</li>
<li>frequently changing parameters: experiment id, the inputs or keys to read them from</li>
<li>infrequently changing parameters and constants: paths of data sources, RNG seed</li>
<li>functions and their unit tests</li>
<li>invocation of the main experiment/prototype function</li>
<li>output and visualisation of results</li>
<li>storage of results</li>
</ul>
<h2 id="testing">Testing</h2>
<p>Ease of unit testing is a well-known property of code factored into small, focussed functions. As such, I tend to write a set of test cases for each such function, in a cell that immediately follows. This cuts down on the time spent debugging, since as we move on to building higher-level functionality we can be confident that the blocks work as intended. Scala’s <code>assert</code> function is an adequate substitute for a fully-fledged testing framework. By way of illustration, say, we had a cell with the following function:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> denoise<span style="color:#000;font-weight:bold">(</span>text<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">String</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">=</span> text
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">.</span>toLowerCase
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">.</span>replaceAll<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;&#34;&#34;[^\s\w]&#34;&#34;&#34;</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#d14">&#34;&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">.</span>split<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;&#34;&#34;\s+&#34;&#34;&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">.</span>filter<span style="color:#000;font-weight:bold">(</span>w <span style="color:#000;font-weight:bold">=&gt;</span> <span style="color:#000;font-weight:bold">!</span>stopWords<span style="color:#000;font-weight:bold">.</span>contains<span style="color:#000;font-weight:bold">(</span>w<span style="color:#000;font-weight:bold">))</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">.</span>mkString<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34; &#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span></code></pre></div><p>The cell that follows could contain:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;test case: stop words&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">val</span> result <span style="color:#000;font-weight:bold">=</span> denoise<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;a holiday a holiday and the first one of the year&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    assert<span style="color:#000;font-weight:bold">(</span>result <span style="color:#000;font-weight:bold">==</span> <span style="color:#d14">&#34;holiday holiday and first one of year&#34;</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#d14">&#34;result: &#34;</span> <span style="color:#000;font-weight:bold">+</span> result<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;test case: lower case&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">val</span> result <span style="color:#000;font-weight:bold">=</span> denoise<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;FOO BAR&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    assert<span style="color:#000;font-weight:bold">(</span>result <span style="color:#000;font-weight:bold">==</span> <span style="color:#d14">&#34;foo bar&#34;</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#d14">&#34;result: &#34;</span> <span style="color:#000;font-weight:bold">+</span> result<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">// etc.
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span>
</span></span><span style="display:flex;"><span>println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;Passed.&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span></code></pre></div><p><img src="zeppelin-unit-tests.png" alt="Unit test code in a Zeppelin notebook"></p>
<p>The curly braces around each test case make all variables defined in it local, so that they do not pollute the global name space. Additionally, they ensure that only the output explicitly printed appears in the notebook, cutting down on the noise. I tend to hide the <em>output</em> of the function cell (it is not interesting, unless the function fails to compile) and the <em>code</em> of the unit test cell, to make the information visible in the notebook more relevant for the reader.</p>
<p>One issue with this setup that I have not yet figured out how to overcome is that in Zeppelin a failure of one cell does not prevent further ones from executing. Consequently, when running the notebook, we have to manually check each unit test cell for failures; otherwise, if the code compiles, the experiment could run and write its (potentially erroneous) results despite some of the unit test assertions failing.</p>
<h2 id="--">* * *</h2>
<p>While I appreciate the convenience of rich, heterogeneous REPL, I am still not quite sold on notebooks. I have seen them used as vehicles for building data transformation pipelines – one notebook to import data from flat files into Parquet, another to transform to a different format, yet another to apply a classifier, etc. A pipeline constructed in this way is just a collection of disjoint pieces with no overall control over the whole, and as such makes the provenance of a given piece of data very difficult to establish. I would be interested in experimenting with tools such as <a href="https://pachyderm.com">Pachyderm</a> that address this specific issue.</p>
]]></content:encoded></item><item><title>Na południe od Nashville</title><link>https://blog.mmakowski.com/travel/na-po%C5%82udnie-od-nashville/</link><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/na-po%C5%82udnie-od-nashville/</guid><description>Prius Są pewnie miejsca w USA – Nowy Jork, na przykład – gdzie można przylecieć, nie mieć samochodu i nic na tym nie stracić. Tennessee nie jest takim miejscem. Kiedyś już się o tym przekonałem, pedałując dwadzieścia kilometrów do najbliższego sklepu po mleko. Powtórnie mi o tym przypomniały trzy tygodnie kiszenia się w biznesowym hotelu między Interstate 65, rozległymi parkingami i nielicznymi biurowcami. Tym razem wynająłem więc samochód. Najtańsza opcja to Ford Mustang, ale już z takich zabawek wyrosłem.</description><content:encoded><![CDATA[<p><img src="https://live.staticflickr.com/4437/36956523672_7df531f292_c.jpg" alt="https://live.staticflickr.com/4437/36956523672_7df531f292_c.jpg"></p>
<h2 id="prius">Prius</h2>
<p>Są pewnie miejsca w USA – Nowy Jork, na przykład – gdzie można przylecieć, nie mieć samochodu i nic na tym nie stracić. Tennessee nie jest takim miejscem. <a href="https://blog.mmakowski.com/travel/tn/">Kiedyś już się o tym przekonałem</a>, pedałując dwadzieścia kilometrów do najbliższego sklepu po mleko. Powtórnie mi o tym przypomniały trzy tygodnie kiszenia się w biznesowym hotelu między Interstate 65, rozległymi parkingami i nielicznymi biurowcami. Tym razem wynająłem więc samochód. Najtańsza opcja to Ford Mustang, ale już z takich zabawek wyrosłem. Teraz troszczę się o planetę, wziąłem więc Priusa. Świetny wybór.</p>
<h2 id="szkółka-niedzielna">Szkółka niedzielna</h2>
<p>Osoby:</p>
<p><strong>Jonathan</strong> – właściciel ośrodka wypoczynkowego, emerytowany lekarz-patolog. Przy kości, łysawy, siwa broda. Pewny siebie.<br>
<strong>Masood</strong> – chudy mężczyzna pochodzenia irańskiego, długie włosy, spodnie do kolan, wiek 50-60 lat, hipisowski wygląd.<br>
<strong>Lianne</strong> – partnerka Jonathana, lekarka, sympatyczna, w podobnym do Jonathana wieku.<br>
<strong>Michael</strong> – biodynamic farmer, na oko 70-80 lat. Wysoki, szczupły, siwa broda.</p>
<p><em>W ośrodku Jonathana. Świetlica, kilka stolików, na jednym trochę wegetariańskiego jedzenia, owoce. Z tyłu scena ze sprzętem nagłośnieniowym, instrumentami. Jonathan siedzi przy stoliku, Lianne na kanapie, z laptopem, próbuje pracować.</em></p>
<p><strong>Jonathan</strong>: leczy się raka, ludzie żyją dłużej, ale czy to w czymś pomaga? Jak ciało przetrwa, to demencja dopadnie. Nasz organizm nie jest przystosowany do tego, żebyśmy tak długo żyli.</p>
<p><em>Wchodzi Masood.</em></p>
<p><strong>Masood</strong>: Ja też, tak jak Jonathan, zajmuję się rakiem, ale bardziej od psychologicznej strony – może można nawet powiedzieć, że holistycznie. Byłem na takim warsztacie, profesor ze Stanford to organizował. No i zastanawiam się, jaką rolę dla mnie ma odgrywać nowotwór? To w końcu część mnie – można mówić że są złe komórki i dobre komórki, ale moje ciało to moje ciało, wszystko to ja. Ale ciało to nie wszystko, jest jeszcze dusza, i cały świat, którego częścią jestem… pochodzę ze wschodu, tam patrzy się na te rzeczy bardziej całościowo. Kiedyś wszystkie rzeczy, które są dla mnie cenne, znikną – ludzie poumierają. Więc lepiej jest myśleć, że wcale się nie umiera, tylko przechodzi w kolejną formę, ale esencja pozostaje.</p>
<p><em>Wchodzi Michael, kieruje się do stolika z jedzeniem.</em></p>
<p><strong>Lianne</strong>: pracować się tu nie da, Internet do niczego. Jak to jest, że banki rozwiązały problem komunikacji między systemami, żeby to wszystko się dogadywało, a my w służbie zdrowia wciąż żeby przejrzeć karty pacjenta to musimy do jednego systemu, a żeby obejrzeć raport specjalisty to do innego?</p>
<p><strong>Michael</strong> <em>(zjadając czereśnie)</em>: co to znaczy biodynamic farming? Chodzi o alternatywę dla sztucznych nawozów i innych chemikaliów, które pakuje się w ziemię. Wymyślił to w latach dwudziestych XX w. Rudolf Steiner. Było to po pierwszej wojnie światowej, w Europie pełno było półproduktów do broni chemicznej, często na bazie azotu. Przemysł zastanawiał się co z tym zrobić, i wymyślił, że wciśnie to rolnikom. No i rzeczywiście, na krótką metę rezultaty były super, ale szybko zaczęto się zastanawiać, o co z tym chodzi: ludzie chorują, krowy chorują, pasożyty zżerają plony… no i Steiner przedstawił wizję, w Polsce zresztą to było. To jest taka homeopatia dla ziemi: robi sie różne preparaty, z łajna, innych rzeczy, żeby ziemi pomóc, żeby ją uzdrowić. Ja na przykład zajmuję się kryształami. Bierze się kryształy, najlepsze wulkaniczne, z Apalachów, ale w tutejszych rzekach też można znaleźć. Sciera się między szklanymi płytkami na pył, taką mąkę. Później biorę krowi róg, napełniam tym proszkiem, i wkładam w ziemię. Może tak parę miesięcy siedzieć w ziemi, choć trzeba mieć świadomość, że od pory dnia zależy, na ile to będzie skuteczne. To jest <em>cosmic principle</em>: rośliny są łącznikiem kosmosu z Ziemią: korzenie mają w ziemi, ale resztę ponad. Tak, że ziemia wieczorem zgarnia do siebie, a rano wydala. Ten kryształ można trzymać w słoiku i naświetlać od czasu do czasu.</p>
<p><strong>Jonathan</strong>: mam problem z definicją co to znaczy być Amerykaninem. Rdzennych mieszkańców wykończyliśmy, wszyscy jesteśmy imigrantami. Moi rodzice przyjechali tu z Niemiec. Problem jest z religią. Judeochrześcijaństwo nie ma problemu z rozdziałem Kościoła od państwa, ale w Koranie jest zapisane, że państwo musi być religijne. Więc to jest niekompatybilne z Ameryką.</p>
<p><em>(głos z radia)</em>: Te rozróby w Charlottesville to wina Antify. Prawda, ktoś z nich zginął, ale po co się tam pchali? Jak ktoś skacze na wybieg lwów i lew go zabije, to co, też wina lwa?</p>
<h2 id="nastanie-ciemności">Nastanie ciemności</h2>
<p>21 sierpnia nastąpić miał Armageddon. Brak paliwa na stacjach, miejsc w hotelach, koszmarne korki na autostradach. Dlatego, że wielu Amerykanów akurat w okolicach Nashville postanowiło oglądać zaćmienie słońca. Niektórzy nie zdawali sobie sprawy, że całkowite zaćmienie mogliby obserwować bliżej domu. Na przykład para Kalifornijczyków, która wynajęła sypialnię w chacie, w której mieszkałem. Nie wiedzieli, że w Oregon też można było oglądać. A chata im się nie spodobała, i po jednej nocy wyprowadzili się do najbliższego wolnego pokoju hotelowego. W Memphis, trzy godziny samochodem od nas, i od linii całkowitego zaćmienia.</p>
<p>Aby więc nie utknąć w największym korku jaki kiedykolwiek Tennessee widziało, Do Long Hunter State Park – wcześniej upatrzonego miejsca obserwacji zaćmienia – wyruszyłem wcześnie, o szóstej rano. W parku byłem o siódmej, godzinie otwarcia. Przywitał mnie miły strażnik i skierował na ogromną łąkę, gdzie poodgradzane zostały pasy do parkowania samochodów – zmieściłoby ich się tam grubo ponad tysiąc. Wyruszyłem w stronę jeziora aby zająć dogodną pozycję obserwacyjną zanim spodziewane masy ludzkie nadciągną i zapełnią każdy wolny skrawek przestrzeni. Ciemno miało się zrobić około 13:20. Czytałem więc książkę i czekałem na tłumy. A tu nic, kilkanaście osób w zasięgu wzroku. Okazuje się, że w USA jest jednak dużo miejsca. Nawet jeśliby je ograniczyć do pasa, na którym księżyc miał całkowicie przesłonić tarczę słońca.</p>
<p>Zaćmienie zaczęło się około 12:00. Przez kolejną godzinę z kawałkiem robiło się stopniowo, prawie niezauważalnie, coraz ciemniej i chłodniej, aż do półtoraminutowego apogeum. Podczas całkowitego zaćmienia oświetlenie było dość niespotykane, jakby słońce schowało sie za horyzontem ze wszystkich stron na raz – niebo w okolicach horyzontu było jeszcze jasne, natomiast w zenicie zupełnie ciemne. Zobaczyć można było koronę słoneczną – włóknistą strukturę o średnicy ze cztery razy większej niż tarcza słońca. Tuż przed i po całkowitym zaćmieniu wszędzie pojawiły się falujące cienie, jakby światło przefiltrowane zostało przez bardzo rzadką chmurę. Przez dłuższy czas przed i po cienie rzucane przez liście drzew miały kształt półksiężyców – efekt <em>camera obscura</em> utworzony przez wąskie prześwity między liśćmi.</p>
<h2 id="the-station-inn">The Station Inn</h2>
<p>Chciałem pójść na coś lokalnego, prawdziwy tenesjański bluegrass. Za pierwszym razem się nie udało, do Station Inn dotarłem pięć minut przed koncertem, bilety były wyprzedane. Za drugim poszło lepiej. Station Inn z zewnątrzy wygląda jak szopa czy barak, piętnaście metrów na siedem. Wewnątrz mieści się bar, kilka rzędów przykrytych podartą ceratą stolików, scena – miejsca jest na sto osób z hakiem. Dwieście lat temu Fanny Trollope narzekała na amerykańskie maniery przy stole. Siedzenie w nakryciu głowy – kowbojskich kapeluszach, bejsbolówkach – wciąż ma się dobrze. Szczęśliwie, zwyczaj plucie tytoniem gdzie popadło odszedł w niepamięć. Tego wieczora występuje zespół Becky Buller. Na banjo Ned Luberecki, kandydat do nagrody dla najlepszego bandżeonisty roku; na gitarze profesor bluegrassu z East Tennessee State University; na kontrabasie Daniel “The Hook” Hardin, brygadzista z destylarni Jacka Danielsa. Becky, radośnie:
– Hey, Dan, say something to the fine people here!
Dan, patrząc spode łba, z ponurą miną:
– How y’all doin’?
Jest coś forsownego, sztywnego w grze muzyków bluegrassowych, instrumenty wiszące tuż pod szyją, palce zaciśnięte na gryfie – przeciwieństwo luzu jazzmanów. Ale wymiatają. Prawie tak dobre jak zaćmienie słońca.</p>
<h2 id="harvey">Harvey</h2>
<p>Dzień przed wylotem przyszły popłuczyny po Harvey. Huragan wcześniej zmył niemal z powierzchni ziemi okolice Houston w Teksasie, do nas dotarł już zdegradowany do tropikalnego niżu. Wystarczyło go wciąż na alarm powodziowy i tornadowy. Niefortunnie, bowiem z mojej kwatery prowadzi jedna, wąska droga, częściowo doliną, wzdłuż potoku, więc szansa na zostanie odciętym od świata nie była zaniedbywalna, zaś kolejnego dnia w południe miałem stawić się na lotnisku, oddać samochód i rozpocząć dziesięciogodzinną podróż do domu. Pod wieczór zaczęło padać. Po zmroku rozszalała się ulewa, z jakimi spotkałem się wcześniej w tropikach – lecz z reguły nie trwały one wtedy godzinami. Co ma być, to będzie.</p>
<p>Rano prawie już nie padało. Wyruszyłem z mojej bazy na wzgórzu, ostrożnie, by się nie wpakować w jakąś niespodziewaną wodę. Droga okazała się przejezdna, tylko zalegające gałęzie i błoto stanowiły dowód nocnego zalania przez potok. Teraz wciąż nie mieścił sie w korycie, ale jezdni już nie zagrażał.</p>
<h2 id="log-house">Log House</h2>
<p>Jeśli miałbym sobie wyobrazić mój wymarzony dom, byłaby to jakaś chata w lesie, najlepiej na wzgórzu. Z dala od miast i ruchliwych dróg, ale dobrze skomunikowana, tak, że w razie potrzeby można wsiąść w samochód i w nie więcej niż godzinę powrócić do cywilizacji. Wolałbym też, żeby nie padało bez przerwy – więc Szkocja raczej odpada. Log House w Big East Fork spełnia natomiast wszystkie te wymagania. Jedyny minus to szum klimatyzacji, lecz jest to cywilizacyjne udogodnienie w tym klimacie niemal nieodzowne. Dom ma cztery sypialnie, wynajmowane osobno; czy to lokalizacja, czy standard – bo nie cena, ta jest zdecydowanie niewygórowana – zniechęcają przyjezdnych, stąd wyjąwszy weekend zaćmieniowy miałem całą rezydencję dla siebie. Tak, zdecydowanie wyobrażam sobie życie tutaj. Jedno z moich ulubionych miejsc na świecie.</p>
<p><img src="https://live.staticflickr.com/4385/36292463854_7bfb39c1f1_c.jpg" alt="https://live.staticflickr.com/4385/36292463854_7bfb39c1f1_c.jpg"></p>
]]></content:encoded></item><item><title>Powrót do Dartmoor</title><link>https://blog.mmakowski.com/travel/powr%C3%B3t-do-dartmoor/</link><pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/powr%C3%B3t-do-dartmoor/</guid><description>Po jedenastu latach wróciliśmy do Dartmoor. Patrząc na zdjęcia, niewiele się zmieniło: te same trzęsawiska, karłowate, omszałe drzewa, kamienne pozostałości z epoki brązu, ciężkie chmury. Wiatr. Przed jedenastu laty nosiłem bandanę zasłaniającą ucho, w które wiało; teraz chodzę w czapce i nieprzewiewnych bluzach. Zmieniliśmy się my: jesteśmy, mówiąc oględnie, bardziej dojrzali. Zamiast wielkich plecaków z karimatami i namiotem mamy samochód – wynajęty, bo nasz, świeżo po wymianie silnika, był zbyt niepewnym środkiem lokomocji na pięćsetkilometrową podróż.</description><content:encoded><![CDATA[<p>Po jedenastu latach wróciliśmy do Dartmoor. Patrząc na zdjęcia, niewiele się zmieniło: te same trzęsawiska, karłowate, omszałe drzewa, kamienne pozostałości z epoki brązu, ciężkie chmury. Wiatr. Przed jedenastu laty nosiłem bandanę zasłaniającą ucho, w które wiało; teraz chodzę w czapce i nieprzewiewnych bluzach. Zmieniliśmy się my: jesteśmy, mówiąc oględnie, bardziej dojrzali. Zamiast wielkich plecaków z karimatami i namiotem mamy samochód – wynajęty, bo nasz, świeżo po wymianie silnika, był zbyt niepewnym środkiem lokomocji na pięćsetkilometrową podróż.</p>
<p>Niektórych rzeczy na nowych zdjęciach nie ma, a najbardziej utkwiły mi w pamięci. Wyśmienite jedzenie: delikatne <em>pork belly</em> w pubie The Elizabethan w Luton (nie, nie <em>tym</em> Luton), półkrwisty <em>rib eye</em> w The Rock w Haytor Vale. The Old Library w Ashburton idealnie wycelowało w półkę tuż pod pięciogwiazdkowym <em>haute cuisine</em> – gdyby troszkę podciągnęli teksturę, zrobiłaby się z tego jedna z knajp, do których jeżdżą gazetowi recenzenci; a tak, formalne niedociągnięcia w postaci ości w turbocie czy twardawego grillowanego fenkuła podkreślają autentyczność potraw. Lokalna, kameralna restauracja z niewielkim menu zmieniającym się codziennie w zależności od dostępności składników, to wakacyjny ideał. W pamięci mam dziesięciogodzinną pętlę przez Holne, Dartmeet i Poundsgate, z wielkim żarciem w Tavistock Inn, z przemykaniem się po ciemku przez prywatne posesje i nocnym marszem drogą wiodącą wzdłuż rzeki Dart. Pamiętam wciąż bąble na palcach stóp, od długiego marszu w grubych skarpetach.</p>
<p>Ciekawe, czy za kojne dziesięć lat wciąż będzie nam się chciało jeździć w takie miejsca.</p>
<p><img src="https://c1.staticflickr.com/5/4184/33359962864_1c996037ef_c.jpg" alt="zdjęcie Ani z teraz"></p>
<p>Znajdź 10 różnic</p>
<p><img src="https://c1.staticflickr.com/1/55/139976460_24339af704_b.jpg" alt="zdjęcie Ani sprzed 11 lat"></p>
<p><a href="https://www.flickr.com/gp/mmakowski/92CX5h">Back to Dartmoor</a></p>
<p><a href="https://www.flickr.com/gp/mmakowski/Wzad8Y">Dartmoor</a></p>
]]></content:encoded></item><item><title>Digital Hygiene Part 3: Alternative to Google</title><link>https://blog.mmakowski.com/technology/digital-hygiene-part-3-alternative-to-google/</link><pubDate>Wed, 21 Dec 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/digital-hygiene-part-3-alternative-to-google/</guid><description>I vaguely remember Internet search before Google. There was AltaVista and perhaps some other contenders, like Inktomi, Lycos or Excite. Google blew them all out of the water in early 2000s, thanks to minimalistic, user-friendly and search-focused home page and relevant results, not polluted by “sponsored entries”. Over the next decade this evolved into effective monopoly of Internet search, efforts from heavyweight competitors (Microsoft Bing) notwithstanding. Meanwhile, Google spread into multitude of other services whose competitive edge relied on vast amount of knowledge about our habits, interests and values, accumulated as a result of us using those services and giving the data away in return.</description><content:encoded><![CDATA[<p>I vaguely remember Internet search before Google. There was AltaVista and perhaps some other contenders, like Inktomi, Lycos or Excite. Google blew them all out of the water in early 2000s, thanks to minimalistic, user-friendly and search-focused home page and relevant results, not polluted by “sponsored entries”. Over the next decade this evolved into effective monopoly of Internet search, efforts from heavyweight competitors (Microsoft Bing) notwithstanding. Meanwhile, Google spread into multitude of other services whose competitive edge relied on vast amount of knowledge about our habits, interests and values, accumulated as a result of us using those services and giving the data away in return. It is time to take some control back.</p>
<h2 id="what">What</h2>
<p><a href="https://duckduckgo.com">DuckDuckGo</a> is a search engine that does not track you. This is their main selling point. Other than that, they are Tor-friendly, automatically point you to encrypted (HTTPS) versions of websites, donate money to privacy and diversity-minded projects and in general make a point of treating your privacy seriously.</p>
<h2 id="why">Why</h2>
<p><img src="duckduckblind.png" alt="DuckDuckGo logo with a blindfold"></p>
<p>In prior installments we have addressed the serious matter of state surveillance and criminals stealing our credentials. By comparison, the issue of corporations collecting our data and building personal profiles might be more tenuous – almost bordering on tinfoil hattery. However, the argument for protecting our data from corporations is similar to that for protecting it from the state: consider the pessimistic scenario. The company might not even be, strictly speaking, using the data against your will. You might not be conscious of them manipulating what you do and what you think. Yet, by providing the responses to your queries, they are hiding entire realms of knowledge and opinion and revealing others. Nowadays, this might be done by objective, non-partisan, and dumb algorithms. Today, all we are worried about are unconscious biases built into those algorithms. Tomorrow, the power to shape what you are aware of might be in the hands of the few who control the companies that provide the search results. To me, giving away this kind of power to a single entity is deeply disturbing. And it should not be necessary, if all you want to do is search the web for pictures of cats. Or a definition of <a href="https://duckduckgo.com/?q=zygohistomorphic+prepromorphism&amp;t=canonical&amp;ia=qa">zygohistomorphic prepromorphism</a>. Therefore, let us diversify the “front pages of the Internet”, so that no single company can control what everyone considers to be the truth. And if we are making the move away from Google, why not to a search engine that respects our privacy?</p>
<h2 id="how">How</h2>
<p>While typing “duckduckgo” into the address bar is more involved than typing “google”, it is a habit that can be acquired with time. Otherwise, head to <a href="https://duck.co/help/desktop">https://duck.co/help/desktop</a> for instructions on how to make DuckDuckGo the default search engine in your browser. There are apps for iOS and <a href="https://play.google.com/store/apps/details?id=com.duckduckgo.mobile.android">Android</a>.</p>
<p>Finally, I should mention the ugly: you might find the quality of the search results to not be up to what you grew accustomed to with Google. What I do in those (infrequent) cases where DuckDuckGo does not turn up the page I was looking for is prefix my query in DuckDuckGo with <code>!g</code> – this redirects to Google search.</p>
<p><a href="https://blog.mmakowski.com/technology/digital-hygiene-part-2-password-manager/">← 2: Password Manager</a></p>
]]></content:encoded></item><item><title>Digital Hygiene Part 2: Password Manager</title><link>https://blog.mmakowski.com/technology/digital-hygiene-part-2-password-manager/</link><pubDate>Sun, 11 Dec 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/digital-hygiene-part-2-password-manager/</guid><description>In this installment we are going to look at the elephant in the room of digital security: passwords. Two most common sins against security committed by millions, or billions of Internet users are 1) weak passwords and 2) password reuse. It is now widely recognised that it is not the users who are to blame, but the password system itself. It is inconceivable that a single person can remember dozens of different, complicated passwords for different online services the modern world all but forces us to use.</description><content:encoded><![CDATA[<p>In this installment we are going to look at the elephant in the room of digital security: passwords. Two most common sins against security committed by millions, or billions of Internet users are 1) weak passwords and 2) password reuse. It is now widely recognised that it is not the users who are to blame, but the password system itself. It is inconceivable that a single person can remember dozens of different, complicated passwords for different online services the modern world all but forces us to use. Thus we settle on something that can be remembered, use it across all websites, perhaps with slight variation, and then a day comes when one of the more obscure and less secure services is broken into and its user database is stolen. Nowadays, most of the popular services do not store the password, only a <em>hash</em> — that is, a piece of data that allows them to check if the password we entered is correct, but not recover the password itself<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> Even then, unless the compromised service applied all the best practices in credentials storage (many do not<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>) and we used a really strong password, it will not take the hackers long to recover our password in clear text. From there they can try and use it to log into our Facebook or Gmail and obtain a wealth of data that can then be used to defraud us of money in a multitude of ingenious and ignominious ways, or otherwise abuse our personal data.</p>
<p>What is a “strong” password? The technical measure of password strength is entropy, which is not a very simple concept to grasp and estimate, so allow me to use a prop provided by <a href="https://xkcd.com/">a source of useful knowledge on all things scientific</a>:</p>
<p><img src="https://imgs.xkcd.com/comics/password_strength.png" alt="https://imgs.xkcd.com/comics/password_strength.png"></p>
<p>Right, so a string of four random words makes a good password. Still, we have not got around the problem of recalling the particular combination of random words we picked for a website of the company that delivers electricity to our house. This is where a <strong>password manager</strong> comes in handy.</p>
<h2 id="what">What</h2>
<p>A password manager comes under various guises. Web browsers and operating systems often have a built-in feature that will “remember” the login details for you. Then, there are “real” password vaults, which is what we are going to discuss here. A password vault is a store of all your passwords, kept by some company on their servers. The vault is encrypted with a <em>master password</em> – the only password you really have to remember – before leaving your machine. If you want to synchronise all your passwords to another device, you connect to the server of the company who manages your vault and download the encrypted bundle, then enter the master password to access all the passwords stored within.</p>
<h2 id="why">Why</h2>
<p>What do dedicated password managers provide beyond the features we get out of the box from, for instance, Google Chrome? There are two key advantages: first, all such dedicated service does is protecting our passwords, so we can expect that it is secure against a wider range of attacks; all security expertise of the company is dedicated to that goal, while a browser vendor has to take care of a much broader surface of potential attacks. Second, it can generate new, strong passwords whenever we register for a new account or change existing password. We no longer have to come up with lists of random words or characters, which will likely not work anyway, due to some silly restrictions on the length of the password and the set of allowed or required characters (many websites, in a misguided attempt to make our passwords stronger, force the use of symbols, numbers, mixed case etc.).</p>
<p>But! Are we not running the same risk as <a href="Blog/Technology/Digital%20Hygiene%20Part%201_%20VPN.md">with VPN</a>, and giving the keys to the kingdom to the company that stores our vault? We are not: the encryption of our vault takes place locally, on our device, and what is transferred to the provider company is inscrutable to them without the master password. That password stays in our heads. In theory, the company, who provides the application that runs on our device and encrypts and decrypts the vault, could try to make it sneakily send the master password we entered. In practice this is highly unlikely – since the entire application resides on the user machine, it can be assumed that its code and the protocol it uses has been audited by independent security experts.</p>
<h2 id="how">How</h2>
<p>There are two popular password management services I am familiar with: <a href="https://1password.com/">1Password</a> and <a href="https://www.lastpass.com/">LastPass</a>. I have been using premium version (US$1 per month) of the latter for the last six months in Chromium on Linux and on Android, and have been very happy with it. LastPass also has a free tier, which, since I signed up, seems to have improved in that it allows many devices (used to be just two), so there is little risk in trying it out. If you do, please remember to make up a new, strong master password!</p>
<p><a href="https://blog.mmakowski.com/technology/digital-hygiene-part-1-vpn/">← 1: VPN</a></p>
<p><a href="https://blog.mmakowski.com/technology/digital-hygiene-part-3-alternative-to-google/">→ 3: an Alternative to Google</a></p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Incidentally, beware of services that have the helpful feature of reminding you the password you have forgotten – if they can recover it, so can the hackers! A <em>password reset</em> feature, on the other hand, is completely fine.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>Even prominent websites such as LinkedIn turned out to have been storing <a href="https://www.troyhunt.com/observations-and-thoughts-on-the-linkedin-data-breach/">weakly protected hashes</a> of user passwords.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>Digital Hygiene Part 1: VPN</title><link>https://blog.mmakowski.com/technology/digital-hygiene-part-1-vpn/</link><pubDate>Wed, 30 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/digital-hygiene-part-1-vpn/</guid><description>A few years ago I used to not care much about the digital trail I left all over the internet. The optimistic assumption “nothing to hide, nothing to fear”, convenience of numerous new services that offered some minor perk in exchange for my data, and the general trend for the population of developed world to share more and more, all pushed in that direction. Since then, a couple of developments changed my attitude.</description><content:encoded><![CDATA[<p>A few years ago I used to not care much about the digital trail I left all over the internet. The optimistic assumption “nothing to hide, nothing to fear”, convenience of numerous new services that offered some minor perk in exchange for my data, and the general trend for the population of developed world to share more and more, all pushed in that direction. Since then, a couple of developments changed my attitude. Firstly, Edward Snowden’s exposure off mass surveillance programmes run by the governments of the US and UK challenged the implicit assumption that such data collection, while technically feasible, would most likely be too expensive and too impractical to be actually enacted. Secondly, the growing appetite of western societies for populists and for authoritarian rule – from PiS election victories in 2015 in Poland, through Trump in the US now, to projected gains of Front national in France – hammered home that even if I consider present governments benign and non-inquisitive, that might change on a short notice. Finally, increasing criminal activity targeting personal data that is not adequately protected or just left out in the open, and industrialisation of personal computer and mobile phone hacks, puts more urgency on appropriately securing our devices and – more importantly – altering behaviours.</p>
<p>As a result, over the last couple of years I adopted more careful approach to digital services and devices, and in this series of posts I would like to share some of the practices I developed. I will attempt to present them in an accessible way that does not require extensive background in IT, just working familiarity with computers and internet. They will be laid out in no particular order, but I will strive to start with ones that are relatively easy to implement and do not cause undue inconvenience. If something ends up not being mentioned it does not mean it is unimportant in general – perhaps I did not consider it important in my particular situation.</p>
<p>Let us start with my most recent habit: Virtual Private Network, or <strong>VPN</strong>.</p>
<h2 id="what">What</h2>
<p>Whenever you browse the web (the discussion applies to other internet services as well, but we will focus on web browsing as it is a representative example), the information about the websites you visit is visible to the internet service provider (ISP) you use. For example, when you access <a href="http://news.bbc.co.uk">http://news.bbc.co.uk</a>, your browser sends a request out through the network controlled by your ISP. Shown below is an example of the information they can intercept:</p>
<p><img src="vpn-http.png" alt="A packet capture of unencrypted HTTP traffic"></p>
<p>Among all this seemingly random gibberish at the bottom, the name of the website and the specific page in it (<code>/news/</code>) are clearly visible, and can be decoded as shown at the top of the picture. Doesn’t use of “secure”, https websites, solve the problem? Let us see what the ISP can capture when you instead go to <a href="https://notepad.mmakowski.com">https://notepad.mmakowski.com</a>:</p>
<p><img src="vpn-dns.png" alt="A packet capture of encrypted HTTPS traffic, showing domain name resolution in cleartext"></p>
<p>They might not know what exact pages you are browsing, but they definitely know that you are accessing notepad.mmakowski.com website!</p>
<p>Virtual Private Network is a fairly broad term, but for our purposes it means that instead of sending the internet traffic in clear text, as illustrated above, your computer first connects to a server owned by the provider of the VPN and sets up an encrypted connection to it. Once this is done, all requests to fetch web pages are sent over that encrypted connection to the VPN server. The server then decrypts those request and sends them to the target website, as if the request originated on the server, not on your computer. Web pages travel back in the same way: first to the VPN server, where they are encrypted, and then to your computer. All your ISP sees is data travelling back and forth between your computer and the VPN server, but what this data is, they have no clue. That’s all they see:</p>
<p><img src="vpn-tls.png" alt="A packet capture of traffic through VPN with no cleartext info visible"></p>
<h2 id="why">Why</h2>
<p>ISPs have always been able to access your browsing information shown in the preceding section. Up till recently my assumption was that they generally would not do that, and definitely would not store it, because 1) it’s expensive and 2) it might violate privacy laws. Recent <em>Investigatory Powers Bill</em>, also known as <em>Snooper’s Charter</em>, changed that perception completely. It requires that ISPs record what websites everyone visits and store those records for a period of one year. In an independent development, a <a href="https://www.theguardian.com/technology/2016/nov/23/censor-non-conventional-sex-acts-online-internet-pornography">bill is being proposed</a> in the UK that might involve blocking access to videos of “non-conventional sex acts”. In my mind, the government and ISPs have no business tracking what I do online and determining whether or not I should be allowed to watch someone being (consensually) spanked.</p>
<p>With a VPN, an ISP can record the traffic going out of your house to their hearts content and they will not be able to make any sense out of it, other than that you use a VPN, and the volume of the data transferred. But whether you are browsing BBC or PornTube – they cannot tell. When it comes to certain content being blocked in a specific country, VPN providers usually have servers in many different countries, so you can pick one in location where the content you would like to access is not blocked. As of today, watching TV channels that are only accessible to users from a particular country is probably the primary reason for private use of VPNs.</p>
<p>VPN comes with a big caveat though: while the ISP no longer sees what you are up to on the internet, the VPN provider now has the view of all this activity. Whether or not that is better depends on how much you trust the VPN provider. For one thing, they might not operate under your local jurisdiction, so might not have the same log retention responsiblities. The majority of VPN providers proudly advertise “no logs!”, meaning that they do not record any of your activity – but there is no way of verifying that, you have to trust them. There are alternatives that do not have this drawback, such as Tor (we might get to that in some future installment of this series), but they are typically much more cumbersome and less user-friendly.</p>
<h2 id="how">How</h2>
<p>Due to <a href="http://arstechnica.co.uk/tech-policy/2016/11/germany-diminish-citizens-data-privacy-rights/">increasing appetite of states</a> for controlling and monitoring citizen’s internet activities, and perhaps even more due to popular TV shows being available for streaming with regional restrictions, the VPN market is booming and there are hundreds of providers to choose from. Deciding between them is not easy, and I didn’t do a comprehensive job of it. All I did was look at some ranking on a reasonably reputable website. In there I found <a href="https://nordvpn.com/">NordVPN</a>, liked their comprehensive geographic coverage, operating system support, Tor-bridging and some of the marketing blurb (“Nordic ideals”. Panama-based. Right…), so went with that. Too early to tell first hand, but I have since heard some positive testimonials, their <a href="https://nordvpn.com/tutorials/">setup process</a> seems user friendly and they have a <a href="https://nordvpn.com/special/cyber-month/?utm_content=bufferdc8b7&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer">sale this week</a> (US$3 per month for 2-year contract), so I might as well tentatively recommend this provider. Just pay, follow the tutorial, and you should be protected from the prying eyes of your ISP.</p>
<p><a href="https://blog.mmakowski.com/technology/digital-hygiene-part-2-password-manager/">→ 2: Password Manager</a></p>
]]></content:encoded></item><item><title>Introduction to Lambda Calculus</title><link>https://blog.mmakowski.com/technology/introduction-to-lambda-calculus/</link><pubDate>Wed, 26 Oct 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/introduction-to-lambda-calculus/</guid><description>Software is pervasive in the modern world and has influence over many aspects of our lives. In some cases, such as avionics or medical equipment control, human life depends on the correctness of software. Yet, high profile cases of bugs do not inspire confidence in the state of software engineering.
The “software crisis” is a phenomenon recognised by practitioners of the field. Several ways of addressing the reliability issue have been proposed: from reliance on programmer’s discipline, through tools that perform post-hoc validation of programs to ensure they do not contain suspicious coding patterns, to languages that restrict valid programs to ones whose properties can be formally proven.</description><content:encoded><![CDATA[<blockquote>
<p>Software is pervasive in the modern world and has influence over many aspects of our lives. In some cases, such as avionics or medical equipment control, human life depends on the correctness of software. Yet, high profile cases of bugs do not inspire confidence in the state of software engineering.</p>
</blockquote>
<blockquote>
<p>The “software crisis” is a phenomenon recognised by practitioners of the field. Several ways of addressing the reliability issue have been proposed: from reliance on programmer’s discipline, through tools that perform post-hoc validation of programs to ensure they do not contain suspicious coding patterns, to languages that restrict valid programs to ones whose properties can be formally proven. The latter approach relies on a body of theoretical knowledge that can appear intimidating. It turns out, however, that much of the required insight is built on systematic extensions of a very simple formal system – the lambda calculus.</p>
</blockquote>
<blockquote>
<p>While understanding of the basics of lambda calculus will not immediately make us experts in formal methods, it is a gateway to the world of software engineering tools whose roots are in logic, mathematics and formal reasoning. Lambda calculus makes the task of learning advanced programming trechniques manageable by providing a simple framework within which programming constructs can be understood.</p>
</blockquote>
<p>I will be presenting an introduction to lambda calculus in November, at <a href="http://www.meetup.com/london-scala/events/211358892/">London Scala User Group</a>, and in December, at <a href="https://skillsmatter.com/conferences/1948-scala-exchange-2014#program">Scala eXchange</a>. If you are interested in this talk but can’t make any of those dates then I expect the videos to be available shortly after.</p>
<p><a href="https://skillsmatter.com/skillscasts/5863-introduction-to-lambda-calculus">Introduction to Lambda Calculus | SkillsCast</a></p>
]]></content:encoded></item><item><title>Elegy to the Bliss</title><link>https://blog.mmakowski.com/cooking/elegy-to-the-bliss/</link><pubDate>Tue, 25 Oct 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/elegy-to-the-bliss/</guid><description>I met Katja at Barleylands Farmers Market near Billericay. She was selling various smoked goods, of which some – sea salt, garlic, cheese – looked weird, but whole trout caught my attention. Katja told me it can be eaten cold or heated up and served with potatoes, the latter of which I found a bit surprising. In the end I tried it cold, on a sandwich with home-made sourdough rye bread, and it was glorious.</description><content:encoded><![CDATA[<p>I met Katja at Barleylands Farmers Market near Billericay. She was selling various smoked goods, of which some – sea salt, garlic, cheese – looked weird, but whole trout caught my attention. Katja told me it can be eaten cold or heated up and served with potatoes, the latter of which I found a bit surprising. In the end I tried it cold, on a sandwich with home-made sourdough rye bread, and it was glorious. I kept coming back every two weeks just to buy the trout. Eventually I sold the car, but kept coming on a bike, 30 minutes each way via busy roads – for the trout. One weekend we even rode up to Stock to visit the smokehouse and see how the trout and other smoked food is actually prepared. When I learned Hanningfield Smokehouse – that’s what Katja and Colin’s company was called – have an online shop and do deliveries, every couple of weeks I ordered the trout (three packs for £24, to qualify for free delivery), and Katja, or sometimes Colin would drive up and bring the fish in a styrofoam ice box, usually leaving it behind the garden gate, as noone was home.</p>
<p>Then, this July, I received an email from Colin. They were going to shut down for three weeks, as Katja was unwell and needed to go to a hospital. Then, came August, a <a href="https://blog.mmakowski.com/travel/zen-i-sztuka-k%C4%85pieli/">trip to Japan</a>, lots of work with building bedroom furniture, and it was September when I realised it’s been two months since I last had my favourite sandwich topping. In response to my inquiry about the status of the business and Katja’s wellbeing, I received sad news: after spending eight weeks in a hospital Katja is finally back home and recovering, but in the present situation the couple cannot carry on running the smokehouse and are looking to sell it. I can only thank Katja and Colin for the ultimate pabulatory pleasure they have been providing me with over that last few years and wish them all the best wherever life takes them next.</p>
<p>What remains for yours truly are the remainders of the perfect supper combination: sourdough rye bread, butter, Hanningfield Smokehouse hot smoked rainbow trout, Tesco Finest piccolo tomatoes on the vine (ones produced by Thanet Earth in Kent), and a bottle of Brewdog Nanny State – sans the trout. As everything else can be bought in Tescos, let us focus on the bread.</p>
<p><img src="https://c5.staticflickr.com/8/7378/28024808236_09e86df36c.jpg" alt="a piece of bread with smoked trout, tomatoes and comte cheese on the side, Brewdog Nanny State beer"></p>
<p>I first got the sourdough starter from my in laws in 2009, I think. Since then I shared it with friends, used all up when we went away for two months, got a portion back from the friends upon return, and for more than five years now I have continuously been keeping the sourdough, refreshing it every now and then while making a new loaf. Someone I know – I won’t go into details, in case US CBP scrapes the internet for bits of incriminating information on individuals crossing the border – once took a small jar of the dough with him when traveling to the US. It was for a Polish friend who lived in rural Tennessee, and had to suffer what passes over there for bread. When filling in the customs declaration form, he neglected to declare the presence of <em>lactobacilli</em> colony in his baggage and thus managed to smuggle the starter. It then spread across many households in Oak Ridge area, and I would not be surprised if it is still in use in some form until this day.</p>
<p>Right, the bread. Ingredients, for one loaf:</p>
<ul>
<li>125g of <strong>wheat flour</strong></li>
<li>125g of <strong>spelt flour</strong></li>
<li>125g of <strong>rye flour</strong></li>
<li>100g of <strong>seeds</strong>: pumpkin, sunflower, linseed</li>
<li>some half cup of <strong>porridge oats</strong></li>
<li>some <strong>wheat bran</strong> (optional)</li>
<li>a pinch of salt</li>
<li>two cups and a bit of warm water</li>
<li><strong>sourdough starter</strong></li>
</ul>
<p>First mix all of dry ingredients in a bowl, then add the starter and mix, finally add the water and mix well. No need to knead. The consistency should be perhaps not quite watery, but more liquid than you would normally expect from a yeast dough. Leave to rest for 3-4 hours, covered with a kitchen towel. Then save a few tablespoons of the dough as the starter for the next batch and transfer the rest to the baking tin, which has been previously greased with butter and covered in breadcrumbs. Let the dough raise for further 3-4 hours, then place in a 180C oven for an hour and a half. In practice I often prepare the bread in the evening, transfer the dough to the tin around 10 PM and program the oven to finish the hour-and-a-half baking cycle at 7 AM.</p>
<p>Let me know if you need some sourdough starter, I’ll be happy to share. And let me know if you find a good smoked rainbow trout anywhere.</p>
]]></content:encoded></item><item><title>Zen i sztuka kąpieli</title><link>https://blog.mmakowski.com/travel/zen-i-sztuka-k%C4%85pieli/</link><pubDate>Sat, 06 Aug 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/zen-i-sztuka-k%C4%85pieli/</guid><description>Rakieta Dziwolągi, egzotyka, ciekawostki – to absorbuje gawiedź. Stąd obraz Japonii, w który wyposaża nas popkultura, to dziwne rytuały, obca zupełnie mentalność, ekstrawaganckie stroje, high-tech, kodeks honorowy. Na górze Tsukuba tej inności nie widać, ludzie wchodzą jak w Europie, pocą się i dyszą jak w Europie, mówią “dzień dobry” jak w Europie. Ubierają się trochę może inaczej: więcej jest wynalazków, elementów garderoby które dobitnie podkreślają “teraz jestem na wycieczce górskiej”, te wszystkie techniczne leginsy i skarpety pod specjalnymi szortami, kapelusze i czapki od słońca, butle, plecaki i plecaczki, saszetki, kije.</description><content:encoded><![CDATA[<h2 id="rakieta">Rakieta</h2>
<p>Dziwolągi, egzotyka, ciekawostki – to absorbuje gawiedź. Stąd obraz Japonii, w który wyposaża nas popkultura, to dziwne rytuały, obca zupełnie mentalność, ekstrawaganckie stroje, high-tech, kodeks honorowy. Na górze Tsukuba tej inności nie widać, ludzie wchodzą jak w Europie, pocą się i dyszą jak w Europie, mówią “dzień dobry” jak w Europie. Ubierają się trochę może inaczej: więcej jest wynalazków, elementów garderoby które dobitnie podkreślają “teraz jestem na wycieczce górskiej”, te wszystkie techniczne leginsy i skarpety pod specjalnymi szortami, kapelusze i czapki od słońca, butle, plecaki i plecaczki, saszetki, kije. Sprzęt trekkingowy jest w głównej mierze produkcji zachodniej. Japonia jest zamerykanizowana, wesela i śluby wyglądają jak na zachodzie, obok tradycyjnych knajp z <em>yakitori</em>, <em>soba</em>, <em>tempura</em>, <em>gyoza</em> i <em>cha</em> mieszczą się sieci kawiarń i fast foodów serwujących <em>chizukeki</em>, <em>aisukurimu</em> oraz <em>hambaga</em>.</p>
<p>U ponóża góry świątynia buddyjska, jak z obrazka: podwinięty dach, wielki dzwon, bębny, które bębnią o trzeciej po południu. Za 100 lub 200 jenów można sobie wylosować wróżbę. Po jej odszyfrowaniu, co podobno nie jest sprawą prostą, należy zdecydować, czy jest szczęśliwa, czy nie. Niektórzy oceniają pomyślność na skali pięciostopniowej, i zatrzymują tylko wróżby które osiągną przynajmniej określony stopień, na przykład czwarty lub piąty. Te odrzucone przywiązuje się do sznurków, żeby się nieszczęście wywiało na wietrze.</p>
<p>Tsukuba ma centrum lotów kosmicznych, z prawdziwą japońską rakietą, ale jest poniedziałek i wszystkie atrakcje wystawowo-muzealne są zamknięte. Siedzę więc w Starbucksie i popijam kolejne serniki kolejnymi kawami. Nie mają tu espresso.</p>
<h2 id="matoba-san">Matoba-san</h2>
<p>Na pierwszy rzut oka Kioto to przeciwieństwo Tokio. Na drugi już nie: owszem jedno się zaczyna, a drugie kończy na <em>kyō</em>, 京 (stolica), ale w Kioto jest <em>to</em>, 都 (też stolica) zaś w to Tokio <em>tō</em>, 東 (wschód). O ile etymologicznie są to miasta sobie bliskie, o tyle semantyczna opozycja jak najbardziej istnieje: Tokio to nowoczesność, pośpiech, tłumy w garniturach upychane do metra, wysokościowce, neony; Kioto to historia, spokój, turyści (japońscy) spacerujący w kimonach, wąskie uliczki, restauracje, świątynie, ogrody. Różnice te dobrze oddaje nasze locum: w Tokio mieszkamy w betonowym, nowoczesnym i naszpikowanym elektroniką hotelu-akademiku dla naukowców, w Kioto zaś zatrzymujemy się w pensjonacie w historycznym <em>Gion</em>, w pokoju zamkniętym papierowymi, zasuwanymi ekranami, z tatami na podłodze, z futonami do spania, z poduszkami do siedzenia. Łatwo popełnić fopa i zapomnieć o którymś z etapów zmiany obuwia. Przy wejściu zostawia się buty zewnętrzne i zakłada kapcie domowe. Te zdejmuje się przed wejściem do pokoju, gdzie chodzi się boso. Kapcie domowe zdejmuje się też przed wejściem do toalety, lecz tam zakłada się dyżurne, toaletowe kapcie.</p>
<p>Po oświecenie i medytację w otoczeniu natury udajemy się do Arashiyama. Jest to deptak nad rzeką, pokryte lasem wzgórze oraz słynna ścieżka przez gaj bambusowy. Trzecie oko otwiera nam się w <em>Shoraian</em>, ukrytej w lesie restauracji, gdzie posiłek spożywa się klęcząc na tatami przed niskim stolikiem, a menu oparte jest o tofu.</p>
<p><img src="https://live.staticflickr.com/8702/28792136365_fd58bbdfc1_c.jpg" alt="https://live.staticflickr.com/8702/28792136365_fd58bbdfc1_c.jpg"></p>
<p>W naszym zestawie jest chyba pięć albo sześć rodzajów, choć jemy też rybki oraz narybek, a także kawałki mięsa. Do niektórych dań dodawane są wiersze lub ilustracje. Miejsca nie ma dużo, tak na kilkanaście osób, wszyscy pozostali gości to japończycy. Z tego być może powodu zainteresował się nami Matoba-san, starszy pan siedzący z rodziną nieopodal. Podszedł, przedstawił się, po czym poprosił o kartkę, na której piórem do kaligrafii napisał nam wiersz oraz narysował ilustrację. Potem była sesja zdjęciowa, prezenty (dostaliśmy mandarynki i japońskie herbatniki, myśmy dla nich niczego nie mieli) oraz wymiana wizytówek (tu znów nie mieliśmy się czym zrewanżować, daliśmy więc wizytówkę Shoraiana z naszymi telefonami dopisanymi ołówkiem). To wszystko odbyło się bez jakiejkolwiek możliwości porozumienia werbalnego, Matoba-san nie mówił bowiem po angielsku ani po polsku. Dopełnienie naszej transformacji następuje w <em>Tenryu-ji</em>, buddyjskiej świątyni zen otoczonej ogrodem, gdzie każda roślina jest na swoim miejscu, wielkie sumy w stawie kłębią się dostojnie, góry w oddali układają się w perfekcyjne tło, zaś antyczne budynki pachną egzotycznym drewnem. W takim miejscu wyzbywanie się “ja” wydaje się najprostszą rzeczą pod słońcem.</p>
<p><em>Ninjo-jo</em> to jedno wielkie “ja”. Z zewnątrz, w formie nie tak znów różne od <em>Tenryu-ji</em>, też są rozległe budynki wyłożone tatami, jest też ogród. Jednak wnętrze pałacu Ninomaru skonstruowane jest wokół potrzeb jednej osoby: szoguna. Kolejne pokoje to fantastyczna sekwencja naściennych malowideł, dopasowanych do funkcji i charakteru pomieszczeń. Na złotym tle rozpościerają się konary sosen, kwiaty, sceny ze wschodniej historii i mitologii; obrazy podniosłe i imponujące w salach oficjalnych, subtelne i oszczędne w pokojach prywatnych oraz przeznaczonych do audiencji rodzinnych. Ogrody eleganckie, w ich organizacji brak jednak tego pierwiastka doskonałej harmonii, organicznej kompozycji, którą uderza przyroda okołoświątynna. Cały kompleks, otoczony murami grubymi i wysokimi na kilkanaście metrów oraz szerokimi fosami, sprawia wrażenie twierdzy nie do zdobycia. Aż dziw, że większość potomków Tokugawy, założyciela szogunatu i budowniczego tego imponującego zamku, nie postawiła tu nawet stopy.</p>
<h2 id="soba">Soba</h2>
<p>“The food here is brilliant. Everything is so fresh!” – powiedział Matt H. zabierajac mnie do restauracji na pizzę podczas mojego pierwszego, służbowego wyjazdu do Tokio. Nie zobaczyłem wtedy nic, nie wiedziałem nawet co to znaczy <em>arigato</em> (a powtarzają to w Japonii bez przerwy) zaś największym wyzwaniem kulinarnym były kiełbaski maczane w surowym jajku. Teraz jemy gyozę w małej knajpce na Shinjuku, tofu w Shoraianie, kulki z ośmiornicy na targu Nishiki w Kyoto, sushi i bento kupione w supermarkecie, sobę i tempurę w restauracji. Z tego wszystkiego tradycyjna, wyszukana kuchnia japońska, jak w Shoraianie, najmniej nam pasuje. <em>Comfort food</em>, czyli tempura i gyoza, to lepsza opcja dla gościa z zachodu, i tańsza. Podobno Tokio jest miastem z największą na świecie liczbą gwiazdek Michelin – i to zaaplikowanych do kuchni nie tylko japońskiej, włoska i francuska jest dość popularna – ale na to akurat nie polujemy. Bezgwiazdkowa soba, czyli makaron z mąki gryczanej, jedzony na zimno z sosem sojowym, do tego różne warzywa i owoce morza w tempurze, pikantna pasta miso z kiszonkami, to chyba nasze optimum kuchni japońskiej. Sushi z supermarketu to też świetny wybór, tańsze niż w londyńskim Itsu, i dużo lepsze.</p>
<h2 id="onsen">Onsen</h2>
<p>Uciekamy w góry; ja przed gorącem, Ania przed pracą. Praca Anię dogania: w każdej wolnej chwili na wierzchu jest komputer, przeglądane są wyniki obliczeń. Dwa dni wcześniej zrobiłem rekonesans górski w pobliżu, w Oku-Tama, godzinę pociągiem z Tachikawa. Góry tam są wysokości Beskidu Śląskiego, po kilometr z hakiem, gęsto zalesione, lecz znacznie bardziej strome. Za 2500 jenów pożyczam rower, mówiąc, że jadę do jeziora Oku-Tama, tymczasem kilometr za wioską skręcam w boczną drogę. Wypatrzyłem sobie tę trasę w sposób, w jaki zwykle planuję wycieczki w nieznanym terenie: Google Maps z włączonymi zdjęciami okolicy, patrzę, gdzie skoncentrowane są te z ładnymi widokami, potem trochę Street View, obrazów satelitarnych oraz <a href="https://openstreetmap.org">Open Street Map</a> z warstwą rowerową, czyli jedyną pokazującą poziomice. Kto by tam jednak patrzył na poziomice! O ile fajniej jest poczuć gradient w nogach, podjeżdżając górską drogą na przełęcz, oraz w rękach, hamując pulsacyjnie podczas zjazdu, tak by się obręcze w pożyczonym rowerze nie przegrzały!</p>
<p>Myoko-yama, górę wysokości Rysów, zlokalizowałem metodą następującą: na <a href="https://www.volcanodiscovery.com/japan.html">mapie japońskich wulkanów</a> wyszukałem ten najbardziej aktywny mieszczący się na wyspie Honshiu (to Niigata-Yake). Następnie, przy użyciu Google Maps zacząłem szukać dróg nań prowadzących; okazuje się, że jest to góra dość trudno dostępna, jednak po drugiej stronie doliny znajduje się Myoko, na którą prowadzi kilka szlaków z niezbyt odległych miejscowości. Shinkansen oraz lokalny pociąg dowiozą nas tam z centrum Tokio w około trzy godziny. <em>Et voilà</em>, plan na jednodniowy wypad w góry gotowy. Mądrość tej metody planowania treków niech Czytelnicy sami ocenią.</p>
<p>Pensjonat <em>Tsubame Highland Lodge</em> to chata w stylu alpejskim, w ramach dekoracji dzwonki z napisem “Switzerland” oraz róg alpejski, do śniadania tyrolskie śpiewy. Pojawiamy się tam o pierwszej i chcemy wyruszać na górę, tymczasem dowiadujemy się od zatroskanej obsługi pensjonatu, że jak się doda trzy i pół do półtora a potem pomnoży przez dwa, to wychodzi dziesięć godzin, czyli z góry schodzilibyśmy po ciemku, a jest stroma, śliska, są przepaście i inne niebezpieczeństwa. Poprzestajemy więc na czterogodzinnej wycieczce szlakiem prowadzącym na szczyt, w gęstym, wilgotnym lesie, wśród roznoszącego się tu i ówdzie zapachu siarki.</p>
<p>Okazuje się, że wytypowana przez nas lokalizacja górska nie była zupełnie chybiona, bowiem skutkiem bliskości aktywnych wulkanów jest duża liczba gorących źródeł i zbudowanych przy nich onsenów – tradycyjnych japońskich łaźni. Kolejnego ranka zatem pobudka przed szóstą rano, dwudziestominutowy spacer w górę, po czym piętnaście minut relaksu w ukropie, wśród skał i drzew, pod bezchmurnym niemal niebem, z widokiem na szczyt Myoko. Dla samych tych piętnastu minut warto pofatygować się z Tokio w tę okolicę.</p>
<p><img src="https://live.staticflickr.com/8548/28174516024_c898a11194_c.jpg" alt="https://live.staticflickr.com/8548/28174516024_c898a11194_c.jpg"></p>
<h2 id="kolejka">Kolejka</h2>
<p>Tradycyjne, przesuwane drzwi produkowane są teraz z plastiku lub metalu oraz laminatu udającego drewno. W nowych budynkach ściany to bloki surowego betonu. Już w Gion w Kioto, w drewnianych domach z żaluzjami z cienkich, pionowych listewek, widać oszczędność formy i materiału. Przewody energetyczne rozprowadzone są ze słupów nie w takim może chaosie jak w Indochinach, ale też niezbyt estetycznie. Budownictwo jest praktyczne, nie piękne. Piękne są ogrody. Nie tylko przyświątynne i przypałacowe, ale też przy domkach jednorodzinnych: wypielęgnowane krzewy, przystrzyżone drzewa, ascetyczna elegancja.</p>
<p>Praktyczne są samochody, małe pudełka z małymi silnikami, wszędzie się mieszczą i niewiele palą. Praktyczna jest dbałość o to, co w życiu ważne: wygoda, higiena; najbardziej wyrafinowany gadżet w wilu domach to klozet, podgrzewana deska, szereg przycisków do mycia i suszenie różnych części ciała (“wand cleanera” nie odważyłem się przetestować). Praktyczne są oznaczenia na stacjach kolejowych: tu zatrzymuje się ten wagon tego pociągu, wzdłuż tej linii stać w kolejce do najbliższego pociągu, wzdłuż tej do kolejnego. I ludzie czekają w tych kolejkach! Ta dyscyplina, szczegółowe planowanie (w oparciu o solidne podstawy naukowe, założyć można) powoduje, że pociągi jeżdżą zgodnie z rozkładem, co do sekundy. Też bardzo praktyczne.</p>
<h2 id="arigatō">Arigatō</h2>
<p>Nie szkodzi, że nie rozumiesz ni w ząb, co chcą powiedzieć (choć, wraz ze zrozumieniem jednego słowa lub odszyfrowaniem jednego znaczka kanji spływa nagle dar rozumienia, już japoński nie jest obcy, już wszystko wydaje się proste, jesteś mistrzem japońskiego i wszystkich języków). I bez porozumienia słownego napotkani Japończycy są nieodmiennie życzliwi i uprzejmi. Nie chodzi nawet o te ukłony ekspedientów, czy kelnerki klęczące przy stoliku podczas składania zamówienia – takie uniżenie akurat może być nie w smak Europejczykom. Życzliwości zaznać można w kontaktach zawodowych, ale też ze strony przypadkowych osób napotkanych w drodze, na stacji, w restauracji. Dziękujemy profesorowi Yamagata za serdeczne przyjęcie w Tsukuba. Dziękujemy Matoba-san za wiersz, rysunek oraz prezenty. Dziękujemy zawiadowcy stacji Sekiyama, który rozpisał nam przesiadki i poczęstował czekoladkami, choć sami o nic go nie pytaliśmy. Dziękujemy pani z kawiarni na tejże stacji, która w odpowiedzi na pytanie na migi wyciągnęła telefon i zamówiła dla nas taksówkę. Dziękujemy menedżerowi Tsubame Highland Lodge, który odwiózł nas na stację samochodem. Może to dlatego, że wyglądaliśmy na bezradnych, na zagubionych w tym tradycyjnym, ultranowoczesnym, pięknym, pragmatycznym, egzotycznym kraju. Tak czy inaczej, było nam miło. Arigatō gozaimasu!</p>
<p><img src="https://live.staticflickr.com/8820/28185038624_40c9ff4b19_b.jpg" alt="https://live.staticflickr.com/8820/28185038624_40c9ff4b19_b.jpg"></p>
<p><a href="https://www.flickr.com/gp/mmakowski/7zWh93">Japan</a></p>
]]></content:encoded></item><item><title>Datapalooza, or IBM's Land Grab</title><link>https://blog.mmakowski.com/technology/datapalooza-or-ibms-land-grab/</link><pubDate>Thu, 30 Jun 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/datapalooza-or-ibms-land-grab/</guid><description>IBM Watson’s spectacular success in Jeopardy a couple years ago was widely reported and highlighted the fact that the company, not generally considered to be at the forefront of technological innovation for the past 15 years or so, is attempting to carve for itself a large slice of the big data/data science/machine learning/cognitive computing/whatever term is fashionable this week pie. I did not appreciate the scope of their foray into this space until the Datapalooza Mashup event today.</description><content:encoded><![CDATA[<p>IBM Watson’s spectacular success in Jeopardy a couple years ago was widely reported and highlighted the fact that the company, not generally considered to be at the forefront of technological innovation for the past 15 years or so, is attempting to carve for itself a large slice of the big data/data science/machine learning/<a href="http://www.rogerschank.com/fraudulent-claims-made-by-IBM-about-Watson-and-AI">cognitive computing</a>/whatever term is fashionable this week pie. I did not appreciate the scope of their foray into this space until the <a href="https://skillsmatter.com/conferences/8168-datapalooza-mashup-2016">Datapalooza Mashup</a> event today.</p>
<h2 id="resources-and-tooling-for-data-science">Resources and Tooling for Data Science</h2>
<p>To start with, IBM offers a wealth of free educational material on all things data science at <a href="http://bigdatauniversity.com/">Big Data University</a>. On the surface it looks similar to Coursera, but solely focussed on big data et al. The selection of paths and courses seems impressive, although on closer look most of the ones in Machine Learning track are not available yet. That said, Rav Ahuja from IBM Canada claims the course completion rate is 60%, which compares rather favourably with industry average of less than 20%. Another free offering from IBM, <a href="http://datascientisworkbench.com">Data Scientist Workbench</a>, provides data storage and cleaning facilities (OpenRefine) and web-based notebooks (Zeppelin and Jupyter) as well as web version of RStudio.</p>
<h2 id="wimbledon-social-data">Wimbledon Social Data</h2>
<p>PaaS is a perfect match for data analysis tasks: we can experiment for free on small data sets and then pay to have the large set processed quickly. One caveat is that our data set is going to end up in a thrid-party service, so it might not be appropriate for sensitive data. <a href="http://bluemix.net">BlueMix</a> is IBMs “PaaS for data science” offering, built on popular CloudFoundry stack. In order to prove that it is not just for messing around with tiny examples, Darren Shaw demonstrated <a href="http://ccc-w.eu-gb.mybluemix.net/">Cognitive Social Command Center</a>. This sinister-sounding dashboard gives Wimbledon tournament organisers insight into what the community of tennis fans is talking about in the context of the tournament; this in turn can allow them to better target the content they produce, and, ultimately, make more money. Architecturally, it sources data from YouTube, Facebook, Instagram and Gnip APIs. The messages are then pushed onto MessageHub, which is IBM’s version of <a href="https://kafka.apache.org/">Apache Kafka</a>. MessageHub acts as the data fabric behind a pipeline that first runs a classifier to identify which messages are of interest (i.e. about the Wimbledon tournament), then annotates them with information such as inferred sentiment, topics and people that occur in the message (e.g. Andy Murray). Finally, analytics stage produces 60-second aggregations with additional annotations such as source, country etc. and pushes them into ElasticSearch, which is then queried by Node.js-based web UI. Behind the scenes, the classifier uses Watson Natural Language Classifier (NLC) and the annotator is backed by <a href="http://www.alchemyapi.com/">Alchemy API</a>. All of those, together with ElasticSearch, are available as services on BlueMix.</p>
<h2 id="node-red">Node-RED</h2>
<p>BlueMix-based <a href="http://nodered.org/">Node-RED</a> seems more like a toy, but very impressive nonetheless. It allows wiring together data inputs, processing components, and outputs, by moving boxes and drawing lines in a diagram. Within fifteen minutes we were able to put together a simple flow that <a href="https://medium.com/ibm-watson-developer-cloud/get-started-with-node-red-77b304558b75#.ehj2k3pe6">takes a constant sentence and runs one of the BlueMix Watson services to translate it to another language</a>. It’s easy to see how it can be extended to translate e.g. tweets or web pages. BlueMix offers a bunch of data processing algorithms branded as “Watson services”: language classification, translation, personality and concept insights, dialogue and conversation. Beyond NLP, it provides image recognition and speech-to-text as well as <a href="https://text-to-speech-demo.mybluemix.net/">text-to-speech</a>. The latter uses SSML to annotate the text with expression hints, specifying whether a given passage should sound apologetic, tentative or happy. IBM appears to slap the “Watson” brand on everything ML-related, in apparent belief that the positive publicity from Jeopardy will carry over to their more run-of-the-mill, commercial offerings.</p>
<h2 id="maps-and-mashups">Maps and Mashups</h2>
<p>Web mashups are so 2008. Dan Cunnington didn’t seem to mind, and has shown a <a href="http://bus.eu-gb.mybluemix.net">map of London</a> where you could select a bus line, and it would attempt to predict if there are any delays on that service. Initially he tried to process tweets that have been sent from a vicinity of a bus stop and mentioned “bus”, but that turned out to not be very informative. What turned out to be more useful were live feeds from traffic CCTV; Dan trained an image classifier to recognise congestion from CCTV stills, and that ended up working pretty well. The app was (of course) built on BlueMix platform.</p>
<p>One of the dat sources for Dan’s app was <a href="http://transportapi.com">TransportAPI</a>, which is actually very neat. You can, for example, <a href="http://fcc.transportapi.com/v3/uk/bus/stops/near.json?lat=51.5057&amp;lon=-0.0236">query bus stops</a> in the area surrounding a given geographical coordinates; for each bus stop you can get the <a href="http://fcc.transportapi.com/v3/uk/bus/stop/490016252N/live.json">scheduled arrivals</a> – that’s real, live data, not a fixed timetable – and for each of them you can get <a href="http://fcc.transportapi.com/v3/uk/bus/stop/490016252N/2016-06-30/13:33/timetable.html">entire route timetable as of given time</a>. Specifying <code>edge_geometry=true</code> will provide the line segments that form the exact route of the bus, so it can be drawn on a map. There is even a journey planning API. All of this is available for free for non-commercial uses and in a tiered payment plan for commercial uses, starting with 1000 free calls a day.</p>
<p><a href="https://www.ordnancesurvey.co.uk/innovate/developers/data.html">Ordnance Survey</a> is the ultimate source of geographical data for the UK. Their maps, with 0.5 metre accuracy, building outlines, massive amount of detail and low-contrast colour schemes are perfect for overlaying data from other sources. In addition, “premium” places and property APIs allow searching for coordinates by parts of address, finding out what purpose a given building serves and locating listed buildings in a given area. An app that demonstrates the basics of interaction with TransportAPI, OS and Weather, can be found <a href="https://github.com/ibm-datapalooza/nodejs-starter">on Github</a>.</p>
<h2 id="databases">Databases</h2>
<p>BlueMix provides a smorgasbord of data storage options. One of them is <a href="https://cloudant.com">Cloudant</a>, a document-oriented database which looks a bit like IBM’s take on MongoDB, with its id only access and indices specified as javascript functions run by map/reduce jobs. Somewhat more interesting is the not very imaginatively named <a href="http://www-03.ibm.com/software/products/en/ibm-graph">IBM Graph</a> – a graph database built on <a href="http://tinkerpop.incubator.apache.org/">Apache TinkerPop</a>, <a href="http://titan.thinkaurelius.com/">Titan</a>, <a href="https://cassandra.apache.org/">Cassandra</a> (as a storage engine) and <a href="https://www.elastic.co/products/elasticsearch">ElasticSearch</a> (for indices). All are perhaps sound picks, but given a choice between TinkerPop’s Gremlin and Neo4j’s Cypher as a query language, I’d go for the latter. With graph databases becoming more relevant due to applications such as social graph analysis, fraud detection and logistics optimisation, we might eventually end up with a standard, algebraic language for querying graphs that plays the same role as SQL for relational databases.</p>
<h2 id="bluemix">BlueMix</h2>
<p>So, how is BlueMix? I have not kicked the wheels properly and have not developed and deployed a complete application; with that caveat, I would say it looks encouraging. It largely builds on familiar, open-source products. Data science focus puts it apart from dozens of other PaaS offerings, although Microsoft Azure ML and Amazon Machine Learning are close contenders. While not aimed at non-technical users (<a href="https://watson.analytics.ibmcloud.com/product">Watson Analytics</a>, a Watson-branded product that has nothing to do with Jeopardy winner, is for those), it inherits CloudFoundry’s developer-centric ease of wiring things together using REST APIs. Most of the demos presented were toy examples, but the Wimbledon social media analysis app shows that it can be used for serious work.</p>
]]></content:encoded></item><item><title>Auguststraße i bunkier</title><link>https://blog.mmakowski.com/travel/auguststra%C3%9Fe-i-bunkier/</link><pubDate>Wed, 06 Apr 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/auguststra%C3%9Fe-i-bunkier/</guid><description>Z jednej strony ulicę zamyka Tacheles. Artyści się wyprowadzili, były squat stoi pusty. Z podcieni na piętrze wciąż straszą rzeźby ze złomu, maszkarony z nosami zrobionymi z kranów. Z bocznej ściany wydostać się próbuje gigantyczny karaluch. Na drugim końcu jest cmentarz garnizonowy. Po przeciwnej stronie ulicy, na zrujnowanej kamienicy, napis “Soldaten sind Mörder”, oraz transparent głoszący, że zatroskanym mieszczanom oraz ich nazistowskim poplecznikom należy wyrwać zęby.
Pod numerami 11-13 mieści sie była Jüdische Mädchenschule – budynek prosty i funkcjonalny, zbudowany przez Aleksandra Beera w latach 20 XX w.</description><content:encoded><![CDATA[<p>Z jednej strony ulicę zamyka <em>Tacheles</em>. Artyści się wyprowadzili, były squat stoi pusty. Z podcieni na piętrze wciąż straszą rzeźby ze złomu, maszkarony z nosami zrobionymi z kranów. Z bocznej ściany wydostać się próbuje gigantyczny karaluch. Na drugim końcu jest cmentarz garnizonowy. Po przeciwnej stronie ulicy, na zrujnowanej kamienicy, napis “Soldaten sind Mörder”, oraz transparent głoszący, że zatroskanym mieszczanom oraz ich nazistowskim poplecznikom należy wyrwać zęby.</p>
<p>Pod numerami 11-13 mieści sie była <em>Jüdische Mädchenschule</em> – budynek prosty i funkcjonalny, zbudowany przez Aleksandra Beera w latach 20 XX w. Starsze uczennice miały dostęp do tarasu na dachu, gdzie mogły się relaksować – ale tam się teraz nie da wejść. Obecnie, jak większość kamienic w okolicy, mieści galerie i knajpy. Na piętrze wystawa fotografii: wielkoformatowe druki bardzo efektownych zdjęć krajobrazów z Arizony, Nowej Zelandii, Namibii, Islandii, Szkocji. W niektórych z tych miejsc byłem, ale nie widziałem tak spektakularnych widoków; aby je dostrzec trzeba widać mieć zmysł artystyczny. Reprodukcje można kupić, kosztują między 7 a 30 tysięcy euro. Na parterze, w <em>Mogg</em>, dają podobno znakomite pastrami. Wołowinę na nie sprowadzają z USA, bo tylko tam wiedzą, jak pokroić krowę na pastrami. My raczymy się tylko naparem z tymianku i cytryny.</p>
<p><img src="https://live.staticflickr.com/1489/26252083126_28c7d893d1_c.jpg" alt="bukier na czarno-biało"></p>
<p>Kilkadziesiąt metrów dalej, podwórko z cygańską knajpą, a w rogu drzwi. Obdrapaną klatką schodową wchodzimy na piętro, gdzie mieści się sala balowa <em>Clärchens Ballhaus</em>. Nie remontowana od stu lat chyba, światło sączy się z dwóch okien pod sufitem i ledwo oświetla żyrandol, balkon i stojący pod ścianą piec. Z sufitu odpadła część stiuków. Post-apokaliptyczna atmosfera rozkładu i przebrzmiałej dekadencji.</p>
<h3 id="--">* * *</h3>
<p>Trafiliśmy tu przypadkiem, omijając półmaraton. Blok mieszkalny wpasował się w krajobraz, przechodząc najpierw okrakiem nad ulicą, a później nad bunkrem. Kilkunastometrowej wysokości ślepe ściany betonowego kloca bunkra tak dobrze wtapiają się w krajobraz, że jadąc wzdłuż niego na rowerze można by nie zwrócić uwagi, gdyby nie wielkie symbole niebieskiego trójkąta na tle czerwonego koła. To była podobno podejrzana okolica, ale od paru lat po mieszkania w bloku nad bunkrem stoją kolejki.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/b7H6A2">Berlin (Apr 2016)</a></p>
]]></content:encoded></item><item><title>Hello Katie</title><link>https://blog.mmakowski.com/travel/hello-katie/</link><pubDate>Tue, 05 Apr 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/hello-katie/</guid><description>Wyjechaliśmy znów na Wielkanoc do parku narodowego. Poprzednio, wiele już lat temu, wybraliśmy się do Peak District. Mieszkaliśmy na campingu w naszym maleńkim namiocie. Ania przed wyjazdem zrobiła mazurki, podzieliliśmy się nimi z obozującymi obok wspinaczami z Machesteru. W zamian uraczeni zostaliśmy winem z kartonu oraz piosenkami z mp3 na temat zwyczajów mieszkańców Yorkshire. Bardzo był to fajny wyjazd, zrobiliśmy wtedy długi trek wzdłuż Stanage Edge, wyszliśmy wcześnie rano, wróciliśmy po zmroku, bardzo zmęczeni.</description><content:encoded><![CDATA[<p>Wyjechaliśmy znów na Wielkanoc do parku narodowego. Poprzednio, wiele już lat temu, wybraliśmy się do Peak District. Mieszkaliśmy na campingu w naszym maleńkim namiocie. Ania przed wyjazdem zrobiła mazurki, podzieliliśmy się nimi z obozującymi obok wspinaczami z Machesteru. W zamian uraczeni zostaliśmy winem z kartonu oraz piosenkami z mp3 na temat zwyczajów mieszkańców Yorkshire. Bardzo był to fajny wyjazd, zrobiliśmy wtedy długi trek wzdłuż Stanage Edge, wyszliśmy wcześnie rano, wróciliśmy po zmroku, bardzo zmęczeni.</p>
<p>Tym razem pojechaliśmy do Exmoor, na spotkanie sztormu Katie. Sztormy i nawiedzające Irlandię i Wielką Brytanię mają teraz imiona zaczynające się na kolejne litery alfabetu. Przedtem był Jake, wcześniej Imogen, teraz pora na Katie. Sztorm nas trochę przewiał i zmoczył, ale poza tym nie położył się większym cieniem na naszym wyjeździe.</p>
<p><img src="https://live.staticflickr.com/1636/26148355282_91caf3c584_c.jpg" alt="https://live.staticflickr.com/1636/26148355282_91caf3c584_c.jpg"></p>
<p>Zrobiliśmy w sumie cztery wycieczki piesze, z czego trzy – Watersmeet, Valley of Rocks oraz Horner Woods – są <a href="http://www.exmoor-nationalpark.gov.uk/__data/assets/pdf_file/0003/93468/watersmeet_and_the_cleaves.pdf">znane</a> i <a href="http://www.exmoor-nationalpark.gov.uk/__data/assets/pdf_file/0016/116107/lyntonlynmouthvalley_of_rocks.pdf">dobrze</a> <a href="http://www.exmoor-nationalpark.gov.uk/__data/assets/pdf_file/0009/116100/horner_woods.pdf">opisane</a>, więc nie będę się tu nad nimi rozwodził; nadmienię tylko, że widoki są super i warto te trasy zrobić. Tylko Valley of Rocks nie byliśmy w stanie należycie ocenić, bowiem na niezwykle efektownej nadmorskiej ścieżce między Lynton a zachodnim końcem doliny zmoczył nas deszcz i później wracaliśmy pędem do domu nie rozglądając się specjalnie.</p>
<p>To, co chciałem tu dokładniej opisać, to nasz autorski pomysł, czyli całodzienna trasa w okół centralnych <em>moorlands</em> – Google Translate mówi, że to się tłumaczy jako “wrzosowiska”, ale tam są trawy, nie wrzosy, czyli bardziej stepy. Chcieliśmy wyść po śniadaniu, iść przez cały dzień, zrobić prawie pętlę, zajść do pubu na kolację i wrócić do naszego <a href="http://www.woodlandsguesthouse.co.uk/">pięknego B&amp;B</a>. Na oko trasa miała między 20 a 30 km i biegła po ścieżkach o niewiadomym (lecz podejrzewać można, że błotnistym) stanie nawierzchni, tak, że zakładałem do 10 godzin marszu. Wyruszyliśmy w Wielkanoc o dziesiątej rano. Trasę podzielić można na następujące etapy:</p>
<h3 id="lynbridge--west-lyn-1-km">Lynbridge – West Lyn (1 km)</h3>
<p>Za <em>Cottage Inn</em> jest kamienny mostek. Przechodzimy nim przez rzekę po idziemy w lewo i zaraz wprawo, wspinając się na zbocze drogą z jednym zakosem. Jest błotniście. Po pokonaniu stromego odcinka rozpoczyna się długa prosta znów błotnistą drogą, tym razem otoczoną z dwóch stron żywopłotami. Droga kończy się bramą prowadzącą do obejścia; tu zaczyna się asfaltowa szosa.</p>
<h3 id="west-lyn--cheriton-3-km">West Lyn – Cheriton (3 km)</h3>
<p>Cały ten odcinek przebiega asfaltówką, a przynajmniej drogą w jakiejś mierze utwardzoną – miła odmiana po błocie i przed tym, co nas jeszcze czeka. Na szosę wychodzimy na zakręcie, kierujemy się w lewo. Na odcinku w dół, za zakrętem po przecięciu głównej drogi, są ładne widoki i ciekawe drzewa porośnięte paprotkami. W Cheriton w prawo, i kończy się asfaltowa droga, wychodzimy na moorlands. Trzeba tu pilnować GPSa, bo najbardziej zaznaczone koleiny to trasy, którymi jeżdżą traktory, a nie nasz planowany szlak. Ten prowadzi dokładnie grzbietem wzniesień.</p>
<h3 id="cheriton--hoaroak-35-km">Cheriton – Hoaroak (3.5 km)</h3>
<p>Tu zaczyna się odcinek połączonych szlaków <em>Two Moors Way</em>, czyli długiej trasy łączącej Exmoor z leżącym na południu Dartmoor, oraz <em>Tarka Trail</em>, który nazwę swoją zawdzięcza postaci literackiej, czyli wydrze o imieniu Tarka. Wydra na tym szlaku mogłaby się czuć bardziej na miejscu niż ludzie. Grunt na moorlands jest dość specyficzny: z wierzchu pokrywają go suche trawy, lecz każdy krok wyciska z gleby wodę, czsasem natknąć się można na miejsce, gdzie noga wpada w ukrytą pod źdźbłami trawy wodę po kostkę albo i głębiej. Poza tym, wszędzie pełno zupełnie widocznego i nieomijalnego błota.</p>
<p>Pół godziny marszu w takich warunkach wystarczyło, żeby w moim lewym tym razem (poprzedniego dnia był prawy) bucie zrobiło się zupełnie wilgotno. Para Tev pamiętająca <a href="Blog/Travel/Z%20Hanoi%20do%20Sajgonu.md">tunele Vinh Moc</a>, <a href="Blog/Travel/S%C4%85%20g%C3%B3ry%2C%20to%20musi%20by%C4%87%20zimno.md">skały Warrumbungle</a>, <a href="Blog/Travel/Obrazki%20z%20Rumunii.md">góry Transylwanii</a>, oraz wiele innych miejsc, definitywnie wyzionęła ducha. Szedłem więc z wilgotną i nieprzyjemnie chłodną stopą po tym bagnie (ang. <em>bog</em>), kontemplując, jak to w tej piosence o kloszardzie było “He goes down to the bog and warms his feet”. Bez sensu.</p>
<p><img src="https://live.staticflickr.com/1656/25968179220_f3913d8f00_c.jpg" alt="https://live.staticflickr.com/1656/25968179220_f3913d8f00_c.jpg"></p>
<p>Na koniec tego odcinka schodzi się nad Hoaroak Water, a w końcu przekracza rzekę w bród.</p>
<h3 id="hoaroak--exe-head-2-km">Hoaroak – Exe Head (2 km)</h3>
<p>Po kilkudziesięciu metrach podejścia znajdujemy się na ścieżce trawersującej dolinkę lewym brzegiem rzeki, czyli prawym patrząc od nas, bo idziemy w górę nurtu. Dolinka jest bardzo urodziwa, a ścieżka, mimo że miejscami błotnista, jest przyjemniejsza niż zdradliwe moorlands.</p>
<h3 id="exe-head--woodbarrow-gate-35-km">Exe Head – Woodbarrow Gate (3.5 km)</h3>
<p>Po wspięciu się z dolinki – wiąże się to z kolejnym brodem – trasa zmienia kierunek z południowego na zachodni. Jest to długa prosta po prawej ręce mamy ogrodzenie, po jego drugiej stronie bagna, podobno większe niż to, którym dane jest nam iść. Jedynym urozmaiceniem na tym odcinku jest <em>Pinkworthy Pond</em>, zalew przed którym należy przenieść się na prawą stronę ziemnego wału, który w tym miejscu stanowi zwieńczenie zapory odzielającej zbiornik wodny od doliny.</p>
<h3 id="woodbarrow-gate--shallowford-1-km">Woodbarrow Gate – Shallowford (1 km)</h3>
<p>Na koniec prostej przechodzimy przez bramę po prawej stronie i kierujem się znów przez moorlands na północ. Ten odcinek był bardzo podmokły, i z ulgą przyjęliśmy widok niedalekich budynków gospodarstwa oraz utwardzonej drogi.</p>
<p><img src="https://live.staticflickr.com/1483/26215234736_05c437bbc9_c.jpg" alt="https://live.staticflickr.com/1483/26215234736_05c437bbc9_c.jpg"></p>
<h3 id="shallowford--barbrook-45-km">Shallowford – Barbrook (4.5 km)</h3>
<p>Asfaltem przez wioski. Jesteśmy już trochę zmęczeni.</p>
<h3 id="barbrook--west-lyn-15-km">Barbrook – West Lyn (1.5 km)</h3>
<p>Tutaj mogłem trochę lepiej zadziałać, bo ten odcinek pokonaliśmy główną, ruchliwą drogą, a chyba można było pójść inaczej, przez Metticombe Farm.</p>
<h3 id="beggars-roost-inn">Beggar’s Roost Inn</h3>
<p>Kolacja. Nie będąc pewnym naszego tempa i długości trasy, zarezerwowałem stolik na ósmą wieczorem, a do pubu dotarliśmy przed szóstą. Okazało się to nie stanowić problemu i kolację dostaliśmy od ręki. Niezbyt, prawdę powiedziawszy, udaną: mój hamburger był suchy, pewnie z mrożonki, a Ania zapchała się tortelini w sosie serowym. Piwa mieli tylko z browaru Exmoor, niedobre. Deser i wino (włoskie, czerwone) fajne, za to.</p>
<h3 id="west-lyn--lynbridge-1-km">West Lyn – Lynbridge (1 km)</h3>
<p>Powrót tak samo jak pierwszy odcinek, tylko w przeciwną stronę. Było już ciemno, a okazało się, że Ani czołówka była włączona w moim plecaku przez niewiadomo ile czasu i się wyładowała. Jedna, szczęśliwie, wystarczyła.</p>
<iframe src="https://www.google.com/maps/d/embed?mid=1toxxacfFX9hiYpjJ-7VR1IO5tc8&ehbc=2E312F" width="640" height="480"></iframe>
<h3 id="--">* * *</h3>
<p>Co jeszcze? Szosa między Lynton a Porlock jest super fajna, z ładnymi widokami na morze, a właściwie Kanał Bristolski. Wypożyczony na tę wycieczkę VW Scirocco z dwulitrowym dieslem trochę dresiarski, ale miło się prowadzi. Camelbak na zawsze już chyba będzie przypominał o <a href="https://blog.mmakowski.com/travel/osiem-dni-na-szczycie-afryki/">Kilimandżaro</a>, serwując wodę intensywnie smakującą chlorem.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/QF48k9">Exmoor Easter</a></p>
]]></content:encoded></item><item><title>Ketosis No. 2</title><link>https://blog.mmakowski.com/cooking/ketosis-no.-2/</link><pubDate>Sun, 21 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/ketosis-no.-2/</guid><description>Have you heard of ketosis? No? Apparently it’s the best thing since the sliced bread, only even better, because there is no bread, so no need to slice anything. There is no bread, because ketosis is all about getting your energy from fat. Apparently a chap has done it for a year, lost weight, has better cholesterol and some other metrics, feels great. Right, count me in. But, the scientific way to do it is being very exact with amounts of all the food ingredients, and really struggling to find foodstuffs which are fatty enough.</description><content:encoded><![CDATA[<p>Have you heard of ketosis? No? Apparently it’s the best thing since the sliced bread, only even better, because there is no bread, so no need to slice anything. There is no bread, because ketosis is all about getting your energy from fat. Apparently <a href="http://quantifiedself.com/2015/12/effects-year-ketosis-jim-mccarter/">a chap has done it for a year</a>, lost weight, has better cholesterol and some other metrics, feels great. Right, count me in. But, the scientific way to do it is being <em>very</em> exact with amounts of all the food ingredients, and really struggling to find foodstuffs which are fatty enough. Well, we have to start somewhere, so why not with fatty salads for lunch? <a href="https://blog.mmakowski.com/cooking/tesco-finest-salad/">My favourite one</a> would do, as it has plenty of avocado, mozzarella and olive oil, i.e. fat. I’d rather limit the risks of a monodiet by alternating it with something else. Enter the Greek salad.</p>
<p>I knew how to make a good Greek salad for ages, and then I saw how they do it in Peloponnese. Surprises? Just two: no lettuce, and added dried oregano. So, for the record, let’s start from scratch. Get:</p>
<ul>
<li>four good <strong>tomatoes</strong> (I prefer Tesco Finest <em>Kent Temptation</em>)</li>
<li>half of a <strong>cucumber</strong></li>
<li><strong>sweet pepper</strong> (ideally yellow, for colour variety)</li>
<li>half an <strong>onion</strong>, preferably red</li>
<li>half a jar of Greek-style <strong>olives</strong> (they do Kalamata from brine in Peloponnese, but I prefer the dried ones)</li>
<li>a block of <strong>feta cheese</strong></li>
<li>extra virgin <strong>olive oil</strong> with sharp taste (e.g. non-filtered)</li>
<li>some <strong>dried oregano</strong>.</li>
</ul>
<p><img src="https://farm2.staticflickr.com/1564/24810925039_8e4b8cce16_n.jpg" alt="greek salad"></p>
<p>Chop tomatoes, cucumber and pepper into large chunks – another change from my old ways, I used to julienne the pepper. Slice the onion thinly. Add the olives. Now, in Peloponnese they put the whole block of feta on top, I prefer to cube or crumble it, makes it less messy to eat. Pour a lot of olive oil on top, then sprinkle some dried oregano. Mix well. Done, our ketosis dish number two is ready!</p>
]]></content:encoded></item><item><title>W sawannie i w buszu</title><link>https://blog.mmakowski.com/travel/w-sawannie-i-w-buszu/</link><pubDate>Sun, 07 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/w-sawannie-i-w-buszu/</guid><description>Safari polega na tym, że się je, je i je, aż się nie można ruszyć, a później wsiada się w Land Cruisera albo (znacznie rzadziej) w Defendera i jest się wożonym po niesamowitych wertepach. Poza tym ogląda się dzikie zwierzęta – pomimo moich obaw, czy w porze deszczowej jakieś w ogóle można zobaczyć, było ich mnóstwo.
Zaczęło się od tego, że dzień przed wyjazdem Gerrard, nasz kierowca i przewodnik, przyszedł do naszej kwatery w Arusha aby omówić plany safari.</description><content:encoded><![CDATA[<p>Safari polega na tym, że się je, je i je, aż się nie można ruszyć, a później wsiada się w Land Cruisera albo (znacznie rzadziej) w Defendera i jest się wożonym po niesamowitych wertepach. Poza tym ogląda się dzikie zwierzęta – pomimo moich obaw, czy w porze deszczowej jakieś w ogóle można zobaczyć, było ich mnóstwo.</p>
<p>Zaczęło się od tego, że dzień przed wyjazdem Gerrard, nasz kierowca i przewodnik, przyszedł do naszej kwatery w Arusha aby omówić plany safari. Gerrard jest Tanzańczykiem w średnim wieku, z wąsikiem, po angielsku komunikuje się w dość specyficzny sposób, ma się wrażenie, że mówi trochę na okrętkę i że nie do końca rozumie pytania, które mu zadajemy. Do omawiania nie było wiele, bowiem harmonogram mieliśmy z góry ustalony: Tarangire, jezioro Eyiasi, Ngorongoro i jezioro Manyara. Z braku czasu odpuściliśmy sobie słynne Serengeti.</p>
<p>Przy rezerwacji safari do wyboru mieliśmy trzy standardy: podstawowy, z zakwaterowaniem w namiotach, “półluksusowy”, gdzie zamieszkuje się kwatery o bardziej stałym charakterze, oraz luksusowy, z noclegami w hotelach z najwyższej lokalnie dostępnej półki. Zwykle nie jesteśmy specjalnie łasi na luksusy, ale po <a href="/travel/osiem-dni-na-szczycie-afryki/">siedmiu nocach spędzonych w namiocie</a> woleliśmy odbyć safari w nieco bardziej cywilizowanych warunkach, wybraliśmy więc opcję środkową.</p>
<h2 id="pierwsze-zwierzaki-nad-jeziorem-manyara">Pierwsze zwierzaki nad jeziorem Manyara</h2>
<p>Rano pierwszego dnia safari okazuje się, że program jednak ulegnie pewnej zmianie, bowiem zdaniem Gerrarda Tarangire najlepiej odwiedzać jest wcześnie rano, a my wyruszamy z Arusha dopiero o 8:30. Jedziemy więc najpierw nad jezioro Manyara. Jest to park narodowy położony wokół rzeczonego jeziora, u podnóża ściany doliny ryftowej. Prócz jeziora, w jego skład wchodzą przybrzeżne trawiaste równiny oraz duża połać tropikalnej dżungli.</p>
<p><img src="https://live.staticflickr.com/1463/24832879996_6f6fa366bf_c.jpg" alt="https://live.staticflickr.com/1463/24832879996_6f6fa366bf_c.jpg"></p>
<p>W dżungli napotykamy napierw pawiany: samce siedzące w rozkroku i zabawiające się długimi, cienkimi penisami oraz samice z młodymi, noszonymi na brzuchu albo na plecach. Prócz pawianów w dużej liczbie występują małe koczkodany (kotawce sawannowe), zwane też <em>blue scrotum monkeys</em>, z tytułu jaskrawobłękitnego koloru jąder samców. Ania przyuważa w krzakach słonia. Na trawie i w bajorach przyjrzeć się możemy też gnu i bawołom, oraz zebrom, żyrafom i hipopotamom. Całą tę menażerię podziwia się z samochodu, który krąży po gruntowych drogach; gdy natkniemy się na interesujące zwierzę lub stado, kierowca zatrzymuje auto i wyłącza silnik, abyśmy mogli się naoglądać i nafotografować w spokoju. Samochody do safari wyposażone są w podnoszony dach: kierowca otwiera go przy wjeździe do parku, a potem możemy sobie stać i wystawiać głowy przez dziurę, podczas gdy podniesiona część dachu stanowi chroniący od słońca baldachim.</p>
<p>Opuszczamy w końcu park, lecz przed nami jeszcze jedno odkrycie tego dnia: standard i charakter kwater.</p>
<h2 id="kisima-ngeda-wypasione-namioty">Kisima Ngeda: wypasione namioty</h2>
<p>Kisima Ngeda Tented Camp leży nad jeziorem Eyiasi, na końcu świata, a przynajmniej na końcu kilkudziesięciokilometrowej drogi gruntowej, której przebycie zajmuje naszemu Land Cruiserowi ponad godzinę. Jest idyllicznie i sielsko: znad niewielkiego basenu, poprzez ciąg kładek i pomostów biegnących w zaroślach, wśród stawów z rybami, dojść można na łąkę rozpościerającą się nad brzegiem jeziora. Inny pomost prowadzi nad staw, gdzie chmary wikłaczy wiją gniazda na pobliskich drzewach i polują na owady. W oddali widać brzeg jeziora i sylwetki rybaków powracających z połowu. Jest zbudowana wokół palmy wieża obserwacyjna, z której rozpościera się widok na okoliczne mokradła i jezioro. W centrum stoi restauracja i bar – wiata, z bocznymi ścianami z moskitiery, zaś frontem otwartym w stronę jeziora. Wewnątrz kilka pięknych stołów oraz kanap z egzotycznego drewna i skóry.</p>
<p>Śpi się w czymś, co nominalnie jest namiotem, natomiast faktycznie domkiem o drewnianej konstrukcji z murowaną łazienką (toaleta, prysznic i umywalnia), krytym dachem z liści palmowych. Ogromny, płócienny namiot jest rozpostarty pod tym dachem, zapewaniając drugi dach oraz cztery ściany. W ścianach umieszczone są wielkie okna z moskitiery, tak, że z łoża ustawionego na środku pokoju oglądać można przez przezroczystą praktycznie ścianę frontową las palmowy oraz leżący kilkaset metrów dalej brzeg jeziora.</p>
<p><img src="https://live.staticflickr.com/1583/24232573403_18b43790e2_c.jpg" alt="https://live.staticflickr.com/1583/24232573403_18b43790e2_c.jpg"></p>
<p>Detale wystroju tego locum co i rusz wywołują u mnie reakcję: “ale wypas!”. Porównać to mogę tylko z tratwami, na których mieszkaliśmy podczas pobytu na <a href="/travel/wyprawa-2010-11/jedna-z-czterech-tysi%C4%99cy/">Don Khon</a> – z tym, że tu jest jeszcze bardziej zacisznie i luksusowo.</p>
<p>Pod restauracyjną wiatą dostajemy kolację – dwa wielkie kawały befsztyka, cegła puree, do tego dużo dodatków warzywnych, wszystko doskonałej jakości i świetnie przyprawione. Jedzenia jest tyle, że z trudem na koniec konsumujemy bardzo smaczny mus czekoladowy.</p>
<p>Z racji położenia i utrudnionej komunikacji ze światem zewnętrznym, Kisima Ngeda nie stanowi optymalnej bazy wypadowej do zwiedzania parkow narodowych. Jeśliby się natomiast chciało spędzić kilka dni w ciszy, wśród pięknego krajobrazu, z pysznym jedzeniem i dyskretną obsługą, trudno mi sobie wyobrazić lepsze miejsce. Jest to ośrodek jak z tych folderów z azjatyckich spa, gdzie uśmiechnięta błogo pani leży na brzuchu, otoczona przez wodę i kwiaty lotosu. Okazuje się, że takie miejsca faktycznie istnieją.</p>
<h2 id="buszowanie-nad-jeziorem-eyiasi">Buszowanie nad jeziorem Eyiasi</h2>
<p>Nie jest nam dane wylegiwanie się w naszym “namiocie” i oglądanie wschodu słońca nad jeziorem Eyiasi, bowiem na dzień kolejny mamy od rana zaplanowane bliskie spotkanie z dzikimi <em>homo sapiens</em> – buszmeńskim plemieniem Hadzabe. Atrakcję tę nadzoruje oddelegowany specjalnie na tę okazję przez Team Kilimanjaro przewodnik Casper, lub Gaspar, trudno stwierdzić po wymowie. Casper od dziesięciu lat pracuje z Hadzabe, koordynując projekty mające na celu zapewnienie plemieniu ich tradycyjnego funkcjonowania w środowisku, gdzie ich tereny łowieckie kurczą się z każdym rokiem. W ramach tej pomocy do buszmenów przywozi się turystów, których pieniądze w części finansują program pomocowy.</p>
<p>Po przybyciu na miejsce (ponad pół godziny jazdy po takich wertepach, że głowa odpada) i kilku krokach ścieżką wśród chaszczy, oczom naszym ukazuje się dorodny baobab obwieszony czaszkami pawianów (to jeden z podstawowych składników mięsnego pokarmu Hadzabe) oraz małymi łukami ozdobionymi fragmentami futra jakichś zwierząt. To podobno miejsce spotkań myśliwych. Po paru kolejnych krokach znajdujemy się pod sporą skałą, w cieniu której płonie ognisko, przy którym siedzi kilku buszmenów. Na ich strój składają się zupełnie współczesne i zachodnie szorty, do tego kolorowa afrykańska chusta, na plecach zaś każdy z nich ma skórę pawiana. Po krótkim przywitaniu (nie mówią w swahili, staram się więc powtarzać słowa, którymi nas pozdrawiają) zabierają nas na trening łuczniczy.</p>
<p>Każde z nas oddaje po kilka strzałów do oddalonego o jakieś dziesięć metrów drewnianego pieńka – lecz wcześniej popis swoich umiejętności dają sami Hadzabe. Nie powiem, żeby ich celność wprawiła mnie w zachwyt – w pieniek trafiali raz na kilka strzałów, podobną skutecznością mogłem się pochwalić i ja, pierwszy raz w życiu trzymający ich łuk w rękach. Technikę strzelania mają dość ciekawą, łuk napinają w pozycji na w pół zgiętej, trzymając go nie prostopadle do podłoża, lecz pod kątem około 45 stopni.</p>
<p><img src="https://live.staticflickr.com/1504/24833501186_cd2e1935a9_c.jpg" alt="https://live.staticflickr.com/1504/24833501186_cd2e1935a9_c.jpg"></p>
<p>Po treningu przyszedł czas na polowanie. Trzech młodych Hadzabe wzięło łuki i ruszyło w busz, Casper i my, nie uzbrojeni, za nimi. Biegaliśmy tak przez dwie godziny, w którym to czasie nasi myśliwi ustrzelili jednego gołąbka i wyciągneli cztery pisklaki z gniazd. Najeść się im tym będzie trudno, ale podobno to nic niezwykłego – w rzeczywistości polują trochę dla sportu, bo większość wyżywienia zapewniają im kobiety, zbierając owoce i korzenie. Polowanie wyglądało tak, że gdy myśliwy dostrzegł na drzewie jakieś interesujące zwierzę, zaczynał się skradać pod same drzewo, i – o ile zwierzę nie uciekło już podczas skradania – strzelał, z reguły chybiając. Później następowały poszukiwania strzały, i po odnalezieniu ruszliśmy dalej tropić zwierzynę.</p>
<p>Po powrocie do obozu buszmeni oskórowali, wypatroszyli i nadziali na patyk ładnego, centkowanego kotka, którego upolowali przed naszym przybyciem. Ania nie mogła patrzeć. Nastepnie miał być pokaz rozpalania ognia, ale polegał on na tym, że tlącą się szczapę przyniesiono z innego ogniska, i tym sposobem rozpalono pod kotkiem ogień.</p>
<p><img src="https://live.staticflickr.com/1692/24232038244_9e8c1b2cbf_c.jpg" alt="https://live.staticflickr.com/1692/24232038244_9e8c1b2cbf_c.jpg"></p>
<p>Ostatnią atrakcją było robienie strzał. Przypominało to nieco działania wuja Ryśka podczas wakacji w Tuchlinie. W trakcie naszej wyprawy łowieckiej myśliwi nazbierali trochę gałęzi <em>sandpaper tree</em> – rosnącej w buszu rośliny o wąskich, w miarę prostych gałęziach. Sciągało się z nich korę jak z wikliny, następnie zgrubienia były ostrugiwane, w końcu patyk prostowany był poprzez rozgrzewanie w ognisku, łapanie krzywizny w zęby i wyginanie. Do tego przytwierdzona ściegnem pieczonego właśnie kotka lotka z piór jakiegoś ptaka (podobno kury w tym przypadku), zaostrzenie – nie było w tym wypadku metalowego grotu tylko zaostrzony koniec – oraz wycięcie na końcu strzały wzoru, “podpisu” myśliwego, i strzała gotowa. Dostaliśmy ją, ku naszej wielkiej radości, w prezencie.</p>
<p>Na tyle tylko starczyło nam czasu. Podobno spedzając z Hadzabe kilka dni można nabyć umiejętności bardziej przydatnych do przetrwania w buszu, takich jak budowa schronienia przed hienami, gotowanie trucizn i identyfikacja leczniczych roślin. Zajrzeliśmy jeszcze do kobiet, gdzie jedno małe buszmeniątko przybiegło do Ani, a po wzięciu na ręce zaczęło przymierzać jej kapelusz i okulary.</p>
<p>W drodze powrotnej zajrzeliśmy jeszcze do innego plemienia, które zajmuje się wypasem bydła oraz kowalstwem, i od którego Hadzabe kupują metalowe groty do strzał. Mieliśmy okazję zobaczyć jak taki grot jest wyrabiany, i znów techniki Ryszarda Okonia stanęły mi w pamięci: grot był klepany z gwoździa, ostateczne zakończenie i specjalne zadry do nanoszenia trucizny uformowane zostały przy pomocy przecinaka. Miałem nadzieję, że może dostaniemy ów grot jako komplet do naszej strzały, ale tym razem nie było suwenirów.</p>
<h2 id="ngorongoro-wildlife-lodge-moloch">Ngorongoro Wildlife Lodge: moloch</h2>
<p>Nasza kwatera na kolejną noc to położona na obrzeżu karteru Ngorongoro <em>Ngorongoro Wildlife Lodge</em>. Wybrana ze względu na piękne widoki do wnętrza krateru, okazuje się sporym hotelem z nadgorliwą obsługą. Od razu po wyjści z samochodu plecak z moich rąk wyrywa korpulentna odźwierna. Zaraz prowadzeni jesteśmy na taras widokowy, gdzie dyżurny specjalista od wypatrywania zwierzyny każe nam patrzeć przez wielką lornetę tak długo, aż zobaczymy nosorożca. Ostatecznie udaje się nam wyrwać do pokoju, urządzonego jak typowa sypialnia hotelowa, z tą różnicą, że przez zajmujące całą ścianę okno oglądać możemy krater. Właściwie to oglądać moglibyśmy, gdyby nie mgła, która ogranicza widoczność do kilku kilometrów – krater zaś ma 600 metrów głębokości i 19 kilometrów średnicy.</p>
<p>Kolacja jest bufetowa i całkiem nienajgorsza, trzeba jednak płacić za wszystkie napoje (2 dolary za wodę, 4.5 za kieliszek wina). W restauracji większość stołów zdaje się być zajęta przez japońskie wycieczki.</p>
<h2 id="w-kraterze-ngorongoro">W kraterze Ngorongoro</h2>
<p>Rano widoczność nie jest lepsza, wsiadamy więc w auto i zjeżdżamy do krateru pooglądać zwierzęta z bliska. Ngorongoro specjalizuje się w nosorożcach – nie wiadomo ile ich tam jest, bo liczba osobników jest tajemnicą władz parku, co ma podobno w jakiś sposób zapobiegać kłusownictwu. Jest ich na tyle niewiele, że żaden nie pojawia się w pobliżu samochodu – kilka osobników udaje nam się tylko dostrzec przez lornetkę.</p>
<p><img src="https://live.staticflickr.com/1598/24232545874_df22fea119_c.jpg" alt="https://live.staticflickr.com/1598/24232545874_df22fea119_c.jpg"></p>
<p>W Ngorongoro po raz pierwszy mieliśmy też okazję zobaczyć lwy. Nie są one specjalnie interesujące do oglądania, bo większość czasu spędzają wylegując się i przewracając z boku na bok. Pasące się kilkaset metrów dalej antylopy i zebry nie wydawały się zaniepokojone – może dlatego, że to były lwie samce, a one z reguły nie polują, tylko przychodzą na gotowe upolowane przez samice. Atrakcją dnia była też czarna kania polująca na lancz, który spożywaliśmy na kamieniach nad brzegiem jeziora.</p>
<h2 id="migunga-mniej-wypasione-namioty">Migunga: mniej wypasione namioty</h2>
<p>Znów nocujemy w namiotach, konstrukcja podobna jak w Kisima Ngeda, ale ośrodek mniej ekskluzywny, bliżej cywilizacji i bez jeziora. Cały ten pomysł z namiotami rozpiętymi na domkach ma się chyba odwoływać do czasów kolonialnych i białych państwa polujących za dnia na dziką zwierzynę podczas gdy czarna służba rozstawiała obóz. Pomimo tych konotacji zasypianie i budzenie się z widokiem na las, gdzie jedynie siatka moskitiery dzieli nas od palm, akacji i hasających w ich koronach małp, jest bardzo przyjemne.</p>
<h2 id="lwice-w-tarangire">Lwice w Tarangire</h2>
<p>Znów pobudka bladym świtem i znów wertepy, znów zwierzęta do oglądania. Tarangire słynie ze słoni, i rzeczywiście, możemy się ich naoglądać do upadłego: chodzą na około samochodu, żrą trawę, wachlują się uszami. Widząc takie ich nagromadzenie trudno uwierzyć, że populacja tych zwierząt w Tanzanii zmniejszyła się przez ostatnie pięć lat o blisko połowę. Stało się to za sprawą kłusowników, którzy pozyskują kość słoniową na potrzeby rynku chińskiego i wietnamskiego. W trakcie naszego pobytu w Tanzanii, kłusownicy zestrzelili helikopter, który ich śledził, uśmiercając przy okazji brytyjskiego pilota.</p>
<p>Sam park Tarangire jest bardzo piekny: mokradła i sawanna położone u brzegów rzeki. Wyjeżdżając już z parku dostrzegamy duże zgromadzenie samochodów – oznacza to, że dzieje się coś ciekawego. Istotnie, w oddali widać biegnące stado lwic i młodych lwów. Po chwili grupa ta przecina drogę wśród stojących samochodów. Jedna z lwic niesie w zębach jakiś krwawy ochłap, pozostałe członkinie i członkowie grupy też usiłują się do niego dobrać, słychać groźne pomruki – dużo to ciekawsze niż przewracające się z boku na bok samce.</p>
<p><img src="https://live.staticflickr.com/1494/24493962279_6f9a07828b_c.jpg" alt="https://live.staticflickr.com/1494/24493962279_6f9a07828b_c.jpg"></p>
<h2 id="--">* * *</h2>
<p>Po namyśle obciąłem Gerrardowi napiwek o prawie połowę w stosunku do początkowo planowanego; dostał ostatecznie około 5% kwoty, którą w sumie zapłaciliśmy za safari. Biedak pewnie się starał, ale jego ograniczony angielski i osobowość niezbyt kompatybilna z naszymi stworzyła barierę, poprzez którą trudo było rozwinąć poczucie sympatii i zaufania. Ania wciąż jest zniesmaczona tym, że Gerrard dostał więcej premii niż Hesbon, nasz przewodnik z Kilimandżaro. Podejrzewam, że Gerrard też jest rozczarowany wysokością napiwku. Ostatecznie nikt na tym interesie nie wyszedł w pełni usatysfakcjonowany; ale co się naoglądalismy zwierząt i nabiegaliśmy za buszmenami, to nasze.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/mf2Bh5">Safari</a></p>
]]></content:encoded></item><item><title>Osiem dni na szczycie Afryki</title><link>https://blog.mmakowski.com/travel/osiem-dni-na-szczycie-afryki/</link><pubDate>Sat, 06 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/osiem-dni-na-szczycie-afryki/</guid><description>Team Kilimanjaro ma dość skomplikowaną strukturę: płaci się firmie Lewin Ventures Limited zarejestrowanej na Gibraltarze, zaś pieniądze wpłynąć mają na konto banku w Rydze. Adresy kontaktowe są w Londynie. Pomimo tego organizacyjnie wszystko okazało się dopięte na ostatni guzik, z jednym tylko drobnym potknięciem: nasze formularze z zamówieniem sprzętu do wypożyczenia nie dotarły do przewodnika, tak, że trzeba je było odtwarzać z pamięci. Ania i ja pożyczaliśmy tylko śpiwory i jedną parę getrów, Magda natomiast miała długą listę, zawierającą też kurtkę, latarkę i rękawice.</description><content:encoded><![CDATA[<p>Team Kilimanjaro ma dość skomplikowaną strukturę: płaci się firmie Lewin Ventures Limited zarejestrowanej na Gibraltarze, zaś pieniądze wpłynąć mają na konto banku w Rydze. Adresy kontaktowe są w Londynie. Pomimo tego organizacyjnie wszystko okazało się dopięte na ostatni guzik, z jednym tylko drobnym potknięciem: nasze formularze z zamówieniem sprzętu do wypożyczenia nie dotarły do przewodnika, tak, że trzeba je było odtwarzać z pamięci. Ania i ja pożyczaliśmy tylko śpiwory i jedną parę getrów, Magda natomiast miała długą listę, zawierającą też kurtkę, latarkę i rękawice. Ostatecznie udało się wszystko to wypożyczyć, i w poniedziałek 18 stycznia rano wsadzono nas do Land Rovera, na trzech siedzeniach z tyłu zasiadło dwóch przewodników i czterech tragarzy, i ruszyliśmy w stronę góry.</p>
<p>Naszła mnie wówczas refleksja – trochę poniewczasie – że z wielu wypraw, które planowałem bardzo ambitnie, wracałem wcześnie, gdyż obozowanie na dziko dawało mi w kość, a wygody typu gorący prysznic i miękkie łóżko, kusiły. W związku z tym być może nie fair było wyciągać na tę eskapadę bardziej jeszcze ode mnie do komfortów cywilizacji przywiązaną Anię, oraz Magdę, moją siostre, której doświadczenia z nocowania w namiotach są bardzo skąpe i jednoznacznie negatywne, i która nigdy dotąd nie chodziła na dłuższe górskie wycieczki.</p>
<p>Martwi mnie pogoda. Styczeń-marzec to ma być krótka pora sucha, z bezchmurnym niebem, zalegającym w wyższych partiach góry śniegiem, i ogólnie dobrymi warunkami do trekkingu. W tym roku deszcze się opóźniły, góry nie widać spoza warstwy chmur. W Arusha poprzedniego dnia spadł ulewny deszcz. Nie wiem jak to będzie, mamy niby ubrania wodoodporne, ale chodzenie przez cały dzień w deszczu nieszczególnie mi się uśmiecha. Widoki też diabli wezmą.</p>
<h2 id="dni-1-2-las-tropikalny">Dni 1-2: las tropikalny</h2>
<p>Wybrany przez nas szlak to Lemosho w wersji Team Kilimanjaro, czyli okrążający górę od północy zamiast od południa, gdzie prowadzi oryginalne Lemosho i większość pozostałych szlaków. Ma on zapewniać dobre warunki do aklimatyzacji powyżej 4000 m n.p.m. oraz stosunkowo mały ruch turystyczny – zdecydowana większość wycieczek idzie południem. Tym niemniej, na starcie szlaku natykamy się na duże grupy tragarzy. Lemosho ostatnimi czasy zrobił się dość popularny, szczęśliwie trzeciego dnia odbijamy na północ, na ścieżkę TK, i powinniśmy zgubić większość tłumu. Wśród tragarzy kręci się odziany w puchową kurtkę Hesbon, nasz główny przewodnik. Temperatura powietrza około 25 stopni.</p>
<p>Ruszamy! I od razu zaskoczenie, niezwykle powolnym tempem nadanym przez Alexa, zastępcę przewodnika. Mottem Kilimandżaro jest <em>pole pole</em>, czyli: powoli. Idziemy więc stawiając stopę za stopą przez tropikalną dżunglę. Na wąskiej ścieżce co i rusz wyprzedzają nas tragarze niosący na plecach własny dobytek, zaś na barkach lub głowach worki ze sprzętem, który został im powierzony.</p>
<p><img src="https://live.staticflickr.com/1686/24099987514_3a9c911da9_c.jpg" alt="https://live.staticflickr.com/1686/24099987514_3a9c911da9_c.jpg"></p>
<p>Przepisy mówią, że dodatkowego bagażu do dźwigania nie może być więcej niż 20 kg, i w każdym obozie są wagi przy pomocy których owo ograniczenie się weryfikuje. Od czasu do czasu mijamy tragarzy palących marihuanę – zapewne ma to im pomagać w aklimatyzacji, na pewno też poprawia humor.</p>
<p>Po dwóch i pół godzinie bardzo spokojnego marszu docieramy do pierwszego obozu: Forest Camp. Nasze namioty są już rozstawione, czekają na nas miseczki z gorącą wodą (po litrze na osobę) oraz mydło. Wkrótce słyszymy wezwanie na herbatę i popcorn. O 18:30 dostajemy kolację: zupę, pieczywo, wołowinę, ziemniaki, surówkę, owoce. Na koniec przychodzi Hesbon i omawia plan na kolejny dzień. Ciemno się robi około 19. Siedzimy jeszcze do 20 rozmawiając z Hesbonem, po czym rozchodzimy się do swoich namiotów. My z Anią mieszkamy w jednym, Magda w pojedynkę w drugim. Każde z nas ma do dyspozycji gruby materac z gąbki – nierówności podłoża nie są nam straszne. Hesbon i Alex śpią w komorach przy mesie, zaś pozostałych piętnastu członków naszej załogi tłoczy się w dwóch namiotach tej samej wielkości, co nasze i Magdy dwójki.</p>
<p>Podczas wstępnego przeglądania informacji na temat wejścia na Kili rozbawiła mnie opcja wynajęcia, po cenie 20 USD za dzień, specjalnego tragarza do noszenia toalety. Lo and behold, nasza ekspedycja jest w takie udogodnienie wyposażona, i okazuje się to całkiem przydatnym wynalazkiem, bowiem publiczne toalety w obozach mają standard afrykański, tj. dwa betonowe bloki, na których się staje, oraz dziura w ziemi, nieraz równo obesrana. Wychodki jak wychodki, od biedy da się z nich korzystać, ale dostęp do prywatnego kubełka zamkniętego w specjalnym namiocie to spora wygoda, zwłaszcza dla dziewczyn.</p>
<p>Dnia kolejnego pobudka o 6:30 i ruszamy dalej przez las, w kierunku grani Shira, za którą rozpościera się położony 3500 metrów n.p.m. płaskowyż Shira. Po drodze opuszczamy las i wkraczamy w strefę kosodrzewiny i wrzosowisk. Podobno niektórzy na tym etapie odczuwają pierwsze skutki choroby wyskościowej. Magdzie dokucza kolano i zawroty głowy, ale po krótkim odpoczynku idzie dalej bez problemu, i do obozu Shira 1 docieramy przed 14. Wszyscy troje jesteśmy na Diamoksie, póki co wyskość znosimy bardzo dobrze – tylko sika się od tych tabletek często. W obozie dostajemy lancz, potem herbatem z dyżurnym popcornem oraz kolację. Jedzenia jest bardzo dużo, apetyty nam jeszcze dopisują, ale nie na tyle, żeby to wszystko zjeść. Mamy nadzieję, że siedemnastu członków załogi nie pozwoli się resztkom z naszego stołu zmarnować.</p>
<h2 id="dzień-3-wrzosowiska">Dzień 3: wrzosowiska</h2>
<p>Na płaskowyżu Shira nasza droga oddziela się od głównego Lemosho. Idziemy dziś po płaskim. Mijamy drogę gruntową, którą na płaskowyż docierają samochody do zwożenia na dół chorych turystów, którzy nie są w stanie kontynuować treku – ewakuacje takie mają ponoć miejsce codziennie.</p>
<p><img src="https://live.staticflickr.com/1524/24360817819_b377b8083b_c.jpg" alt="https://live.staticflickr.com/1524/24360817819_b377b8083b_c.jpg"></p>
<p>Dotychczas, pomimo początkowych obaw, pogoda nam dopisywała – było pochmurnie, ale z przejaśnieniami, i nie padało. Dzisiaj nad Shira snują się nisko zawieszone chmury. Na pół godziny przed obozem zaczyna padać. Początkowo deszcz nie jest zbyt silny, idę więc w kurtce przeciwdeszczowej ale nie zakładam spodni wodoodpornych. Po dziesięciu minutach deszcz zmienia się w ulewę, i na wszelkie operacje ochronne jest już za późno. Do obozu Moir Hut docieram z kompletnie przemoczonymi butami i skarpetami. Nasz namiot jest jeszcze okopywany, więc z Anią lądujemy w mesie, tam sciągamy z siebie przemoczone ciuchy. Jeśli nie wyschną, to dalsza wspinaczka będzie bardzo nieprzyjemna, bowiem ja mam już tylko jedną parę suchych skarpetek, zaś Ani zapasy suchej garderoby też nie są przepastne.</p>
<p>Szczęśliwie, wkrótce po naszym zagnieżdżeniu się w namiocie, przejaśnia się. W planach na ten dzień był jeszcze opcjonalny aklimatyzacyjny trek na większą wysokości i z powrotem. Pomimo mokrych ciuchów namawiam Hesbona na tę wycieczkę, i już mamy wyruszać, gdy znów zaczyna lać. Wieczór upłynął pod znakiem suszenia butów i skarpet. Najlepszy pomysł, jaki nam przyszedł do głowy, to napełnić butelki gorącą wodą (dostajemy ją co wieczór w dużych ilościach do parzenia herbaty) i wsadzić je w buty, tudzież nałożyć na nie skarpety. Trudno sobie wyobrazić, żeby totalnie przemoknięte buty wyschły do rana przy użyciu tej metody, bowiem przy nocnej temperaturze powietrza poniżej 5 stopni ciepło z butli uchodzi szybko. Hesbon proponuje, że tragarze wysuszą mi skarpety – nie wiem na czym ma to polegać, ale z braku lepszych pomysłów przekazuję mu moje mokre, grube Smartwoole. Na szczęście, poza mokrą garderobą, nic nam praktycznie nie dolega. Anię trochę pobolewa głowa i jesteśmy nieco śnięci, ale ogólnie trzymamy się nieźle.</p>
<p>Rano dostaję skarpety prawie suche. Buty są jeszcze mokre, ale gruba warstwa wełny wystarczy, żeby przynajmniej na początku odizolować się od nieprzyjemnej wilgoci. Ruszamy dalej, obchodzić górę od strony północnej. Znów sporo chmur, ale sucho, i podczas marszu moje buty schną zupełnie.</p>
<h2 id="dni-4-5-alpejska-pustynia">Dni 4-5: alpejska pustynia</h2>
<p>W jeden dzień robimy północny trawers na wysokości około 4000 m n.p.m. Pogoda jest zmienna: rano chmury przesłaniają widok na Kenię, podczas lanczu w obozie po drodze świeci mocne słońce, ale jak tyko zbieramy się w dalszą drogę zaczyna się mżawka. Szczęśliwie nie kończy się taką ulewą jak dnia poprzedniego, ale gdy docieramy do obozu Thrid Caves buty znów mam mokre, a skarpety wilgotne. Sir E. H. Shackleton radził:</p>
<blockquote>
<p>Frozen gloves and helmets undoubtedly are very uncomfortable, and the proper thing is to keep these articles thawed by placing them inside one’s shirt during the night.</p>
</blockquote>
<p>Tak więc i ja wsadziłem mokre skarpety za pazuchę, na gołe ciało. W nocy było mi z ich powodu trochę niewygodnie, założyłem je więc na dłonie, i tak spałem do rana, kiedy to okazało się, że są praktycznie suche. Buty znów pozostawiały nieco do życzenia, ale suche skarpety to podstawa – jeśli będą warunki (były), to buty wyschną w drodze.</p>
<p>W międzyczasie nastąpiła też istotna zmiana planów. Zgodnie z oryginalnym programem wycieczki, dnia szóstego mieliśmy wspiąć się na szczyt, po czym zejść do krateru Kibo, gdzie mielibyśmy nocleg. Dnia kolejnego zwiedzalibyśmy krater a następnie rozpoczęli zejście z góry. Nocleg w kraterze był od początku wątpliwy, bowiem jest tam bardzo zimno, a Magda, pomimo solidnego śpiwora, marzła w nocy już na niższych wysokościach. Postanawiamy więc tam nie nocować. Zamiast tego, za sugestią Hesbona, spróbujemy trochę krateru obejść po zdobyciu szczytu, a potem zejść na nocleg do obozu Barafu.</p>
<p><img src="https://live.staticflickr.com/1532/24102169603_0f223c5691_c.jpg" alt="https://live.staticflickr.com/1532/24102169603_0f223c5691_c.jpg"></p>
<p>Tymczasem, piątego dnia rano, wszystko wygląda optymistycznie. Przed wschodem słońca Kibo ukazuje się nam poraz pierwszy w całej swej okazałości, ze zboczami pokrytymi śniegiem, jak na pocztówce. Magda co prawda nie ma apetytu i ze śniadania rusza tylko owsiankę; ta pogardzana początkowo potrawa z upływem czasu staje się naszym ulubionym, bo najbardziej neutralnym, elementem śniadania. Tym niemniej humor jej dopisuje, ruszamy więc pod górę, do base campu School Hut (4700 m n.p.m.). Docieramy tam przed południem, i przed lanczem zaliczamy jeszcze aklimatyzacyjne wejście na 4825. Tempo wchodzenia jest niesamowicie wolne, lecz wszyscy przyjmujemy to z wdzięcznością – nawet wyprawy z namiotu do kibla kończą się na tej wysokości zadyszką. Szczęśliwie pogoda się poprawia, po południu mamy dużo słońca, i wszystkie nasze wilgotne jeszcze części garderoby schną w oka mgnieniu.</p>
<h2 id="dzień-6-szczyt-i-krater">Dzień 6: szczyt i krater</h2>
<p>W końcu przyszedł dzień, na który, z pewnymi obawami, czekaliśmy od początku wyprawy. Wyruszamy o 5:20. Większość ekip wejście na szczyt rozpoczyna około północy, tak, by do celu dotrzeć przed południem i mieć czas na zejście większego kawałka w dół. Dla nas Hesbon zaordynował wejście dzienne, które jego zdaniem daje większe szanse powodzenia, tzn. mniejsze szanse, że któreś z nas odpadnie z powodu choroby wysokościowej, zimna i ogólnego zmęczenia.</p>
<p>Gdy ruszamy pod górę jest jeszcze zupełnie ciemno, ale w przeciągu godziny słońce wschodzi nad drugim co do wielkości szczytem Kilimandżaro, Mawenzi. Poza naszą trójką i dwoma przewodnikami idzie z nami jeden z tragarzy, Malete. Jego kurtka jest w strzępach, na łokciach są dziury niemal na wylot, wystają z nich fragmenty ocieplenia. Idziemy w szyku Hesbon, Magda, Ania, ja, Alex i Malete. Od pierwszego dnia idę za Anią, i przyzwyczaiłem się już, że widoki, które dane mi jest podziwiać zawierają głównie tyły jej butów, i od czasu do czasu, gdy podniosę głowę, Ani plecak – zielony Karrimor Sabre 35 Delta, który przez wiele lat wiernie mi służył jako codzienna torba.</p>
<p>Idziemy zakosami, w górę stromego zbocza prowadzącego do Gilman’s Point. Na tym odcinku mamy zyskać większość wysokości, około 700 metrów. Idziemy. Bardzo. Powoli. Co jakiś czas Magda żąda przerwy – wygląda na to, że wysokości daje jej w kość, od wczoraj mało je i choć jest jak zwykle pogodna, widać, że wchodzenie kosztuję ją bardzo wiele wysiłku. Ania też musi w przerwach łapać oddech, ja nie doświadczam żadnych nadzwyczajnych trudności – nie jest dużo gorzej niż <a href="Weso%C5%82a%20rozpierducha#wulkan">na Teidzie</a>. Wyprzedzamy siedemdziesięcioparoletnią panią, która z przewodnikiem wspina się w tempie znacznie wolniejszym, niż nasze. Kilka innych grup widzimy na stoku ponad nami.</p>
<p>Dojście do Gilman’s point zajmuje nam sześć godzin, co jest podobno dobrym czasem. Na miejscu zasłużony odpoczynek, zdjęcia i Red Bull – nawet ja się skusiłem, w końcu okazja niecodzienna. Wokół śnieg, i objawia się pierwsza wtopa ze sprzętem: moje Ray Bany Aviatory nadają się może do paradowania po deptaku w kurorcie, ale nie na górskie lodowce. Przyciemnienie szkła jeszcze dałoby radę, ale duże przerwy na około przepuszczają tylko światła, że iść mogę tylko z mocno zmrużonymi oczyma. Ania się lepiej znalazła, bo wzięła gogle narciarskie. Magda ma okulary-wynalazek, które też zupełnie osłaniają z boków, tylko trzeba je co chwila wsuwać z powrotem na nos. Nic to jednak. Idziemy dalej, po płaskim, do Stella Point, czyli miejsca, gdzie kończy się stroma wspinaczka dla tych, którzy zdecydowali się na szlaki inne niż TK Lemosho lub Rongai.</p>
<p>Stella Point. Niby nic, szliśmy po płaskim, w sumie wciąż czuję się dobrze. Symboliczny postój, i ruszamy dalej.</p>
<p>Ze Stella Point jest jeszcze 150 metrów przewyższenia. Łagodne, bardzo łagodne wzniesienie, zaczyna stanowić coraz większą przeszkodę. Krok, oddech. Krok, oddech. Po lewej stronie pojawiają sie kaskady śniegu. Krok oddech. Nie jestem w stanie dotrzymać kroku reszcie grupy. Oddychanie staje się bolesne. Krok. Oddech. Oddech. Chyba nie powinienem iść dalej. Głupio tak, tuż przed szczytem. Jeszcze parę kroków. Jeszcze parę. Szczyt już w zasięgu wzroku. Ale jeszcze daleko. Jeszcze parę krokow.</p>
<p><img src="https://live.staticflickr.com/1715/24729625695_c1a45ddd6b_c.jpg" alt="https://live.staticflickr.com/1715/24729625695_c1a45ddd6b_c.jpg"></p>
<p>Na szczycie ulga. Doszedłem. Doszliśmy. Pamiętam, że koniecznie chciałem zrobić fist bump z Magdą. Pamiętam, że Ania chciała zdjęcie z koszulką swojego klubu MMA. Ania i Magda zdają się być w lepszej formie niż ja. Ania szuka czegoś w jakiejś skrzynce. Dużo zdjęć. Czuję się szczęśliwy, nie wiem czemu. Płaczę z radości.</p>
<p>Przed nami jeszcze krater. Prowadzą tam dwie drogi: z powrotem przez Stella point, albo dalej na zachód, zboczem, po śniegu. Hesbon wybiera drugą opcję. Jest w dół, więc dużo łatwiej. Kopny śnieg, schodzimy po śladzie założonym przez Hesbona, Magda przedem, pewnie, Ania w środku, ja dalej, wciąż nie do końca kojarząc co i jak. W końcu znajdujemy się przy maleńkim obozie, kilka namiotów – to tu mieliśmy nocować. Pod skałą zatrzymujemy się na lancz, jest gorąca zupa z termosu i smażone ziemniaki. Nie mam na nie najmniejszej ochoty, ale wmuszam w siebie kubek zupy i plasterek ziemniaka. Z lodowca zostały maleńkie skrawki. Hesbon oferuje wejście na wewnętrzny stożek i obejrzenie <em>ash pit</em>. To jakieś sto metrów pod górę, nie mam najmniejszych wątpliwości, że nie dam rady tam wejść. Szkoda, to tak blisko.</p>
<p>Wchodzimy na fragment lodowca. Schodzimy. Wracamy. Droga powrotna prowadzi znów przez Stella Point. Orientuję się, że jest mi zimno w głowę. Było mi zimno już przed szczytem, tylko niedotleniony mózg tego nie zarejestrował. Zmieniam kapelusz na ciepłą czapkę. Idziemy. Idę jak przez sen. Do Stella Point trzeba podejść pod górę. Po śniegu. Nie ma szans, nie dam rady.</p>
<p>Daję radę. Muszę dać, bo innej drogi nie ma. Na Stella Point jestem wykończony. Dalej już tylko w dół.</p>
<p>Pokonanie stromego zbocza ze Stella Point do Barafu Camp zajmuje name dobre trzy godziny. Schodzi się po piargach, wśród wulkanicznego pyłu, który osiada na wszystkich częściach garderoby i dodatkowo utrudnia i tak niełatwe oddychanie. Nie mogłem się doczekać obozu: czułem się fatalnie i byłem przekonany, że się poważnie rozchorowałem. W obozie zmusiłem się do miseczki zupy, połknąłem dwa paracetamole, i tak ja stałem, w ocieplających warstwach i bieliźnie ze szczytu, wpakowałem się do śpiwora na dziesięć godzin twardego snu.</p>
<h2 id="dni-7-8-zejście">Dni 7-8: zejście</h2>
<p>Na ogół niewiele się mówi o zejściu z góry. W programie większości treków szczyt zdobywa się rano, po czym schodzi się przez cały dzień kawał drogi do jednego z obozów na szlaku Mweka. Niektórzy nawet decydują się na zejście do bramy w jeden dzień. Nie wiem jak to robią, ja poprzedniego dnia byłem tak wykończony, że samo dotarcie do Barafu uznałem za nie lada wyczyn.</p>
<p>Rano dnia siódmego czułem się już zupełnie dobrze. Reakcja organizmu na wysokość była dość spektakularna, ale i krótkotrwała. Interesujące, że do Gilman’s trzymałem się zupełnie nieźle, podczas gdy dziewczyny miały problemy, za to za Stellą trafiłem na ścianę, podczas gdy Ania z Magdą szły dalej i wydawały się radzić sobie lepiej niż ja. Przypuszczam też, że choć po zejściu miałem wrażenie, że już ani kroku więcej nie będę w stanie zrobić, to gdyby było trzeba mógłbym schodzić jeszcze godzinę. To tak jak z robieniem pompek: jak się postanowi, że się robi dwadzieścia, to przy dwudziestej ma się poczucie, że akurat na tyle było sił, i więcej nie da się zrobić. Jak się zaplanuje trzydzieści, to się zrobi trzydzieści.</p>
<p>Na zejście z Barafu do bramy Mweka mamy dwa dni, czyli mnóstwo czasu, zważywszy, że samego schodzenia jest może z sześć godzin. Uważa się, że schodzenie to masakra dla kolan, mi z kijami idzie się dobrze, amortyzuję stopnie w dół opuszczając się na rękach, i szybkiego dość schodzenia nie odczuwam bardziej niż wcześniejszej powolnej wspinaczki.</p>
<p><img src="https://live.staticflickr.com/1455/24102190224_136b7e9a55_c.jpg" alt="https://live.staticflickr.com/1455/24102190224_136b7e9a55_c.jpg"></p>
<p>Sprawą która nas w największej mierze zaprzątała przez ostatnie trzy godziny zejścia z zatłoczonego obozu Mweka do bramy o tej samej nazwie były napiwki dla ekipy. Standardem na Kilimandżaro jest, że każdy ze wspinających wręcza swojemu zespołowi napiwek w wysokości 10-15% kwoty, którą zapłacił za wycieczkę. Początkowo zakładaliśmy, że będziemy się trzymali raczej dolnej granicy tego przedziału, jednak po tygodniu z ekipą byliśmy pod takim wrażeniem ich ciężkiej pracy, profesjonalizmu i przyjaznego nastawienia, że postanowiliśmy zwiększyć pulę o 1/3. Większym problemem okazał się podział całej kwoty pomiędzy siedemnastu członków załogi. Było to o tyle skomplikowane, że poza 8 szeregowymi tragarzami, pozostałych dziewięciu miało specjalne funkcje, które powinny być stosownie premiowane. Szczegóły podziału napiwków przemyśliwaliśmy od wieczora dnia siódmego aż do bramy Mweka, i ostatecznie zdecydowaliśmy się na następujące proporcje:</p>
<table>
<thead>
<tr>
<th>Rola</th>
<th>Udział %</th>
</tr>
</thead>
<tbody>
<tr>
<td>główny przewodnik</td>
<td>12.5</td>
</tr>
<tr>
<td>zastępca przewodnika</td>
<td>9.58</td>
</tr>
<tr>
<td>kucharz</td>
<td>7.5</td>
</tr>
<tr>
<td>tragarz szczytowy</td>
<td>5.83</td>
</tr>
<tr>
<td>tragarz toalety</td>
<td>5.83</td>
</tr>
<tr>
<td>kelner</td>
<td>5.83</td>
</tr>
<tr>
<td>zastępca kucharza</td>
<td>5.42</td>
</tr>
<tr>
<td>pomywacz</td>
<td>5.42</td>
</tr>
<tr>
<td>namiotowy</td>
<td>5.42</td>
</tr>
<tr>
<td>tragarz (x8)</td>
<td>4.58</td>
</tr>
</tbody>
</table>
<p>Koniec końców wszyscy wydawali się zadowoleni, Hesbon nawet wspomniał o hojnych napiwkach w podsumowaniu treku.</p>
<p>Przy bramie Mweka sporo turystów, większość w kolejce po odbiór certyfikatów zdobycia szczytu. Hesbon załatwił nasze poza kolejnością, musieliśmy pójść do jakiegoś kantorku i wpisać się do księgi, po czym dostaliśmy certyfikaty in blanco. Na koniec jeszcze tylko lancz w knajpie w Moshi z wierchuszką ekipy – Hesbon, Alex oraz Baraka, kucharz – po czym odstawieni zostajemy do naszej kwatery w Arusha, skąd następnego dnia Magda leci do Berlina zaś my z Anią ruszamy na safari.</p>
<h2 id="--">* * *</h2>
<p>Skąd się w ogóle wziął ten wyjazd? Najpierw chyba był jakiś Top Gear Special, w którym jeździli na około Jeziora Wiktorii w poszukiwaniu źródeł Nilu. Stąd zrodził się pomysł kilkutygodniowego backpackingu po Kenii, Ugandzie, Rwandzie i Tanzanii. W trakcie researchu atrakcji regionu natknąłem się na Kilimandżaro. Kolega kiedyś tam był i polecał. Rozważałem opcję, w której pójdę na pięciodniowy trek, a Ania w tym czasie porobi sobie coś innego, po czym pojedziemy dalej w Afrykę. Stopniowo, jak czytałem coraz więcej na ten temat, Kilimandżaro wyszło na plan pierwszy, a reszta wałęsania się gdzieś znikła.</p>
<p>Jednym z moich pierwszych pytań do kolegi, który wiele lat temu zdobył szczyt, było: czy trzeba brać tę całą ekipę? Czy da się wejść samemu? Podobnie, gdy zacząłem na poważnie zabierać się do organizowania treku, jeden z potencjalnych uczestników wycofał się, bowiem nie uśmiechała mu sie perspektywa, że jego manatki będzie na górę wnosił ktoś wynajęty. Jak to więc jest – można samemu, czy nie?</p>
<p>Zupełnie samemu, bez przewodnika, nie da się legalnie wejść. Przepisy parku narodowego wymagają, żeby wszyscy wspinacze wchodzili w grupach zorganizowanych przez licencjonowane firmy turystyczne i pod kierunkiem przewodnika z odpowiednimi uprawnieniami. Jest natomiast możliwość targania całego sprzętu samemu – TK oferuje tego rodzaju treki w swojej serii “superlite”. Jestem to nawet sobie w stanie wyobrazić: wejście do base campu nie było specjalnie forsowne, taki dłuugi spacer, więc gdybym niósł zamiast dziesięciu kilo w day packu dwadzieścia w dużym plecaku, też dałoby pewnie radę. Pożegnać by się wtedy trzeba było z wygodami takimi jak przestronny namiot i gorące posiłki – prowiant pewnie trzeba by było brać suchy i superenergetyczny. Trudno powiedzieć, na ile regularne i obfite posiłki pomogły nam w zdobyciu szczytu, prawdopodobnie odegrały istotną rolę, tak, że być może zbyt optymistycznie podchodzę do kwestii wchodzenia bez wsparcia – ale nie wydaje się to zupełnie niemożliwe.</p>
<p>Inna sprawa, że z perspektywy tej wycieczki rezygnacja z tragarzy wydaje mi się podwójnie słabym pomysłem: nie dość, że samemu się bardziej zmęczysz i zmniejszysz swoje szanse na zdobycie szczytu, to jeszcze pozbawisz grupę Arushan i Moshitów jednej z niewielu możliwości godziwego zarobku. Z punktu widzenia zachodniego turysty tragarze mają bardzo nędzne warunki, sprzęt w złym stanie (choć legendarnych rozpadających się tenisówek nie zauważyłem) i w ogóle jest wyzysk; realia tanzańskie są jednak takie, że każda okazja do zarobienia kilkudziesięciu dolarów to dla nich dar niebios, i uważam, że w miarę naszych możliwości powinniśmy dawać tragarzom zatrudnienie.</p>
<p>Inna kwestia, która może trochę od Kili odstręczać, to fakt, że wchodzenie na tę górę to wielki przemysł, rozrywka masowa – średnio ponad setka turystów dziennie staje na szczycie. Łącznie z kilkakrotnie bardziej licznymi grupami wspierającymi stanowi to taki tłum, że nawet w najwyższych partiach góry woda musi być chemicznie odkażana, ze względu na zagrożenie bakteriami z ludzkich odchodów. Szczęśliwie, spragnieni bardziej unikalnych przygód górskich w najbliższej okolice Kilimandżaro znajdą znacznie mniej popularne wyzwanie: Meru. To spektakularny wulkan górujący nad Arushą, stożek o wysokości ponad 4.5 kilometra. Hesbon twierdzi, że wejść tam trudniej niż na Kili, bo jest bardziej stromo, i że turyści wchodzący na Meru w ramach aklimatyzacji przez Kilimandżaro często nie wiedzą w co się pakują – wielu z nich rezygnuje z Kili po zdobyciu Meru.</p>
<p>Ja tam nie żałuję. Było pięknie. Było mokro. Było ciężko. Ale przede wszystkim strasznie fajnie było wejść na ten szczyt z naszą ekipą, z Anią, no i z Magdą, której humor i pozytywne nastawienie sprawiły, że nawet w najtrudniejszych momentach wspinanie się było frajdą.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/CBNLd0">Kilimanjaro</a></p>
]]></content:encoded></item><item><title>Tydzień przed Kilimandżaro</title><link>https://blog.mmakowski.com/travel/tydzie%C5%84-przed-kilimand%C5%BCaro/</link><pubDate>Sun, 10 Jan 2016 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/tydzie%C5%84-przed-kilimand%C5%BCaro/</guid><description>Pozostał nam tydzień do wyjazdu do Tanzanii. Najwyższa pora rozpocząć pakowanie – ale najpierw krótki przegląd kwestii medycznych, bowiem okazało się, że moje notatki sprzed wyprawy azjatycko-australijskiej do czegoś się w końcu przydały. Oszczędziły one nam trochę researchu, ale też tu i ówdzię sprowadziły nas na manowce.
Zdrowie Przy okazji poprzedniego wypadu w tropikalne rejony dwiema podstawowymi kwestiami zdrowotnymi były szczepionki i ochrona przed malarią. Szczepiliśmy się na dwa fronty: w publicznej służbie zdrowia wzięliśmy wszystko to, co dawali za darmo, czyli żółtaczkę typu A, tyfus, oraz kombo tężec/błonica/polio, zaś prywatnie zrobiliśmy cykl trzech wścieklizn.</description><content:encoded><![CDATA[<p>Pozostał nam tydzień do wyjazdu do Tanzanii. Najwyższa pora rozpocząć pakowanie – ale najpierw krótki przegląd kwestii medycznych, bowiem okazało się, że moje <a href="/travel/wyprawa-2010-11/na-zdrowie/">notatki sprzed wyprawy azjatycko-australijskiej</a> do czegoś się w końcu przydały. Oszczędziły one nam trochę researchu, ale też tu i ówdzię sprowadziły nas na manowce.</p>
<h2 id="zdrowie">Zdrowie</h2>
<p>Przy okazji poprzedniego wypadu w tropikalne rejony dwiema podstawowymi kwestiami zdrowotnymi były szczepionki i ochrona przed malarią. Szczepiliśmy się na dwa fronty: w publicznej służbie zdrowia wzięliśmy wszystko to, co dawali za darmo, czyli żółtaczkę typu A, tyfus, oraz kombo tężec/błonica/polio, zaś prywatnie zrobiliśmy cykl trzech wścieklizn. Zgodnie z książeczką szczepień, którą sobie zachowałem, ważność wszystkich tych szczepień, za wyjątkiem tężca et al., już wygasła. Zgłosiliśmy się więc do naszej lokalnej przychodni po nowe. Było to jakoś w październiku. Minął miesiąc zanim się do nas odezwali i kolejny miesiąc przed najbliższym wolnym terminem wizyty u pielęgniarki. Wizyta ta przebiegała z grubsza tak, że pielęgniarka, dowiedziawszy się dokąd się wybieramy, otworzyła kilka stron internetowych i z nich usiłowała wyczytać czego nam potrzeba. Było to wszystko dosyć konfudujące, ale skończyło się na tym, że zrobiła mi żółtaczkę A i tyfus. Ania miała wizytę kilka dni później i okazało się, że tyfus im wyszedł – szczęśliwie dowieźli po południu.</p>
<p>Prócz tych standardowych szczepionek, jedna, którą musimy mieć koniecznie, bo bez certyfikatu szczepienia nie wpuszczą nas z Kenii do Tanzanii, jest żółta febra. To szczepienie trzeba robić prywatnie i jest ono dość kosztowne (£40-60). Szczęśliwie na obrzeżach Canary Wharf znajduje się kilka tzw. “travel clinics”, czyli gabinetów, w których szczepią turystów <em>in spe</em>, a także wydają leki antymalaryczne, antybiegunkowe i ogólnie antyegzotycznoatrakcyjne. Poprzednio korzystałem z kliniki Masta, tym razem postanowiłem wypróbować mieszczące się tuż obok Nomad Travel. Wizyta przebiegła sprawnie, szczepiący mnie aptekarz miał rozeznanie w niebezpieczeństwach, jakie na nas czyhały, okazało się też, że w razie problemów z uzyskaniem recept na leki, których potrzebujemy, oni służą pomocą.</p>
<p>Ano właśnie, leki. Po pierwsze, malaria. Poprzednio każde z nas dostało receptę na Malarone w lokalnej przychodni (za każdą zapłaciliśmy po £20), później kupiliśmy lek przez Internet, bo tak było najtaniej. Planowałem powtórzyć ten manewr i tym razem, ale w porę dowiedziałem się, że jakiś czas temu wygasła wyłączność GlaxoSmithKline na ten lek i dostępne są tzw. wersje generyczne, czyli tabletki o tym samym składzie chemicznym (Atovaquone/Proguanil Hydrochloride) od innych producentów, o połowę tańsze.</p>
<p><img src="https://live.staticflickr.com/1718/24268645746_91c521b56f_c.jpg" alt="https://live.staticflickr.com/1718/24268645746_91c521b56f_c.jpg"></p>
<p>W dodatku nie trzeba brać recepty, wystarczy wypełnić formularz na stronie internetowej apteki, i apteka sama nam wystawi receptę, a następnie ją zrealizuje. Trochę przy tym oszukałem, bo zamiast zamawiać osobno dla każdego z nas, wypełniłem jeden formularz i zamówiłem dwa razy większą partię – przy większych zamówieniach cena za dawkę była niższa.</p>
<p>Drugim lekiem, na który próbowałem uzyskać receptę od naszego lekarza pierwszego kontaktu (po tutejszemu GP) był Diamox. Wedle etykiety jest to lek przepisywany przy jaskrze i epilepsji, ma on natomiast też nieoficjalne zastosowanie: łagodzi skutki choroby wysokościowej. Wydobycie recepty od GP okazało się porażką – albo nie wiedzieli co to jest, albo nie chcieli przepisać. Z ratunkiem przyszło znów Nomad Travel – piętnastominutowa konsultacja i £20 zaowocowała buteleczką z 14 pastylkami. Przy okazji w sklepiku kliniki zaopatrzyłem się też w czterdziestoprocentowy deet oraz generyczne kapsułki Loperamide Hydrochloride do likwidowania sraczki. Do Diamoxu dołączona była instrukcja, według której przed zastosowaniem leku w górach przeprowadzić należy dwudniową próbę na normalnej wysokości. Jej celem jest obserwacja, czy nie występują niepożądane efekty uboczne: mrowienie w palcach, mdłości, ból głowy, wysypki. Jestem w trakcie drugiego dnia, i prócz mrowienia w palcach żadnych innych efektów nie zaobserwowałem.</p>
<h2 id="sprzęt">Sprzęt</h2>
<p>No to rozpoczynamy pakowanie. Duże plecaki, do nich przede wszystkim sprzęt trekkingowy oraz ciepłe ubrania do wejścia na szczyt. Szybko się okazało, że kilku kluczowych części garderoby nie jesteśmy w stanie zlokalizować. Mój piankowy ocieplacz na nogi, którego używałem ostatni raz do <a href="/travel/dziennik-islandzki/">nurkowania w Silfra</a>, a który później przez wiele lat pałętał się gdzieś wśród ubrań narciarskich, wsiąkł. Ani szary soft layer z Islandii oraz spodnie przeciwdeszczowe, ostatnio widziane we wrześniu w Lake District, też zapadły się pod ziemię. Na szczęście mamy jeszcze kilka dni na uzupełnienie tych braków w sklepach na Covent Garden lub na Amazonie.</p>
<p>Zastanawiałem się nad obuciem się w moje stare Zamberlany – znacznie sztywniejsze od preferowanych przeze mnie od pięciu lat Teva Riva. Chodziłem w nich dawno temu przez miesiąc po Norwegii, później przez parę lat zabierałem je na wszystkie górskie treki, zaś ich sztywniejsza podeszwa i konstrukcja mogłyby sie okazać przydatne w pobliżu szczytu, na stromych i śliskich zboczach. Zabrałem więc Zamberlany we wrześniu na dwa dni chodzenia w Lake District, i już po pierwszym dniu i intensywnej pętli Stickle Tarn – High Raise – Helm Crag było jasne, że nie da rady – zbyt uciskały tak przód jak i tył stopy. Więc jednak Tevy. To rewelacyjne buty, muszę sobie sprawić kolejną parę póki są dostępne.</p>
<h2 id="--">* * *</h2>
<p>Kolejny wpis pewnie dopiero po powrocie, na przełomie stycznia i lutego. Podczas wejścia raczej nie będzie z nami kontaktu, natomiast dla tych, którzy chcieliby śledzić nasze postępy, Team Kilimanjaro udostępnia <a href="https://www.google.com/maps/d/viewer?ll=-3.078038%2C37.356949&amp;spn=0.05331%2C0.105743&amp;msa=0&amp;mid=zaLbDxbzXkN4.k5vRa-afRE60">mapę z przybliżoną lokalizacją grup wspinaczkowych</a> oraz <a href="http://teamkilimanjaro.com/blog/">bloga ze zdjęciami</a>. Będziemy na nich występowali pod kodem <strong>MAMA x 3, 18th - 25th January</strong>.</p>
]]></content:encoded></item><item><title>Build or Buy</title><link>https://blog.mmakowski.com/technology/build-or-buy/</link><pubDate>Sat, 19 Dec 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/build-or-buy/</guid><description>As programmers, whenever we embark on writing a piece of code, we risk being accused of reinventing the wheel and succumbing to Not Invented Here syndrome. There are nowadays dozens of libraries, framework and other software products of some description for every task imaginable. Yet, the answer to buy vs. build is not as clear-cut as might appear at a glance. The Programmer’s Paradox blog post which made rounds in programming circles in November points out that effective use of third-party software requires deep understanding of its inner workings.</description><content:encoded><![CDATA[<p>As programmers, whenever we embark on writing a piece of code, we risk being accused of reinventing the wheel and succumbing to <em>Not Invented Here</em> syndrome. There are nowadays dozens of libraries, framework and other software products of some description for every task imaginable. Yet, the answer to buy vs. build is not as clear-cut as might appear at a glance. <em>The Programmer’s Paradox</em> <a href="http://theprogrammersparadox.blogspot.co.uk/2015/11/software-engineering.html">blog post</a> which made rounds in programming circles in November points out that effective use of third-party software requires deep understanding of its inner workings. In the case of software we build ourselves, this understanding comes naturally as we develop and shape the code in response to discoveries about the problem we are solving and the behaviour of the component we created. Experienced software developers can gain important insight about a third-party component from reading the documentation, but ultimately the learning comes from using the software in the wild and seeing it behave in unexpected ways.</p>
<p>A hand-crafted piece of code stands better chance of being simple and well suited to a specific task. The approach to complexity we adopted as an industry follows the violence meme: if it’s not solving your problem, you’re not using enough of it. Deployment and management of multiple machines is hard, so we use Docker, that constructs a filesystem from multiple layers of files, each being allowed to modify what the previous ones put in place. HTML, Java Script and CSS works for the web, so let’s also write desktop apps based on those technologies. It often seems easier, perhaps even “simpler”, for some measure of simplicity, to pile on top of what is already out there, add another layer, or adapt a technology wholesale for a different domain. Stripping something down to bare bones is rarely considered. Many programmers decry the mess this is getting us – and the world, which relies on the technology we build – into. Even the agile/lean development principle of building the simplest thing that will work often steers us towards pre-built products, where we tend to underestimate the effort involved in understanding how they work, and discount the impedance mismatch and resulting effort required when implementing new features. Moving away from a technical solution adopted earlier is often a tricky proposition, and due to both the sunk cost fallacy and actual cost of migration becomes harder as the time passes.</p>
<p>Back in the 1990s, when I was taking my first steps into programming by hacking Windows apps in VB3, I read somewhere that the programming of the future will be nothing like what it seemed at the time. Instead of banging out code we will be putting together components. That did not seem as much fun and I was sincerely hoping that day will never arrive. Well, here we are now, but with a twist: instead of puzzle pieces I imagined, we now build our system of prefabs the size and complexity of houses. Predicting the operational parameters of a conglomerate of such things is something few software developers are capable of.</p>
<p>Programmers often have their pet technologies; for some it will be the hot new thing they read about last week on Hacker News or Reddit, for some it will be the tool they have successfully used on multiple projects over many years. Even in the latter case the depth of understanding might be missing though. Relational databases were, and still are to a large extent, my default solution for any non-trivial persistence. Yet it was only within the last year that I discovered, to my surprise, that <em>read committed</em> is not quite the <em>serialisable</em> I imagined it to be – and that is after many years and many systems which I built or maintained on top of relational databases. Even in the case of technology with decades of prior art, applied to the vanilla CRUD use-case, there are still products that have quirks and exhibit strange behaviour under certain circumstances.</p>
<p>Writing stuff yourself has some things going for it, it turns out. On the other hand, there are certain aspects of software that are hard to get right. Take security; the very first piece of advice given to programmers embarking on building a custom security protocol or encryption algorithm is: don’t do it. Use something that has been tried, tested and proven to work (or rather, <em>not proven to not work for long enough</em>). A lot of apparent complexity in software is not gratuitous, but a result of taking into consideration edge-case scenarios, often ones involving failure of some component. While writing software from scratch provides a lot of insight and learning opportunities, we are bound to miss something that others have discovered before us, and built their knowledge into a third-party product that we discarded as too complex.</p>
<p>There is no win-win here. The systems we build often involve unavoidable complexity. We have thousands of tools at our disposal, and given that most non-trivial problems require a bunch of them, we are dealing with combinatorial explosion in the solution space. Various combinations of products are mismatched in subtle and non-obvious ways – something we will only discover after we have built the system. Then, attempting to design and build everything from scratch is fraught with peril, as there are many unspecified but implicitly assumed features of the system which we will inevitably miss. The heuristics I strive to use nowadays is to do the due dilligence, see what products are out there that are of roughly the right shape, kick their wheels. Eventually, choose one of them and run with it. Every time there is an issue with existing system or I struggle to implement new feature, I would then ask myself: what caused it? Would I be better off with some other product? Should I build it myself?</p>
<p>How do I do the due dilligence effectively? How do I make a decision to switch? I will post an update as soon as I figure any of those out.</p>
]]></content:encoded></item><item><title>A Pitfall of Global Execution Context</title><link>https://blog.mmakowski.com/technology/a-pitfall-of-global-execution-context/</link><pubDate>Sat, 28 Nov 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/a-pitfall-of-global-execution-context/</guid><description>The convenience of Scala’s Future concept makes it the default tool for all kinds of programming tasks that call for asynchrony. There seems nothing simpler than wrapping a block of code in future { }, then, when compilation fails, importing scala.concurrent.ExecutionContext.Implicits.global, and we’re done, the code runs asynchronously. We can then use the computed result (if any) in further futures, or if we want to break out of the future world, do Await.</description><content:encoded><![CDATA[<p>The convenience of Scala’s <code>Future</code> concept makes it the default tool for all kinds of programming tasks that call for asynchrony. There seems nothing simpler than wrapping a block of code in <code>future { }</code>, then, when compilation fails, importing <code>scala.concurrent.ExecutionContext.Implicits.global</code>, and we’re done, the code runs asynchronously. We can then use the computed result (if any) in further futures, or if we want to break out of the future world, do <code>Await.result</code>. This is indeed easy, and does the job in many cases, but when it does not, might cause a bit of head scratching. Below is one example of such pitfall.</p>
<h2 id="the-conundrum">The Conundrum</h2>
<p>Suppose we wanted to test the behaviour of a data store that is expected to support multiple concurrent readers. Say, there is a suspicion that every now and then, when faced with concurrent reads and writes, some of the readers obtain inconsistent data. We could write the test as an application that performs writes and multiple reads in parallel, then run it for a long time to give us some confidence that the issue does not occur. Our first attempt could look like this:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scala.annotation.tailrec</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scala.concurrent.ExecutionContext.Implicits.global</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scala.concurrent.future</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">Test</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">val</span> consumerCount <span style="color:#000;font-weight:bold">=</span> <span style="color:#099">10</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> main<span style="color:#000;font-weight:bold">(</span>args<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Array</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">String</span><span style="color:#000;font-weight:bold">])</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">(</span><span style="color:#099">1</span> to consumerCount<span style="color:#000;font-weight:bold">).</span>foreach <span style="color:#000;font-weight:bold">{</span> consumer<span style="color:#000;font-weight:bold">.</span>start <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>    producer<span style="color:#000;font-weight:bold">.</span>start<span style="color:#000;font-weight:bold">()</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#458;font-weight:bold">Thread</span><span style="color:#000;font-weight:bold">.</span>sleep<span style="color:#000;font-weight:bold">(</span><span style="color:#099">10</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#099">1000</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">consumer</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> start<span style="color:#000;font-weight:bold">(</span>id<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> future <span style="color:#000;font-weight:bold">{</span> consume<span style="color:#000;font-weight:bold">(</span>id<span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#3c5d5d;font-weight:bold">@tailrec</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">def</span> consume<span style="color:#000;font-weight:bold">(</span>id<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      readDataFromTheSourceAndVerifyTheConsistency<span style="color:#000;font-weight:bold">(</span>id<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      consume<span style="color:#000;font-weight:bold">(</span>id<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">def</span> readDataFromTheSourceAndVerifyTheConsistency<span style="color:#000;font-weight:bold">(</span>id<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;consumer </span><span style="color:#d14">$id</span><span style="color:#d14"> consuming...&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      <span style="color:#458;font-weight:bold">Thread</span><span style="color:#000;font-weight:bold">.</span>sleep<span style="color:#000;font-weight:bold">(</span><span style="color:#099">1</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;consumer </span><span style="color:#d14">$id</span><span style="color:#d14"> consumed&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">producer</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> start<span style="color:#000;font-weight:bold">()</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> future <span style="color:#000;font-weight:bold">{</span> produce<span style="color:#000;font-weight:bold">()</span> <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#3c5d5d;font-weight:bold">@tailrec</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">def</span> produce<span style="color:#000;font-weight:bold">()</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      writeANewBatchOfData<span style="color:#000;font-weight:bold">()</span>
</span></span><span style="display:flex;"><span>      produce<span style="color:#000;font-weight:bold">()</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">def</span> writeANewBatchOfData<span style="color:#000;font-weight:bold">()</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;producer producing...&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      <span style="color:#458;font-weight:bold">Thread</span><span style="color:#000;font-weight:bold">.</span>sleep<span style="color:#000;font-weight:bold">(</span><span style="color:#099">100</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;producer produced&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>The tail of the output of this test, on my system, looked as follows:</p>
<pre tabindex="0"><code>[...]
consumer 7 consuming...
consumer 4 consumed
consumer 4 consuming...
consumer 3 consumed
consumer 3 consuming...
consumer 6 consumed
consumer 6 consuming...
consumer 9 consumed
consumer 9 consuming...
consumer 8 consumed
consumer 8 consuming...
consumer 2 consumed
consumer 2 consuming...
consumer 10 consumed
consumer 10 consuming...
consumer 5 consumed
consumer 5 consuming...
consumer 7 consumed
consumer 7 consuming...
consumer 4 consumed
consumer 4 consuming...
consumer 9 consumed
consumer 9 consuming...
consumer 8 consumed
consumer 8 consuming...
</code></pre><p>The consumers seem to be exhibiting reasonable parallelism but due to the cost of consumption relative to the cost of production, they have nothing to consume most of the time – it takes many loops of each consumer until the producer manages to push a new batch of data. To ensure that the test indeed exercises parallel reads, we only want the consumers to proceed with the next iteration once there is something new to consume. Java’s <code>CyclicBarrier</code> seems to be a perfect fit for this synchronisation problem: both consumers and producers will reach the barrier and then continue with the next iteration – production or consumption – in lock-step.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scala.annotation.tailrec</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scala.concurrent.ExecutionContext.Implicits.global</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scala.concurrent.future</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">java.util.concurrent.CyclicBarrier</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">Test</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">val</span> consumerCount <span style="color:#000;font-weight:bold">=</span> <span style="color:#099">10</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> main<span style="color:#000;font-weight:bold">(</span>args<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Array</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">String</span><span style="color:#000;font-weight:bold">])</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">val</span> dataBarrier <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">new</span> <span style="color:#458;font-weight:bold">CyclicBarrier</span><span style="color:#000;font-weight:bold">(</span>consumerCount <span style="color:#000;font-weight:bold">+</span> <span style="color:#099">1</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">(</span><span style="color:#099">1</span> to consumerCount<span style="color:#000;font-weight:bold">).</span>foreach <span style="color:#000;font-weight:bold">{</span> consumer<span style="color:#000;font-weight:bold">.</span>start<span style="color:#000;font-weight:bold">(</span>dataBarrier<span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>    producer<span style="color:#000;font-weight:bold">.</span>start<span style="color:#000;font-weight:bold">(</span>dataBarrier<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#458;font-weight:bold">Thread</span><span style="color:#000;font-weight:bold">.</span>sleep<span style="color:#000;font-weight:bold">(</span><span style="color:#099">10</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#099">1000</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">consumer</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> start<span style="color:#000;font-weight:bold">(</span>consumeBarrier<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">CyclicBarrier</span><span style="color:#000;font-weight:bold">)(</span>id<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> future <span style="color:#000;font-weight:bold">{</span> consume<span style="color:#000;font-weight:bold">(</span>consumeBarrier<span style="color:#000;font-weight:bold">,</span> id<span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#3c5d5d;font-weight:bold">@tailrec</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">def</span> consume<span style="color:#000;font-weight:bold">(</span>consumeBarrier<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">CyclicBarrier</span><span style="color:#000;font-weight:bold">,</span> id<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      consumeBarrier<span style="color:#000;font-weight:bold">.</span>await<span style="color:#000;font-weight:bold">()</span>
</span></span><span style="display:flex;"><span>      readDataFromTheSourceAndVerifyTheConsistency<span style="color:#000;font-weight:bold">(</span>id<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      consume<span style="color:#000;font-weight:bold">(</span>consumeBarrier<span style="color:#000;font-weight:bold">,</span> id<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">def</span> readDataFromTheSourceAndVerifyTheConsistency<span style="color:#000;font-weight:bold">(</span>id<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;consumer </span><span style="color:#d14">$id</span><span style="color:#d14"> consuming...&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      <span style="color:#458;font-weight:bold">Thread</span><span style="color:#000;font-weight:bold">.</span>sleep<span style="color:#000;font-weight:bold">(</span><span style="color:#099">1</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;consumer </span><span style="color:#d14">$id</span><span style="color:#d14"> consumed&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">producer</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> start<span style="color:#000;font-weight:bold">(</span>produceBarrier<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">CyclicBarrier</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> future <span style="color:#000;font-weight:bold">{</span> produce<span style="color:#000;font-weight:bold">(</span>produceBarrier<span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#3c5d5d;font-weight:bold">@tailrec</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">def</span> produce<span style="color:#000;font-weight:bold">(</span>produceBarrier<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">CyclicBarrier</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      writeANewBatchOfData<span style="color:#000;font-weight:bold">()</span>
</span></span><span style="display:flex;"><span>      produceBarrier<span style="color:#000;font-weight:bold">.</span>await<span style="color:#000;font-weight:bold">()</span>
</span></span><span style="display:flex;"><span>      produce<span style="color:#000;font-weight:bold">(</span>produceBarrier<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">private</span> <span style="color:#000;font-weight:bold">def</span> writeANewBatchOfData<span style="color:#000;font-weight:bold">()</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;producer producing...&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      <span style="color:#458;font-weight:bold">Thread</span><span style="color:#000;font-weight:bold">.</span>sleep<span style="color:#000;font-weight:bold">(</span><span style="color:#099">100</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;producer produced&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>Now, when we run this, we can see that the consumers only execute once producer has produced a new batch, and while it is producing the next one:</p>
<pre tabindex="0"><code>[...]
producer produced
producer producing...
consumer 10 consuming...
consumer 8 consuming...
consumer 5 consuming...
consumer 3 consuming...
consumer 9 consuming...
consumer 7 consuming...
consumer 1 consuming...
consumer 6 consuming...
consumer 4 consuming...
consumer 2 consuming...
consumer 10 consumed
consumer 8 consumed
consumer 5 consumed
consumer 3 consumed
consumer 9 consumed
consumer 7 consumed
consumer 1 consumed
consumer 6 consumed
consumer 4 consumed
consumer 2 consumed
producer produced
producer producing...
consumer 10 consuming...
consumer 8 consuming...
consumer 5 consuming...
consumer 3 consuming...
consumer 9 consuming...
consumer 7 consuming...
consumer 1 consuming...
consumer 2 consuming...
consumer 4 consuming...
consumer 6 consuming...
consumer 10 consumed
consumer 8 consumed
consumer 5 consumed
consumer 3 consumed
consumer 9 consumed
consumer 7 consumed
consumer 1 consumed
consumer 2 consumed
consumer 4 consumed
consumer 6 consumed
</code></pre><p>This should give us a good chance of spotting an anomaly due to concurrent production and consumption. Now, we push this to the continuous integration environment and see the test freezing; not even a single iteration of any consumer is executed.</p>
<p>What has happened?</p>
<h2 id="the-cause">The Cause</h2>
<p>Among many differences between the local and continuous ingegration environment (e.g. Windows vs. Linux), a significant one in this case is the number of cores. While our development workstation had six hyper-threaded cores, the CI box has only four. The <a href="http://www.scala-lang.org/api/current/index.html#scala.concurrent.ExecutionContext%24%24Implicits%24@global:scala.concurrent.ExecutionContextExecutor">documentation</a> of <code>scala.concurrent.ExecutionContext.Implicits.global</code> notes:</p>
<blockquote>
<p>The default <code>ExecutionContext</code> implementation is backed by a work-stealing thread pool. By default, the thread pool uses a target number of worker threads equal to the number of available processors.</p>
</blockquote>
<p>We are asking the test to spawn ten consumers and one producer, i.e. 11 tasks. While they can be allocated among the 12 virtual cores of the workstation, the CI only has 8 slots, meaning that 8 of the tasks start executing and wait on the barrier, while the remaining 3 have no chance to be scheduled and allow everyone to pass the barrier.</p>
<p>Does it mean we cannot get higher degree of parallelism for our producer and consumers? No, it does not; these tasks spent the bulk of their time performing I/O, so they are not CPU-bound and their number should not be restricted by the number of available processors.</p>
<h2 id="the-fix">The Fix</h2>
<p>Once we know the above, a fix is pretty obvious. Instead of:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scala.concurrent.ExecutionContext.Implicits.global</span>
</span></span></code></pre></div><p>define:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">implicit</span> <span style="color:#000;font-weight:bold">val</span> ec <span style="color:#000;font-weight:bold">=</span> scala<span style="color:#000;font-weight:bold">.</span>concurrent<span style="color:#000;font-weight:bold">.</span><span style="color:#458;font-weight:bold">ExecutionContext</span><span style="color:#000;font-weight:bold">.</span>fromExecutor<span style="color:#000;font-weight:bold">(</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">new</span> java<span style="color:#000;font-weight:bold">.</span>util<span style="color:#000;font-weight:bold">.</span>concurrent<span style="color:#000;font-weight:bold">.</span><span style="color:#458;font-weight:bold">ForkJoinPool</span><span style="color:#000;font-weight:bold">(</span>consumerCount <span style="color:#000;font-weight:bold">+</span> <span style="color:#099">1</span><span style="color:#000;font-weight:bold">))</span>
</span></span></code></pre></div><p>in a scope that includes all invocations of <code>future</code>.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I would not use the <em>global</em> execution context whenever the asynchronous computations require any kind of synchronisation, as it can easily end in a deadlock, as in the example above. Not only that – spawning anything long-running in this fashion might cause exhaustion of the global fork-join pool and would require reasoning about all asynchronous computations in the program globally. Perhaps more generally, <code>future</code> should not be treated as a drop-in construct that just makes things go faster and not block. Whenever tempted to do this, always consider how you expect the executor of this future to behave, and, if in doubt, define a local one.</p>
]]></content:encoded></item><item><title>Sailor Fodder</title><link>https://blog.mmakowski.com/cooking/sailor-fodder/</link><pubDate>Sun, 22 Nov 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/sailor-fodder/</guid><description>Picture this: you try to bring a massive pot of water to boil to cook some rice. The meal was supposed to be served 15 minutes ago, and the water still refuses to boil. Suddenly, the floor lurches from underneath your feet, you are violently thrown against the cooker and only a small miracle saves you from third-degree burns. Eventually, you manage to put some rice into the water, and after another half an hour there is some hope it might have softened a little.</description><content:encoded><![CDATA[<p>Picture this: you try to bring a massive pot of water to boil to cook some rice. The meal was supposed to be served 15 minutes ago, and the water still refuses to boil. Suddenly, the floor lurches from underneath your feet, you are violently thrown against the cooker and only a small miracle saves you from third-degree burns. Eventually, you manage to put some rice into the water, and after another half an hour there is some hope it might have softened a little. So you remove the pot from the cooker, as only one cooking vessel can fit on it at a time, and start frying onions. The cooking space is cramped, there is no window, the hot oil splashes around and makes all surfaces greasy, constant roll, the stifling air of confined kitchen make you retch every now and then. Finally, you serve the food, and your crewmates, ungrateful swine, have the nerve to complain that the rice is too <em>al dente</em> or the sauce is not salty enough. This is what cooking on a sailing yacht is like.</p>
<p>Anything other than an <em>eintopf</em> is a major challenge. The typical lunch set involves a carb core – be it rice, pasta or potatoes – and something on top that is meant to provide the remaining nutrients, and the taste. With limited cooker space and the necessity to cook one thing after another, we end up with sticky, lumpy rice, either under- or overcooked pasta, or cold sauce. There is a neat trick though: buy rice that is cooked in bags, then cook it together with something else in the same pot of boiling water. What can this “something else” be? Lentils.</p>
<p>Lentils, being highly nutritious and keeping for ages, are an excellent yacht food. You could sail the world around just on rice and lentils, plus perhaps some preserved vegetables and fruit as a source of vitamins. Now, a vegetarian meal is a tricky proposition at the sea. The sailors like their meat. Fortunately, sailors also like spicy food, so a modicum of skill in throwing various powders and herbs into the pot can help us avoid the embarrassment. Described below is a luxury, landlubber version of the thing. Feel free to adapt it to seafaring by all means of simplification and corner-cutting, but make sure you don’t skimp on spice.</p>
<p>Start by frying diced <strong>onion</strong> and three <strong>red chillies</strong>, sliced. While this fries, add lots of spices: <strong>fenugreek</strong>, <strong>turmeric</strong>, <strong>cumin</strong>, <strong>coriander</strong>, <strong>nutmeg</strong> – anything of that ilk. Heaps of it. Mix well. Towards the end of frying, when the onion starts turning golden-brown, add some <strong>chopped tomatoes</strong> and three or four pressed <strong>garlic</strong> cloves. Let it fry for a while, then add whole <strong>green lentils</strong>, two cups. Add some boiling water and <strong>tomato puree</strong>, then cook for a couple of minutes. Now, add a cup or two of <strong>mung beans</strong>, some more water and again cook for a couple of minutes. Finally, two cups of <strong>red split lentils</strong>. These will dissolve into a mash after a while and provide thickness to the bean stew. Now, keep on adding water and cooking for further 30 mins or so. Mix frequently and thoroughly. Be careful that there is enough water – too little, and the stew will start burning at the bottom of the pan; too much is less of an issue, worst case you’ll end up with a soup instead of a stew. Timing is important as well, cooking for too long will turn the entire dish into a mash – not bad <em>per se</em>, but a bit bland in terms of texture. Towards the end add some chopped <strong>coriander leaves</strong> – these can also be added when the dish is served. Serve with brown rice.</p>
<p>Thanks go to Agnieszka Szczepkowska for introducing me to this way of cooking lentils (and being an inspiring quartermaster in general).</p>
]]></content:encoded></item><item><title>Wesoła rozpierducha</title><link>https://blog.mmakowski.com/travel/weso%C5%82a-rozpierducha/</link><pubDate>Sun, 15 Nov 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/weso%C5%82a-rozpierducha/</guid><description>Prolog Statek stoi. Rozpierducha jest totalna, bosman z kapitanem czekają na Jose który umie zrobić, żeby lodówka działała na morzu, a nie tylko w porcie, bo bez tego nie da się płynąć na Karaiby. Jest sobota, Jose ma przyjść we wtorek. Spierdolił się ekran od sondy i wiatromierza, to może naprawić Juan który przyjdzie w poniedziałek. Juan może też wydać papier na pławę EPIRB, której przegląd się skończył we wrześniu. Wspomaganie steru działa tylko w jedną stronę, bosman planuje wymienić uszczelki.</description><content:encoded><![CDATA[<h2 id="prolog">Prolog</h2>
<p>Statek stoi. Rozpierducha jest totalna, bosman z kapitanem czekają na Jose który umie zrobić, żeby lodówka działała na morzu, a nie tylko w porcie, bo bez tego nie da się płynąć na Karaiby. Jest sobota, Jose ma przyjść we wtorek. Spierdolił się ekran od sondy i wiatromierza, to może naprawić Juan który przyjdzie w poniedziałek. Juan może też wydać papier na pławę EPIRB, której przegląd się skończył we wrześniu. Wspomaganie steru działa tylko w jedną stronę, bosman planuje wymienić uszczelki. Na koncie jachtu nie ma pieniędzy ani na Jose, ani na Juana, ani na paliwo. Armator pieniędzy nie może przelać, bo cośtam, a w ogóle to się cieszy, że to nie my zatonęliśmy u wybrzeży Maroka, tylko jakiś inny polski jacht.</p>
<h2 id="wulkan">Wulkan</h2>
<p>Koło mariny i przystani promów są wypożyczalnie samochodów, gdzie od ręki można wziąć auto na dzień.</p>
<p><img src="https://live.staticflickr.com/5792/22681515267_a64693a016_c.jpg" alt="https://live.staticflickr.com/5792/22681515267_a64693a016_c.jpg"></p>
<p>Teida to główna atrakcja Teneryfy. Wulkan często tonie w chmurach, jednak na wysokości około 2000 m n.p.m. wyjeżdżamy ponad nie i ukazuje nam się stożek w całej swej trzyipółkilometrowej okazałości. Na 3000 można wjechać kolejką, drogo, i długo się czeka, ale warto – o ile nie chce się większej części dnia przeznaczyć na pieszą wspinaczkę na tę wysokość.</p>
<p>Ostatnie kilkaset metrów przewyższenia pomiędzy górną stacją kolejki a szczytem pokonać można tylko pieszo, i tylko posiadając odpowiednie pozwolenie – starać się o nie należy na miesiąc przed terminem wejścia. Przy górnej stacji kolejki dotkliwie odczuwam rzadkość powietrza, zwykły spacer powoduje zadyszkę. Ciekaw jestem, jak będzie <a href="/travel/kto-chce-na-kilimand%C5%BCaro/">na Kilimandżaro</a>.</p>
<p>Zjazd w stronę Los Gigantes jest oszałamiająco piękny, krajobrazy wulkaniczngo płaskowyżu są nieziemskie. Później jeszcze klify Los Gigantes i wioska Masca, i można zamknąć pętlę do Santa Cruz najszybszą trasą, czyli wzdłuż północnego wybrzeża.</p>
<h2 id="wyjście">Wyjście</h2>
<p>Jose przyszedł we wtorek, ale myślał, że go nie potrzebujemy, więc sobie poszedł i następny wolny termin ma w piątek. Juan przyszedł, dał papier na EPIRB i był gotów wymienić ekran, ale nie było kasy, więc powiedzieliśmy, żeby przyszedł kolejnego dnia, może będzie. Z dnia na dzień morale załogi spadało, nikt nad niczym nie panował. Spuśćmy na całą sytuację zasłonę milczenia; dość powiedzieć, że wspólnymi siłami wyszliśmy w morze w środę wieczorem. Bez działającej lodówki, za to z ekranem i papierem na pławę.</p>
<p>Następnego dnia po wyjściu postawiliśmy wszystkie główne żagle: genuę, grota, foka i bezana. Zrobiliśmy zdjęcia, po czym zrzuciliśmy wszystko poza genią, dołożyliśmy silnik, i tak zostało do końca przelotu; z tym, że jak słabiej wiało to zostawialiśmy sam silnik, a jak raz wiało przyzwoicie, siódemka, to daliśmy odpocząć silnikowi i jechaliśmy na samej genui.</p>
<h2 id="załoga">Załoga</h2>
<p><img src="https://live.staticflickr.com/5643/22682656327_8275dc9457_c.jpg" alt="https://live.staticflickr.com/5643/22682656327_8275dc9457_c.jpg"></p>
<p>Pora poznać załogę. Jest młody morski wilk, dusza towarzystwa, jest zadeklarowany wyznawca spiskowej teorii dziejów, ksywa “Macierewicz”, jest nie czująca respektu przed nikim szesnastolatka, jest majtek w stopniu kapitana, jest kilkoro informatyków.</p>
<p>Macierewicz i kapitan-majtek, obaj po sześćdziesiątce, żrą się o to jak rozbijać jajka do jajecznicy. Szesnastolatka strofuje obu w kwestiach żeglarskich oraz kambuzowych. Morski wilk tryska koszarowym humorem i bierze szesnastolatkę pod opiekę. Weteran siedmiu mórz i oceanów nie umie poprawnie nanieść pozycji na mapę, doświadczony motorowodniak kręci sterem nie w tę stronę. Niekontrolowane zwroty przez rufę co kilkanaście minut. Jedziemy.</p>
<h2 id="koja">Koja</h2>
<p>Płyniemy na południe, kurs 205, niezmiennie przez pięć dni. Pojawiają się latające ryby, żółwie morskie, rekiny, delfiny. Z każdym przeciętym równoleżnikiem podnosi się temperatura, tak na pokładzie jak i w koi. Na Bałtyku koja była oazą spokoju, ziemią obiecaną, w której zaciszu i cieple, owiniętym w śpiwór przesypiało się godziny wolne od obowiązków nawigacyjnych i kambuzowych. Na Zjawie moja koja, dolna prawa burta na rufie, ma metr osiemdziesiąt długości, pół metra szerokości i tyleż wysokości. Wymiary trumny, mniej więcej. Kiedyś na Mazurach Jerzy spał w bakiście, jeszcze mniejszej. W nocy obudził nas jego krzyk, że został żywcem pogrzebany, i żeby iść mu na ratunek. W moim przypadku wrażenie przypominało raczej topienie się w zupie. Po przekroczeniu zwrotnika Raka, co noc budziłem się mokry od potu, wynurzałem głowę z zejściówki żeby zaczerpnąć powietrza i nurkowałem z powrotem do koi, na kolejną godzinę beztlenowego snu.</p>
<p>Próbowałem spać na pokładzie, z wątpliwym powodzeniem. Najpierw nie chciałem zasolić śpiwora, więc kładłem się w ubraniu, przypięty szelkami do masztu. Było twardo i niewygodnie, a do tego wiatr powodował, że pomimo 27 stopni temperatury powietrza, marzłem. Później w Prai poszedłem po rozum do głowy i spałem w śpiworze. Było zupełnie w porządku, dopóki nie nadeszła ulewa. Koniec końców zawsze lądowałem w koi.</p>
<h2 id="prowiant">Prowiant</h2>
<p>Do zaprowiantowania wydelegowano dziewczyny, nie opierały się specjalnie. Agnieszka była nawet dobrze przygotowana do roli kwatermistrzyni, z rozplanowanymi posiłkami na 10 dni rejsu. Po poprzedniej załodze zostało parę kilo kuskusu i litry sosu chińskiego. Z braku lodówki dokupujemy do tego sporo konserw i kilkaset jaj. Prawdziwym hitem jest jednak jamon Serrano – cała świńska noga, która wisi najpierw w kambuzie, a później na pokładzie. Duże uznanie u całej załogi znajduje też nowatorski pomysł pieczenia chleba na pokładzie, przy użyciu lidlowskiej mieszanki. Wyżywienie, jak na żaglówkę, bardzo przyzwoite.</p>
<p><img src="https://live.staticflickr.com/5642/22684807357_e932e58033_c.jpg" alt="https://live.staticflickr.com/5642/22684807357_e932e58033_c.jpg"></p>
<h2 id="kąpielówki">Kąpielówki</h2>
<p>Zrosłem się z kąpielówkami, stały się moją nieodłączną częścią. Z logistycznych względów wziąłem ze sobą tylko 6 kilo bagażu, miejsca na zbędne luksusy, takie jak zapasowa para majtek, nie było. Kąpielówki są w takiej sytuacji bardzo praktyczne: przewiewne, szybko schną i można się umyć razem z nimi. W czasie siedmiodniowego przelotu miałem dwa prysznice – na tyle starczyło słodkiej wody. W Prai było gorzej: nie tankowaliśmy wody, bo była niewiadomej jakości, a w porcie pryszniców nie było. Trzeba się było wbijać do hoteli.</p>
<h2 id="keja">Keja</h2>
<p>Kwestia wymiany załogi i zaprowiantowania w Prai nie została dobrze przemyślana. W stolicy Cabo Verde nie ma mariny, jest tylko kotwicowisko. Mamy na pokładzie ponton, ale silnik się zepsuł, zaś wożenie wszystkich bagaży i prowiantu pontonem, na pagajach, wydaje się wysoce niepraktyczne, więc z telefonu satelitarnego dzwonimy do kapitanatu portu i dogadujemy się, że zacumujemy przy murowanej kei przeznaczonej dla dużych statków. Ze względu na pływy zostawiamy cumy i szpringi luźne, statkiem rzuca o keję. Wisząca na niej opona o średnicy dwóch metrów wyciera dziurę w pokrywającej burtę farbie; odbijacz się urywa i odpływa w siną dal; co kilka godziny przeciera się jedna z cum, wachty nawigacyjne mają za zadanie wiązać ich pozostałości i wymieniać. Niekiedy statkiem rzuci akurat tak, że fragment burty nie chroniony odbijaczami ani oponą uderza o beton kei, lecą drzazgi. Przechadzający się po kei czarnoskórzy pracownicy portu zatrzymują się obok naszej łódki i albo kręcą z politowaniem głową, albo wprost śmieją się z idiotyzmu białasów, kórzy postawili jacht w takim miejscu. Co jakiś czas przychodzi ktoś z portu i prosi, żebyśmy przesunęli statek, bo przeszkadza. O przestawieniu łódki mowy nie ma, bo przy przybijaniu spieprzyło się chłodzenie w silniku, jakiś gwint się urwał. Statek stoi. Rozpierducha jest totalna.</p>
<h2 id="wiza">Wiza</h2>
<p>Na stronie brytyjskiego rządu <a href="https://www.gov.uk/foreign-travel-advice/capeverde/entry-requirements">napisano</a>, że uzyskanie wizy Cabo Verde na miejscu nie jest sprawą oczywistą. Wizę zawczasu załatwić można u konsula honorowego. Nazywa się Jonathan Lux, bywa w Londynie dwa razy w miesiącu. W celu uzyskania wizy należy panu Luksowi przesłać 40 funtów w gotówce lub czeku wystawionym na jego nazwisko, paszport, wypełniony wniosek oraz kopertę zwrotną. Istotnie, po kilku dniach paszport wraca ze stosowną pieczątką.</p>
<p><img src="https://live.staticflickr.com/5656/23114396021_e13d30f717_c.jpg" alt="https://live.staticflickr.com/5656/23114396021_e13d30f717_c.jpg"></p>
<p>Cały ten proces okazuje się zbędny, bowiem wizy bez problemu – i taniej, po 25 euro od sztuki – załatwić można w porcie w Prai. W ogóle te wizy to jakaś ściema, bo potrzebne są jedynie przy wylocie z wysp samolotem. Część załogi, która płynać będzie dalej jachtem, wiz w ogóle nie potrzebuje.</p>
<h2 id="praia">Praia</h2>
<p>Praia, czyli plaża. Najlepiej Quebra Canela, w willowej dzielnicy. Obok, w barze Kebra Kabana, można zjeść niedrogą i smaczną grillowaną rybę i wypić koktail. W okolicy są też jedyne okazałe budowle stolicy: parlament Cabo Verde oraz, naprzeciwko, ambasady Chin i Rosji. Inne instytucje rządowe, jak ministerstwa i komitet olimpijski, mieszczą się w pobliskich blokach mieszkalnych.</p>
<p>Życie turystyczne toczy się na Plateau, w knajpach przy deptaku <em>Avenida 5 de Julho</em>. Przy placu Alexandre Albuquerque mieści się relatywnie luksusowy hotel <em>Praia Confort</em>, gdzie przy łucie szczęścia wynegocjować można dostęp do prysznica i skąd podebrać można WiFi (hasło: <code>confort@praia</code>). Na linii port – plateau – Kebra najwygodniej poruszać się taksówkami, tak oficjalnymi jak i nie. Standardowa stawka to 200 escudos, czyli 2 euro, zawsze negocjowane z góry, płacone z dołu. Euro przyjmowane jest praktycznie wszędzie w przeliczeniu 100 escudos za euro, co jest dość uczciwą stawką. Lepszy kurs można uzyskać wypłacając z bankomatów (nie stanowi to żadnego problemu), wymieniając euro u cinkciarzy zaludniających <em>Avenida Amilcar Cabral</em>, lub w banku (uważać na prowizję).</p>
<p>Afrykańskich miast dotąd nie widziałem, ale podejrzewam, że Praia stanowi względnie łagodne do nich wprowadzenie. Poza ścisłym centrum architektura to w przeważającej liczbie klockowate konstrukcje z pustaków, na ogół nie otynkowane i niedokończone – stoją ściany pierwszego piętra, jednak dachu brak, otwory okienne są puste. Ulice są raczej czyste, ale odpadki różnej maści – plastik, złom, gruz – walają się na terenach zielonych, w suchych korytach rzek, w pobliżu plaż. Po zmroku nie jest bezpiecznie, poza rejonami typowo turystycznymi poruszać się należy taksówką. Lokalsi są z reguły przyjaźni i nie natarczywi. Znajomość angielskiego jest nikła, również w branży turystycznej. Przy braku znajomości portugalskiego przydaje się francuski albo Google Translate.</p>
<h2 id="ilha-de-santiago">Ilha de Santiago</h2>
<p>Po zapoznaniu się z urokami miasta warto zagłębić się w teren. Wystarczy pogadać z dowolnym taksówkarzem, który za około 70 euro przewiezie naokoło wyspy swoim autem, albo za 100 euro załatwi minibusa. Standardowa trasa to Praia – Assomada – Tarrafal (przez centrum wyspy) i powrót brzegiem, przez Pedra Badejo; przeznaczyć na nią należy cały dzień. Wnętrze wyspy to zapierające dech w piersiach skały i doliny. W Tarrafal warto zatrzymać się na obiad w Baia Verde. To knajpa dla białasów, droga, ale grillowane ryby oraz owoce morza są pyszne, a widoki piękne.</p>
<p><img src="https://live.staticflickr.com/5642/23076624546_73a2d86268_c.jpg" alt="https://live.staticflickr.com/5642/23076624546_73a2d86268_c.jpg"></p>
<h2 id="wkład-do-szamba">Wkład do szamba</h2>
<p>Żeglarz to macho. Laski są do kręcenia dupą, nie kabestanem. Ewentualnie do kambuza. Ja jestem zindoktrynowany przez zachodni liberalizm, wojujący feminizm i gender, i takie podejście powoduje u mnie dyskomfort.</p>
<p>Żeglarz się bawi. Jest towarzyski. Chleje i śpiewa szanty. Ja kiedyś, może piętnaście lat temu, też się tak bawiłem. Jak John Blackthorne, <em>Anjin-san</em>, po spędzeniu kilku miesięcy z Japończykami, zaczął odczuwać odrazę do barbarzyńskich zwyczajów swoich dawnych towarzyszy, tak ja z niesmakiem i zażenowaniem obserwuję żeglarskie imprezy.</p>
<p>Żeglarz wykazuje inicjatywę. Jak trzeba coś zrobić, w czymś pomóc, to nie rozgląda się, nie pyta “dlaczego ja?”, tylko to robi. I ja się staram, bo wiem, że tak należy; ale moje wyuczone odruchy każą mi tak się ustawiać, żeby to nie mnie poproszono, żeby to ktoś inny odwalił calą robotę.</p>
<p>Kapitan Achtelik tak rzekł kiedyś do trzeciego, który wydał niewłaściwy żagiel:</p>
<p>– Trzeci: ty się nie nadajesz na trzeciego. Ty się na żeglarza nie nadajesz. Ty się nadajesz tylko na wkład do szamba.</p>
<p>Ja też się chyba nie nadaję na żeglarza.</p>
<h2 id="haiku">Haiku</h2>
<p>Portowe chlanie<br>
Zapierdol na silniku<br>
Znów fuckinszanty</p>
<p><a href="https://www.flickr.com/gp/mmakowski/q87Db1">Odysea</a></p>
]]></content:encoded></item><item><title>Nigdy więcej na Bałtyku</title><link>https://blog.mmakowski.com/travel/nigdy-wi%C4%99cej-na-ba%C5%82tyku/</link><pubDate>Sun, 27 Sep 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/nigdy-wi%C4%99cej-na-ba%C5%82tyku/</guid><description>Żeglowałem po morzu trzy razy, za każdym razem po Bałtyku, we wrześniu, na Warszawskiej Nike. Namówili mnie przyjaciele – żeglarze, czyli Jerzy, Mierniczy oraz Piotr. Najpierw był tydzień Świnoujście – Kopenhaga – Gdynia. Było chłodnawo, ale pogoda niezła, i nie chorowałem (wachty kambuzowe miałem w portach), tak, że nawet mi się podobało. Kolejny raz był krótki wypad Łeba – Bornholm – Gdynia, z niezapomnianym kapitanem Achtelikiem, w wolnym czasie sztygarem z Bytomia.</description><content:encoded><![CDATA[<p>Żeglowałem po morzu trzy razy, za każdym razem po Bałtyku, we wrześniu, na Warszawskiej Nike. Namówili mnie przyjaciele – żeglarze, czyli Jerzy, Mierniczy oraz Piotr. Najpierw był tydzień Świnoujście – Kopenhaga – Gdynia. Było chłodnawo, ale pogoda niezła, i nie chorowałem (wachty kambuzowe miałem w portach), tak, że nawet mi się podobało. Kolejny raz był krótki wypad Łeba – Bornholm – Gdynia, z niezapomnianym kapitanem Achtelikiem, w wolnym czasie sztygarem z Bytomia. Zaczęło się od kambuza po wypłynięciu. Morze dość niespokojne, ale trzymałem się dobrze, dopóki nie otworzyłem szuflady z zapałkami i nie poczułem zapachu siarki. Później przez całą wachtę jedną ręką mieszałem w garze gołąbki a drugą trzymałem duży czarny worek na śmieci, do którego wymiotowałem. Po zejściu z kambuza było tylko gorzej. Podczas wachty 20-00 pogoda była okołosztormowa, do kokpitu co i rusz wlewały się wielkie, zimne fale. Raz akurat kuk podawał nam przez okienko herbatę, gdy przyszła fala większa niż zwykle i wypełniła kokpit jak wannę, znajdując ujście w okienku kuchennym. Piotr, który robił za kuka, musiał pobiec zmienić majtki na suche, a my na pokładzie zamiast gorącej herbaty mieliśmy trochę morskiej wody w kubkach i rozgrzewać nas mogły tylko fantazje, jak to za cztery godziny ten zimny, mokry i rzucający na wszystkie strony horror się kończy, schodzimy pod pokład i zlegamy w kojach na sześć godzin twardego snu. Na zakończenie tej eskapady kpt. Achtelik pożegnał nas słowami:</p>
<p>– Fajnie było. Ale, kurwa, nigdy więcej.</p>
<p>Z jakiegoś powodu zdecydowałem się płynąć kolejny raz. Znów pod Achtelikiem. Tym razem ekipę wzmocnili Kozło i Młodożeniec. Ten ostatni po powrocie napisał wiersz:</p>
<blockquote>
<p><strong>Dziennik jachtowy</strong>
<em>21-30 września 2003</em></p>
<p>Wybierz szoty od baksztagu,<br>
Ciągnij, klinuj, wiąż i knaguj;<br>
Korbę bierz i stawiaj grota,<br>
Mocuj bom na kontraszota;<br>
Oddaj korbę, klaruj liny –<br>
“Ruszać się, wy sukinsyny!”.<br>
Zawiąż krawat na wyblinkę –<br>
“Szlag by trafił tę #%&amp;@ linkę!”.<br>
Rozkaz: “Dziesięć stopni lewiej,<br>
Zwrot przez rufę i przed siebie.”<br>
Ster się złamał? Włóż nań rumpel –<br>
“Przypnij-no się!” – wrzeszczy kumpel;<br>
Szczać chce ci się? Szczaj na wantach!<br>
Piękne jest żeglarstwo… w szantach.<br>
W łeb dostałeś wielką szeklą,<br>
Mokryś, rzygasz – co za piekło!<br>
Nie unikniesz tu kataru,<br>
Smrodu potu, szczyn i smaru;<br>
Słońce słońc dla Ciebie wzejdzie,<br>
Kiedy wreszcie na ląd zejdziesz.</p>
</blockquote>
<p><img src="https://live.staticflickr.com/49/141864556_24e882684b_c.jpg" alt="szycie żagla na jachcie"></p>
<p>Odwidziliśmy Kalmar i Visby, ogólnie dobrze tę wycieczkę wspominam, ale z jakiegoś powodu na jej koniec wbiłem sobie do głowy: nigdy więcej rejsów na Bałtyku. Wiele lat minęło od tej historii, szczegóły zatarł czas. Maksyma “nigdy więcej na Bałtyku” pozostała jednak w mojej pamięci i stosuję się do niej dogmatycznie od lat dwunastu.</p>
<p>Parę lat później był jeszcze weekend na Solencie, ale to praktycznie jezioro, i nocowaliśmy w marinach, więc się nie liczy.</p>
<p>Nigdy więcej <em>na Bałtyku</em>. O innych akwenach nie było mowy, więc gdy Jerzy osatnio zaproponował dwutygodniowy rejs między Wyspami Kanaryjskim a wyspami Zielonego Przylądka, nie odmówiłem z przyczyn pryncypialnych, a z braku wakacji. W praktyce mogę brać wolnego ile chcę, ale wyjeżdżałem w tym roku na narty, <a href="https://blog.mmakowski.com/travel/mi%C4%99dzy-aten%C4%85-a-prorokiem-eliaszem/">do Grecji</a>, <a href="https://blog.mmakowski.com/travel/tam-gdzie-m%C3%B3wi%C4%85-w-kartuli/">do Gruzji</a>, brałem kilka tygodni wolnego na naukę i konferencje, a w styczniu wybywam na kolejne dwa tygodnie do <a href="https://blog.mmakowski.com/travel/kto-chce-na-kilimand%C5%BCaro/">Tanzanii</a>, więc niektórzy koledzy z pracy trochę zaczęli kręcić nosem na ten nierówny podział obowiązków i wolnego czasu między kontraktorów a pracowników etatowych.</p>
<p>Tymczasem w tym tygodniu okazało się, że z ważnych przyczyn budżetowych wszyscy pracownicy tymczasowi <em>Bank of America Merrill Lynch</em> mają stawki redukowane o 10% i wysyłani są na przymusowy dwutygodniowy urlop. Było to dla mnie pewnym zaskoczeniem, bowiem zdarzały mi się już redukcje stawki, lecz było to na ogół spowodowane szerszą sytuacją ekonomiczną i odbywało się we wszystkich bankach w podobnym czasie, tymczasem tu trudno się dopatrzeć obiektywnych przyczyn. Jeden z doświadczonych kolegów wyjaśnił mi, że chodzi o poprawienie wyników finansowych w czwartym kwartale 2015, bowiem od tych wyników zależą premie najwyższego szefostwa banku. Jak by w rzeczywistości nie było, o ile redukcja stawki mnie nie cieszy, to wakacje wypadły w całkiem dogodnym momencie. Tak, że jadę – czy też raczej płynę.</p>
<p>Plan jest następujący: w piątek 30 października po południu lecę na Teneryfę. Zaokrętowanie jest następnego dnia o 16:00, po czym wypływamy, zahaczamy o La Gomera i El Hiero a później prujemy na południe, na wyspę Santiago. Tydzień bez zawijania do portu będzie dla mnie zupełną nowością. Wyokrętowanie 14 listopada w Praia, skąd po północy dnia kolejnego lecę do Lizbony, godzina na przesiadkę i około 9 rano w niedzielę 15 jestem na Gatwick.</p>
<p>Miejsca ponoć <a href="http://cwm.frame2.yachtadmin.eu/rejs/1576/odysea-wladka-wagnera-na-wyspy-zielonego-przyladka">jeszcze są</a>.</p>
]]></content:encoded></item><item><title>Scala in North Lakes</title><link>https://blog.mmakowski.com/technology/scala-in-north-lakes/</link><pubDate>Wed, 23 Sep 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/scala-in-north-lakes/</guid><description>A Scala conference, far from any significant technology hub? With no call for papers? With hikes planned in what is one of the wettest parts of the country? Without Martin Odersky? What could possibly go wrong? A lot. But, apart from a few of the speakers not making it, nothing did, and Scala World was probably as good as a Scala conference can get.
Instead of summarising individual talks, I will focus on the major themes.</description><content:encoded><![CDATA[<p>A Scala conference, far from any significant technology hub? With no call for papers? With hikes planned in what is one of the wettest parts of the country? Without Martin Odersky? What could possibly go wrong? A lot. But, apart from a few of the speakers not making it, nothing did, and <a href="https://scala.world">Scala World</a> was probably as good as a Scala conference can get.</p>
<p>Instead of summarising individual talks, I will focus on the major themes. The usual disclaimers apply: it is a personal impression based only on the talks I saw, I might not have selected the best and most representative ones, and in general I understood very little of what was being said.</p>
<h2 id="functional-programming">Functional Programming</h2>
<p>The conference schedule made it clear that functional programming will be the leading theme at Scala World. It was the subject of the keynotes on both days. Rúnar Bjarnason <a href="https://github.com/runarorama/slides/blob/master/ScalaWorld.pdf">presented</a> a philosophical argument on how the least powerful construct gives us most power of reasoning in a way that was digestible to those moderately versed in FP, finishing with a concept of Galois connection. Daniel Spiewak dove right into the algebra of Scalaz Stream, the shortcomings of existing one and promises of the new implementation, $FS^2$.</p>
<p>Practical functional architecture, presented by Raúl Raja, offered Kleisli arrows for composition, free monad for interpretation and <em>delimited, monadic, dependently-typed, accumulating, checked exceptions</em> for fault tolerance. John de Goes <a href="https://github.com/jdegoes/scalaworld-2015/">explained</a> how free appliatives, being less powerful than free monads, are desirable where dependency on previous step is not required, i.e. where the program builds a static data structure, not another program. What we get in return is the ability to introspect on the structure before runtime. In the process, we saw how the sausage was being made (with a natural transformation), and boy, it was not a pretty sight. John offered a nicer solution based on <em>finally tagless</em> representation, which perhaps was a way of encoding GADTs in Scala, but I’m not sure – that bit was over my head. Anyway, even that effort was heckled by Daniel Spiewak, who insisted he could do it in half a line of code with Coyoneda. Contrasting with those fairly advanced talks, Chris Marshall’s workshop on error handling in Scalaz, which ended up with a monad transformer stack that offered Reader, Writer, Either and IO, was quite approachable to someone vaguely familiar with the subject – if not particularly enlightening.</p>
<p>If that all seems hermetic to you, you are not alone. Hard-core FP community sometimes does appear like a closed club talking in strange language, whose chief purpose is to make the outsiders feel stupid and inadequate. Changing this perception was at the heart of Erik Osheim’s talk. Erik is the founder of <a href="https://github.com/non/cats">Cats</a> library, which positions itself as a friendler (both to newcomers and to seasoned functional programmers) alternative to Scalaz. In contrast to Scalaz, Cats treats comprehensive documentation and supportive community as first-order concerns.</p>
<h2 id="compiler-hacking">Compiler Hacking</h2>
<p>The sessions devoted to compilation of scala can be divided in two groups: the messy present and the bright future. In the former, we had an intro to scalac structure delivered by Chris Birchall, complete with a demo of compiler plugin that transpiles Scala (presumably, a subset) to Basic, and Simon Ochsenreither’s series of nicely structured tutorials on scalac bug fixing. The procedure always starts with text search for relevant terms in the entire compiler codebase, then hacking away until it compiles, finishing with a test case that demonstrates our fix or feature works as intended. Be prepared for long waits while your changes to the compiler are being rebuilt.</p>
<p>It is telling that new tools for working with Scala code and experimenting with the language tend to start from scratch rather than extend the infrastructure provided by scalac. It can hardly be construed as a glowing endorsement of the existing compiler’s codebase. If even Martin Odersky, the original author of the compiler, and Eugene Burmako, the person who gave us macros, move away from scalac when working on new Scala-related projects, one cannot help but share Paul Phillips’s opinion that scalac is doomed. That said, the new compiler, <a href="https://github.com/lampepfl/dotty">dotc</a>, shows promise. Dmitry Petrashko, as of now the most prolific contributor to the new compiler’s codebase, <a href="http://scalaworld2015.d-d.me/#/">discussed</a> ways in which dotc is better than the predecessor: a number of smaller cakes instead of single giant one (?), global mutable state replaced by context object passed between phases, handling of symbol denotations that preserves the full history of a symbol, and mini-phases replacing the old maxi-phases. This last improvement should, to some extent, address the main gripe of many Scala developers: compilation speed. While scalac phases transform the entire AST, generating lots of garbage in old generation in the process, mini-phases work on the level of individual nodes, offering a better memory locality and shorter-lived objects. There is also hope for the elephant in the room, binary compatibility, in the form of typed trees that are saved in <code>.class</code> files and allow dotc to generate bytecode after the library is deployed. This feature also opens up exciting possibilities of whole-program optimisation after deployment, such as removal of virtual calls and limited automatic specialisation.</p>
<p>The dialect of Scala supported by dotc is actually a slightly different language, called Dotty. Those of us with substantial existing Scala codebases need not feel left behind: help is (about to be) at hand in the form of <a href="http://scalameta.org/">scala.meta</a>. This new project from Eugene Burmako purports to provide a faithful representation of a program in a chosen dialect of Scala (2.11, 2.12 etc.) or Dotty. That AST representation can then by used for translating the program to a different dialect and emitting source code with even minor details, for example formatting, preserved. The ambition of scala.meta goes beyond syntactic manipulation; however, re-implementing Scala type checking outside of scalac turned out to be a monumental task. At present the project offers limited support for semantic information by calling out to scalac.</p>
<h2 id="formal-methods">Formal Methods</h2>
<p>Those not satisfied with the assurances offered by run-of-the-mill FP devices, such as isolating effects and handling errors with monad transformer stacks, were treated to a preview of other techniques for making our software reliable. Sleep-depraved Jon Pretty showed CLI and internationalisation API of his Rapture libraries, where types were used to specify the required structure of command line arguments and the set of supported languages. While the usefulness of being able to express in the type that a string has English and French version, or require that both English and German messages must be provided to a function, is debatable, the possibilities offered by Scala’s type system, and Jon’s ingenuity in exploiting them, seem immense.</p>
<p>Getting the machine to write the program for us never fails to impress. On top of that, Edwin Brady is a very entertaining speaker, so his <a href="http://www.idris-lang.org/">Idris</a> demo, where the expressiveness of dependent types allowed the Idris runtime to infer the implementation, and the practicality was demonstrated by <em>Space Invaders</em> clone, met with well deserved cheers and applause. Lars Hupel led another excursion beyond Scala-land, into the realm of <a href="http://isabelle.in.tum.de/">Isabelle</a> proof assistant, to finally return to home soil by mentioning <a href="http://leon.epfl.ch/">Leon</a> – a proof assistant that supports a subset of Scala. Similarly, Paul Snively ran a workshop on formal logic in <a href="https://coq.inria.fr/">Coq</a>.</p>
<p>It all appeared very elegant, sometimes mind blowing, and for sure gives the developer who has proven their <em>sort</em> or <em>insert</em> function formally correct a sense of satisfaction and accomplishment. What I am still waiting for is some evidence that those techniques do matter when it comes to delivering software in domains more mundane than nuclear plant control software or airplane avionics.</p>
<h2 id="performance-and-scalability">Performance and Scalability</h2>
<p>At the risk of gross oversimplification, one can say that Scala users are primarily interested in either correctness or performance. While the former theme was very prominent at Scala World, the latter was mostly mentioned in passing, when discussing Spark’s “Project Tungstent”, equality in Spire, and the speed of dotc and Scalaz streams. I only recall two talks specifically concerned with performance: one on Akka Streams (which I did not attend), and another <a href="http://www.slideshare.net/ktoso/the-need-for-async-scalaworld">on debugging performance</a>, delivered by Konrad Malawski. In summary: do not hand-roll microbenchmarks. JVM is a complex beast and making sure that the performance characteristics of the code while benchmarking are the same as in a production setting is far from trivial. Use <a href="http://openjdk.java.net/projects/code-tools/jmh/">JMH</a> instead.</p>
<h2 id="advocacy">Advocacy</h2>
<p>One of the major themes at Scala conferences, experience reports from the industry and language advocacy, was notable for its conspicuous absence. That made sense, since anyone attempting to convince Scala World attendees of the benefits of trying out Scala in place of Java, Python or any other lesser language, would be preaching to the choir. The only talk that touched upon the subject of “why Scala?” was Dean Wampler’s <a href="http://deanwampler.github.io/polyglotprogramming/papers/ScalaJVMBigData-SparkLessons.pdf">overview</a> of new in the Spark-land.</p>
<hr>
<p>Scala World 2015 was a brainchild of Jon Pretty, who came up with the formula, selected location, hand-picked speakers, organised hikes (including transport to and from), food, dinner, and ensured a nice touch to every aspect of the conference. To start with, both Saturday’s walk in Central Fells and Sunday’s half day hike up and down Helvellyn offered some spectacular views and variety and were paced exactly so that everyone could complete them in the time allotted. Booking Paul Phillips as <a href="http://www.slideshare.net/extempore/naming-things-and-finding-cothings">the entertainer</a> for conference dinner (excellent) was a master stroke. Last but not least, <a href="http://www.rheged.com/">Rheged Centre</a>, where the conference took place, is a beautiful building, resembling a grassy mound, with some of the rooms offering views over the pastures and rolling hills of Cumbrian countryside, and hosting a collection of shops with exquisitely designed items. I genuinely cannot think of a nicer location for a conference, whatever the subject.</p>
<p>Will I be coming back? Unlikely.</p>
<p>That has nothing to do with the organisation (faultless), location (beautiful and reasonably accessible), attendees (friendly, although quite homogeneous). It’s the subject: Scala. Over the years of participation in various conferences, I have realised that language-centric ones tend to generate a bubble where said language, ultimately just one of many tools, takes a central stage, and other software development concerns are forgotten. It is the concepts, techniques and all-encompassing approaches to building software that are what I personally would prefer to focus on. Scala is neither the best vehicle for presenting advanced FP concepts (Haskell being the <em>lingua franca</em>), nor for type-level programming (languages with first-class types, such as Idris, are more suitable), and once that is taken away, then what we are left with is a compromise: a tool, that with quite a bit of effort allows us to apply the advanced programming techniques and run the code on JVM. It is perhaps a sensible thing to do once one is comfortable with the underlying concepts. I’m not quite there yet, so I will skip the “FP in Scala” type of events until I have learned enough to appreciate and accept that the price paid in bending over backwards to get a type lambda is justified by the engineering properties we thus obtain.</p>
<p><img src="https://farm1.staticflickr.com/691/21650572372_f522b490e1_c.jpg" alt="https://farm1.staticflickr.com/691/21650572372_f522b490e1_c.jpg"></p>
]]></content:encoded></item><item><title>Kto chce na Kilimandżaro</title><link>https://blog.mmakowski.com/travel/kto-chce-na-kilimand%C5%BCaro/</link><pubDate>Mon, 14 Sep 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/kto-chce-na-kilimand%C5%BCaro/</guid><description>W styczniu wchodzimy z Anią na Kilimandżaro i szukamy towarzystwa.
Itinerer 16 stycznia (sobota): Lot do Nairobi (09:00, Heathrow, 8.5h). Nocleg w hotelu gdzieś przy lotnisku. 17: Bus z Nairobi do Arusha (około 5h). Nocleg w Arusha załatwiony przez Team Kilimanjaro (TK). 18-25: Wejście na Kilimandżaro (8 day TK Lemosho ‘Excel Series’, z noclegiem w kraterze). 26-29: Safari: Tarangire, Ngorongoro, Lake Manyara, dzień z buszmenami uczącymi surwiwalu. Organizowane przez Safari Tours Tanzania, opcja semi-luxury.</description><content:encoded><![CDATA[<p>W styczniu wchodzimy z Anią na Kilimandżaro i szukamy towarzystwa.</p>
<h2 id="itinerer">Itinerer</h2>
<ul>
<li>16 stycznia (sobota): Lot do Nairobi (09:00, Heathrow, 8.5h). Nocleg w hotelu gdzieś przy lotnisku.</li>
<li>17: Bus z Nairobi do Arusha (około 5h). Nocleg w Arusha załatwiony przez <a href="http://www.teamkilimanjaro.com/">Team Kilimanjaro</a> (TK).</li>
<li>18-25: Wejście na Kilimandżaro (8 day TK Lemosho ‘Excel Series’, z noclegiem w kraterze).</li>
<li>26-29: Safari: Tarangire, Ngorongoro, Lake Manyara, dzień z buszmenami uczącymi surwiwalu. Organizowane przez <a href="http://safaritourstanzania.com/">Safari Tours Tanzania</a>, opcja semi-luxury.</li>
<li>30 stycznia (sobota): Bus do Nairobi i lot do Londynu (odlot o 23:00, przylot przed 05:00 na Heathrow).</li>
</ul>
<p>Strona TK zawiera dużo przydatnych informacji na temat treku. Dołączyć do nas można albo na samo wejście na górę, albo na samo safari, albo na obie atrakcje.</p>
<h2 id="koszty">Koszty</h2>
<p>Główne koszty, w USD za osobę:</p>
<ul>
<li>Loty bezpośrednie: 1080 USD (economy) lub 1250 USD (premium economy); z przesiadką można polecieć za mniej niż 500 USD</li>
<li>Wejście na Kilimandżaro: 2885 USD + ~300 USD <a href="http://www.teamkilimanjaro.com/tipping/">napiwku</a> jeśli dołączy do nas jedna osoba, z każdą kolejną będzie taniej; szczegółowy cennik jest <a href="http://www.teamkilimanjaro.com/prices/">na stronie TK</a></li>
<li>Safari: w tej chwili kosztuje 1587 USD + ~115 USD napiwku, na pewno spadnie jak dołączy więcej osób, ale nie wiem dokładnie o ile.</li>
</ul>
<p>Zapraszamy!</p>
]]></content:encoded></item><item><title>Sans Marigold</title><link>https://blog.mmakowski.com/cooking/sans-marigold/</link><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/sans-marigold/</guid><description>I like travelling a lot – that is, I like it a lot to travel, rather than travelling a lot is what I like – getting to know different cultures, cuisines, all that stuff. Those of you who understand Polish, or are willing to suffer automated translation, can read more about my travel exploits on another blog. This year I have been to Greece and Georgia, and if there is anything common between those two escapades, it is that in those lands of highly regarded cuisine I ended up enjoying salads the most.</description><content:encoded><![CDATA[<p>I like travelling a lot – that is, I like it a lot to travel, rather than travelling a lot is what I like – getting to know different cultures, cuisines, all that stuff. Those of you who understand Polish, or are willing to suffer automated translation, can read more about my travel exploits on <a href="https://blog.mmakowski.com/travel/">another blog</a>. This year I have been to Greece and Georgia, and if there is anything common between those two escapades, it is that in those lands of highly regarded cuisine I ended up enjoying salads the most. It might have something to do with the hot climate, as in temparatures above 25 degrees Celsius I feel aversion to hot and high-energy food. Either way, in Greece I re-discovered and found new love for the greek salad; in Georgia it was the aubergine with walnut paste that earned my highest admiration (as far as food is concerned – wine is a different story altogether).</p>
<p>I tend to be smug about my access to unusual Polish ingredients. Today’s selection calls for one such ingredient of Georgian origin: dried marigold petals. If you can get hold of it, then great, otherwise the dish will not suffer that much from the lack of it. The rest of the shopping list is straightforward:</p>
<ul>
<li>two aubergines</li>
<li>a cup of shelled walnuts</li>
<li>two cloves of garlic</li>
<li>a little bit of cider or wine vinegar</li>
<li>ground fenugreek</li>
<li>ground coriander seeds</li>
<li>fresh coriander leaves</li>
<li>one pomegranate</li>
</ul>
<p><img src="https://farm1.staticflickr.com/557/20288033122_dd57347a0b.jpg" alt="slices of aubergine with pomegranate"></p>
<p>Cut the aubergines into long slices about 1 cm thick and grill – I did 15 mins one side, 5 the other and they turned out nice. While this goes on, put the walnuts, garlic, vinegar, fenugreek, coriander seeds, marigold (if you have some) and a little bit of salt in a food processor and make a paste. Then gradually add little bits of water so that the paste becomes hummus-like in consistency. Chop coriander and extract the pomegranate seeds. When the aubergine cools, spread the paste on it, then sprinkle with coriander leaves and finally with pomegranate seeds. Enjoy with a glass of saperavi, if you can get your hands on some. Hell, if you can get some, don’t bother with the salad, just have the saperavi!</p>
]]></content:encoded></item><item><title>Tam, gdzie mówią w Kartuli</title><link>https://blog.mmakowski.com/travel/tam-gdzie-m%C3%B3wi%C4%85-w-kartuli/</link><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/tam-gdzie-m%C3%B3wi%C4%85-w-kartuli/</guid><description>Jest trochę przed piątą rano. Podchodzimy do lądowania, wokoło zupełna ciemność. Czy w tym kraju nie mają elektryczności?
W kolejce do wymiany dolarów na lari. Tuż obok szklana ściana terminalu. Za szybą taksówkarz z kartką, na której wymienione są wszystkie turystyczne miejscowości między Tbilisi a Batumi. Co chwila puka w szybę, żeby zwrócić uwagę oczekujących w kolejce turystów. Chętnie wszedłby do środka, ale wstępu broni uzbrojony w pistolet maszynowy ochroniarz.</description><content:encoded><![CDATA[<p>Jest trochę przed piątą rano. Podchodzimy do lądowania, wokoło zupełna ciemność. Czy w tym kraju nie mają elektryczności?</p>
<p>W kolejce do wymiany dolarów na lari. Tuż obok szklana ściana terminalu. Za szybą taksówkarz z kartką, na której wymienione są wszystkie turystyczne miejscowości między Tbilisi a Batumi. Co chwila puka w szybę, żeby zwrócić uwagę oczekujących w kolejce turystów. Chętnie wszedłby do środka, ale wstępu broni uzbrojony w pistolet maszynowy ochroniarz.</p>
<p>Kierowca chlusta wodą z wiadra na przednią szybę Transita, ta jednak jest kompletnie zaparowana od wewnątrz. Odpala na pych, na wstecznym – jest egzotycznie. Później już nie gasi silnika – ani podczas półgodzinnego postoju w przydrożnej knajpie, ani podczas tankowania z butelki w jakimś gospodarstwie przy bocznej drodze.</p>
<h2 id="ein-klein-heldenleben">(Ein Klein) Heldenleben</h2>
<p>Pensjonat “Andzu” mieści się w środku Mazeri. Nazwa pochodzi zapewne od imienia właścicielki – tak przynajmniej wnioskuję po donośnych krzykach “Andzuuu!!!” rozlegających się regularnie z obejścia obok. Z gospodynią komunikuję się miaszaniną jezyka migowego i rosyjskiego. Jestem jedynym gościem. Obiad składa się z mocno pikantnego rosołu – pływa w nim duża ilość jakiegoś zielska, może kolendry, oraz porąbana na kawałki kura – jogurtu, sera sukhtumi (zbyt słony), pomidorów, chleba, ziemniaków oraz ciasta. Jest tego tyle, że rezygnują z kolacji. Po nocnym locie, czterech godzinach jazdy marszrutką, dwóch godzinach marszu w słońcu i upale, licznych spotkaniach z policją i wojskiem, którym tłumaczyć się musiałem dokąd idę i gdzie nocuję, w planach na dziś już tylko relaks. Czytam dwie powieści Zajdla i idę spać.</p>
<p>Wyruszam przed dziewiątą rano, po obfitym śniadaniu, którego hitem było khaczapuri z serem. Plecak waży akurat tyle, ile trzeba. <a href="https://blog.mmakowski.com/travel/obrazki-z-rumunii/">W Retezat</a> był trochę zbyt ciężki, tym razem ograniczyłem jedzenie do kabanosów, czekolad i mieszanki suszonych owoców i orzechów, zaś wody zamiast dwóch litrów mam 3/4. Do przełęczy Gul mam ponad kilometr przewyższenia. Widoki na Uszbę wspaniałe, pogoda piękna i słoneczna, idzie się powoli, ale bardzo przyjemnie. Wodą muszę gospodarować oszczędnie; nie ma wyjścia, przed przełęczą będe musiał zejść kilkaset metrów ze szlaku i trawersem dotrzeć do źródła. Na mapie nie wygląda to groźnie, jednak gdy przychodzi co do czego zbocze okazuje się łupkowym piargiem, który nie sposób przetrawersować bez zjeżdżania. Na kombinowaniu, którędy dotrzeć do potoku, tracę godzinę. Ostatecznie natrafiam na ścieżkę, którą ani chybi pasące się tu licznie krowy chadzają do wodopoju. Na przełęczy jestem po piętnastej. Dalej powinno być prosto: trochę w dół i trawersem do drogi, którą z powrotem pod górę, do jezior Koruldi. W praktyce zejście jest trudniejsze niż droga na przełęcz: nie ma ścieżek, trzeba iść na przełaj przez strome łąki, niestabilne piargi, przekraczać rwące potoki i omijać zdradliwe łaty śniegu. Do jezior docieram po dziewiętnastej, kompletnie wyczerpany. Nie mogę się powstrzymać, żeby się nie ochlapać trochę letnią wodą z jednego z “jezior” – w rzeczywistości są to niewielkie stawy, które za dnia służą krowom za legowisko. Septyczna kąpiel nie służy skaleczeniom, których nabawiłem się podczas wyprawy po wodę – nie chcą sie goić przez następne kilka dni.</p>
<h3 id="---">✠ ✠ ✠ ✠</h3>
<p><a href="https://www.goodreads.com/book/show/1260614.Walking_in_the_Caucasus_Georgia">Peter Naysmyth</a> twierdzi, że na grani Koruldi nie trzeba się wspinać, wystarczy się trochę powdrapywać po kamieniach. Gówno prawda. Trzy punkty podparcia, przyleganie brzuchem do pionowej ściany, schodzenie na rozpór, kruche i ostre jak noże łupki – tego się uniknąć nie dało. Wiem, bo spędziłem dobrą godzinę kombinując, jak przekroczyć tę cholerną rozpadlinę na 3050. Gdyby pojawiła się kolejna przeszkoda tej rangi pewnie bym się poddał; psychicznie bym nie wytrzymał tych nieudanych podejść, cofania się, zastanawiania się przez parę minut nad kolejnym krokiem.</p>
<p><img src="https://live.staticflickr.com/450/19609003353_f80a9176e0_c.jpg" alt="https://live.staticflickr.com/450/19609003353_f80a9176e0_c.jpg"></p>
<p>Wejście na Koruldi stało pod znakiem zapytania od rana, gdy obudziło mnie znajome bębnienie kropel o tropik namiotu. Na zewnątrz chmura. Próbuję obrócić tę przeciwność losu na swoją korzyść i złapać trochę kropel spływających z tropiku do pojemnika skonstruowanego z nieprzemakalnej płachty na plecak, jednak nie ma szans by tą metodą zgromadzić więcej niż kilka łyżeczek płynu, konieczna więc będzie wyprawa do źródła, które mieści się dwadzieścia minut marszu w stronę grani. Skoro już i tak się tam wybieram, mogę i się przyjrzeć dalszej trasie. Ostatecznie przejaśnia się na tyle, że widoczność nie stanowi przeszkody w pokonaniu Koruldi. Gdy po czterech godzinach wspinania się najtrudniejszą technicznie trasą, z jaką dotąd przyszło mi się zmierzyć, staję na szczycie, pod moimi nogami rozciąga się imponujący widok na lodowiec Chalaadi. Uszba i okoliczne czterotysięczniki pozostają niestety ukryte w chmurach.</p>
<p>Narzekam na Naysmytha, ale jego opis wejścia na Koruldi podniósł mnie na duchu. Nie sam opis nawet, ale możliwość przeczytania go w chwili zwątpienia, gdy zastanawiałem się, czy się nie wycofać. Trzymać w ręku smartfon z mapą offline i zdjęciami stron z przewodnika to jak korzystać z przewodnika <em>Autostopem przez Galaktykę</em>, z zasobem praktycznych rad na wszystkie przeciwności, oraz z dużym, przyjaznym przyciskiem “nie panikuj”.</p>
<h3 id="----1">✠ ✠ ✠ ✠</h3>
<p>Po dwóch wyczerpujących dniach i dwóch nocach w namiocie bardzo uśmiecha mi się myśl o – chwilowym przynajmniej – powrocie do cywilizacji, i PRYSZNICU. Nic prostszego, wystarczy zejść do Mestii. Prawda? Prawda – chyba, że jest się takim niecierpliwym palantem jak ja, i zamiast uważnie szukać tej właściwej ścieżki tam, gdzie się powinna zaczynać, wybiera się pierwszą lepszą i zakłada że jakoś to będzie. Otóż, zapamiętaj to sobie, cymbale: idź ścieżką, która zaznaczona jest na mapie. Nie ma “ale”. Nie ma wyjątków. Wszystko inne to fałszywa oszczędność. Koniec końców wybrałem coś, co zapowiadało się dobrze, i po niezbyt długim czasie znalazłem się w środku lasu, na niezykle stromym zboczu, gdzie zejście było skrzyżowaniem zjazdu na dupie po piachu i schodzenia po drzewie. Było to kosz-mar-ne i w efekcie do Mestii dotarłem niemal tak wyczerpany jak po eskapdach poprzednich dni.</p>
<h2 id="five-miles-out">Five Miles Out</h2>
<p>Na placu Seti wszystko jest pod ręką. Hostel za 20 lari, knajpa Laila z dobrym jedzeniem i gruzińską muzyką ludową na żywo, park ze źródełkiem, z którego bije zdrojowa woda pachnąca i smakująca siarką, i do którego przychodzą poić się krowy. Oraz sporo nowych budynków nieznanego zastosowania. Wybudowane najwyraźniej w ostatnich latach, z dużym rozmachem, stylowo nawiązujące do tradycyjnej architektury Svaneti, i zupełnie puste. Zza powybijanych szyb wyzierają nie wykończone wnętrza. Mestia ma specyficzny klimat backpackerskiej przystani. Kilka knajp w okół centralnego placu wystrojem i tematyką celebruje setki przyjeżdżających tu turystów; tym niemniej, za shaker służy butelka po coli. Plastikowe stoliki z napisem “bus terminal” są jak żywcem przeniesione ze wschodniej Azji albo równikowej Afryki. Trudo się też oprzeć wrażeniu, że nowoczesne pomysły architektów i projektantów nie zawsze znalazły zrozumienie u wykonawców i obsługi. W hostelu nie sposób dostać się do papieru toaletowego, zamkniętego na klucz w przezroczystym dozowniku. Automatyczny dozownik papierowych ręczników też, oczywiście, nie działa. Ażurowe konstrukcje z linkami, na których możnaby rozpiąć osłaniające przed słońcem daszki, stoją nie używane przy restauracji, która dla ochrony przed słońcem rozstawia kilka połamanych parasoli – reklamówek piwa Natakhtari.</p>
<p>W Laili mam wreszcie okazję spróbować kuchni dla turystów – bardzo to wszystko dobre – i wina. Podziwiam kiperów, którzy po jednym łyku są w stanie stwierdzić “wyczuwam tu skórzaną podeszwę oraz lekki aromat zjełczałego masła”. Mi czerwone saperavi po prostu smakuje czymś dziwnym – jakimiś ziołami może, nie wiem sam. W każdym razie, bardzo fajne, trochę jak we włoskich winach. Robię kelnerowi awanturę gdy dostaję kolejny kieliszek, a ten smakuje zupełnie inaczej, zwyczajniej. Później się orientuję, że saperavi to gatunek winogron, z których robiona jest większość wytrawnych czerwony win w Gruzji, i rozpiętość smaków mogą mieć taką jak cabernet sauvignon albo syrah.</p>
<h3 id="----2">✠ ✠ ✠ ✠</h3>
<p>Wyżebrawszy co się dało od pary Rosjan, Kałmanawardze przyczepił się do mnie – choć, słowo honoru, w żaden sposób go nie zachęcałem. Droga do jęzora lodowca Chalaadi, który dwa dni wcześniej oglądałem z góry, była długa, płaska i nużąca. Do tego słońce i upał przez całe dziesięć kilometrów, które pokonywało się drogą gruntową. Kałamanawardze właził do wszystkich napotkanych oczek wodnych i leżał w nich przez minutę lub dwie, chłodząc się, po czym wyskakiwał, by mi dalej towarzyszyć. Mijani lokalsi cmokali z uznaniem jakiego to dużego i kudłatego towarzysza wziąłem na tę wyprawę. Ania byłaby zachwycona. Raz się w końcu przydał, gdy krowa strzegąca młodego cielaka pogoniła Kałmanawardze a nie mnie, jak przechodziliśmy zbyt blisko.</p>
<p>Czoło lodowca – imponujące. Wydaje się, że lodowiec zaczyna się dopiero kilkaset metrów dalej, ale to rumowisko głazów, pyłu i innego badziewia, to właśnie pierwsza linia naporu milionów ton lodu, które wolniutko spływają w dolinę. Na dole, z otwierającej się w lodzie jamy, wypływa – czy raczej wystrzeliwuje, tyle w tym energii – potężna rzeka. W drodze powrotnej siadam na kamieniu, wyciągam flet i odgrywam motyw z <em>(Ein Klein) Heldenleben</em> – ten, gdzie wspina się lasem i alpejską łąką, by w końcu szybować nad ośnieżonymi szczytami.</p>
<p>Z Mestii nie ma gdzie chodzić na jednodniowe wypady. Są krzesła na Zuruldi, jest Chalaadi – do tego też jednak lepiej dojechać samochodem – jest góra z krzyżem, poza tym jednak albo się idzie dalej, z namiotem, albo wynajmuje samochód terenowy z kierowcą i jedzie do bardziej odległych atrakcji. W samym mieście jest też muzeum Svaneti, z ikoną Jezusa – zombie oraz manuskryptami z IX wieku.</p>
<h3 id="----3">✠ ✠ ✠ ✠</h3>
<p>Zauważyłem <a href="https://blog.mmakowski.com/travel/wyprawa-2010-11/phnom-penh/">podczas wojaży po Azji</a>, że dbałość o estetykę otoczenia to przywilej bogatych narodów i społeczności. Gdy dni schodzą na walce o przetrwanie, trudno poświęcać uwagę temu, gdzie się wyrzuci jakiś papierek albo butelkę. Jeden z pierwszych obrazków, na jakie natrafiłem w Gruzji: kierowca kupuje paczkę papierosów, rozrywa celofan po czym upuszcza go tam, gdzie stoi – choć kosz na śmieci jest tuż obok. Niemal jak w opowiadaniu <em>Mięso</em>, które mi tata czytał jak miałem siedem lat: gdy człowiek idzie ulicą i potrzebuje się wypróżnić, to robi kupę nie zatrzymując się nawet.</p>
<h3 id="----4">✠ ✠ ✠ ✠</h3>
<p>Marszrutką jechałem z Kutaisi do (prawie) Mestii. Było fajnie, młodzieżowo i egzotycznie, ale wystarczy. Do Tbilisi polecę samolotem. Kosztuje to co prawda dwa razy tyle co bus, ale w cenie są dodatkowe atrakcje, czyli lot samolotem śmigłowym zabierającym maximum 15 pasażerów z maleńkiego lotniska położonego w sercu gór. Bilet kupić można tylko w terminalu lotniska, wydrukowana godzina nie zgadza się z tą, o której mam polecieć, ale przychodzę wcześniej i załapuję się na wcześniejszy lot.</p>
<p><img src="https://live.staticflickr.com/350/20041878238_62b60f350c_c.jpg" alt="https://live.staticflickr.com/350/20041878238_62b60f350c_c.jpg"></p>
<p>Samolot nazywa się Praga, pilotuje go brodaty Czech, nawigując przy pomocy tabletu przyczepionego na przyssawce do szyby kokpitu. Lot takim czymś, w porówaniu z rejsowymi odrzutowcami, to jak pływanie po morzu małą żaglówką przy dużym promie. Poczucie bezsilności wobec potęgi żywiołów jest namacalne, a cienkie ściany nie dają żadnego złudzenia ochrony przed naturą. Ciśnienie wewnątrz takie jak i na zewnątrz, powiewy wiatru rzucają samolotem o metry w prawo i w lewo. Trudno powiedzieć, czy jestem rozczarowany, że pogoda była dobra i lot nie dostarczył większych emocji. Lądujemy w szczerym polu, obok pasa startowego jest jedynie jakiś ośrodek wypoczynkowy z basenem i wczasowiczkami w bikini leniwie śledzącymi kołujący samolot.</p>
<h2 id="in-te-domine-saperavi">In te Domine Saperavi</h2>
<p>Bus z lotniska do Tbilisi. Podsufitka z białej imitacji skóry, na niej wielkie logo Mercedesa wykonane z plastikowej imitacji drewna. Nowoczesna maszyna, ma komputer, kóry przy starcie raportuje o nie działającym przednim prawym reflektorze, lewym świetle stopu, lewym tylnym świetle pozycyjnym oraz którymś reflektorze do długich świateł. Radzi też, żeby sprawdzić poziom płynu w chłodnicy oraz przypomina o przeglądzie B, który się należał już dawno temu. Z radia najpierw płynie gruziński rap, czy inny hip hop, później pop w stylu arabskim, na melodię Hava Nagila. Kierowca ma ręce pełne roboty: jedną trąbi, drugą przewija wiadomości w komórce, trzecią się żegna znakiem krzyża co parę minut, jak tylko mijamy jakąś cerkiew. Przypuszczam, że którąś z rąk czasem też trzyma kierownicę oraz zmienia biegi, ale nie przyglądam się wystarczająco długo, żeby zauważyć – wolę gapić się za okno, na inne samochody. A jest na co. Są spatynowani, wyblakli weterani sowieckich szos. Są Łady Nivy, od takich z lat 80 do tych produkowanych obecnie jako Łada 4x4. Osobowe Mercedesy i BMW z dorobionymi znaczkami. Nie spotykane w Europie modele marek japońskich, na ogół z kierownicami po prawej stronie. Dostawczaki w stanikach, czyli czarnych osłonach na maskę, mających chronić przed żwirem i kamieniami wyrzucanymi spod kół innych samochodów. Policyjne Fordy i Skody na felunku jak ze zjazdu tuningowców. Wyklepane młotkiem błotniki, pęknięte przednie szyby, brakujące zderzaki i przednie reflektory. Cała ta menażeria trąbi i jedzie nie zważając na pasy ruchu.</p>
<h3 id="----5">✠ ✠ ✠ ✠</h3>
<p>Budzę się o siódmej. Temperatura w nocy nie spadła chyba wiele poniżej 30 stopni. Klimatyzacja niby jest, ale ktoś wyłączył, oddychać się nie da. Dźwięki wszelakie nie przeszkadzają mi na ogół w zasypianiu, tym razem jednak chrapanie delikwenta z dolnego łóżka pod drugim oknem, w połączeniu z gorącem i zaduchem, wytrąca mnie z równowagi. O siódmej trzydzieści dołącza dźwięk budzika dobiegający z jednej z szafek. Przez następne piętnaście minut budzik najpierw budzi a później wygania z pokoju pięcioro pozostałych miekszańców. Zostaję tylko ja i chrapiący sobie w najlepsze sąsiad spod drugiego okna z dołu. To jego budzik musiał być. W końcu i ja się poddaję i wyruszam na śniadanie składające się z czterech kromek chleba o przedłużonej świeżości, trzech kawałków masła oraz trzech mikroskopijnych plasterków sera.</p>
<p>Hostel Envoy ma oddziały w Tbilisi, Erewaniu i Phnom Penh, oraz całkiem niezłe opinie na TripAdvisor. <a href="https://blog.mmakowski.com/travel/dekalog/">Abraham</a> to to nie jest, ale położony jest bardzo wygodnie, tuż przy twierdzy Narikala, z łatwym dostępem do knajp i sklepów ulic Afkhazi i Sioni. Podróżuję sam, i po tygodniu wałęsania się po górach zaczyna mi doskwierać brak towarzystwa, więc wieczorami wyłażę na dach hostelu i dyskutuję z Kanadyjką, Amerykanką i Duńczykiem na temat systemu wizowego oraz życia w Moskwie, zaś z Finem i Holenderką wymieniam uwagi na temat narkoturystyki w Holandii. Od serbskiej couchsurferki z Paryża dowiaduję się o życiu w kibucu i jak działają samogłoski w języku hebrajskim.</p>
<p>Po Tbilisi wałęsam się bez celu. W parku Mtatsminda, pod wieżą telewizyjną, znajduje cedrowy lasek nieopodal kolejki górskiej, i tam drzemię przez godzinę. W ogrodzie botanicznym mógłbym spędzić cały dzień. Jest wielki, położony w dolinie między malowniczymi, stromymi klifami, środkiem płynie górski potok, jest wielki wodospad, w którym można się chłodzić podczas trzydziestopięciostopniowych upałów, na jakie tu akurat natrafiłem. W koło setki gatunków drzew i krzewów, niektóre nawet opisane. I to wszystko dziesięć minut spacerem od hostelu. Jest tylko jeden mankament: ładnie się prezentujące, ale koszmarnie niewygodne ławki. Dwa mankamenty: niewygodne ławki oraz niezidentyfikowane owady gryzące w kostki. Gdyby nie to, przesiedziałbym tam cały dzień, czytając książkę w cieniu wielkiego cedru albo sosny.</p>
<p>Wałęsając sie bez celu po starym mieście w Tbilisi trudno nie zauważyć a) jak pięknie zdobione są stare budynki, b) jak bardzo popadły one w ruinę i c) jak dużo buduje się nowoczesnych konstrukcji, zamiast ratować te stare (i ładne). Z nowymi inwestycjami jest trochę jak w Mestii, czyli coś tam napoczęto, wybudowano z wielkim rozmachem, po czym jak rząd się zmienił to zostawiono tak jak było, nie dokończone, świecące stalą i szkłem zza płotów budów na których nikt już nie pracuje. A propos rządu, z anglojęzycznego <em>Voice of Georgia</em> dowiedziałem się, że były prezydent Saakaszwili jest obecnie gubernatorem Odessy na Ukrainie. Co by o nim nie mówić – a na sumieniu ma ponoć wojnę z Rosją i oddalenie o dekady jakiejkolwiek perspektywy przywrócenia południowej Osetii oraz Abhazji pod kontrolę Gruzji – z przestępczością w dużej mierze sobie poradził, i w Gruzji turyści czuć się mogą bardzo bezpiecznie.</p>
<h3 id="----6">✠ ✠ ✠ ✠</h3>
<p>Co było pierwszą rzeczą, jaką zrobiłem po przyjeździe to Tbilisi? Wyprawa na degustację wina. Bary z Mestii pozostawiły w tym względzie pewien niedosyt, a wystarczy wystawić nos na ulicę Afkhazi na turystycznym starym mieście, żeby pozbyć się wszystkich wątpliwości co jest flagowym produktem Gruzji. Degustację ograniczyłem, z jednym może wyjątkiem, do win wytrawnych. Jak uczono na kursie, po pierwsze – kolor. Wina gruzińskie mają bardzo intensywne kolory: białe są bursztynowe, czerwone podchodzą pod czerń. Jest tak za sprawą procesu produkcyjnego: do glinianej amfory, <em>qvevri</em>, wrzucane są owoce wraz z pestkami i szypułkami, czasem też rodzynki, i to wszystko razem jest fermentowane. Bursztynowe rkatsiteli marki <em>Pheasant’s Tears</em> było jak soczek gruszkowy, smaczne i oryginalne, ale bez szczególnej głębi.</p>
<p><img src="https://live.staticflickr.com/538/20221614692_ba806bf37b_c.jpg" alt="https://live.staticflickr.com/538/20221614692_ba806bf37b_c.jpg"></p>
<p>Również bursztynowe tsitska z winnic rodziny Gotsa dużo bardziej wytrawne, tsalikouri z małej serii (140 butelek) tak pomiędzy. Czerwone: bardzo wytrawne, aż łaskoczące w koniec języka szavkapito, dość lekkie, ale wysublimowane odżelaszi, no i w końcu saperavi. To sztandarowy gatunek gruzińskich wingron, wino z niego jest bardzo intensywne, aż gęste, zaś bogactwem smaku dorównuje najlepszym trunkom jakich próbowałem. Dwie odmiany, które szczególnie mi przypadły do gustu to Mukuzani, mocno owocowe i bardzo popularne, kupić je można w każdym niemal sklepie, oraz Dżakeli – najwyższa półka w restauracji Organique, trudniejsze do zdobycia, bardzo wyrafinowane.</p>
<h3 id="----7">✠ ✠ ✠ ✠</h3>
<p>Mniszki z klasztoru Phoka pojechały z wizytą do Francji i tam się nauczyły robić sery. Cztery tych serów gatunki degustować można w restauracji Organique. Zapijam je różnymi odmianami saperavi oraz cabernet-saperavi; wspomnienie aromatycznych serów, miodu z fragmentami plastra oraz najintensywniejszych win, jakie znam, towarzyszy mi przez cztery godziny w busie, cztery godziny na lotnisku oraz trzy godziny w samolocie, aż do chwili, gdy o siódmej rano wysiadam z samolotu na warszawskim Okęciu.</p>
<p>PS. zdjęcia są, ale tylko z telefonu, bo zapomniałem spakować duży aparat:</p>
<p><a href="https://www.flickr.com/gp/mmakowski/0E5aFR">Svaneti and Tbilisi</a></p>
]]></content:encoded></item><item><title>Między Ateną a Prorokiem Eliaszem</title><link>https://blog.mmakowski.com/travel/mi%C4%99dzy-aten%C4%85-a-prorokiem-eliaszem/</link><pubDate>Sun, 10 May 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/mi%C4%99dzy-aten%C4%85-a-prorokiem-eliaszem/</guid><description>Αθήνα Hotel Ionihos wystrojem przywołuje na myśl lata siedemdziesiąte: w foyer ściany wyłożone sklejką w tekowym, matowym pomarańczu, prostokątne zestawy kanapowe, spójność stylistyczną zaburza tylko posadzka z prawdziwego kamienia zamiast lastriko. Śniadanie skromne, na smażone jajka trzeba polować, bo szybko znikają, żadnych warzyw ani jogurtu, niedojrzałe kiwi w charakterze źródła witamin. W nocy kaloryfer grzeje, a na zewnątrz 17 stopni. O szóstej rano świergot ptaków, ryk syreny policyjnej i autobusowych silników skutecznie wyrywa ze snu.</description><content:encoded><![CDATA[<h2 id="αθήνα">Αθήνα</h2>
<p>Hotel Ionihos wystrojem przywołuje na myśl lata siedemdziesiąte: w foyer ściany wyłożone sklejką w tekowym, matowym pomarańczu, prostokątne zestawy kanapowe, spójność stylistyczną zaburza tylko posadzka z prawdziwego kamienia zamiast lastriko. Śniadanie skromne, na smażone jajka trzeba polować, bo szybko znikają, żadnych warzyw ani jogurtu, niedojrzałe kiwi w charakterze źródła witamin. W nocy kaloryfer grzeje, a na zewnątrz 17 stopni. O szóstej rano świergot ptaków, ryk syreny policyjnej i autobusowych silników skutecznie wyrywa ze snu. Jakby żyło się na ulicy, jak tysiące bezdomnych, z których wielu uczyniło sobie w podcieniach budynków permanentne legowiska, z materacami i pościelą – coś podobnego widziałem chyba tylko <a href="Blog/Travel/Stolica%20Europy.md">w Brukseli</a>. Trudno powiedzieć, na ile jest to efekt obecnego kryzysu, ale łatwo sobie wyobrazić, że trzydziestoprocentowe bezrobocie przyczynia się do wzrostu populacji zamieszkującej ulice Aten. Innym widocznym świadectwem wydarzeń o których głośno w całej Europie są imigranci z Afryki. Na placu Monastiriaki Nigeryjczycy walą w bębny i udają Jamajczyków, w dość natrętny sposób wiążąc na nadgarstkach plecione bransoletki przechodzącym turystom.</p>
<p>Na Akropolu zawsze jest sezon, na szczęście nie musimy długo stać w kolejce do propylei – na słońcu, w dwudziestodziewięciostopniowym upale, byłoby to nieznośne. Ów symbol Aten i antycznej grecji w ogóle to sporo kamieni, ledwo stojące kolumnady i dużo zieleni porastającej zbocza wzgórza. Fajniejsza jest agora, gdzie Rockefeller zafundował odbudowę stoi Attalosa. Nie miałbym nic przeciwko temu, żeby resztę antycznych budowli też przywrócono do stanu sprzed 2400 lat. Nie widzę wyraźnego powodu, poza brakiem funduszy, dla którego należy ruiny zostawiać w takiej postaci, w jakiej akurat zostały odkopane w XIX i XX wieku. Podobnie mogliby odbudować rzymskie Koloseum. I urządzać tam spektakle z udziałem Chrześcijan i lwów.</p>
<p>Tymczasem zamiast antycznych budowli powstających z ruin, to okolice Monastiriaki, w samym centrum, popadają w ruinę. Być może jest to efekt zmowy mającej na celu wycyckanie obecnych lokatorów i sprzedaż gruntu za grube miliony euro. Taką teorię przedstawia nam Vanessa, przewodniczka zaangażowana przez nas za pośrednictwem serwisu <a href="http://www.dopios.com/">Dopios</a>. Dopios to kolejny krok na drodze do komercyjnego zestawiania miejscowych z turystami. <a href="https://www.couchsurfing.com">Couchsurfing</a> to piękna idea, ale bywa kłopotliwa, jeśli jest się zainteresowanym tylko konkretnym rodzajem interakcji z lokalsami. Czasem wolałoby się coś bardziej w stylu “płacę i wymagam”, ale zaaranżowane bezpośrednio z miejscowymi. AirBnB rozwiązuje problem zakwaterowania, zaś Dopios wycieczek i innego rodzaju “experiences”.</p>
<p>Myśmy wybrali <a href="http://www.dopios.com/experiences/greece/athens/1937-rebetiko---underworld-greek-folk-music">wieczór z rebetiko</a> – muzyką greckich uliczników z początków XX w. Postacie rebetes – trochę bandziorów, trochę artystów – tematyka piosenek a nawet niektóre melodie przywodzą na myśl popularyzowaną przez Grzesiuka muzykę warszawskiej ulicy. Vanessa sama na muzyce specjalnie się nie zna, ma za to przyjaciół, którzy grają rebetika, i to na ich koncert połączony z degustacją mezze nas zabiera. Przy okazji można się z pierwszej ręki dowiedzieć o życiu w Atenach w szponach kryzysu. Jedzenie całkiem tu smaczne, ale bez nowych odkryć. Faszerowana papryka, tzatziki i sałatka grecka to najlepsze co nam się zdarzyło w różnych, na chybił-trafił wybranych knajpach, próbować. Tą ostatnią mógłbym się żywić cały wyjazd – jest upał, więc moje potrzeby kaloryczne drastycznie spadają. Greckie wino stołowe nie zachwyca.</p>
<p>Inne atrakcje, czy raczej cechy charakterystyczne, stolicy, to pełniący wartę na placu Syntagma panowie z ministerstwa głupich kroków, urbanistyczny bałagan i bazgroły. Te ostatnio to raczej twórczość potomków Herostratesa niż Filoksenosa – pokrywające wszystko tagi i mazaje bez sensu i krzty estetyki. Ateny to europejskie miasto z domieszką bliskowschodniego chaosu. Egzotyka niczego sobie, ale na wakacjach należy nam się trochę spokoju. Wyjeżdżamy na Peloponez.</p>
<p><img src="https://live.staticflickr.com/8776/17282815449_34bcf8d420_c.jpg" alt="https://live.staticflickr.com/8776/17282815449_34bcf8d420_c.jpg"></p>
<h2 id="στο-δρόμο">Στο δρόμο</h2>
<p>Wypożyczyliśmy “Hyundai i10 or similar”, czyli Citroena C1. Samochód malutki, co jest niewątpliwą zaletą w mieście, ale też z maleńkim silnikiem, co daje się nieco we znaki na autostradach i górskich drogach. Ogólnie jednak to dobry wybór. Przy planowaniu trasy przez Peloponez brać pod uwagę należy, że jest to górzysty półwysep, z jedną autostradą między Koryntem a Kalamatą, a poza nią głównie krętymi, górskimi drogami. Przy przemieszczaniu się z punktu A do punktu B czas przejazdu oszacować można dzieląc odległość w linii prostej przez 20 km/h. Przejazdy to najmniej atrakcyjny aspekt wycieczki. Pomimo, że drogi są piękne a ruch niewielki, konieczność ciągłego zachowania czujności sprawiała, że czas spędzony za kierownicą – a było go dużo – nie był optymalną formą wypoczynku. Ostatnio z Anią nie jesteśmy w fazie jeśli chodzi o gust muzyczny, przez co jazda odbywała się bez ścieżki dźwiękowej. W końcu, w ramach kompromisu zapuściliśmy <em>Purpendicular</em> i z solo Steve’a Morse’a z <em>Sometimes I Feel Like Screaming</em> od razu lepiej się jechało.</p>
<p>Do Grecji kontynentalnej jeździ się oglądać antyczne ruiny. Tymczasem mnie interesują głównie góry i widoki, Anię zaś kotki, pieski, wróbelki i plaże – tacy z nas troglodyci. Klasyczną grecką architekturę, czy też to, co z niej pozostało, mamy już zaliczoną w postaci Akropolu. Dopychamy jeszcze Archeą Olympią, gdzie ogląda się podstawy kolumn oraz stadion. Załatwiwszy w ten sposób kwestię antyku skupić się możemy na zabytkach późniejszych. Akrokorynt, czyli twierdza na górze wznoszącej się nieopodal Koryntu, to tylko resztki murów, jednak w bardzo malowniczej okolicy. Podobnie położona jest forteca Palamidi w Nafplionie. To dość świeża sprawa, XVIII wiek, wybudowana przez Wenecjan a poźniej przejęta przez Ottomanów. Z racji młodego wieku forteca zachowana jest bardzo dobrze, przechadzając się po labiryncie bastionów czułem się niczym obrońca zamku w Mount&amp;Blade. W końcu, najciekawszy punkt programu kulturalnego, czyli Mystras. Mieszczą się tam pozostałości bizantyjskiego miasta z kilkoma klasztorami (jeden wciąż funkcjonuje) oraz kościołami i kaplicami zdobionymi freskami w różnych stadiach zaniku i rozkładu. Położone bardzo pięknie, na zboczu góry między masywem Taygetus a Spartą.</p>
<p>Na najpiękniejszy zapach na świecie pierwszy raz natknąłem się w Singapurze, gdy w hotelu Four Seasons otworzyłem buteleczkę z szamponem. Kosmetyk był produkcji <em>L’Occitane en provence</em> i zawierał podobno <a href="http://uk.loccitane.com/citrus-verbena-shampoo,83,1,29793,270233.htm">ekstrakt z cytrusów</a>. Trudno mi opisać radość, jakiej doświadczyłem gdy zbliżając się do campingu w Mykenach poczułem w powietrzu znajomą woń singapurskiego szamponu – wokół były sady cytrynowe. Dla samego zapachu drzew cytrynowych podczas zasypiania w namiocie warto się wybrać do Grecji.</p>
<p>Licząc na niewielki ruch turystyczny nie planowaliśmy noclegów i niczego nie rezerwowaliśmy. Przed wyjazdem wynotowałem tylko kilka ciekawie wyglądających hotelików i campingów; po południu danego dnia decydowaliśmy gdzie nam pasuje nocować, telefonowałem żeby upewnić się, że jest wolny pokój (zawsze był) i jechaliśmy na kwaterę. Poza wspomnianym campingiem Atreus w Mykenach mieszkaliśmy w hotelu Taleton w Xirokambi oraz w tawernie/hotelu Bacchus w Archea Pisa. Oba hotele godne polecenia. Pierwszy z wymienionych to przebudowany magazyn oliwy; obejrzeć w nim można ogromną piwniczną cysternę oraz pożywić się obfitym i bardzo smacznym śniadaniem. Jedzenie w Bacchusie trochę rozczarowało, za to widok z okna na wzgórza był piękny.</p>
<p>W maju bez wielkiego trudu znaleźć można zaciszne plaże, z parasolami, leżakami i bez okupującego je tłumu turystów. Kardamyli jest z dala od atrakcji, jednak dysponuje kilkoma knajpami tuż przy plaży. W Petrochori bar serwuje drinki wprost na leżaki, a uroku plaży dodają wystające niopodal brzegu skały. Spiantza koło Pyrgos jest mniej od wspomnianych wcześniej atrakcyjna, przynajmniej poza sezonem, na niej za to spodziewać się można największych fal i najwyższej proporcji miejscowych do przyjezdnych. Temperatura wody w Morzu Jońskim o tej porze roku jest dość orzeźwiająca, lecz nie stanowi przeszkody w kąpieli nawet dla tak konserwatywnie nastawionego plażowicza jak ja. Wypoczynek pasywny wiąże się nierozłącznie z lekturą. Na tym wyjeździe dokończyłem <a href="https://en.wikipedia.org/wiki/The_Martian_(Weir_novel)">The Martian</a> i rozpocząłem <a href="https://en.wikipedia.org/wiki/Royal_Flash">drugą część przygód Harrego Flashmana</a>.</p>
<p><img src="https://live.staticflickr.com/8690/16862109863_958bfacef0_c.jpg" alt="https://live.staticflickr.com/8690/16862109863_958bfacef0_c.jpg"></p>
<h2 id="ταΰγετος">Ταΰγετος</h2>
<p>Góra nas pokonała. W poddawaniu się najwyższym szczytom mamy już pewne doświadczenie, poprzednio na tarczy wróciliśmy z <a href="https://blog.mmakowski.com/travel/du%C5%BCa-wyspa-nie-sycylia/">podejścia na Punta la Marmora</a>. Tym razem skóry nie oddaliśmy łatwo: wchodziliśmy i schodziliśmy przez 10 godzin, do szczytu Profitis Ilias zabrakło nam 150 metrów w pionie. Gdybyśmy mieli dodatkową godzinę moglibyśmy byli się pokusić o zdobycie szczytu, jednak dzień dobiegał końca a schodzenie po ciemku stromym, skalistym zboczem poza szlakiem wydawało się zbyt ryzykowne. Tym, którzy chcieliby pójść w nasze ślady i dokonać zakończonego większym niż nasz sukcesem wejścia na Proroka Eliasza, radzę co następuje:</p>
<ul>
<li>
<p>Standardowe miejsce rozpoczęcia wycieczki to źródło Magganiári. Prowadzi stamtąd świetnie oznaczony i bezproblemowy szlak do schroniska Varvara, około półtorej godziny.</p>
</li>
<li>
<p>powyżej schroniska szlak prowadzi wschodnim zboczem oraz północną granią. Jest duża szansa, że powyżej 1900 m n.p.m. będzie na nich zalegać śnieg. Przed wyruszeniem warto się górze dokładnie przyjrzeć z szosy E961, żeby rozpoznać położenie śniegowych łat.</p>
</li>
</ul>
<p><img src="https://c4.staticflickr.com/8/7665/16864364333_df12697471.jpg" alt="https://c4.staticflickr.com/8/7665/16864364333_df12697471.jpg"></p>
<ul>
<li>Ze śniegiem poradzić sobie można na dwa sposoby: przejść przezeń, lub go ominąć.</li>
<li>W pierwszym przypadku czekan i raki, oraz umiejętność posługiwania się nimi mogą być pomocne, ale mogą nie załatwić sprawy. Pozostały o tej porze roku śnieg to wielokrotnie przetopiony firn, w który można się zapaść po pas, i który może całkiem ustąpić pod stopami umieszczając nas w potoku płynącym wytopionym pod śnieżną skorupą tunelem.</li>
<li>w drugim przypadku wykorzystać można dogodny układ warstw geologicznych. Ze szlaku należy zejść na wysokości około 1900 m n.p.m. i iść wprost pod górę – trzeba się trochę powspinać po skałkach do momentu, aż ujrzy się wschodzące łagodnie na południe skalisto-trawiaste pasy. Tymiż pasami iść należy w stronę szczytu, zdobywając dodatkową wysokość poprzez wspinaczkę w dogodnych miejscach.</li>
<li>Na szczyt prawdopodobnie najłatwiej dostać się będzie od strony południowej, gdyż jest mniej stroma niż wschodnie zbocze i śnieg znika z niej najszybciej. Nie jestem w stanie tego potwierdzić, bowiem zawróciliśmy zanim znaleźliśmy się na południowej grani.</li>
<li>Schodząc trudniej jest namierzyć ukośne “ścieżki”, tak, że należy sobie zostawić bezpieczny zapas światła dziennego na drogę w dół.</li>
</ul>
<h2 id="--">* * *</h2>
<p>Jedną z pierwszych przeczytanych przeze mnie samodzielnie lektur była “Mitologia Greków i Rzymian”. To na jej podstawie, oraz malowanych w renesansie i później obrazów o tematyce antycznej, powstała w mojej głowie wizja Grecji jako kraju górzystego, o bujnej roślinności, z wynurzającymi się gdzieniegdzie z soczystej zieleni białymi, jońskimi kolumnami ruin świątyń. Rzeczywistość okazała się nie tak od tych wyobrażeń odległa. Po bogach i tytanach ślady są już dość skromne, jednak zamplifikowane przez majowy brak turystów wystarczają do przywołania obrazów mitycznych i historycznych wydarzeń. Zaś dla tych mniej sentymentalnie czy też poznawczo nastrojonych zawsze pozostają góry i plaże.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/p1muJ4">Peloponnese</a></p>
<iframe src="https://www.google.com/maps/d/embed?mid=1f1RybGbChSsPnYDvMIU4b6J-mYQ&ehbc=2E312F" width="640" height="480"></iframe>]]></content:encoded></item><item><title>Surfing, oraz inne zabawy na deszczowe dni</title><link>https://blog.mmakowski.com/travel/surfing-oraz-inne-zabawy-na-deszczowe-dni/</link><pubDate>Sun, 23 Nov 2014 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/surfing-oraz-inne-zabawy-na-deszczowe-dni/</guid><description>Muszość spowodowała, że wyruszyłem w tę podróż niezbyt przygotowany. Zapisałem się byłem bowiem na dwa kursy online, wymyśliłem też, że wystąpię na pewnej konferencji, słuchanie wykładów, rozwiązywanie zadań domowych oraz przygotowywanie wystąpienia nie pozostawiło już czasu na nic innego. Mógłbym sobie zapewne odpuścić przynajmniej część tych wykładów i zadań, lecz muszość nie pozwoliła. Tak więc w samolocie do Las Palmas znalazłem się z niezbyt komfortowym poczuciem, że nawet nie potrafię po hiszpańsku zapytać gdzie jest kibel.</description><content:encoded><![CDATA[<p>Muszość spowodowała, że wyruszyłem w tę podróż niezbyt przygotowany. Zapisałem się byłem bowiem na dwa kursy online, wymyśliłem też, że wystąpię na <a href="/technology/introduction-to-lambda-calculus/">pewnej konferencji</a>, słuchanie wykładów, rozwiązywanie zadań domowych oraz przygotowywanie wystąpienia nie pozostawiło już czasu na nic innego. Mógłbym sobie zapewne odpuścić przynajmniej część tych wykładów i zadań, lecz muszość nie pozwoliła. Tak więc w samolocie do Las Palmas znalazłem się z niezbyt komfortowym poczuciem, że nawet nie potrafię po hiszpańsku zapytać gdzie jest kibel.</p>
<p>Gran Canaria przywitała nas kolejką do okienka wypożyczalni samochodów Goldcar, która może i nie była bardzo długa, ale przesuwała się w tak ślimaczym tempie, że zapowiadało się z półtorej godziny czekania. W sytuacji tej wykazaliśmy się rzadką u nas zaradnością, i dostrzegłszy przez szybę biura, że z przeciwnej strony kantorka też są stanowiska wydawania samochodów, i kolejki do nich są znacznie krótsze, odnaleźliśmy ową drugą stronę (trzeba było wyjść z hali odbioru bagażu na halę przylotów) i samochód dostaliśmy za minut dwadzieścia, zamiast za godzinę dwadzieścia. Miało być Mini One, jest Audi A1 – to niemieckie, to niemieckie, to ma jedynkę w nazwie, to ma jedynkę w nazwie, jeden pies, niech będzie.</p>
<p>Na pierwsze dwie noce Ania załatwiła nam pokój na obrzeżach Maspalomas przez AirBnb. Eduardo, nasz gospodarz, jest miły, tylko nie idzie się z nim dogadać po angielsku. Niewątpliwą zaletą naszej lokalizacji jest bliskość licznych knajpek, w których zdają się stołować również miejscowi, nie tylko turyści.</p>
<p><img src="https://live.staticflickr.com/7543/15714304220_1ed34914bf_c.jpg" alt="https://live.staticflickr.com/7543/15714304220_1ed34914bf_c.jpg"></p>
<p>Pożywiamy się tapasem i zimną Rioją (tak się ją podobno w Hiszpanii pija) i wyruszamy na spacer przez Playa del Inglés. Na naszej trasie życie nocne ogranicza się do licznych, lecz dość pustych barów serwujących piwo w irlandzkim bądź teutońskim anturażu. Późnowieczornego wychodzenia życia na ulice, charakterystycznego, dla krajów śródziemnomorskich, tu nie ma – mieszkańcy hoteli i apartamentowców z których składa się kurort to raczej europejczycy z północy. Turyści odwiedzający Playa de Inglés najwyraźniej lubią czuć się swojsko ale nie stronią też od odrobiny europejsko-śródziemnomorskiej egzotyki, stąd urocze knajpki pod nazwą “Mr. Greek” serwujące piwo Bavaria prosto z Holandii. Bardziej konserwatywni przyjezdni mogą skorzystać z ofert barów i restauracji oferujących wyłącznie menu skandynawskie lub niemieckie. Wyobraźcie sobie, proszę, wsuwanie na kolację flaków i schabowego w “Chłopskim jadle” po dniu spędzonym na plaży w Maspalomas. Tak lubią się relaksować europejscy emeryci.</p>
<p>Wycieczka na plażę. Z reguły zbieranie się, wyszukiwanie odpowiedniej plaży, parkowanie itp. zajmuje cały dzień, z tego siedzenia w morzu jest może kwadrans. Jedziemy malowniczą drogą GC-500 z Playa de Mogán, która okazała się mikroskopijna i zatłoczona. Już po kilku kilometrach napotykamy Playa de Tritaña, która z racji trudnego dostępu jest prawie zupełnie pusta. Wiedzie na nią kilkusetmetrowej długości ścieżka wśród ostrych jak pumeks wulkanicznych skał. Sama plaża pokryta jest szarym piaskiem. Po piętnastu minutach pluskania się robimy sobie jeszcze spacer półką skalną wzdłuż klifu i zbieramy się w drogę powrotną.</p>
<p>Na marginesie: zwrócono mi kiedyś uwagę, po relacji z <a href="/travel/dziennik-islandzki/">Islandii</a> bodajże, iż moje podróżnicze wpisy są dość negatywne i sugerują, że wycieczki nasze nie są udane. Od osobistych moich odczuć abstrahując, uważam, że takie przedstawianie faktów ma swoje zalety. Jak to jest na wakacjach pięknie i wspaniale naczytać się można do znudzenia w folderach reklamowych i innych tekstach, które zachęcać mają do podróżowania. Mój cel jest inny: pokazać, jak było faktycznie, a także zmoderować nieco te nakręcone do granic realizmu oczekiwania. Foldery i przewodniki roztaczają rajskie wizje, a tu nagle albo spadnie deszcz, albo nie trafimy z knajpą, i od razu tragedia, urlop do bani, trzeba było siedzieć w domu a nie tłuc się przez pół świata. Przypominanie o niedoskonałościach, potknięciach, niesprzyjających okolicznościach niech stanowi antidotum na przerost oczekiwań, aby byle drobiazg nie zdusił w nas radości z wyprawy w nieznane.</p>
<p>Ania wynalazła gdzieś, że na Gran Canaria są darmowe campingi. Miejsca na nich rezerwować trzeba z trzydniowym wyprzedzeniem przez <a href="http://cabildo.grancanaria.com/formulario-solicitud-permiso-acamapadas?redirect=http%3A%2F%2Fcabildo.grancanaria.com%2Fbuscador%3Fp_p_id%3D3%26p_p_lifecycle%3D0%26p_p_state%3Dmaximized%26p_p_mode%3Dview%26_3_groupId%3D0%26_3_keywords%3Dacampada%26_3_struts_action%3D%252Fsearch%252Fsearch%26_3_format%3D">stronę</a> lub telefon a papiery odebrać osobiście w urzędzie w Las Palmas. Trochę to kłopotliwe, bo do Las Palmas akurat nie mieliśmy żadnego interesu, ale papier być musi. Trzeba było się wylegitymować, podpisać jakieś druki po hiszpańsku, miła pani urzędniczka przystawiła wielką pieczęć, i już mogliśmy legalnie nocować. Chcieliśmy dwa noclegi w Tamadaba i jeden w Presa de las Niñas, z jakiegoś powodu zamiast Tamadaba dali nam Artenara (to był nasz drugi wybór). Montaña de Artenara to wielka góra (1455 m n.p.m.) a camping jest przy samym szczycie, co komplikowało nasz plan nocowania w pobliżu samochodu – nasz główny bagaż nie nadaje się do przenoszenia na duże dystanse. Spróbowaliśmy podjechać trochę drogą gruntową, pojazd nasz nie był jednak do takich warunków przystosowany.</p>
<p>Audi A1 z silnikiem 1.2 TFSI to rzęch jakich mało. Na miejscu firmy Audi wstydziłbym się nalepiać mój prestiżowy znaczek na to pudło. Nie dość, że przyspiesza wyłącznie w bardzo specyficznym zakresie obrotów, gdzieś między 2321 a 2326, to jeszcze w naszej wersji jedyne wyposażenie to kierownica i wajcha do zmiany biegów. Przepraszam, jeszcze obrotomierz jest. Ale poza tym nic, nawet regulacji kierownicy przód/tył ani tempomatu. Przez tylną szybę nie widać nic (to nagminne we współczesnych samochodach) a czujników parkowania brak. Jeśli to się w ogóle sprzedaje, to jest to niewątpliwy triumf marketingu nad zdrowym rozsądkiem i organoleptyką. Vorsprung durch Technik my ass.</p>
<p><img src="https://farm9.staticflickr.com/8645/15901732285_e743abc63d_n.jpg" width="320" height="213" alt="Caldera" class="photo-left"> Samochodzik nie radził sobie z jazdą pod górę, zostawiliśmy go więc przy drodze, zaś ostatni odcinek – dwadzieścia minut piechotą – pokonaliśmy na własnych nogach. Okazało się, że z tą Artenarą nie trafiliśmy nawet tak źle – nieco powyżej “pola namiotowego” (jest to w żaden sposób nie oznaczona, kamienista i niezbyt równa łączka) znajdowała się grań. Po wyjściu na nią oczom naszym ukazał się oszałamiający widok na kalderę Tejeda – dwudziestokilometrowej średnicy dziurę w ziemi pozostałą po zapadnięciu się wulkanu z którego przed milionami lat powstała wyspa. To najpiękniejszy górski krajobraz jaki widziałem od czasu <a href="/travel/wyprawa-2010-11/s%C4%85-g%C3%B3ry-to-musi-by%C4%87-zimno/">National Pass</a>.</p>
<p>Do Tamadaba dotarliśmy samochodem i w cztery i pół godziny zrobiliśmy trasę na Altavista de Tamadaba i z powrotem. Wyruszyliśmy, jak to mamy w zwyczaju, dość późno, do samochodu wróciliśmy gdy już zapadał zmierzch. Szlak jest bardzo prosty, płaski i wygodny – strome zejście i podejście jest tylko jedno, pod sam koniec – a także pięknie położony. Prowadzi grzbietem górskim, na przemian od południa, skąd podziwiać można ten sam krater który tak zachwycił mnie widziany z Montaña de Artenara, i od północy, skąd widać morze i w oddali Teneryfę. Przy dobrej pogodzie ładnie podobno wygląda trzykilkometrowa Teida, myśmy mieli trochę chmur więc wulkan nie był widoczny, ale i tak było pięknie.</p>
<p>Rankiem po drugim noclegu na górskim campingu obudziliśmy się przy akompaniamencie deszczu bębniącego o tropik namiotu. Z reguły brzmi to groźniej niż jest w rzeczywistości, w słodkiej niewiedzy wylegiwaliśmy się więc w śpiworach do momentu, gdy Ania zdecydowała się wyjrzeć na zewnątrz i oczom naszym ukazało się jezioro, w którego centrum rozbity był nasz namiot. Widok ten zaowocował nagłym przypływem energii, w dwadzieścia minut byliśmy zwinięci i w strugach deszczu i wśród płynących drogą potoków schodziliśmy do samochodu. Śpiwory i karimaty mieliśmy szczęśliwie zupełnie suche, ale i tak myśl o kolejnej nocy spędzonej w mokrym namiocie, pewnie w chmurach i w deszczu – Presa de las Niñas też jest położone dość wysoko w górach – niezbyt nam się uśmiechała. Z braku lepszych pomysłów postanowiliśmy tam jednak pojechać i zobaczyć jak sprawy stoją, Wiązało się to z przejazdem górskimi drogami przez centrum wyspy. We mgle, w ulewie i wśród zalegających szosę głazów, które podmyte ulewą posypały się z górujących nad drogą zboczy, jazda była dość emocjonująca. Okazało się, że droga do naszego campingu jest zamknięta w czasie deszczu, nie pozostało nam więc nic innego, jak jechać do Maspalomas i szukać dachu nad głową na najbliższą noc. Szczęśliwie poza sezonem nie nastręcza to specjalnych trudności, i Ani udało się wynająć niedrogi bungalow w jednym z ośrodków wypoczynkowych zanim jeszcze zjechaliśmy z gór.</p>
<p>Ostatnie dwa dni przeznaczone były na aktwyność zorganizowaną. Najpierw kurs surfingu. Miał być w niedzielę tuż po naszym przylocie, od szkoły dostaliśmy radosnego maila potwierdzającego termin. We wtorek przed naszym wylotem na Gran Canaria zatelefonowali do mnie z pytaniem skąd mają nas odebrać na kurs, który się tego dnia odbywa. Okazało się, że z tą niedzielą to jakieś nieporozumienie, bo w dzień święty szkoły w ogóle nie funkcjonują. Trzeba więc było przeorganizować plany i przełożyć kurs na koniec pobytu.</p>
<p>Surfowanie wymaga ciężkiej pracy i cierpliwości. Teorię wyłożyć można w dwie minuty. Wchodzimy z deską do morza i kładziemy się na niej w centralnej osi, tak, żeby na końcu wystawały same stopy. Nogi mają być złączone, głowa uniesiona do góry patrzy przed siebie, tułów leży na desce. Machając rękoma jak do kraula wypływamy w morze, i gdy widzimy nadchodzącą dobrą falę, obracamy się razem z deską tak, by znaleźć się prostopadle do linii fali, tyłem do niej.</p>
<p><img src="https://live.staticflickr.com/7463/15282199063_c1a6bf1be2_c.jpg" alt="https://live.staticflickr.com/7463/15282199063_c1a6bf1be2_c.jpg"></p>
<p>Nim fala nas dosięgnie, kraulując nabieramy prędkości. Gdy deska znajdzie się na fali – tj. fala nas dogoni – chwytamy krawędzie deski na wysokości piersi, unosimy tułów, następnie stawiamy nogę prowadzącą (prawą dla “regulars” lub lewą dla “goofys”) centralnie z tyłu deski, stopa prostopadle do podłużnej osi, potem druga noga z przodu (stopa tak samo) i gotowe, surfujemy. Należy utrzymywać pozycję na mocno zgiętych nogach, balansując rękami, żeby nas nie wywróciło.</p>
<p>W praktyce nie jest to takie trudne, wymaga tylko wystarczającej liczby powtórzeń, aby sekwencja wstawania przebiegała automatycznie – przypuszczam, że aby to w podstawowej mierze wyćwiczyć próbować trzeba przez kilka dni. Pędząca na fali deska jest zaskakująco stabilna, gdy już się wstanie utrzymanie się na niej nie nastręcza wielkiej trudności. Wypływanie na niej na spotkanie falom to jednak ciężka praca, zaś wyczekiwanie na tę właściwą, na której można będzie pojechać, to nieraz solidna próba cierpliwości. Dodatkowo na stumetrowej może Playa des Hombres, gdzie miejsce miał nasz kurs, surfować próbowało trzydzieści osób, więc na “swoją” falę trzeba było czasem czekać przez wiele minut. Frajda była, ale umiarkowana.</p>
<p>Kolejnego dnia rano wybraliśmy się na zejście kanionem. Kanion znajduje się przy drodze łączącej Mogán i Presa de las Niñas, prócz nas dwojga jest tylko jeszcze jeden żądny wrażeń turysta oraz dwóch przewodników. Nie do końca wiedzieliśmy czego się po tej eskapadzie spodziewać, zaś pytania, którym przywitali nas przewodnicy wręczając kombinezony piankowe – czy jesteśmy gotowi na zimno i czy na pewno umiemy pływać – były trochę niepokojące. Niepokój nasz sięgnął zenitu gdy po krótkim zejściu przez krzaki stanęliśmy u szczytu kilkunastometrowego wodospadu i okazało się, że mamy się wzdłuż niego opuścić na linie aby na końcu wylądować w głębokiej wodzie.</p>
<p><img src="https://live.staticflickr.com/8622/15714444978_ebf110f58e_c.jpg" alt="https://live.staticflickr.com/8622/15714444978_ebf110f58e_c.jpg"></p>
<p>Po pierwszym szoku spowodowanym zimną wodą i koniecznością płynięcia w butach przyszła andrenalina, i okazało się, że jest strasznie fajnie! Mokra pianka szybko nagrzała się od ciała, podobnie woda, która zatrzymała się w naszych nieprzemakalnych butach trekkingowch (pozostali uczestnicy wycieczki mieli lekkie, przewiewne buty i zazdrościli nam tego ciepła). To lekka euforia sprawić musiała, że zdecydowałem się na skok z wysokości czterech metrów do strumienia, który nie sprawiał wrażenia specjalnie głębokiego (przewodnik zapewniał, że to bezpieczne, o ile tylko trafi się we właściwe miejsce). Potem było jeszcze przeciskanie się przez wąskie szczeliny skalne, więcej zjadów na linie i brodzenia po pierś w zimnych potokach. Po trzech godzinach zakończyliśmy przygodę w doskonałych humorach. Z wodą podobno mieliśmy szczęście, bo w poprzednich tygodniach kanion był zupełnie suchy – to padające od kilku dni ulewne deszcze urządziły nam taką mokrą atrakcję.</p>
<p>W drodze do Las Palmas zahaczamy jeszcze o Roque Nublo (ledwo widoczny wśród chmury, która nas otacza) i Pico de las Nieves, najwyższy szczyt na wyspie (1943 m n.p.m.) na który wjeżdża się samochodem, i który tego dnia także znajduje się w gęstej chmurze, z racji czego widoku brak.</p>
<p>W Las Palmas świętujemy urodziny Ani kolacją w rybnej restauracji. W wyborze knajp kierujemy się na tym wyjeździe TripAdvisorem i dobrze nam to służy, jedzenie jest pyszne, choć nie zawsze tanie. Poza tym pół dnia które pozostaje nam przed wylotem przeznaczamy na poszukiwania starego miasta. Udaje się je w końcu odnaleźć – urocze uliczki z kolonialnymi budynkami ozdobionymi charakterstycznymi kanaryjskimi drewnianymi balkonami.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/B657nZ">Gran Canaria</a></p>
]]></content:encoded></item><item><title>Haskell Exchange 2014</title><link>https://blog.mmakowski.com/technology/haskell-exchange-2014/</link><pubDate>Wed, 08 Oct 2014 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/haskell-exchange-2014/</guid><description>I was surprised to find that despite all-star line-up of speakers, this year’s Haskell Exchange was not as well attended and lower key than the 2013 edition. We were back to SkillsMatter headquarters, this time round with gym music blasting from the speakers during breaks and with no aircon for added frowziness. The talks were good though, some of them very much so.
Safe, Zero-Cost Coercions in Haskell Simon Peyton-Jones arrived bare-footed and dispelled one of the illusions I have been holding on to for quite a while, that the minimal core language of GHC, System FC, is sound beyond any reasonable doubt.</description><content:encoded><![CDATA[<p>I was surprised to find that despite all-star line-up of speakers, this year’s Haskell Exchange was not as well attended and lower key than the <a href="https://blog.mmakowski.com/technology/haskell-exchange-2013/">2013 edition</a>. We were back to SkillsMatter headquarters, this time round with gym music blasting from the speakers during breaks and with no aircon for added frowziness. The talks were good though, some of them very much so.</p>
<h2 id="safe-zero-cost-coercions-in-haskell">Safe, Zero-Cost Coercions in Haskell</h2>
<p><strong>Simon Peyton-Jones</strong> arrived bare-footed and dispelled one of the illusions I have been holding on to for quite a while, that the minimal core language of GHC, System FC, is sound beyond any reasonable doubt. After all, hasn’t this soundness been proven in peer-reviewed papers? It has, but even in the intellectually astute and pure realms of Haskell, adding new, seemingly innocent feature such as <code>newtype</code> can lead to catastrophic consequences. In this case it was <a href="https://ghc.haskell.org/trac/ghc/ticket/1496">GHC bug #1496</a>, which demonstrated how generalised newtype deriving coupled with type families can lead to GHC producing code that segfaults. This has been a source of great embarassment for Simon and took seven years to sort out. The solution relies on restricting under what circumstances type coercions can be performed. First, there is a new built-in type class introduced in GHC, alongside with a function:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">class</span> <span style="color:#458;font-weight:bold">Coercible</span> a b
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">coerce</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Coercible</span> a b <span style="color:#000;font-weight:bold">=&gt;</span> a <span style="color:#000;font-weight:bold">-&gt;</span> b
</span></span></code></pre></div><p><code>Coercible a b</code> instance indicates that the runtime representation of values of type <code>a</code> is identical to that of values of type <code>b</code>, so no work needs to be done when converting from one to the other. Instances of this class are auto-generated by GHC for custom data types and newtypes, for example</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">newtype</span> <span style="color:#458;font-weight:bold">HTML</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">MkHTML</span> <span style="color:#458;font-weight:bold">String</span>
</span></span></code></pre></div><p>will lead to generation of</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">Coercible</span> <span style="color:#458;font-weight:bold">HTML</span> <span style="color:#458;font-weight:bold">String</span>
</span></span></code></pre></div><p><code>coerce</code> does not introduce any runtime code, but can be invoked by the programmer to transform data between types. Lifting instances, such as</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">Coercible</span> a <span style="color:#000;font-weight:bold">=&gt;</span> <span style="color:#458;font-weight:bold">Coercible</span> [a]
</span></span></code></pre></div><p>are also generated for parameterised types, including user-defined types. Therein lies a problem:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">newtype</span> <span style="color:#458;font-weight:bold">HTML</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Mk</span> <span style="color:#458;font-weight:bold">String</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#000;font-weight:bold">family</span> <span style="color:#458;font-weight:bold">F</span> a
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">F</span> <span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Char</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">F</span> <span style="color:#458;font-weight:bold">HTML</span>   <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Bool</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Tricky</span> a <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">MkT</span> a (<span style="color:#458;font-weight:bold">F</span> a)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">veryNaughty</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Tricky</span> <span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Tricky</span> <span style="color:#458;font-weight:bold">HTML</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">veryNaughty</span> ts <span style="color:#000;font-weight:bold">=</span> coerce ts
</span></span></code></pre></div><p>What would <code>coerce</code> do to the second type argument, which in <code>Tricky String</code> is <code>Char</code> but in <code>Tricky HTML</code> should be a <code>Bool</code>? This is where the unsoundness stems from. To address this, a new concept needs to be introduced: roles of types parameters. There are three possible roles:</p>
<ul>
<li>representational – not used in a type-function argument</li>
<li>nominal – used in type function argument</li>
<li>phantom – the argument does not appera at all</li>
</ul>
<p>Nominal parameters should not lead to type instance generation. For example, in:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#000;font-weight:bold">family</span> <span style="color:#458;font-weight:bold">F</span> a
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">-- instances ..</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">T</span> a b c <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">T1</span> b (<span style="color:#458;font-weight:bold">F</span> a)
</span></span><span style="display:flex;"><span>             <span style="color:#000;font-weight:bold">|</span> <span style="color:#458;font-weight:bold">T2</span> a b
</span></span></code></pre></div><p><code>T</code> would have <code>instance Coercible b b' =&gt; Coercible (T a b c) (T a b' c')</code> lifting generated for it, but not <code>instance Coercible a a' =&gt; Coercible (T a b c) (T a' b c')</code>. Roles can be inferred, but if a restriction is desirable they can be specified explicitly using syntax</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> role <span style="color:#458;font-weight:bold">Map</span> nominal <span style="color:#000;font-weight:bold">_</span>
</span></span></code></pre></div><p>where we say that the role of first type argument to <code>Map</code> is nominal and the second should be inferred. This specific example is actually useful, because for <code>Map</code> the internal layout is determined by the ordering of keys (i.e. <code>Ord</code> instance for the first type parameter), and that could change under coercion to a newtype! Lennart Augustsson pointed out that the necessity to write these can lead to buggy code – an assertion difficult to debunk. Another drawback to which Lennart drew attention was that the current scheme does not work for higher-kinded types.</p>
<p>While Simon argued that nothing simpler than roles can give sound account of type functions, the talk served as a useful reminder that even such rigorously developed and internally simple languages as Haskell suffer from the complexity that software developers require from their tools. After all, newtypes, type families and so on were introduced to address genuine engineering challenges.</p>
<h2 id="categories-for-the-working-haskeller">Categories for the Working Haskeller</h2>
<p>We all now know what a functor is. An <em>algebra</em> for functor <code>F</code> is a pair <code>(F, f)</code> where <code>f :: F B -&gt; B</code>. A <em>homomorphism</em> between <code>(B, f)</code> and <code>(C, g)</code> is a function <code>h :: B -&gt; C</code> such that the following diagram commutes:</p>
<pre tabindex="0"><code>digraph m {
node[shape=none,fontcolor=&#34;#657b83&#34;];
edge[color=&#34;#657b83&#34;,fontcolor=&#34;#657b83&#34;];
bgcolor=transparent;
rankdir=LR;
&#34;F B&#34; -&gt; B [label=f];
&#34;F C&#34; -&gt; C [label=g];
&#34;F B&#34; -&gt; &#34;F C&#34; [label=&#34;F h&#34;];
B -&gt; C [label=h];
{rank=same &#34;F B&#34; &#34;F C&#34;}
{rank=same B C}
}
</code></pre><p>Algebra <code>(B, f)</code> is <em>initial</em> if there is a unique homomorphism from it to each <code>(C, g)</code>.</p>
<p>How does this help? <strong>Jeremy Gibbons</strong> argued that it allows for construction of elegant APIs – mostly as an inspiration, mind you, not the end product that users look at. Take folds over a list as an example. <code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code> function encodes a certain traversal scheme for lists, but if we want a similar type of collapsing performed on our custom data type, a binary tree for example, we are on our own. Or are we?</p>
<p>First, we can separate two concerns in the data type definition: one that specifies the shape, the other that it’s a recursive data type. For a list it can be done as follows:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">ListS</span> a b <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">NilS</span> <span style="color:#000;font-weight:bold">|</span> <span style="color:#458;font-weight:bold">ConsS</span> a b <span style="color:#998;font-style:italic">-- shape</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Fix</span> s a <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">In</span> (s a (<span style="color:#458;font-weight:bold">Fix</span> s a)) <span style="color:#998;font-style:italic">-- recursion</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#458;font-weight:bold">List</span> a <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Fix</span> <span style="color:#458;font-weight:bold">ListS</span> a         <span style="color:#998;font-style:italic">-- put together</span>
</span></span></code></pre></div><p>Here, list <code>[1,2,3]</code> would be represented by <code>In (ConsS 1 (In (ConsS 2 (In (ConsS 3 (In NilS))))))</code>. As <code>ListS</code> has two type parameters (the type of element and the type of the tail), we can construct a “double map” or (bimap) function that will map over both of them:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">bimap</span> <span style="color:#000;font-weight:bold">::</span> (a <span style="color:#000;font-weight:bold">-&gt;</span> a&#39;) <span style="color:#000;font-weight:bold">-&gt;</span> (b <span style="color:#000;font-weight:bold">-&gt;</span> b&#39;) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">ListS</span> a b <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">ListS</span> a&#39; b&#39;
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">bimap</span> f g <span style="color:#458;font-weight:bold">NilS</span>        <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">NilS</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">bimap</span> f g (<span style="color:#458;font-weight:bold">ConsS</span> a b) <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">ConsS</span> (f a) (g b)
</span></span></code></pre></div><p>and implement a fold using it:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">foldList</span> <span style="color:#000;font-weight:bold">::</span> (<span style="color:#458;font-weight:bold">ListS</span> a b <span style="color:#000;font-weight:bold">-&gt;</span> b) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">List</span> a <span style="color:#000;font-weight:bold">-&gt;</span> b
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">foldList</span> <span style="color:#000;font-weight:bold">=</span> f <span style="color:#000;font-weight:bold">.</span> bimap id (foldList f) <span style="color:#000;font-weight:bold">.</span> out
</span></span></code></pre></div><p>This seems overly complicated, but lets us generalise beyond lists to other shapes:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">class</span> <span style="color:#458;font-weight:bold">Bifunctor</span> s <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  bimap <span style="color:#000;font-weight:bold">::</span> (a <span style="color:#000;font-weight:bold">-&gt;</span> a&#39;) <span style="color:#000;font-weight:bold">-&gt;</span> (b <span style="color:#000;font-weight:bold">-&gt;</span> b&#39;) <span style="color:#000;font-weight:bold">-&gt;</span> s a b <span style="color:#000;font-weight:bold">-&gt;</span> s a&#39; b&#39;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">out</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Fix</span> s a <span style="color:#000;font-weight:bold">-&gt;</span> s a (<span style="color:#458;font-weight:bold">Fix</span> s a)
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">out</span> (<span style="color:#458;font-weight:bold">In</span> x) <span style="color:#000;font-weight:bold">=</span> x
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">fold</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Bifunctor</span> s <span style="color:#000;font-weight:bold">=&gt;</span> (s a b <span style="color:#000;font-weight:bold">-&gt;</span> b) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Fix</span> s a <span style="color:#000;font-weight:bold">-&gt;</span> b
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">fold</span> f <span style="color:#000;font-weight:bold">=</span> f <span style="color:#000;font-weight:bold">.</span> bimap id (fold f) <span style="color:#000;font-weight:bold">.</span> out
</span></span></code></pre></div><p>Why <em>Bifunctor</em>? Because it’s a functor in both type arguments. That means that <code>ListS Integer</code> is a functor. Furthermore, <code>(List Integer, In)</code>, <code>(Integer, add)</code> are some of its algebras:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#458;font-weight:bold">In</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ListS</span> <span style="color:#458;font-weight:bold">Integer</span> (<span style="color:#458;font-weight:bold">List</span> <span style="color:#458;font-weight:bold">Integer</span>) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">List</span> <span style="color:#458;font-weight:bold">Integer</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">add</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ListS</span> <span style="color:#458;font-weight:bold">Integer</span> <span style="color:#458;font-weight:bold">Integer</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Integer</span>
</span></span></code></pre></div><p>and <code>sum :: List Integer -&gt; Integer</code> is a homomorphism for these two. Furthermore, <code>(List Integer, In)</code> is the initial algebra for <code>ListS Integer</code>, and the unique homomorphism to a given <code>(C, g)</code> is <code>fold g</code>. The commuting of the diagram translates to condition <code>h . f = g . bimap id h</code>. Categorical duality gives us the morphisms in opposite direction (unfolding) virtually for free and in a from that makes the duality obvious:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">unfold</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Bifunctor</span> s <span style="color:#000;font-weight:bold">-&gt;</span> (b <span style="color:#000;font-weight:bold">-&gt;</span> s a b) <span style="color:#000;font-weight:bold">-&gt;</span> (b <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Fix</span> s a)`
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">unfold</span> f <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">In</span> <span style="color:#000;font-weight:bold">.</span> bimap id (unfold f) <span style="color:#000;font-weight:bold">.</span> f
</span></span></code></pre></div><p>What’s best, we can apply this to all types that can be represented using unfixed shape functor. Yay. That’s what Tony Morris calls “taking DRY principle seriously”.</p>
<p>Jeremy recommended we check out the <a href="https://www.cs.ox.ac.uk/softeng/">MSc course in Software Engineering offered by Oxford University</a>. I definitely will take a close look.</p>
<h2 id="performance-measurement-and-optimisation-in-haskell">Performance Measurement and Optimisation in Haskell</h2>
<p>There are more ways to screw up microbenchmarking than one can list in three quarters of an hour, and there is a solution to them that fits in two words: use <a href="http://www.serpentine.com/criterion/">criterion</a>. <strong>Bryan O’Sullivan</strong> borrowed ideas from leading tools to put together something that is easy to use and accurate. Always wanted to benchmark that dodgy <code>fib 1 = 1; fib 2 = 1; fib n = fib (n - 1) + fib (n - 2)</code>? There you go:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">Criterion.Main</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">main</span> <span style="color:#000;font-weight:bold">=</span> defaultMain [
</span></span><span style="display:flex;"><span>  bgroup <span style="color:#d14">&#34;fib&#34;</span> [ bench <span style="color:#d14">&#34;1&#34;</span> <span style="color:#000;font-weight:bold">$</span> whnf fib <span style="color:#099">1</span>
</span></span><span style="display:flex;"><span>               , bench <span style="color:#d14">&#34;5&#34;</span> <span style="color:#000;font-weight:bold">$</span> whnf fib <span style="color:#099">5</span>
</span></span><span style="display:flex;"><span>               , bench <span style="color:#d14">&#34;9&#34;</span> <span style="color:#000;font-weight:bold">$</span> whnf fib <span style="color:#099">9</span>
</span></span><span style="display:flex;"><span>               ]]
</span></span></code></pre></div><p>Criterion will take care that the thunk gets evaluated in every benchmark iteration, will detect how noisy the system is, produce kernel density estimate, use ordinary least-squares regression to factor out the cost of time measurements themselves and generate nice HTML reports with graphs and all – all this while making sure that you don’t forget that performance measurement is a statistical activity and you should get used to working with distributions rather than single statistics such as mean or median.</p>
<p>Finally, Bryan’s pro tips for performance optimisation:</p>
<ul>
<li>keep overhead of data types in mind</li>
<li>keep uses of your data in mind – e.g., can we stream or do we have to consume all?</li>
<li>keep strictness of code and data in mind – neither strictness nor laziness is always appropriate.</li>
</ul>
<h2 id="rest---building-apis-easily">Rest - Building APIs Easily</h2>
<p><strong>Erik Hasselink</strong> kicked off the industrial afternoon with an overview of <em>Rest</em>, a library for (you guessed it) writing RESTful web services that has recently been <a href="https://github.com/silkapp/rest">open sourced</a> by his company, Silk. While to code snippets presented by Erik did not seem overly exciting, what was impressive was the list of features provided by the library, chief among them generation of client libraries in Haskell in Javascript, so that you can start using your service from a separate app without writing any additional code. The library is web framework agnostic and Silk wrote bindings for Happstack, Snap and WAI.</p>
<h2 id="coping-with-change-data-schema-migration-in-haskell">Coping with Change: Data Schema Migration in Haskell</h2>
<p><strong>Chris Dornan</strong> and <strong>Adam Gundry</strong> took on a task of migrating a video sharing platform implemented in Ruby onto a new software stack. One of the main challenges is the requirement to carry on migrating data as the software undergoes active development. To that end a schema description DSL has been devised:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">ur</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">User</span> <span style="color:#000;font-weight:bold">=</span> record
</span></span><span style="display:flex;"><span>           <span style="color:#000;font-weight:bold">|</span> name <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">NAme</span>
</span></span><span style="display:flex;"><span>           <span style="color:#000;font-weight:bold">|</span> admin <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">AdminType</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">nm</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Name</span> <span style="color:#000;font-weight:bold">=</span> basic <span style="color:#458;font-weight:bold">String</span>
</span></span></code></pre></div><p>This is used for describing both the data written to persistent stores and the communication protocol. To support migration of data this has been extended with human- and machine-readable change logs:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">ur</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">User</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">=</span> record
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">|</span> name <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Name</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">|</span> admin <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Admin</span> <span style="color:#458;font-weight:bold">Type</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">|</span> password <span style="color:#000;font-weight:bold">::</span> <span style="color:#000;font-weight:bold">?</span> <span style="color:#458;font-weight:bold">Password</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">changes</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  version <span style="color:#d14">&#34;0.2&#34;</span>
</span></span><span style="display:flex;"><span>    changed record <span style="color:#458;font-weight:bold">User</span>
</span></span><span style="display:flex;"><span>      field added password <span style="color:#000;font-weight:bold">::</span> <span style="color:#000;font-weight:bold">?</span> <span style="color:#458;font-weight:bold">Password</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  version <span style="color:#d14">&#34;0.1&#34;</span>
</span></span></code></pre></div><p>The build process verifies that the change log is in sync with the entity definition. Rollbacks are not currently supported but are on Adam and Chris’s agenda.</p>
<h2 id="structural-typing-for-structured-products">Structural Typing for Structured Products</h2>
<p>This talk made me sad. <strong>Peter Marks</strong> and <strong>Tim Williams</strong> described <em>FPF Lucid</em>, a DSL they are developing at Barclays for describing payoffs of exotic equity derivatives. A Lucid function looks like this:</p>
<pre tabindex="0"><code>function capFloor(perf, {cap, floor})
  return max(floor, min(cap, perf))
end
</code></pre><p>and its type inferred by the compiler is</p>
<pre tabindex="0"><code>capFloor: Num a =&gt; (a, {cap: a, floor: a|r}) -&gt; a
</code></pre><p>where <code>r</code> is row variable, indicating possible other fields of the record. Users of the language don’t have to specify any types and can use records of different shapes as inputs to the same function as long as the records contain required fields – i.e. the typing is structural, not nominal. This gives the language a “dynamic” feel, like coding in Python or Ruby, but with the benefits of comprehensive compile-time type checking.</p>
<p>Designing and implementing a programming language, with full Hindley-Milner type inference involving structural types and row polymorphism, incorporating some cutting-edge programming language research results, coding in Haskell, all that in perhaps a non-ideal, but familiar banking environment, with direct influence on the company’s competitive advantage, sounded close to a dream job. And to think that I spent over a year lurking in FPF team’s chat channel and did not work up the nerve to speak to them and ask if they had any openings before deciding on leaving Barclays for good…</p>
<h2 id="strongly-typed-publishsubscribe-over-websockets-via-singleton-types">Strongly Typed Publish/Subscribe over WebSockets via Singleton Types</h2>
<p>Like Erik, <strong>Oliver Charles</strong> works on web APIs. In his case the focus was not on REST though, but on subscription channels implemented over WebSockets. The challenge there was ensuring that the server-side implementation of <a href="http://socket.io">Socket.IO</a> protocol is reliable. To that end relying on strings as event representation was not good enough, as it did not guarantee that the correct type of data was being sent for a given subscription. It has been too late in the day for me to comprehend all of the details of the solution, but in short, combining <code>GADTs</code>, <code>TypeFamilies</code> and <code>DataKinds</code> gives enough of dependent typing to set up something called <a href="http://www.cis.upenn.edu/~eir/papers/2012/singletons/paper.pdf"><em>singleton types</em></a> which can in turn be used to tag the types of data sent over channel and ensure that types of responses matches that of the request.</p>
<h2 id="park-bench">Park Bench</h2>
<p>The perennial question of how to popularise Haskell in the industry sprung up again, with no new insights. After half an hour I finally registered that the first ten questions will be awarded with a copy of <em>Real World Haskell</em>, and while I don’t have much use for it at home, it could make a decent conversion device that could be put in some conspicuous place at work. My question was around the need for module system improvements such as <a href="http://plv.mpi-sws.org/backpack/"><em>Backpack</em></a>. It was met mostly with blank stares from the panel, clearly none of the esteemed park benchers found this area of Haskell enough of a problem to pay close attention to the recent developments.</p>
<p>On a separate note, one interesting piece of opinion from Duncan Coutts was that type classes are overused and often a more suitable solution for where an OO-like construct is called for, is just a record with functions. And that’s all that stuck in my head from this small, but excellent Exchange.</p>
]]></content:encoded></item><item><title>Obrazki z Rumunii</title><link>https://blog.mmakowski.com/travel/obrazki-z-rumunii/</link><pubDate>Sun, 31 Aug 2014 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/obrazki-z-rumunii/</guid><description>Gaz Cholerne konkurencyjne standardy. W Timișoarze zaopatrzyć sie mieliśmy w prowiant na cztery-pięć dni oraz pojemnik z gazem. Razowy chleb zrobiliśmy w domu i przywieźliśmy ze sobą, na miejscu kupiliśmy suchą kiełbasę, kawałek wędzonki, rybki w puszce, ryż, zupy i sosy w proszku, suszone owoce, orzechy oraz kilo czekolady. Zakupiona w miejscowym sklepie turystycznym butla z gwintowanym przyłączem typu UNEF okazała się (oczywiście) nie pasować do naszego palnika typu Campingaz. W hotelu wyciągnąłem scyzoryk i sukcesywnie przycinając plastikowe ząbki na klemie mocującej palnik do butli zmusiłem w końcu ten zestaw do odpalenia.</description><content:encoded><![CDATA[<h2 id="gaz">Gaz</h2>
<p>Cholerne konkurencyjne standardy. W Timișoarze zaopatrzyć sie mieliśmy w prowiant na cztery-pięć dni oraz pojemnik z gazem. Razowy chleb zrobiliśmy w domu i przywieźliśmy ze sobą, na miejscu kupiliśmy suchą kiełbasę, kawałek wędzonki, rybki w puszce, ryż, zupy i sosy w proszku, suszone owoce, orzechy oraz kilo czekolady. Zakupiona w miejscowym sklepie turystycznym butla z gwintowanym przyłączem typu UNEF okazała się (oczywiście) nie pasować do naszego palnika typu Campingaz. W hotelu wyciągnąłem scyzoryk i sukcesywnie przycinając plastikowe ząbki na klemie mocującej palnik do butli zmusiłem w końcu ten zestaw do odpalenia. Ha.</p>
<p>Sukces okazał się pozorny. Później w górach, gdy w chwili kryzysu postanowiliśmy ugotować ryż, sztuki tej nie udało mi się powtórzyć. Ostatecznie po kwadransie daleszego przycinania klemy i mocowania się z mocowaniem palnika udało nam się uzyskać niewielki płomień, który pozwolił na ugotowanie torebki ryżu. Było to na tyle kłopotliwe, że prób gotowanie nie powtarzaliśmy i do końca pobytu w górach żywiliśmy się suchym prowiantem.</p>
<h2 id="przemysł">Przemysł</h2>
<p>Leży. Tak przynajmniej wynikałoby z tuzinów hal fabrycznych, których dachy zapadły sie do środka, rdzewiejących silosów i innych metalowych konstrukcji. Widać je w miastach, ale bardziej jeszcze z okien pociągu: byłe zakłady przemysłowe stojące w szczerym polu i zarastające chwastami, budynki bez ścian, pomazane sprejem betonowe konstrukcje.</p>
<p><img src="https://live.staticflickr.com/5592/14890817657_7661a2331f_c.jpg" alt="https://live.staticflickr.com/5592/14890817657_7661a2331f_c.jpg"></p>
<p>Za czasów Ceaușescu musiały to być tętniące życiem kombinaty w których herosi pracy bili kolejne rekordy i wykuwał się sukces socjalistycznej gospodarki. W nowej rzeczywistości okazały się zombie, które odcięte od państwowej pępowiny padały jak muchy.</p>
<p>Z drugiej strony chyba nie leży, bo mają przecież Dacię – czołowego producenta tanich klonów Renault. Niech więc będzie, że stoi.</p>
<h2 id="fetească">Fetească</h2>
<p>“Sto dwadzieścia lei za dobre wino to nie jest dużo” – napomyka kelner w Casa del Sole. Dobra, niech będzie. Czerwone fetească neagră okazuje się wyśmienite, choć Ania uważa, że zbyt kwaśne. Casa del Sole wygrzebaliśmy z TripAdvisora; w Rumunii zdaje się nie ma zwyczaju jadania poza domem, więc przyzwoite knajpy należy wyszukiwać zawczasu, a nie liczyć, że spacer przez miasto zaprowadzi nas przypadkiem do rewelacyjnej jadłodajni.</p>
<p>W prowincjonalnych restauracjach bez większych aspiracji wina lokalne to w większości półwytrawne odmiany miejscowych szczepów. Fetească zajmuje wśród nich poczesne miejsce. Czarna może być znakomita, jak udowodniła butelka w Casa del Sole. Jeden egzemplarz białej, który piłem, przypominał nieco niemickie Rieslingi w wersji Kabinett i był całkiem pijalny.</p>
<h2 id="kolej">Kolej</h2>
<p>Nagrodą za wczesne zwleczenie się z łóżka jest możliwość oglądania wschodu słońca. Myśmy wstali przed piątą, należy nam się. Ten świt to czerwona kula wynurzająca się spoza spowitych mgłą pól usianych stogami siana. Kiedy ostatni raz widziałem stóg siana? Pewnie z piętnaście lat temu w Polsce. W ostatnich latach na skoszonych polach zobaczyć można tylko zafoliowane bele. Pociąg średniodystansowy z Timișoary do Simerii wygląda jak duży tramwaj, zdaje się dość nowoczesny, z zewnątrz duże graffiti nachodzące na fragmenty szyb. Później stacja w Simerii o poranku: rozsypujące się betonowe perony nie wystające zbytnio ponad poziom torów, wokół zrujnowane budynki, garstka pasażerów, lokalnych rzemieślników oczekujących na swoje połączenia, zupełnie jak z przewodnika po <a href="http://www.molvania.com">Molvanii</a>. I łazienka damsko-męska: ciemny korytarz, brodzi się w cieczy której pochodzenia lepiej nie dochodzić, kabiny z których odpadły drzwi, w środku toalety w stylu azjatyckim: dziura w ziemi i miejsce do kucania. Za winklem, w zupełnej niemal ciemności, pisuary. Tu wyjaśnia się pochodzenie części substancji pokrywających podłogę: pisuar to miska na ścianie z dziurą, przez którą mocz spływa wprost na buty sikającego i następnie podłogę.</p>
<p>Kolejny pociąg to lokalny Simeria-Petroșani. Ten ma wagony z lat sześćdziesiątych z przedziałami. W przedziale drugiej klasy jest sześć foteli, jak w polskiej pierwszej. Tekstylne pokrycia siedzeń przez czterdzieści lat zgromadziły warstwy brudu i usiane zostały dziurami wypalonymi przez papierosy. Pociąg co jakiś czas zatrzymuje się w polu. Na jednym z takich polnych przystanków, w Ohaba de sub Piatra, wyskakujemy.</p>
<h2 id="milion">Milion</h2>
<p>“Aceasta este o mulțime de bani! Milioane!” – tłumaczy mi bezzębny traktorzysta, pokazując stulejowy banknot. Gdy mijał nas, jak w upale, noga za nogą, ugięci pod ciężarem plecaków wspinaliśmy się szosą z Ohaba de sub Piatra i zachęcająco pokazywał na wypełnioną żwirem przyczepkę, oferta podwózki wydała się niezwykle kusząca. Pięć kilometrów drogi do Salasu de Sus minęło nam na podziwianiu widoków, wyobrażaniu sobie co to będzie gdy na jakimś wyboju wyrzuci nas pod koła przyczepy, przypominaniu sobie czy należy powiedzieć “a coborî” czy “a urca” jak się będzie chciało wysiąść (jedno z nich oznacza wsiadanie a drugie wysiadanie, nie mogłem zapamiętać które jest które) oraz kombinowaniu ile i jak zapłacić za podwiezienie. Wedle przewodnika, za samochodowego stopa zwyczajowo coś tam się płaci, furmanka jest za darmo, o traktorze nic jednak nie było wspomniane. Wypadałoby coś zaproponować, kłopot z tym, że mamy tylko kilka banknotów stulejowych, a sto lei to jednak trochę sporo za pięć kilometrów.</p>
<p>Ostatecznie traktorzysta wybiera sobie najmniejszy nominał jaki udaje mu się znaleźć w moim portfelu: dziesięć funtów. Nie mam serca mu wyjaśniać, że to pół miljuna, czyli też mulcu bani. Lekcja: zawsze mieć przy sobie drobne.</p>
<h2 id="dead-man">Dead Man</h2>
<p>“You’re a dead man” – zawyrokował kolega z pracy gdy dowiedział się, że planujemy mieszkać u nieznajomych, poznanych przez internet.</p>
<p><a href="https://www.couchsurfing.org/people/luzaru/">Mihai</a> ma dwa domy, do obu można wchodzić bez pukania i niezależnie od obecności bądź nieobecności gospodarza. Główna rezydencja, w Salasu de Sus, mieści się w dużym ogrodzie, który zaadaptowany został do mieszkania. W centrum ogrodu stoi kilka kanap i kuchenka opalana drewnem. Nieopodal, pod baldachimem, mieści się kuchnia, salon i pokój komputerowy. Obok przeszklona altana mieszcząca sypialnię i kolejną kuchnię. Podobna altana przylega do drewnianego domu. W głębi ogrodu, za zasłoną prysznicową, pod gołym niebem stoi wanna. Jedną granicę ogrodu stanowi wartki potok, nad nim, na linach wisi huśtawka zrobiona z fotela. W okolicy leży też kilka przykrytych makatkami trumien o niejasnym zastosowaniu. W ogrodzie nie ma w tej chwili żywej duszy, zostawiamy więc prezent dla gospodarza – paczkę surowej kawy – i ruszamy dalej, do domu numer dwa. Jest to górski chata mieszczący się przy kompleksie turystycznym Pietrele, w parku Retezat. W zapadającym zmroku trudno znaleźć ścieżkę. Przed wejściem świeżo rozłożone jedzenie: chleb, cytryna, jakieś resztki napoju. Czy ktoś tu teraz mieszka? Wewnątrz nikogo nie ma. Dwie izby na dole wyglądają dość obskurnie, piętrowe łóżka, na nich sienniki, jak więzienie w kraju trzeciego świata. Na piętrze jest trochę czyściej, tam więc się lokujemy.</p>
<p>Szkoda, że niektórzy z gości Mihaia nie zadają sobie trudu żeby chatę pozostawić przynajmniej w takim porządku, w jakim ją zastali.</p>
<h2 id="piąta-rano">Piąta rano</h2>
<p>Po zapadnięciu zmroku, gdy leżę już zawinięty w śpiwór, pojawia się grupka surferów:</p>
<p>– Hi, I’m Anna, from Poland!<br>
– Hi, I’m Anna, from Poland!</p>
<p>Trójka Polaków przeszła trasę, na którą myśmy potrzebowali siedmiu godzin w cztery godziny. Jutro wstają o piątej i udają się na najwyższy szczyt w okolicy, Peleagę, po czym planują wrócić do Pietrele, albo nawet do Salasu de Sus. Podróżują lekko, bez śpiworów nawet, korzystają więc z leżącej w chacie sterty koców.</p>
<h2 id="mapa">Mapa</h2>
<p><em>obrazek zawiera lokowanie produktu</em></p>
<p>Gdzie ten szlak prowadzi? Wedle mapy miał zacząć schodzić w dolinę, na południe, lecz oznaczenia wyraźnie idą grzbietem, droga którym zajęłaby kolejne dwa dni. Nasza mapa to <a href="http://openstreetmap.org">OpenStreetMap</a> serwowana offline przez aplikację <a href="https://play.google.com/store/apps/details?id=net.osmand.plus&amp;hl=en_GB">OsmAnd+</a>.</p>
<p><img src="https://live.staticflickr.com/5564/14890899969_414a67609c_c.jpg" alt="https://live.staticflickr.com/5564/14890899969_414a67609c_c.jpg"></p>
<p>Do tej pory sprawdzała się znakomicie, precyzyjnie pokazując przebiegi i kolory szlaków – choć, prawdę powiedziawszy, po Retezat chodzić można i bez mapy, tak dobrze oznaczone są szlaki. Tu jednak, w mniej uczęszczanej okolicy, tworzona przez ochotników OpenStreetMap zaczyna szwankować. Na ratunek przychodzi GPS i <a href="https://play.google.com/store/apps/details?id=net.osmand.srtmPlugin.paid&amp;hl=en_GB">rozszerzenie</a> wyświetlające poziomice. Z ich pomocą żadne wyzwanie nawigacyjne nie jest straszne.</p>
<p>Moja główna obawa związana z używaniem elektronicznej mapy nie dotyczyła jej dokładności, lecz zapewnienia jej wystarczającej ilości prądu. Smartfony znane są z tempa, w jakim mogą wyczerpać akumulator, a przełączenie w tryb samolotowy to oszczędność starczająca na dzień lub dwa, lecz nie na tygodniową wyprawę. Szczęśliwie, od pewnego czasu dostępne są w sklepach przenośne panele słoneczne, takie jak używany przeze mnie <a href="http://www.goalzero.com/p/11/nomad-7-solar-panel">Nomad 7</a> firmy Goal Zero. W pełnym słońcu jest on w stanie naładować Nexusa 5 w kilka godzin; na wypadek gdyby słońce gorzej dopisywało, warto się zaopatrzyć w przenośny akumulator, który ładuje się z panelu słonecznego nawet przy ograniczonym świetle, i z którego później naładować można telefon.</p>
<h2 id="sznycel">Sznycel</h2>
<p>Z cabany na pole namiotowe wracamy po ciemku, lecz w dobrych humorach – po całym dniu marszu przez góry ciepły posiłek dobrze nam zrobił. Spieszyliśmy się wychodząc na poszukiwania cabany i zapomnieliśmy zabrać latarkę, szlak lokalizujemy więc świecąc telefonem. Po kilkunastu minutach marszu pod górę docieramy do namiotu. Jeszcze ubikacja – budka na skraju lastu, sto metrów od pola namiotowego, z dziurą w podłodze – mycie zębów, i idziemy spać.</p>
<p>Około pierwszej w nocy orientuję się, że coś jest nie tak – żołądek nie daje mi spać. W ciągu kilkunastu minut sytuacja zaczyna się wyjaśniać: Ania wymiotuje, na nieszczęście do namiotu, na szczęście brudząc tylko podłogę i zrobioną z pokrowca na śpiwór poduszkę. Wygrzebuję się ze śpiwora, zbieram wymiociny w ręcznik który wraz z pokrowcem zabieram do wypłukania. Poszukiwania źródełka trwają dobre dziesięć minut – nie jest łatwo je znaleźć w ciemności, w nieznanym terenie. Płukanie ręcznika i pokrowca zajmuje kolejne parę minut i owocuje mokrymi rękawami flanelowej koszuli. W międzyczasie próbuję zwymiotować – bezskutecznie, pomimo mdłości. Mokry i zziębnięty wracam do namiotu i jedyne, na co mam siłę to wpełznąć głową i tułowiem do śpiwora i tak leżeć, kontemplując zimno, mdłości, ponad dzień marszu dzielący nas od najbliższej cywilizacji oraz leżący w gruzach plan wycieczki. Ostatecznie i mi się udaje zwymiotować, szczęśliwie po wystawieniu głowy na zewnątrz namiotu. Potem, jak to przy zatruciach, zaczyna się “dawanie na dwa końce”, jak instruował niezapomniany profesor Sieńko na lekcjach przysposobienia obronnego, “czyli torsje i wymioty”. Spacery do latryny są wykańczające, każdy łyk wody wywołuje kolejną falę wymiotów. Oby dotrwać do rana.</p>
<h2 id="filcowy-kapelusz">Filcowy kapelusz</h2>
<p>– Pierdut?</p>
<p>Pasterz pokazuje na chmurę z której parę minut temu wyszliśmy schodząc na przełaj grzbietem. Jest wieczór, jesteśmy na wysokości dwóch kilometrów nad poziomem morza, nie prowadzi tu żaden szlak, właśnie rozbijamy namiot. Pasterz jest młody, z bardzo ciemną karnacją, w filcowym kapeluszu, luźnej koszuli i z drewnianą, okutą lagą. Jak z obrazka. Wchodzi bez wyraźnego celu pod górę, nachylenie terenu zdaje się nie robić na nim najmniejszego wrażenia.</p>
<p>– Îmi pare rău, nu înţeleg.</p>
<p>Tyle pogadaliśmy. Dał sobie za to zrobić zdjęcie.</p>
<p><img src="https://live.staticflickr.com/3861/14890997770_21357189d2_c.jpg" alt="https://live.staticflickr.com/3861/14890997770_21357189d2_c.jpg"></p>
<h2 id="papierosy">Papierosy</h2>
<p>Przy zasypianiu wyostrza się zmysł chłodu. Wielokrotnie zasypiałem w komfortowej temperaturze, aby niedługo później obudzić się dygocąc z zimna. Podobnie może być z powonieniem. Nasz pokój w hotelu Petroșani wydawał się bezwonny, jednak po ułożeniu się w pościeli wszędzie rozchodzić się począł smród dymu papierosowego. Podobne zjawisko zaobserwoaliśmy w hotelu w Timișoarze.</p>
<p>Przed papierosami trudno się ukryć. Na stacjach kolejowych są wszechobecne, w pociągach nie wolno i nikt jawnie nie pali, ale skądś wciąż wydobywa się uporczywy smród tytoniu. W restauracjach siadać należy na zewnątrz, z brzegu, na nawietrznej. Pepierosy są w menu na końcu, za winami.</p>
<h2 id="ambicja">Ambicja</h2>
<iframe src="https://www.google.com/maps/d/embed?mid=1x-_ylpUvyjccJV2nO03oMcU7zc8&ehbc=2E312F" width="640" height="480"></iframe>
<p>Na żółto odcinek, który szliśmy zgodnie z planem. Na czerwono część planu, której nie udało nam sie zrealizować. Na niebiesko to, co przeszliśmy w zamian.</p>
<h2 id="remont">Remont</h2>
<p>Stare miasto jest kompletnie rozkopane. Poszukując księgarni mieszczącej się obok apteki przedostawać się musimy chwiejnymi kładkami, przemykać krawędziami głębokich wykopów. Ulice przynajmniej są remontowane, nie da się tego powiedzieć o większości kamienic. Budynki są urocze, lecz w dużej mierze zdewastowane, nie odnawiane i nie wiadomo, ile jeszcze postoją. W miejscach, gdzie ruina posunęła się zbyt daleko, wyrosły ohydne barakobiurowce z plastiku i szkła, mieszczące oddziały banków. Gdzieniegdzie między dziewiętnastowieczne domy wcisnęły się komunistyczne bloki. Brak ładu i składu, charakterystyczny dla gwałtownie rozwijającego się wolnego rynku. Oby Rumuni dorobili się na tyle, żeby dbałość o ład przestrzenny i estetykę miasta stały się bardziej palącymi problemami.</p>
<p>W konkursie piękności Timișoara wystawia secesyjną kamienicę zaś Craiova park Nicolae Romanescu. Uwielbiam naturę, ale gdybym ja był w jury, mój głos przypadłby Timișoarze.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/Le702f">Romania 2014</a></p>
]]></content:encoded></item><item><title>The Loin of Patience</title><link>https://blog.mmakowski.com/cooking/the-loin-of-patience/</link><pubDate>Thu, 28 Nov 2013 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/the-loin-of-patience/</guid><description>When I was younger I could not understand the social imperative to treat people older than oneself – in particular the elderly – with esteem. In what way does having lived through a number of decades entitle one to more respect than is shown to a similarly worthy youth? With time I started to appreciate the worth of experience and accept that there are qualities that come with age. One such quality that is stereotypically associated with the elderly and denied the young is patience.</description><content:encoded><![CDATA[<p>When I was younger I could not understand the social imperative to treat people older than oneself – in particular the elderly – with esteem. In what way does having lived through a number of decades entitle one to more respect than is shown to a similarly worthy youth? With time I started to appreciate the worth of experience and accept that there are qualities that come with age. One such quality that is stereotypically associated with the elderly and denied the young is patience. I might not be particularly young, but I am impatient, and it shows in the way I cook. I take all manners of shortcuts to get to the final result quicker: cook many things together – they will all get mixed up when we eat them after all – replace time-consuming steps with ones that I imagine might yield approximately similar results, marinate meat for one hour instead of overnight, and so on. There is no denying I am a product of consumptionist society that emphasises instant reward. That said, in my book impatience is a fault, and concern with self-development means attempts to to addres one’s shortcomings. To deal with this one it seems fitting to turn towards the older generation. My mother-in-law, in particular.</p>
<p>Stereotypes again. Mothers-in-law are portrayed as monsters who invade upon the couple, imposing their views of how things should work in the relationship and the household, occasionally feeding their hapless children-in-law inedible fare that has to be eaten and praised, or else. Well, I’m lucky that Ania’s mum is a complete opposite of this stereotype. Among other virtues she is an excellent cook, and roast pork loin is her staple dish. Usually a simple, marinated meat roast in a bag to ensure it does not dry out, but occasionally a true masterpiece: pork loin stuffed with pork fillet stuffed with prunes stuffed with garlic. Making this will be an excellent exercise in patience, as there are certain steps which cannot be accellerated without the use of devices that are hard to come by in a home kitchen.</p>
<p>Having bought a large, 2 kg lump of <strong>pork loin</strong>, ideally tied with a twine, one <strong>pork fillet</strong>, a bag of <strong>prunes</strong>, a <strong>garlic bulb</strong> and some <strong>marjoram</strong>, we set to work. First, press half of the garlic and mix with salt and marjoram, and with a paste thus produced rub the loin thoroughly, then put it in the fridge.</p>
<p><img src="https://farm4.staticflickr.com/3799/10545105005_508f995fec.jpg" alt="the loin and frozen fillet"></p>
<p>Take a thin, sharp, pointed knife and make a hole inside the fillet. Peel the remaining garlic, stick the cloves in prunes and proceed to stuff the fillet with the prunes. Then season the fillet with some cracked black pepper.</p>
<p>The next step will be to put the fillet inside the loin, and here comes a neat trick: the only way to do it without cutting the loin open, and thus destroying the visual effect and negatively impacting the texture, is stiffening up the fillet by freezing it. That takes time, and that’s where our patience will be put to the test. As a bonus, all the time we have to wait for the fillet to freeze thoroughly the loin will be marinating in the garlic, marjoram and salt mixture, which will ensure the meat will acquire the necessary flavour. If not for the need to freeze the fillet I would put the loin in the oven immediately!</p>
<p>The absolute minimum time for freezing is six hours. Ideally the loin and fillet should be left overnight, but let us not overstretch our patience on this very first attempt. Once the fillet is frozen, take it out of the freezer, take out the loin and with a large, sharp knife cleave in it an opening with enough aperture to accommodate the fillet, then stick it in. Even with a frozen fillet and large hole it is no mean feat. If we get stuck with part of the fillet sticking out and no way to push it further in, cut the fillet at the base of loin and stick the cut off part from the other end. Whatever it takes, make sure all of the fillet is hidden inside the loin. Twine ties come really handy here, without them the loin can burst into pieces, ruining the intricate design.</p>
<p>Put the result of the operation in a roasting dish, cover and roast at 180C for between an hour and a half to two hours. Serve hot or cold, cut into thin slices that expose the four layers of this unusual roast.</p>
<p><img src="https://farm6.staticflickr.com/5497/10545174276_505a58bbc1.jpg" alt="a cut through the four layers"></p>
]]></content:encoded></item><item><title>Haskell Exchange 2013</title><link>https://blog.mmakowski.com/technology/haskell-exchange-2013/</link><pubDate>Wed, 09 Oct 2013 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/haskell-exchange-2013/</guid><description>The second edition of Haskell Exchange has seen over 70 enthusiasts – primarily from London area, but Hungarian and German contingents were noticeable as well – gathered in a crypt of a church in Clerkenwell. The schedule was intense, so unlike with the events I related in the past I won’t attempt to describe all of the talks in detail, but will just focus on the ones which I found particularly intriguing – i.</description><content:encoded><![CDATA[<p>The second edition of Haskell Exchange has seen over 70 enthusiasts – primarily from London area, but Hungarian and German contingents were noticeable as well – gathered in a crypt of a church in Clerkenwell. The schedule was intense, so unlike with the events I related in the past I won’t attempt to describe all of the talks in detail, but will just focus on the ones which I found particularly intriguing – i.e. ones that had included neat tricks and had been scheduled early enough for my attention not to wander in unexpected directions.</p>
<h2 id="lenses">Lenses</h2>
<p><strong>Simon Peyton Jones</strong> usually speaks about his work on new developments in GHC. This time round he decided it’ll be more fun to speak about something he has had little involvement with and picked the <code>lens</code> library by Edward Kmett. Over the last year or so the library has been gaining popularity as a generic solution for manipulating nested data structures. The motivating example was access to a piece of data embedded in nested records, which is not well supported by Haskell, as can be seen in <code>setPostcode</code> function below:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Person</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">P</span> { name <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span>
</span></span><span style="display:flex;"><span>                , addr <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Address</span>
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Address</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">A</span> { street <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span>
</span></span><span style="display:flex;"><span>                 , city <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span>
</span></span><span style="display:flex;"><span>                 , postcode <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span>
</span></span><span style="display:flex;"><span>                 }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">setPostcode</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Person</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Person</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">setPostcode</span> pc p <span style="color:#000;font-weight:bold">=</span> p { addr <span style="color:#000;font-weight:bold">=</span> addr p { postcode <span style="color:#000;font-weight:bold">=</span> pc }}
</span></span></code></pre></div><p>Lenses address this by providing <code>view</code> (i.e. get), <code>set</code> and <code>over</code> (i.e. update) functions corresponding to fields of the structure. The first impressive insight is that they can be represented as a single function parameterised over a functor:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#458;font-weight:bold">Lens</span> s a <span style="color:#000;font-weight:bold">=</span> forall f<span style="color:#000;font-weight:bold">.</span> <span style="color:#458;font-weight:bold">Functor</span> f <span style="color:#000;font-weight:bold">=&gt;</span> (a <span style="color:#000;font-weight:bold">-&gt;</span> f a) <span style="color:#000;font-weight:bold">-&gt;</span> s <span style="color:#000;font-weight:bold">-&gt;</span> f s
</span></span></code></pre></div><p>With the help of two functors, <code>Identity</code> and <code>Const</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">newtype</span> <span style="color:#458;font-weight:bold">Identity</span> a <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Identity</span> a
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">Functor</span> <span style="color:#458;font-weight:bold">Identity</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  fmap f (<span style="color:#458;font-weight:bold">Identity</span> x) <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Identity</span> (f x)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">newtype</span> <span style="color:#458;font-weight:bold">Const</span> v a <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Const</span> v
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">Functor</span> (<span style="color:#458;font-weight:bold">Const</span> v) <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  fmap f (<span style="color:#458;font-weight:bold">Const</span> x) <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Const</span> x
</span></span></code></pre></div><p>we can define:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">runIdentity</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Identity</span> s <span style="color:#000;font-weight:bold">-&gt;</span> s
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">runIdentity</span> (<span style="color:#458;font-weight:bold">Indentity</span> x) <span style="color:#000;font-weight:bold">=</span> x
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">getConst</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Const</span> v a <span style="color:#000;font-weight:bold">-&gt;</span> v
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">getConst</span> (<span style="color:#458;font-weight:bold">Const</span> x) <span style="color:#000;font-weight:bold">=</span> x
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">view</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Lens</span> s a <span style="color:#000;font-weight:bold">-&gt;</span> (s <span style="color:#000;font-weight:bold">-&gt;</span> a)
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">view</span> ln s <span style="color:#000;font-weight:bold">=</span> getConst (ln <span style="color:#458;font-weight:bold">Const</span> s)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">set</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Lens</span> s a <span style="color:#000;font-weight:bold">-&gt;</span> (a <span style="color:#000;font-weight:bold">-&gt;</span> s <span style="color:#000;font-weight:bold">-&gt;</span> s)
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">set</span> ln x <span style="color:#000;font-weight:bold">=</span> runIdentity <span style="color:#000;font-weight:bold">.</span> ln (<span style="color:#458;font-weight:bold">Identity</span> <span style="color:#000;font-weight:bold">.</span> const x)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">over</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Lens</span> s a <span style="color:#000;font-weight:bold">-&gt;</span> ((a <span style="color:#000;font-weight:bold">-&gt;</span> a) <span style="color:#000;font-weight:bold">-&gt;</span> s <span style="color:#000;font-weight:bold">-&gt;</span> s)
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">over</span> ln f <span style="color:#000;font-weight:bold">=</span> runIdentity <span style="color:#000;font-weight:bold">.</span> ln (<span style="color:#458;font-weight:bold">Identity</span> <span style="color:#000;font-weight:bold">.</span> f)
</span></span></code></pre></div><p>The advantage of this representation is that lens composition – e.g. combining the lens for an element of an inner structure with the lens for an element of the outer structure – is just function composition. It also sets the stage for another deep insight: if instead of a <em>Functor</em> we require an <em>Applicative</em>, we’ll get a multi-focus lens, i.e. a lens that can point to a number of elements at once. Magic.</p>
<p>Usefulness of lenses is not restricted to operating on nested records. Map lookup and update can be expressed as a lens, Edward’s library also provides lenses that e.g. allow access to individual bits of a piece of data.</p>
<p>In the talk Simon demonstrated that he can be just as enthusiastic about someone else’s work as he is about his own. While he did indicate that some of the aspects of the library seem obscure to him (“I wouldn’t write it point-free”, “I have no idea what this Prefunctor thing is!”), it was all good natured and highlighted an interesting difference between Haskell and Scala language stewardship: while Simon seemed genuinely thrilled that users of Haskell push the boundaries and use language features in previously unexpected ways, members of Typesafe team distance themselves from the FP part of the community and Martin Odersky <a href="https://twitter.com/odersky/status/382631339188428800">explicitly declared</a> his lack of interest in improving the experience of FP library writers.</p>
<h2 id="uniplate">Uniplate</h2>
<p><strong>Neil Mitchell</strong> explained how HLint benefits from the use of a generics library. HLint processes Haskell source code and provides hints on how to improve it by removing redundant bits, migrating off deprecated features and making it more idiomatic. As such, the tool relies on traversing AST of the Haskell module being analysed (the AST is provided by functions in <code>haskell-src-exts</code> package) and while doing so applying a set of rules. Given that in the AST <code>Decl</code> has 27, <code>Exp</code> has 45 and <code>Pat</code> has 23 constructors writing each rule for each of these cases would require lots of boilerplate code.</p>
<p>This is where generics libraries come into the picture. Their purpose is to abstract away the traversal code so that the logic can be stated in terms of the usual pattern and exceptions from that pattern. Uniplate is one such library. It provides four functions that operate on instances of <code>Uniplate</code> type class:</p>
<table>
<thead>
<tr>
<th>\</th>
<th>Query</th>
<th>Transform</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Deep</strong></td>
<td>universe</td>
<td>transform</td>
</tr>
<tr>
<td><strong>Shallow</strong></td>
<td>children</td>
<td>descend</td>
</tr>
</tbody>
</table>
<p>The use of these is prehaps best illustrated by examples from HLint:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">transform</span> <span style="color:#000;font-weight:bold">::</span> (on <span style="color:#000;font-weight:bold">-&gt;</span> on) <span style="color:#000;font-weight:bold">-&gt;</span> on <span style="color:#000;font-weight:bold">-&gt;</span> on
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">-- eliminate redundant parentheses</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">lessParen</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Exp</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Exp</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">lessParen</span> <span style="color:#000;font-weight:bold">=</span> transform f
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">where</span> f (<span style="color:#458;font-weight:bold">Paren</span> (<span style="color:#458;font-weight:bold">Paren</span> x)) <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Paren</span> x
</span></span><span style="display:flex;"><span>        f (<span style="color:#458;font-weight:bold">Paren</span> (<span style="color:#458;font-weight:bold">List</span> x))  <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">List</span> x
</span></span><span style="display:flex;"><span>        f x                 <span style="color:#000;font-weight:bold">=</span> x
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">universe</span> <span style="color:#000;font-weight:bold">::</span> on <span style="color:#000;font-weight:bold">-&gt;</span> [on]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">-- determine if a language extension is used</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">redundantExtension</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Module</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Bool</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">redundantExtension</span> m <span style="color:#000;font-weight:bold">=</span>
</span></span><span style="display:flex;"><span>  viewPats <span style="color:#000;font-weight:bold">==</span> <span style="color:#099">0</span> <span style="color:#000;font-weight:bold">&amp;&amp;</span> <span style="color:#d14">&#34;ViewPatterns&#34;</span> `elem` exts
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>    viewPats <span style="color:#000;font-weight:bold">=</span> length[<span style="color:#0086b3">()</span> <span style="color:#000;font-weight:bold">|</span> <span style="color:#458;font-weight:bold">PViewPat</span> {} <span style="color:#000;font-weight:bold">&lt;-</span> universeBi m]
</span></span><span style="display:flex;"><span>    exts <span style="color:#000;font-weight:bold">=</span> [prettyPrint x <span style="color:#000;font-weight:bold">|</span> <span style="color:#458;font-weight:bold">LanguagePragma</span> <span style="color:#000;font-weight:bold">_</span> xs <span style="color:#000;font-weight:bold">&lt;-</span> universeBi m, x <span style="color:#000;font-weight:bold">&lt;-</span> xs]
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">descend</span> <span style="color:#000;font-weight:bold">::</span> (on <span style="color:#000;font-weight:bold">-&gt;</span> on) <span style="color:#000;font-weight:bold">-&gt;</span> on <span style="color:#000;font-weight:bold">-&gt;</span> on
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">-- eliminate conditionals with constant condition</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">eval</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Exp</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Exp</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">eval</span> x <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">case</span> x <span style="color:#000;font-weight:bold">of</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Lambda</span>{} <span style="color:#000;font-weight:bold">-&gt;</span> x
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">If</span> c t f <span style="color:#000;font-weight:bold">|</span> prettyPrint c <span style="color:#000;font-weight:bold">==</span> <span style="color:#d14">&#34;True&#34;</span> <span style="color:#000;font-weight:bold">-&gt;</span> eval t
</span></span><span style="display:flex;"><span>           <span style="color:#000;font-weight:bold">|</span> prettyPrint c <span style="color:#000;font-weight:bold">==</span> <span style="color:#d14">&#34;False&#34;</span> <span style="color:#000;font-weight:bold">-&gt;</span> eval f
</span></span><span style="display:flex;"><span>  x <span style="color:#000;font-weight:bold">-&gt;</span> descend eval x
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">children</span> <span style="color:#000;font-weight:bold">::</span> on <span style="color:#000;font-weight:bold">-&gt;</span> [on]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">-- find the names of all free variables</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">freeVars</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Exp</span> <span style="color:#000;font-weight:bold">-&gt;</span> [<span style="color:#458;font-weight:bold">String</span>]
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">freeVars</span> (<span style="color:#458;font-weight:bold">Var</span> x) <span style="color:#000;font-weight:bold">=</span> [prettyPrint x]
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">freeVars</span> (<span style="color:#458;font-weight:bold">Lambda</span> <span style="color:#000;font-weight:bold">_</span> x bod) <span style="color:#000;font-weight:bold">=</span> freeVars bod <span style="color:#000;font-weight:bold">\\</span> boundVars x
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">freeVars</span> x <span style="color:#000;font-weight:bold">=</span> nub <span style="color:#000;font-weight:bold">$</span> concatMap freeVars <span style="color:#000;font-weight:bold">$</span> children x
</span></span></code></pre></div><p>How are these functions implemented? <code>universe</code> and <code>transform</code> can be implemented in terms of the shallow primitives that give more control:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">universe</span> x <span style="color:#000;font-weight:bold">=</span> x <span style="color:#458;font-weight:bold">:</span> concatMap universe (children x)
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">transform</span> f <span style="color:#000;font-weight:bold">=</span> f <span style="color:#000;font-weight:bold">.</span> descend (transform f)
</span></span></code></pre></div><p><code>children</code> and <code>descend</code> rely on an instance of <code>Uniplate</code> type class for the type they are to operate on – <code>Exp</code> in the case of the examples above:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">class</span> <span style="color:#458;font-weight:bold">Uniplate</span> on <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  uniplate <span style="color:#000;font-weight:bold">::</span> on <span style="color:#000;font-weight:bold">-&gt;</span> ([on],       <span style="color:#998;font-style:italic">-- children</span>
</span></span><span style="display:flex;"><span>                     [on] <span style="color:#000;font-weight:bold">-&gt;</span> on) <span style="color:#998;font-style:italic">-- a fn that puts the children together back into the parent</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">Uniplate</span> <span style="color:#458;font-weight:bold">Exp</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  uniplate (<span style="color:#458;font-weight:bold">App</span> x y) <span style="color:#000;font-weight:bold">-</span> ([x,y], <span style="color:#900;font-weight:bold">\</span>[x,y] <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">App</span> x y)
</span></span><span style="display:flex;"><span>  <span style="color:#998;font-style:italic">-- and so on for all other type constructors</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">children</span> <span style="color:#000;font-weight:bold">=</span> fst <span style="color:#000;font-weight:bold">.</span> uniplate
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">descend</span> f x <span style="color:#000;font-weight:bold">=</span> gen <span style="color:#000;font-weight:bold">$</span> map f cs
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">where</span> (cs, gen) <span style="color:#000;font-weight:bold">=</span> uniplate x
</span></span></code></pre></div><p>This means all constructors need to be handled just in a single place, when the type class instace is defined, and from then on generic type traversal functions can be used. While there is a number of other generic programming solutions out there, notably <code>GHC.Generics</code> and <code>Data.Data</code>, Uniplate is simple, concise and performant.</p>
<h2 id="free-monads">Free Monads</h2>
<p>According to <strong>Andres Löh</strong>, everything is an EDSL. Even though some things don’t look like this on the first sight, they usually greatly benefit from language-like treatment, so over time we have seen DSLs taking over domains such as parsing, GPU computations and music. When developing an EDSL it is preferable to embed it deeply, i.e. be able to treat the program as data in the host language, so that it can be inspected, transformed and interpreted in various ways. Andres illustrated an evolution of a very simple, imperative language, from a shallow embedding to a deep embedding and the abstract constructs that could be extracted from that exercise. I am going to repeat all the steps of this derivation as it is very educational.</p>
<p>If our language provided just two constructs, <code>say</code> and <code>ask</code>, we could write a program in it like this:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>  say <span style="color:#d14">&#34;What&#39;s your name?&#34;</span>
</span></span><span style="display:flex;"><span>  name <span style="color:#000;font-weight:bold">&lt;-</span> ask
</span></span><span style="display:flex;"><span>  say (<span style="color:#d14">&#34;Hello &#34;</span> <span style="color:#000;font-weight:bold">++</span> name)
</span></span></code></pre></div><p>and implement it, via shallow embedding, like this:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">say</span> <span style="color:#000;font-weight:bold">=</span> putStrLn
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">ask</span> <span style="color:#000;font-weight:bold">=</span> getLine
</span></span></code></pre></div><p>This works, but does not bring the benefits associated with deep embedding. To realise them we have to model our language as a data type and execute the code above in a custom monad:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Interaction</span> a
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">Monad</span> <span style="color:#458;font-weight:bold">Interaction</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">say</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">ask</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Interaction</span> <span style="color:#458;font-weight:bold">String</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Interaction</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Say</span>    <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Ask</span>    <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Interaction</span> <span style="color:#458;font-weight:bold">String</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Return</span> <span style="color:#000;font-weight:bold">::</span> a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> a
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Bind</span>   <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Interaction</span> a <span style="color:#000;font-weight:bold">-&gt;</span> (a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> b) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> b
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">Monad</span> <span style="color:#458;font-weight:bold">Interaction</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  return <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Return</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#000;font-weight:bold">&gt;&gt;=</span>) <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Bind</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">run</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Interaction</span> a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">IO</span> a
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">run</span> (<span style="color:#458;font-weight:bold">Say</span> s)    <span style="color:#000;font-weight:bold">=</span> putStrLn s
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">run</span> <span style="color:#458;font-weight:bold">Ask</span>        <span style="color:#000;font-weight:bold">=</span> getLine
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">run</span> (<span style="color:#458;font-weight:bold">Return</span> x) <span style="color:#000;font-weight:bold">=</span> return x
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">run</span> (<span style="color:#458;font-weight:bold">Bind</span> i f) <span style="color:#000;font-weight:bold">=</span> (run i) <span style="color:#000;font-weight:bold">&gt;&gt;=</span> (run <span style="color:#000;font-weight:bold">.</span> f)
</span></span></code></pre></div><p>This is going to work, but sadly, <code>Interaction</code> is not really a monad, as it does not abide by the monad laws. Since <code>return</code> and <code>&gt;&gt;=</code> just wrap the arguments in further layers of constructors, e.g. left associatvity law (<code>return x &gt;&gt;= f</code> must equal <code>f x</code>) is violated: <code>Bind (Return x) f</code> is not the same as <code>f x</code>. One could argue that as long as the interpretation functions preserve this property we are good, but it is a tricky argument to make and it’s much preferable to guarantee good behaviour by construction.</p>
<p>To achieve this we can first observe that by the monad laws every monadic computation has a normal form which consists of a sequence of atomic operations followed by a single <code>return</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>  x1 <span style="color:#000;font-weight:bold">&lt;-</span> step1
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">..</span>
</span></span><span style="display:flex;"><span>  xn <span style="color:#000;font-weight:bold">&lt;-</span> stepn
</span></span><span style="display:flex;"><span>  return something
</span></span></code></pre></div><p>so a way to guarantee conformance of our monad to the laws would be to construct it so that it represents such a normalised computation. Our language consists of two atomic operations, <code>Say</code> and <code>Ask</code>, so all we need to do is guarantee that <code>Bind</code> can only operate on one of these two. To guarantee that, let’s replace it with its partial applications to the two atomic commands:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">say&#39;</span> msg <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Bind</span> (<span style="color:#458;font-weight:bold">Say</span> msg)
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">ask&#39;</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Bind</span> <span style="color:#458;font-weight:bold">Ask</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Interaction</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Return</span> <span style="color:#000;font-weight:bold">::</span> a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> a
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Say&#39;</span>   <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">-&gt;</span> (<span style="color:#0086b3">()</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> b) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> b
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Ask&#39;</span>   <span style="color:#000;font-weight:bold">::</span> (<span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> b) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> b
</span></span></code></pre></div><p>This is still an instance of a monad:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">Monad</span> <span style="color:#458;font-weight:bold">Interaction</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  return <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Return</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Return</span> x   <span style="color:#000;font-weight:bold">&gt;&gt;=</span> f <span style="color:#000;font-weight:bold">=</span> f x
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Say&#39;</span> msg k <span style="color:#000;font-weight:bold">&gt;&gt;=</span> f <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Say&#39;</span> msg ((<span style="color:#000;font-weight:bold">&gt;&gt;=</span> f) <span style="color:#000;font-weight:bold">.</span> k)
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Ask&#39;</span> k     <span style="color:#000;font-weight:bold">&gt;&gt;=</span> f <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Ask&#39;</span> ((<span style="color:#000;font-weight:bold">&gt;&gt;=</span> f) <span style="color:#000;font-weight:bold">.</span> k)
</span></span></code></pre></div><p>Furthermore, it now fulfills the laws, and the interpreter is still straightforward:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">run</span> (<span style="color:#458;font-weight:bold">Return</span> x) <span style="color:#000;font-weight:bold">=</span> return x
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">run</span> (<span style="color:#458;font-weight:bold">Say&#39;</span> msg k) <span style="color:#000;font-weight:bold">=</span> putStrLn msg <span style="color:#000;font-weight:bold">&gt;&gt;=</span> run <span style="color:#000;font-weight:bold">.</span> k
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">run</span> (<span style="color:#458;font-weight:bold">Ask&#39;</span> k) <span style="color:#000;font-weight:bold">=</span> readLn <span style="color:#000;font-weight:bold">&gt;&gt;=</span> run <span style="color:#000;font-weight:bold">.</span> k
</span></span></code></pre></div><p>With this sorted out we can now think about how to extract the underlying pattern into something reusable. A good place to start would be splitting the construct into two parts: the generic monad that describes normal form and the set of concrete atomic operations, <code>InteractionOp</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Interaction</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Return</span> <span style="color:#000;font-weight:bold">::</span> a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> a
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Wrap</span>   <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">InteractionOp</span> a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> a
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">InteractionOp</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Say&#39;</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">-&gt;</span> (<span style="color:#0086b3">()</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> b) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">InteractionOp</span> b
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Ask&#39;</span> <span style="color:#000;font-weight:bold">::</span> (<span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Interaction</span> b) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">InteractionOp</span> b
</span></span></code></pre></div><p>The type variable <code>b</code> is only used as the argument to <code>Interaction</code>, so without any loss of generality <code>Interaction b</code> can be replaced by a single variable <code>r</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">InteractionOp</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Say&#39;</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">-&gt;</span> (<span style="color:#0086b3">()</span> <span style="color:#000;font-weight:bold">-&gt;</span> r) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">InteractionOp</span> r
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Ask&#39;</span> <span style="color:#000;font-weight:bold">::</span> (<span style="color:#458;font-weight:bold">String</span> <span style="color:#000;font-weight:bold">-&gt;</span> r) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">InteractionOp</span> r
</span></span></code></pre></div><p>Finally, we break <code>Interaction</code> free from <code>InteractionOp</code> by parameterising it by the data type it will operate on, at the same time renaming it to <code>Free</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Free</span> <span style="color:#000;font-weight:bold">::</span> (<span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">*</span>) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Return</span> <span style="color:#000;font-weight:bold">::</span> a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Free</span> f a
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Wrap</span>   <span style="color:#000;font-weight:bold">::</span> f (<span style="color:#458;font-weight:bold">Free</span> f a) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Free</span> f a
</span></span></code></pre></div><p>When is <code>Free</code> a monad? Definitely, whenever <code>f</code> is a functor:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">Functor</span> f <span style="color:#000;font-weight:bold">=&gt;</span> <span style="color:#458;font-weight:bold">Monad</span> (<span style="color:#458;font-weight:bold">Free</span> f) <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  return <span style="color:#000;font-weight:bold">::</span> a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Free</span> f a
</span></span><span style="display:flex;"><span>  return <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Return</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  (<span style="color:#000;font-weight:bold">&gt;&gt;=</span>) <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Free</span> f a <span style="color:#000;font-weight:bold">-&gt;</span> (a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Free</span> f b) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Free</span> f b
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Return</span> x <span style="color:#000;font-weight:bold">&gt;&gt;=</span> f <span style="color:#000;font-weight:bold">=</span> f x
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Wrap</span> c   <span style="color:#000;font-weight:bold">&gt;&gt;=</span> f <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Wrap</span> (fmap (<span style="color:#000;font-weight:bold">&gt;&gt;=</span> f) c)
</span></span></code></pre></div><p>What remains to be shown is that <code>InteractionOp</code> is a functor, which is left as an exercise for the reader.</p>
<p>What have we achieved here? Given a functor we get a monad for free! It turns out that many well known monads, such as <em>Identity</em> and <em>Maybe</em>, are isomorphic to a free monad. But primarily, we’ve defined a flexible scheme for writing deeply embedded EDSLs. The power of this construct can be witnessed in this example of a custom scheduler for a simple concurrent process language:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">ProcessF</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Atomically</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">IO</span> a <span style="color:#000;font-weight:bold">-&gt;</span> (a <span style="color:#000;font-weight:bold">-&gt;</span> r) <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">ProcessF</span> r
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Fork</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Process</span> <span style="color:#0086b3">()</span> <span style="color:#000;font-weight:bold">-&gt;</span> r <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">ProcessF</span> r
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#458;font-weight:bold">Process</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Free</span> <span style="color:#458;font-weight:bold">ProcessF</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">atomically</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">IO</span> a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Process</span> a
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">atomically</span> m <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Wrap</span> (<span style="color:#458;font-weight:bold">Atomically</span> m <span style="color:#458;font-weight:bold">Return</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">fork</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Process</span> <span style="color:#0086b3">()</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Process</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">fork</span> p <span style="color:#000;font-weight:bold">-</span> <span style="color:#458;font-weight:bold">Wrap</span> (<span style="color:#458;font-weight:bold">Fork</span> p (<span style="color:#458;font-weight:bold">Return</span> <span style="color:#0086b3">()</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">-- we can define the scheduling however we want!</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">schedule</span> <span style="color:#000;font-weight:bold">::</span> [<span style="color:#458;font-weight:bold">Process</span> <span style="color:#0086b3">()</span>] <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">IO</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">schedule</span> <span style="color:#458;font-weight:bold">[]</span>                         <span style="color:#000;font-weight:bold">=</span> return <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">schedule</span> (<span style="color:#458;font-weight:bold">Return</span> <span style="color:#000;font-weight:bold">_</span> <span style="color:#458;font-weight:bold">:</span> ps)            <span style="color:#000;font-weight:bold">=</span> schedule ps
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">schedule</span> (<span style="color:#458;font-weight:bold">Wrap</span> (<span style="color:#458;font-weight:bold">Atomically</span> m k)<span style="color:#458;font-weight:bold">:</span>ps) <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>                                        x <span style="color:#000;font-weight:bold">&lt;-</span> m
</span></span><span style="display:flex;"><span>                                        schedule (ps <span style="color:#000;font-weight:bold">++</span> [k x])
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">schedule</span> (<span style="color:#458;font-weight:bold">Wrap</span> (<span style="color:#458;font-weight:bold">Fork</span> p1 p2) <span style="color:#458;font-weight:bold">:</span> ps)   <span style="color:#000;font-weight:bold">=</span> schedule (ps <span style="color:#000;font-weight:bold">++</span> [p2, p1])
</span></span></code></pre></div><p>I recommend as an exercise implementing a simple program that uses <code>atomically</code> and <code>fork</code>, run it through <code>schedule</code> and see what comes out; then experimenting with other implementations of <code>schedule</code>.</p>
<h2 id="other-talks">Other Talks</h2>
<p>EDSLs were definitely a big theme of the day, with <strong>Gracjan Polak</strong> and <strong>Bas van Dijk</strong> describing how they naturally evolved in the course of hacking at the start-ups they are involved in (Scrive and Erudify, respectively). <strong>Simon Marlow</strong> related how Haskell’s support for abstracting the execution details makes writing spam detection rules easier at another “small Haskell startup” (Facebook). <strong>Adam Bergmark</strong> talked about JavaScript related woes of web startup life and how Fay, a Haskell to JavaScript compiler, addresses them. Finally, in a park bench discussion, the panelists broadely agreed that hiring Haskell developers is easy and the quality of candidates is excellent. There was a disagreement though on laziness vs. strictness and on whether the programmers need to be aware of the evaluation strategy.</p>
]]></content:encoded></item><item><title>Scala Futures on a Single Thread</title><link>https://blog.mmakowski.com/technology/scala-futures-on-a-single-thread/</link><pubDate>Sat, 05 Oct 2013 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/scala-futures-on-a-single-thread/</guid><description>Futures, introduced into Scala standard library in version 2.10, quickly became one of the cornerstones of Scala concurrency. Their main selling point is the ease of composition. A standard example of that involves asynchronous calls to a number of remote services and computation of the answer once all of the responses are collected:
def price(itemId: Id): Future[Price] = ??? def availability(itemId: Id): Future[Int] = ??? def orderQuote(itemId: Id, quantityRequired: Int): Future[Option[Price]] = for { unitPrice &amp;lt;- price(itemId) quantityAvailable &amp;lt;- availability(itemId) } yield if (quantityAvailable &amp;gt;= quantityRequired) Some(quantityRequired * unitPrice) else None Here price and availability are service calls that can potentially take long time and are meant to be executed in parallel.</description><content:encoded><![CDATA[<p><a href="http://docs.scala-lang.org/sips/pending/futures-promises.html">Futures</a>, introduced into Scala standard library in version 2.10, quickly became one of the cornerstones of Scala concurrency. Their main selling point is the ease of composition. A standard example of that involves asynchronous calls to a number of remote services and computation of the answer once all of the responses are collected:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> price<span style="color:#000;font-weight:bold">(</span>itemId<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Id</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Future</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Price</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">???</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> availability<span style="color:#000;font-weight:bold">(</span>itemId<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Id</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Future</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">???</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> orderQuote<span style="color:#000;font-weight:bold">(</span>itemId<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Id</span><span style="color:#000;font-weight:bold">,</span> quantityRequired<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Future</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Option</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Price</span><span style="color:#000;font-weight:bold">]]</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">for</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  unitPrice         <span style="color:#000;font-weight:bold">&lt;-</span> price<span style="color:#000;font-weight:bold">(</span>itemId<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>  quantityAvailable <span style="color:#000;font-weight:bold">&lt;-</span> availability<span style="color:#000;font-weight:bold">(</span>itemId<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span> <span style="color:#000;font-weight:bold">yield</span> <span style="color:#000;font-weight:bold">if</span> <span style="color:#000;font-weight:bold">(</span>quantityAvailable <span style="color:#000;font-weight:bold">&gt;=</span> quantityRequired<span style="color:#000;font-weight:bold">)</span> <span style="color:#458;font-weight:bold">Some</span><span style="color:#000;font-weight:bold">(</span>quantityRequired <span style="color:#000;font-weight:bold">*</span> unitPrice<span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">else</span> <span style="color:#458;font-weight:bold">None</span>
</span></span></code></pre></div><p>Here <code>price</code> and <code>availability</code> are service calls that can potentially take long time and are meant to be executed in parallel.</p>
<p>However, the usefulness of futures is not restricted to the concurrent setting. They also provide a nice pattern for suspending execution of a sequential algorithm until a certain condition is met. There is nothing inherently concurrent about <code>Future</code> implementation either – the runtime behaviour depends on the instance of <a href="http://www.scala-lang.org/api/current/index.html#scala.concurrent.ExecutionContext"><code>ExecutionContext</code></a> provided to functions that can spawn new computations.</p>
<p>The example below illustrates how futures and promises facilitate suspension of effects until the required condition – the availability of price in this case – is met.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">java.util.concurrent.Executor</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scala.collection.mutable</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scala.concurrent._</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">scala.util.</span><span style="color:#000;font-weight:bold">{</span><span style="color:#458;font-weight:bold">Success</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#458;font-weight:bold">Failure</span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">// thanks to being implicit this execution context will be used by all Future methods that
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">// can spawn new Futures, making all spawned computations synchronous
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span><span style="color:#000;font-weight:bold">implicit</span> <span style="color:#000;font-weight:bold">val</span> synchronousExecutionContext <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">ExecutionContext</span><span style="color:#000;font-weight:bold">.</span>fromExecutor<span style="color:#000;font-weight:bold">(</span><span style="color:#000;font-weight:bold">new</span> <span style="color:#458;font-weight:bold">Executor</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> execute<span style="color:#000;font-weight:bold">(</span>task<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Runnable</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">=</span> task<span style="color:#000;font-weight:bold">.</span>run<span style="color:#000;font-weight:bold">()</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">})</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">PriceService</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">val</span> prices <span style="color:#000;font-weight:bold">=</span> mutable<span style="color:#000;font-weight:bold">.</span><span style="color:#458;font-weight:bold">HashMap</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">String</span>, <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">]()</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">val</span> pendingRequests <span style="color:#000;font-weight:bold">=</span> mutable<span style="color:#000;font-weight:bold">.</span><span style="color:#458;font-weight:bold">HashMap</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">String</span>, <span style="color:#458;font-weight:bold">Set</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Promise</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">]]]()</span> withDefaultValue <span style="color:#458;font-weight:bold">Set</span><span style="color:#000;font-weight:bold">()</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> setPrice<span style="color:#000;font-weight:bold">(</span>symbol<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">String</span><span style="color:#000;font-weight:bold">,</span> price<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    prices <span style="color:#000;font-weight:bold">+=</span> <span style="color:#000;font-weight:bold">(</span>symbol <span style="color:#000;font-weight:bold">-&gt;</span> price<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;</span><span style="color:#d14">${</span><span style="color:#458;font-weight:bold">Thread</span><span style="color:#000;font-weight:bold">.</span>currentThread<span style="color:#000;font-weight:bold">.</span>getName<span style="color:#d14">}</span><span style="color:#d14">: price received: </span><span style="color:#d14">$symbol</span><span style="color:#d14">: </span><span style="color:#d14">$price</span><span style="color:#d14">&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    pendingRequests<span style="color:#000;font-weight:bold">(</span>symbol<span style="color:#000;font-weight:bold">).</span>foreach<span style="color:#000;font-weight:bold">(</span><span style="color:#000;font-weight:bold">_</span><span style="color:#000;font-weight:bold">.</span>success<span style="color:#000;font-weight:bold">(</span>price<span style="color:#000;font-weight:bold">))</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> price<span style="color:#000;font-weight:bold">(</span>symbol<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">String</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Future</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">=</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">if</span> <span style="color:#000;font-weight:bold">(</span>prices<span style="color:#000;font-weight:bold">.</span>contains<span style="color:#000;font-weight:bold">(</span>symbol<span style="color:#000;font-weight:bold">))</span> <span style="color:#458;font-weight:bold">Future</span><span style="color:#000;font-weight:bold">.</span>successful<span style="color:#000;font-weight:bold">(</span>prices<span style="color:#000;font-weight:bold">(</span>symbol<span style="color:#000;font-weight:bold">))</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">else</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">val</span> request <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Promise</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">]()</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">val</span> updatedRequests <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">if</span> <span style="color:#000;font-weight:bold">(</span>pendingRequests<span style="color:#000;font-weight:bold">.</span>contains<span style="color:#000;font-weight:bold">(</span>symbol<span style="color:#000;font-weight:bold">))</span> pendingRequests<span style="color:#000;font-weight:bold">(</span>symbol<span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">+</span> request
</span></span><span style="display:flex;"><span>                            <span style="color:#000;font-weight:bold">else</span>                                  <span style="color:#458;font-weight:bold">Set</span><span style="color:#000;font-weight:bold">(</span>request<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      pendingRequests <span style="color:#000;font-weight:bold">+=</span> <span style="color:#000;font-weight:bold">(</span>symbol <span style="color:#000;font-weight:bold">-&gt;</span> updatedRequests<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      request<span style="color:#000;font-weight:bold">.</span>future
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> publishValuation<span style="color:#000;font-weight:bold">(</span>symbol<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">String</span><span style="color:#000;font-weight:bold">,</span> quantity<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">PriceService</span><span style="color:#000;font-weight:bold">.</span>price<span style="color:#000;font-weight:bold">(</span>symbol<span style="color:#000;font-weight:bold">).</span>map<span style="color:#000;font-weight:bold">(</span><span style="color:#000;font-weight:bold">_</span> <span style="color:#000;font-weight:bold">*</span> quantity<span style="color:#000;font-weight:bold">).</span>onComplete <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">case</span> <span style="color:#458;font-weight:bold">Success</span><span style="color:#000;font-weight:bold">(</span>value<span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">=&gt;</span> println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;</span><span style="color:#d14">${</span><span style="color:#458;font-weight:bold">Thread</span><span style="color:#000;font-weight:bold">.</span>currentThread<span style="color:#000;font-weight:bold">.</span>getName<span style="color:#d14">}</span><span style="color:#d14">: </span><span style="color:#d14">$quantity</span><span style="color:#d14"> x </span><span style="color:#d14">$symbol</span><span style="color:#d14">: </span><span style="color:#d14">$value</span><span style="color:#d14">)&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">case</span> <span style="color:#458;font-weight:bold">Failure</span><span style="color:#000;font-weight:bold">(</span>e<span style="color:#000;font-weight:bold">)</span>     <span style="color:#000;font-weight:bold">=&gt;</span> println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">s&#34;error: </span><span style="color:#d14">$e</span><span style="color:#d14">&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#458;font-weight:bold">PriceService</span><span style="color:#000;font-weight:bold">.</span>setPrice<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;AAA&#34;</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#099">1013</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>publishValuation<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;AAA&#34;</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#099">20</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>publishValuation<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;BBB&#34;</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#099">30</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#458;font-weight:bold">PriceService</span><span style="color:#000;font-weight:bold">.</span>setPrice<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;BBB&#34;</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#099">221</span><span style="color:#000;font-weight:bold">)</span>
</span></span></code></pre></div><p>This code prints out:</p>
<pre tabindex="0"><code>main: price received: AAA: 1013
main: 20 x AAA: 20260)
main: price received: BBB: 221
main: 30 x BBB: 6630)
</code></pre><p>demonstrating that unfulfilled condition doesn’t block the program even though only a single thread is used – and all that happens without breaking the abstraction boundaries between <code>PriceService</code> and the valuation publishing code.</p>
]]></content:encoded></item><item><title>Duża wyspa, nie Sycylia</title><link>https://blog.mmakowski.com/travel/du%C5%BCa-wyspa-nie-sycylia/</link><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/du%C5%BCa-wyspa-nie-sycylia/</guid><description>Urlop nas zaskoczył, nie spodziewaliśmy się go w końcu sierpnia. W sierpniu jeździ się na urlop jak się ma dzieci, albo jak jest się miłośnikiem Central Line w godzinach szczytu i chce się przenieść doznania sardynki w puszce na plaże Costa Blanca lub do klubów Ibizy. Jakby się jednak chwilę zastanowić, ostatni tydzień sierpnia był nieunikniony, zbiegły się bowiem wówczas termin oddania pracy i koniec kontraktu. Nie zastanawialiśmy się najwidoczniej, bo wyszło tak, że zorientowaliśmy się na dwa tygodnie przed terminem – a dwa tygodnie przed terminem w sierpniu, to jak ostatni moment.</description><content:encoded><![CDATA[<p>Urlop nas zaskoczył, nie spodziewaliśmy się go w końcu sierpnia. W sierpniu jeździ się na urlop jak się ma dzieci, albo jak jest się miłośnikiem Central Line w godzinach szczytu i chce się przenieść doznania sardynki w puszce na plaże Costa Blanca lub do klubów Ibizy. Jakby się jednak chwilę zastanowić, ostatni tydzień sierpnia był nieunikniony, zbiegły się bowiem wówczas termin oddania pracy i koniec kontraktu. Nie zastanawialiśmy się najwidoczniej, bo wyszło tak, że zorientowaliśmy się na dwa tygodnie przed terminem – a dwa tygodnie przed terminem w sierpniu, to jak ostatni moment. I te wymagania! Ma być plaża i kąpiele w morzu. I coś oprócz tego, na przykład góry. I niezbyt tłoczno, bez tłumów turystów, w szczególności angielskich. Nie astronomicznie drogo. No i niezbyt daleko, bo nie chcemy przecież spędzić połowy z wygospodarowanego tygodnia w samolotach i na lotniskach.</p>
<p>Może Śródziemne zatem. Minorka. Tylko gdzie ta Minorka? Spójrzmy na mapę: o, są wyspy. Jest jakaś duża – i nie Sycylia, Sycylia brzmi turystycznie. Sardynia. Niech będzie Sardynia.</p>
<h2 id="morze">Morze</h2>
<p>Cztery pierwsze dni poświęcamy morzu. Jak na śródziemnomorską wyspę przystało, Sardynia dysponuje licznymi plażami. Z racji tłumów unikać należy tych w okolicach miasta Olbia, piaszczysta plaża w Alghero też jest zatłoczona, jednak kawałek na północny zachód, nieopodal miejscowości Fertilia do morza schodzi skaliste wybrzeże i jest tam znacznie bardziej zacisznie. Tak też się składa, że nasza kwatera usytuowana jest trzysta metrów od rzeczonego wybrzeża, kąpiele są więc czystą przyjemnością – szczególnie po zaopatrzeniu się w maski, rurki i płetwy. Woda jest bardzo przejrzysta więc i warunki do snorklowania znakomite.</p>
<p>Inną nadmorską atrakcją okolic Alghero są odwiedziny Grotta di Nettuno, czyli jaskini ze stalagnatami. Można się do niej dostać z lądu, jednak wymaga to minimalnego wysiłku fizycznego, wybieramy więc łódkę z Alghero, która wysadza nas pod samą kasą z biletami. Jako że wykosztowaliśmy się nie na samą podwózkę ale na ekskluzywny mini-rejs, w komplecie mamy też dwie kąpiele (jedna prosto z łódki), zimny lancz oraz towarzystwo Włochów, którzy siedzą na rufie, palą papierosy i gadają. We wspólnym paleniu jest najwyraźniej coś, co zbliża ludzi i podobnie jak korporacyjni pracownicy biurowi, którzy wychodzą na przerwę jako obce sobie osoby a wracają nawiązawszy znajomości i wymieniwszy plotki, tak nasi towarzysze podróży, po kilku godzinach i kilku papierosach kończą rejsik w najlepszej komitywie. Kąpiele są za to niczego sobie, znów bardzo dobra widoczność.</p>
<p><img src="https://live.staticflickr.com/3701/9649029788_2efcedf420_c.jpg" alt="https://live.staticflickr.com/3701/9649029788_2efcedf420_c.jpg"></p>
<p>Ze zdobywaniem pożywienia jest jak zwykle: błąkamy się przez godzinę między różnymi knajpami i wszędzie coś jest nie tak. Jak wygląda fajnie, to nie ma miejsca, jak jest pusto, to też niedobrze, bo pewnie jedzenie niesmaczne. Ostatecznie z pomocą łutu szczęścia i TripAdvisora typujemy kilka restuaracji. Jak to w nadmorskich lokalach, wszędzie królują owoce morza. Na Sardynii akurat nie zaliczają się one do tradycyjnej kuchni, tradycja ukształtowana została bowiem przez pasterzy, którzy siedzieli w głębi lądu i żarli kozy i prosiaki, unikając odwiedzanego często przez najeźdźców wybrzeża. Tym niemniej ryby, kalmary i ośmiornice niewątpliwie godne są polecenia. Molto bene. Delicioso. Mi piace molto questo piatto. Posso avere il conto per favore?</p>
<p>Uważać należy na startery: talerzyk ricotty z miodem za 12 euro jest pewną przesadą. Brać w ciemno można za to wino “domowe”, które kosztuje po 3-4 euro za półlitrowy dzbanek i jest z reguły wyśmienite. Chciałoby się zaraz nakupować butelek i zabrać do domu, żeby na miejscu, po otwarciu, odkryć, iż zabutelkowane i wytrzęsione w podróży okazuje się cienkie i bez charakteru. Takie wina trzeba pić w miejscu produkcji.</p>
<h2 id="góry">Góry</h2>
<p>Drugie cztery dni przeznaczone są na góry – przynajmniej nominalnie, nasza baza znajduje się bowiem w sercu gór Gennargentu, dziesiątki kilometrów krętych, górskich dróg nie tylko od najbliższej plaży, ale od cywilizacji w ogóle. Tymczasem więcej czasu i tak spędzamy na plażach. A było to tak: pierwszego dnia, zaraz po przyjeździe na miejsce wybieramy się do kanionu Gorropu, który jest dwie godziny marszu od naszej kwatery – zakładamy więc, że wyjście po 15 pozwoli nam na zaliczenie widoku kanionu i powrót o porze, kiedy jeszcze jest widno. W efekcie przy wejściu do kanionu jesteśmy o godzinie 17, a tam okazuje się, że to dopiero początek atrakcji, bowiem to właśnie zwiedzanie Gorropu jest gwoździem programu. Pędem więc ruszamy w kanion, wspinamy się po olbrzymich głazach, przeciskamy przez szczeliny, ale niestety, zmroku zatrzymać się nie da, i po pół godzinie zawracamy, bo przecież czeka nas później jeszcze ponad sześćset metrów przewyższenia pod górkę.</p>
<p><img src="https://live.staticflickr.com/5445/9649360610_4c92deb2dd_c.jpg" alt="https://live.staticflickr.com/5445/9649360610_4c92deb2dd_c.jpg"></p>
<p>Druga górska wycieczka, której próbę podejmujemy, jest mniej udana. W planie jest zdobycie najwyższego szczytu Sardynii, Punta la Marmora (1834 m n.p.m.). Rano jest pochmurnie i zanosi się na deszcz, ale nic to, przyjeżdżamy na miejsce (dwie godziny dojazdu wąskimi szosami z przepaścią po jednej a skałą po drugiej stronie) i rozpoczynamy wspinaczkę. Po dwudziestu minutach wzmagający się deszcz i dobiegające z chmur grzmoty wybijają nam z głowy tę eskapadę.</p>
<p>Tak więc znów plaże. Nie ma jednak co narzekać: coste dell’Ogliastra jest bardzo malownicze, wysokie klify schodzą wprost do morza odcinając dostęp do licznych zatoczek. Leżąca tam Cala Fuili jest stosunkowo łatwo dostępna, o ile tylko uda się zaparkować gdzieś na prowadzącej do niej drodze. Miejsca parkingowe szczęśliwie stanowią ograniczenie dzięki któremu na tę bardzo malowniczą plażę nie zwalają się tłumy. Podobnie jest z Bidderosa, gdzie dziennie wpuszczanych jest sto kilkadziesiąt samochodów, a bilety trzeba zamawiać na dwa dni naprzód. Co prawda widoczność w wodzie jest najgorsza ze wszystkich miejsc jakie odwiedziliśmy na Sardynii, ale poczucie przynależności do nielicznej grupy wybrańców którzy dostąpili zaszczytu wylegiwania sie na piaskach i taplania się w wodach Bidderosa w pełni tę niedogodność rekompensuje.</p>
<p>Na zakończenie wspomnieć należy o drugiej, lądowej gałęzi kuchni sardyńskiej. Pieczeń ze świni bardzo dobra, takoż makarony. Ciekawostką są potrawy z mięsa koziego – smakuje trochę jak baranina, ale z bardziej neutralnym aromatem. Pogoda pogodą, góry górami, ale na sardyńskim jedzeniu i winie można polegać. Zresztą, jak ogłosił pewien znajomy kalamburzysta na fejsbuku: podróże tuczą.</p>
<p><a href="https://www.flickr.com/gp/mmakowski/8f16M7">Sardegna</a></p>
]]></content:encoded></item><item><title>Glosariusz z północnych rubieży</title><link>https://blog.mmakowski.com/travel/glosariusz-z-p%C3%B3%C5%82nocnych-rubie%C5%BCy/</link><pubDate>Mon, 06 May 2013 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/glosariusz-z-p%C3%B3%C5%82nocnych-rubie%C5%BCy/</guid><description>Wróciłem właśnie z Northumberland, na pograniczu angielsko-szkockim, i jestem strasznie zmachany. Szedłem przez dwa dni lasami, mokradłami i pagórkami, nigdzie żywej duszy, bolały mnie nogi od chodzenia, ramiona i biodra od noszenia plecaka, dieta marchewkowo-bananowo-suszonokiełbasiana wychodziła mi bokiem, rano albo siąpiła mżawka, albo było zimno i nie chciało się wychylać nosa ze śpiwora, chyba się przeziębiłem, a zupełnym już skandalem jest to, że przypiekło mnie słońce, choć ani na chwilę nie wyszło zza grubej warstwy chmur.</description><content:encoded><![CDATA[<p>Wróciłem właśnie z Northumberland, na pograniczu angielsko-szkockim, i jestem strasznie zmachany. Szedłem przez dwa dni lasami, mokradłami i pagórkami, nigdzie żywej duszy, bolały mnie nogi od chodzenia, ramiona i biodra od noszenia plecaka, dieta marchewkowo-bananowo-suszonokiełbasiana wychodziła mi bokiem, rano albo siąpiła mżawka, albo było zimno i nie chciało się wychylać nosa ze śpiwora, chyba się przeziębiłem, a zupełnym już skandalem jest to, że przypiekło mnie słońce, choć ani na chwilę nie wyszło zza grubej warstwy chmur. Chyba za stary już jestem na takie eskapady – ale jeśli ktoś nie wymięka tak łatwo jak ja i lubi dzicz, wycieczka godna jest polecenia. Nie będzie więc kwiecistych opisów, tylko suche fakty, których świadomość zawczasu zminiejszyłaby pewnie nieco trudy mojej wycieczki.</p>
<p><strong>Bardon Mill</strong>
wioska na południe od Wału Hadriana, punkt startowy wycieczki. Można tam dojechać pociągiem z Newcastle.</p>
<p><strong>Byrness</strong>
wioska na trasie A68, punkt końcowy wycieczki. Można z tamtąd wrócić do Newcastle autobusem National Express 534 – jeden dziennie, odjeżdża o 12:20.</p>
<p><strong>deszcz</strong>
podobno pada często. Jeśli jest zapowiadany, to nie ma co się do Northumberlandii pchać – chyba, że jest się jeszcze większym twardzielem niż ci twardziele, którzy nie wymiękają tam gdzie ja.</p>
<p><img src="https://live.staticflickr.com/7311/8715953158_f16a374514_c.jpg" alt="https://live.staticflickr.com/7311/8715953158_f16a374514_c.jpg"></p>
<p><strong>drogi</strong>
w postaci utwardzonej stanowią jeden z nielicznych w miarę niezmiennych punktów krajobrazu, według których można nawigować. W razie wątpliwości należy zignorować kształt krawędzi lasu (drzwa mogło powywalać) oraz kierunek szlaków wytyczonych leśnymi ścieżkami (mógł się zmienić), natomiast zweryfikować kierunek drogi utwardzonej z pomocą kompasu. Zignorowanie tej prostej reguły kosztowało mnie dodatkową godzinę marszu – jak się nie ma w głowie, trzeba mieć w nogach. Dróg utwardzonych warto się trzymać nie tylko ze względu na nawigację, ale też na efektywność poruszania się: z reguły jeśli droga twarda jest nie więcej niż dwa razy dłuższa niż szlak wiodący przez leśne ostępy i łąki, opłaca się ją wybrać tak pod względem czasu jak i wydatku energetycznego. Warto czasem zejść na leśny szlak, żeby zobaczyć jak to wygląda, ale brać należy wtedy pod uwagę, że czas przejścia staje się zupełnie nieprzewidywalny.</p>
<p><strong>las</strong>
jeśli wierzyć mapie, występuje obficie na terenie parku. Jest tam w istocie, składa się prawie wyłącznie ze świerków na czterech etapach cyklicznego rozwoju: szkółka, gęsty młodniak (nie da się przejść), średniej wielkości drzewa, tak do 30 lat, oraz stare drzewa, w większości powywracane przez wiatr albo wycięte. Później cykl się zamyka i na wykrotach po wiatrołomach i porębach pojawia się znów szkółka.</p>
<p><strong>noclegi</strong>
ze względu na podmokły teren znalezienie miejsca pod namiot nie jest sprawą oczywistą, ale nie powinno też nastręczać wielkiego problemu. W lasach na trzecim i czwartym etapie rozwoju można znaleźć znośne miejsca – o ile nie przeszkadza nam lekki spadek i wszędobylska wilgoć, wynagrodzeni zostaniemy miękkim podłożem z grubej warstwy świerkowych kolek. Jeśli mniej zależy nam na prywatności a bardziej na tym, żeby było równo, warto wybadać opuszczone kamieniołomy.</p>
<p><strong>The Pheasant Inn</strong>
miły przystanek z grubsza w połowie drogi, w Stannersburn, można się tam posilić lanczem i uzupełnic niedobory płynów – jeśli pod wajchami jest Landlord i Red Kite lepiej wziąć tego drugiego.</p>
<p><strong>rajd</strong>
może się zdarzyć – pewnie niezbyt często, ale mi się zdarzyło, więc wspominam – że w lesie odbywać się akurat będzie odcinek specjalny rajdu samochodowego, i część zaplanowanej trasy będzie nieprzechodnia. Warto sprawdzić zawczasu.</p>
<p><strong>The Steel Bonnets</strong>
książka George’a MacDonalda Frasera traktująca o historii ziem granicznych – głównie o szesnastowiecznych rozbójnikach, ale też o czasach i wydarzeniach które doprowadziły do utworzenia się klanów rabusiów. Dobrze napisana, warto przeczytać w celu wprowadzenia się w klimat tych okolic.</p>
<p><strong>trzęsawiska</strong>
zajmują dużą część obszaru leśnego, w tym też nieutwardzonych szlaków. Idąc przez las należy wciąż mieć się na baczności, bowiem kupka mchu wyglądająca tak samo jak wszystkie w okół, może pod sobą kryć głęboką po kolana wodę z bagnem na dole, z którego nawet jak uda się wyciągnąć nogę, to już bez buta.</p>
<p><strong>turyści</strong>
brak. Przez dwa dni marszu, w długi weekend i przy znośnej pogodzie, na szlaku nie spotkałem nikogo.</p>
<p><strong>Wał Hadriana</strong>
mur, którym cesarz o wiadomym imieniu odgrodził imperium od barbarzyńców z północy. Do dzisiejszych czasów zostały niepozorne fragmenty, ale wiodąca wzdłuż nich piesza trasa jest popularna wśród turystów i jej odcinek, między Once Brewed a Cawburn, będzie nam dane przemierzyć.</p>
<p><strong>wiatr</strong>
wieje (należy mieć czapkę i flanelową koszulę, albo ekwiwalent, na wyposażeniu) i kształtuje krajobraz poprzez wywracanie starych drzew.</p>
<p><strong>woda</strong>
jest jej dużo w formie, która wlewa się do butów (warto dobrze zaimpregnować), ale mało w formie, która nadaje się do picia bez obrzydzenia. W ostateczności można ratować się leśnymi strumykami, ale żółty kolor pobranej z nich cieczy nie zachęca do konsumpcji – choć zapach i smak są znośne.</p>
<p><strong>wzgórza</strong>
niby są, ale niepokaźne, odczuwa się je głównie podczas marszu pod górę, natomiast przydatność nawigacyjna jest ograniczona, bowiem często rzeźba terenu zamaskowana jest przez las.</p>
<iframe src="https://www.google.com/maps/d/embed?mid=1kKc493Sf9T1KK91svXCY2Vzr_ks&ehbc=2E312F" width="640" height="480"></iframe>
<p><a href="https://www.flickr.com/gp/mmakowski/6t63z2">Northumberland</a></p>
]]></content:encoded></item><item><title>Functional Programming Exchange 2013</title><link>https://blog.mmakowski.com/technology/functional-programming-exchange-2013/</link><pubDate>Fri, 15 Mar 2013 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/functional-programming-exchange-2013/</guid><description>After slightly disappointing FPX 2012, this year’s edition of Skills Matter-run one day gathering of functional programming enthusiasts bounced back with promising speaker line-up. The participant numbers were up compared to last year and seem to have even exceeded the excellent 2011 edition.
Adventures with Types in Haskell If anyone had any doubt about the reputation Simon Peyton Jones enjoys in fuctional programming community, the enthusiastic welcome he received must have dispelled it.</description><content:encoded><![CDATA[<p>After slightly disappointing FPX 2012, this year’s edition of Skills Matter-run one day gathering of functional programming enthusiasts bounced back with promising speaker line-up. The participant numbers were up compared to last year and seem to have even exceeded the excellent 2011 edition.</p>
<h2 id="adventures-with-types-in-haskell">Adventures with Types in Haskell</h2>
<p>If anyone had any doubt about the reputation <strong>Simon Peyton Jones</strong> enjoys in fuctional programming community, the enthusiastic welcome he received must have dispelled it. His talk was, as usual, entertaining and fast-paced, but at no expense of clarity.</p>
<p>Strong typing is the most succesful method of formal verification of program semantics. Despite their unquestionable success, type systems are not without issues: their job is to restrict the set of allowed programs, but this restriction does not always coincide with the intents of the programmers:</p>
<p><img src="fpe.png" alt="Venn diagram of programs we want to write and programs allowed by the type system, with a small overlap"></p>
<p>It is particularly frustrating when the type system gets in our way by disallowing a working program. Simon ran through a number of examples where this happened and prompted advances in Haskell’s type system. The features discussed were:</p>
<ul>
<li><strong>type classes</strong>: some functions, e.g. <code>sort :: [a] -&gt; [a]</code>, are “nearly polymorphic”, i.e. in order for us to be able to write them polymorphically, we need to restrict the set of admissible types to ones that support specific operations (comparison in the case of <code>sort</code>). Type classes provide this mechanism: if we write the type of <code>sort</code> as <code>Ord a =&gt; [a] -&gt; [a]</code> we can make use of the operations provided by <code>Ord</code> type class in <code>sort</code>’s definition.</li>
<li><strong>higher kinds</strong>: we would like to abstract the notion of mapping values over arbitrary “container”, e.g. instead of having two separate functions, <code>mapList :: (a -&gt; b) -&gt; [a] -&gt; [b]</code> and <code>mapTree :: (a -&gt; b) -&gt; Tree a -&gt; Tree b</code> we would prefer <code>map :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</code>. <code>Functor</code> here is a type class whose instances are not <em>types</em> (of kind <code>*</code>), but <em>type constructors</em> (of kind <code>* -&gt; *</code>).</li>
<li><strong>GADTs</strong> (generalised algebraic data types): when defining data type for terms we would like to be able to say what type the term evaluates to, so that writing evaluation function is straightforward. GADTs enable us to do that by allowing individual data constructors to produce arbitrary types, as long as the outermost type is the type being defined:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Term</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">*</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Lit</span>    <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Int</span>                           <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Term</span> <span style="color:#458;font-weight:bold">Int</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Succ</span>   <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Term</span> <span style="color:#458;font-weight:bold">Int</span>                      <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Term</span> <span style="color:#458;font-weight:bold">Int</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">IsZero</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Term</span> <span style="color:#458;font-weight:bold">Int</span>                      <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Term</span> <span style="color:#458;font-weight:bold">Bool</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Cond</span>   <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Term</span> <span style="color:#458;font-weight:bold">Bool</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Term</span> a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Term</span> a <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Term</span> a
</span></span></code></pre></div><ul>
<li><strong>type families</strong> (type functions): type classes with multiple parameters enable us to specify that e.g. addition can operate on arguments of two different types; but how can we say what the result type of such addition should be? With type families we can declare that such a type can be derived from the type class parameters:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">class</span> <span style="color:#458;font-weight:bold">GNum</span> a b <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">type</span> <span style="color:#458;font-weight:bold">SumT</span> a b <span style="color:#000;font-weight:bold">::</span> <span style="color:#000;font-weight:bold">*</span>        <span style="color:#998;font-style:italic">-- type-level function</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#000;font-weight:bold">+</span>) <span style="color:#000;font-weight:bold">::</span> a <span style="color:#000;font-weight:bold">-&gt;</span> b <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">SumT</span> a b
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> <span style="color:#458;font-weight:bold">GNum</span> <span style="color:#458;font-weight:bold">Int</span> <span style="color:#458;font-weight:bold">Float</span> <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">type</span> <span style="color:#458;font-weight:bold">SumT</span> <span style="color:#458;font-weight:bold">Int</span> <span style="color:#458;font-weight:bold">Float</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Float</span>
</span></span><span style="display:flex;"><span>  <span style="color:#998;font-style:italic">-- ...</span>
</span></span></code></pre></div><p>In recent years there has been an explosion of innovation in type systems. The ultimate goal of all this work is enabling programmers to say what they mean. In Simon’s opinion, one of the main reasons for recent growth in Haskell’s popularity is its rich, but still usable, type system.</p>
<p><a href="https://skillsmatter.com/skillscasts/3842-keynote-3842">Adventures with types | SkillsCast</a></p>
<h2 id="lift-30-across-time-and-address-space">Lift 3.0: Across Time and Address Space</h2>
<p><strong>David Pollak</strong> delivered a preview of what can be expected from next major release of <a href="http://liftweb.net">Lift web framework</a>. Not dealing with web development on day-to-day basis I am not best qualified to judge how much of an improvement Javascript sources, cross-HTTP actors, markdown templating or dynamic reload of changed classes are going to be. What is clear is that Lift is quite different from most other web frameworks out there, not least as a result of strong opinions held by its creator: according to David, Akka actor and future implementations are of poor quality, hence the need for Lift’s own version of these abstractions. Another mark of David’s personality on the new Lift is integration of his other recent project, dataflow language <a href="http://blog.visi.la/">Visi</a>, into Lift page templates. While this strong-mindedness does alienate some in the wider Scala community, Lift is still one of the most popular Scala web frameworks and has a dedicated following, so it must get some things right.</p>
<p><a href="https://skillsmatter.com/skillscasts/3844-across-time-and-address-space-lift-3-0">Across Time and Address Space: Lift 3.0 | SkillsCast</a></p>
<h2 id="elnode-the-evented-io-web-server">Elnode: The Evented IO Web Server</h2>
<p>Emacs afficionados sometimes go to such great lengths to get their beloved piece of software to perform as something it was not originally designed for, that it is really difficult to explain their motivation to the non-initiated. One such case is definitely <strong>Nic Ferrier’s</strong> implementation of web server inside Emacs. In an entertaining talk Nic explained how Richard Stallman’s stepping down from long held post of Emacs maintainer opened the floodgate of innovation: a package system (<code>M-x package-install</code>), lexical scoping in Emacs Lisp and server sockets. This last addition enabled Nic to implement <em>elnode</em> – a web server framework in Emacs Lisp. As Emacs is single-threaded, asynchronous processing of HTTP requests is based on callbacks, in the style popularised by Node.js. The audience could experience the joys of Emacs web first hand, by using a chat application served from elnode instance running on Nic’s laptop.</p>
<p>But why turn Emacs into a web server? To quote George Mallory: “because it’s there”.</p>
<p><a href="https://skillsmatter.com/skillscasts/3880-elnode-the-evented-io-web-server">Elnode: the evented IO web server | SkillsCast</a></p>
<h2 id="comparing-scala-and-clojure">Comparing Scala and Clojure</h2>
<p><strong>Robert Rees</strong> is one of the founders of <a href="http://londonclojurians.org/">London Clojurians community</a> and codes in Scala on daily basis as a part of his job at Guardian. In the table below I attempted to summarise his experiences and impressions of the two languages aspiring to be “the next big thing” in JVM world.</p>
<table>
<thead>
<tr>
<th>Scala</th>
<th>Clojure</th>
</tr>
</thead>
<tbody>
<tr>
<td>Java++</td>
<td>Lisp with Java interoperability</td>
</tr>
<tr>
<td>complex, academic – see the type system</td>
<td>simple, practical – see the data structures</td>
</tr>
<tr>
<td>enterprise-friendly: curly braces, strong Java interoperability</td>
<td>hippie: no objects, Lisp syntax</td>
</tr>
<tr>
<td>good tooling: Eclipse and IntelliJ both have feature-rich Scala plugins</td>
<td>poor tool support, most clojurians use Emacs</td>
</tr>
<tr>
<td>performance comparable with Java</td>
<td>performance sometimes weird</td>
</tr>
<tr>
<td>used by companies and teams with large existing Java investment, big codebase, binary sharing of artifacts</td>
<td>used by teams that are already polyglot, for software that is service-orientated and communicates over HTTP</td>
</tr>
<tr>
<td>Lift, Scalatra, Play2 and other rich, complete frameworks</td>
<td>rudimentary web development support from Ring middleware and Compojure</td>
</tr>
<tr>
<td>SBT is one of the best build tools out there</td>
<td>Leiningen 2 is catching up with SBT</td>
</tr>
<tr>
<td>makes working with existing Java codebase easier</td>
<td>makes one a better Scala programmer</td>
</tr>
</tbody>
</table>
<p>Overall it was clear that Robert’s sympathies lied with Clojure, but the talk was balanced and did give Scala credit where it was due.</p>
<p><a href="https://skillsmatter.com/skillscasts/3883-comparing-scala-and-clojure">Comparing Scala and Clojure | SkillsCast</a></p>
<h2 id="developing-with-f-in-the-cloud">Developing With F# in The Cloud</h2>
<p><strong>Adam Granicz</strong>, the CEO of <a href="http://www.intellifactory.com">IntelliFactory</a> presented his company’s latest product, CloudSharper – a web-based IDE for developing web and mobile applications. On initial launch, planned for April 2013, the IDE will support F#, with server-side compilation, intellisense, multi-project capability and other modern conveniences users of development environments are accustomed to. While the videos of interaction with the IDE – there was no live demo – looked impressive, Adam struggled to explain convincingly the advantages of his solution over existing stand-alone .Net IDEs such as Visual Studio or MonoDevelop. Overall, along with the <a href="#lift-3.0-across-time-and-address-space">Lift talk</a>, this one was the least interesting session of the day. In both cases the previews of the products could have been made more relevant to the subject of the conference if the presenters focused on the value added by functional techniques, rather than highlighting specific features that were of interests only to the intended audience of the products.</p>
<p><a href="https://skillsmatter.com/skillscasts/3873-developing-with-f-in-the-cloud">Developing with F# in the Cloud | SkillsCast</a></p>
<h2 id="reducing-cognitive-bias-in-design-with-scala">Reducing Cognitive Bias in Design With Scala</h2>
<p>In the course of his work as the principal architect in <a href="http://www.elemica.com">Elemica</a>, <strong>Paul Dale</strong> learned to appreciate the importance of good communication between the programmers and domain experts. Cognitive bias in its various forms – ambiguity effect, anchoring, attention bias, availability, false consensus, framing effect – presents a major obstacle to achieving this mutual understanding. As a solution to the communication problem, Paul recommended the framework offered by <em>Domain-Driven Design</em>: building and carefully maintaining common vocabulary that reduces the chance of misunderstanding resulting from the aforementioned forms of bias. This is where Scala comes into the picture: case classes are an excellent tool for modeling domain concepts in concise and uncluttered way. Paul’s observation was that this had an empowering effect on the domain experts, who, having realised that they had no trouble understanding the code, were eager to provide relevant business logic in the form of code that built on the model developed in this way. Paul’s other recommendation was to start with the UI as early as possible – an approach facilitated by Lift’s view-first development model.</p>
<p><a href="https://skillsmatter.com/skillscasts/3846-akka-scala">Reducing cognitive bias in design with Scala | SkillsCast</a></p>
<h2 id="lexifi-describing-financial-contracts-and-extending-ocaml">LexiFi: Describing Financial Contracts and Extending OCaml</h2>
<p>Ever since learning about <a href="http://www.lexifi.com/files/resources/MLFiPaper.pdf"><em>composing contracts</em> paper</a> I wondered if anyone has commercialised the idea. It turns out that yes: one of the authors, Jean-Marc Eber, founded <a href="http://lexifi.com">LexiFi</a> – a company producing derivatives pricing and management software. <strong>Alain Frisch</strong>, LexiFi’s CTO, talked about the product and how algebraic modeling of financial instruments and construction of term sheets from few generic building block and combinators enables them to add new product treatments to the system in the matter of days.</p>
<p>LexiFi being a French company, OCaml was the natural choice for implementation language. In the course of development of the system, the company had to modify the compiler to support features they needed, contributing the patches back to the official distribution. Presently, LexiFi’s system is distributed together with the complete, customised OCaml toolchain that allows building and execution of their models on Windows and Unix systems without any additional dependencies. Even the Windows GUI is written in OCaml, utilising a bi-directional OCaml-.Net bridge built specifically for this purpose.</p>
<p><a href="https://skillsmatter.com/skillscasts/3855-lexifi-describing-financial-contracts-and-extending-ocaml">LexiFi: describing financial contracts and extending OCaml | SkillsCast</a></p>
<h2 id="f-in-the-open-source-world">F# in the Open Source World</h2>
<p>F# was designed by <strong>Don Syme</strong> of Microsoft Resarch and over the years has progressed from an experiment to a first-class citizen of Visual Studio offering. As with .Net in its entirety, there is the perception that Microsoft has full control over the language and its implementation. Don appeared at FPX to try and alter this impression, and present the vision of F# ecosystem where Microsoft is just one of many contributors. While the compiler development is not yet open, the drops of source code of official releases are available <a href="http://fsharp.github.com/fsharp/">on Github</a>, as are <a href="http://fsharp.github.com/fsharpbinding/">editor bindings</a> that enable authors of editors and IDEs to provide integration with the compiler. This has resulted in environments such as MonoDevelop, Xamarin Studio and Emacs offering excellent support for F# development. On top of the compiler infrastructure, there is now <a href="http://nuget.org">NuGet</a> – a repository of libraries and extensions that work across development environments. An impressive example of community-built extensions was F# binding to R, built as a type provider, so that R functions could be seamlessly invoked from F# code – including opening a window with scatterplot matrix.</p>
<p><a href="https://skillsmatter.com/skillscasts/3885-f-in-the-open-source-world-3885">F# in the open source world | SkillsCast</a></p>
<h2 id="functional-data-storage">Functional Data Storage</h2>
<p><strong>Greg Young</strong> delivered what probably was the best product demo of the day – and one in which the name of the product has not been mentioned even once. The entire concept of functional data storage, in Greg’s interpretation, was a derivation of ideas from <em>functional reactive programming</em>, <em>NoSQL</em> and <em>event sourcing</em>: what is being stored is not mutable state, but the sequence of events observed by the system. These events can then be interpreted as function invocations: e.g. obtaining current state is possible by taking an initial state and then applying to it in sequence functions represented by all events. In a similar fashion, queries over event stream can be represented as folds (catamorphisms).</p>
<p>This model makes easy certain queries that are difficult in relational, document and key-value databases; one example could be temporal queries, such as “find all people who tweeted <em>Starbucks</em> and then, within 4 minutes, <em>Happy</em> and <em>Coffee</em>”. However, it also calls for a new query language. Greg presented some operators of such language, with demo based on aptly named <a href="http://geteventstore.com/">Event Store</a> – an event database. While many in the audience might have questioned the choice of Javascript as the query language, there is a precedent for that in the form of popular MongoDB; besides familiarity, another point raised by Greg was ease of debugging queries issued via web interface using Javascript debugger built into modern browsers.</p>
<p><a href="https://skillsmatter.com/skillscasts/4045-greg-young">Functional Data Storage | SkillsCast</a></p>
]]></content:encoded></item><item><title>A Proper Fruit Salad</title><link>https://blog.mmakowski.com/cooking/a-proper-fruit-salad/</link><pubDate>Sun, 03 Mar 2013 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/a-proper-fruit-salad/</guid><description>Fruit salads do not enjoy a good reputation, and perhaps deservedly so. At supermarkets and sandwich joints, what passes as a “fruit salad” is usually nothing more than some random pieces of fruit approaching use-by date diced and sealed in a plastic container. At restaurants, dietetic martyrs who with sad resignation skim through the dessert menu and then announce they will have a fruit salad, attract sympathetic looks and knowing nods.</description><content:encoded><![CDATA[<p>Fruit salads do not enjoy a good reputation, and perhaps deservedly so. At supermarkets and sandwich joints, what passes as a “fruit salad” is usually nothing more than some random pieces of fruit approaching use-by date diced and sealed in a plastic container. At restaurants, dietetic martyrs who with sad resignation skim through the dessert menu and then announce they will have a fruit salad, attract sympathetic looks and knowing nods.</p>
<p><img src="https://farm9.staticflickr.com/8375/8523519773_16f0ef586b_n.jpg" alt="fruit salad"></p>
<p>Yet, it does not have to be this way; fruit salad, made right, can be a highly anticipated course in the dinner menu. The rules are few: balance tastes – sweetness with bitterness and acidity – vary textures and colours, and make sure to not forget a secret ingredient. That’s it.</p>
<p>The way I apply this formula typically involves a base consisting of three or four <strong>oranges</strong>, diced, two <strong>grapefruit</strong>, one yellow, one pink or red, again diced, but also with all the membrane removed. So far we have one type of texture – “cellular” – and a mostly acidic taste, with some bitterness contributed by the grapefruit. To balance the taste we need something sweet – <strong>grapes</strong> are not a bad choice. To vary the texture I add crunchy <strong>apple</strong> and firm but still creamy relative to other fruit, <strong>banana</strong>. You will need some more fruit for more colour variety, but the choice is yours; I would recommend strawberries, kiwi, perhaps mango, if you like it a bit sweeter – up to you.</p>
<p>Oh, did I mention the secret ingredient? All this balancing and varying is for naught if we forget to add that little bit of excitement to the mix. One tried and tested option is to take half a cup of <strong>raisins</strong> and douse in <strong>gin</strong>. Leave them for at least an hour, until the raisins start to blanch, then put the raisins together with the gin in the salad. The taste of gin will be barely noticeable, but will beautifully counterbalance any remaining sweetness. At this stage expect the bowl to contain quite a lot of juicy liquid – if it does not then perhaps the citrus has been too dry, but it can be remedied by adding some half a cup of fresh grapefuit juice. The salad can be served immediately, but best keep it chilled for an hour before serving.</p>
]]></content:encoded></item><item><title>Pig's Legs in Aspic</title><link>https://blog.mmakowski.com/cooking/pigs-legs-in-aspic/</link><pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/pigs-legs-in-aspic/</guid><description>I am a fussy eater. When at primary school, I refused to partake of the simple and filling lunches we were served at the canteen, and when asked by a concerned lunch lady what the hell I am eating at home reportedly responded with veal fillet and fries. That was in soviet-era Poland, mind you, where meat was rationed, citizens were prepared to queue for hours to get hold of a frozen carcass of starved and abused chicken and brawls were commonly breaking out over who gets the right to buy the last paper-filled frankfurter.</description><content:encoded><![CDATA[<p>I am a fussy eater. When at primary school, I refused to partake of the simple and filling lunches we were served at the canteen, and when asked by a concerned lunch lady what the hell I am eating at home reportedly responded with veal fillet and fries. That was in soviet-era Poland, mind you, where meat was rationed, citizens were prepared to queue for hours to get hold of a frozen carcass of starved and abused chicken and brawls were commonly breaking out over who gets the right to buy the last paper-filled frankfurter. Things have moved on since then: the shelves of Polish shops are full of excellent food, queues are rarely seen other than near the checkouts, and I do not mind some offal, even as icky as chitterlings or kidneys – although I would rather not have to prepare it myself. One thing I still cannot stand though are cuts of meat that contain the non-meaty tissue such as tendons, veins, cartilage and other tough and unpleasant bits. It might therefore seem that traditional Polish dish of pig’s legs in aspic must not be one of my favourite foods. But it is.</p>
<p>You see, there is an advantage to all those tough pieces of connective tissue and bone: they are high in collagen, and collagen, when heated, turns into gelatine. So if we’d like to make us some jelly, these sub-prime cuts are the ones to pick. Proper pig’s legs are not a frequent sight in British supermarkets, but a hock is, and will do nicely. We’ll get lots of gelatine from that large bone in the middle! Let’s also add a pack of chicken drumsticks and thighs – they don’t contribute much in the way of jellyness or even meat, but make the dish a bit more diverse. Any other kind of pedal extremity is welcome – I’ve tried a cow’s shin in the past. Put all the meat in a large pot, add two or three carrots, some celeriac, half of an onion, burnt slightly over open fire, a couple of cloves of garlic, bay leaves, some whole black peppercorns and whole allspice. Add water, but not too much – the hock doesn’t have to be completely covered, and we want the final concentration of gelatine to be sufficient to turn it into a nice jelly. Bring to boil, then simmer on a very low heat, covered, for about four hours – but remove the carrots after half an hour or so, before they turn too soft. If the hock sticks out of the liquid, rotate it at some point so that it cooks evenly.</p>
<p>After four hours we remove the meat from the pot and the tedious part starts. The traditional recipe calls for all the extra tissue, bones and skin excepted, to be chopped up and used in the dish – but we (well, I) don’t want any of that in our fussy rendition. As a result we’ll need to spend a good hour separating the meat from everything else and chopping it into small, delicate pieces.</p>
<p><img src="https://farm9.staticflickr.com/8086/8402400841_3c902fd17c_n.jpg" alt="the jelly"></p>
<p>Once done with that, we slice the carrots and cover the bottoms of a couple of bowls with the slices, chop some parsley and add as well, then divide the meat between bowls and pour the stock that remained in the pot through a fine sieve into the bowls; there should be enough to cover the meat in all of them. Leave to cool and jell, then store in a fridge.</p>
<p>The traditional condiment used with cold legs – spirit vinegar – is another aspect of the dish that I cannot stand, but lemon juice is an acceptable substitute. Another nice, cosmopolitan variant involves the use of mayonnaise in place of acidic liquid. As you can see there is a reasonable freedom in choosing the condiments, but there can be no doubt that the only suitable drink to complement this simple but very tasty dish is a shot of very cold vodka.</p>
]]></content:encoded></item><item><title>Five Languages</title><link>https://blog.mmakowski.com/technology/five-languages/</link><pubDate>Sun, 13 Jan 2013 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/five-languages/</guid><description>Pick three to five programming languages for teaching orthogonal programming paradigms. Which did you choose? Why? Blog and I&amp;#39;ll share.
&amp;mdash; Rosetta Code (@rosettacode) January 12, 2013 Interesting you should ask that, Rosetta Code. I’ve been pondering similar questions before, most recently inspired by Bruce Tate’s Seven Languages in Seven Weeks, whose languages of choice were sometimes overlapping (e.g. Io and Ruby) while leaving certain areas, such as concatenative languages, unexplored.</description><content:encoded><![CDATA[<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Pick three to five programming languages for teaching orthogonal programming paradigms. Which did you choose? Why? Blog and I&#39;ll share.</p>&mdash; Rosetta Code (@rosettacode) <a href="https://twitter.com/rosettacode/status/290162783276896258?ref_src=twsrc%5Etfw">January 12, 2013</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>Interesting you should ask that, Rosetta Code. I’ve been pondering similar questions before, most recently inspired by Bruce Tate’s <a href="http://pragprog.com/book/btlang/seven-languages-in-seven-weeks"><em>Seven Languages in Seven Weeks</em></a>, whose languages of choice were sometimes overlapping (e.g. Io and Ruby) while leaving certain areas, such as concatenative languages, unexplored. What languages would I have chosen?</p>
<p>Let’s start with the paradigms. It’s not a very clear term; is object orientation a paradigm, or just a technique that can be applied to programs written in both imperative and declarative style? Is imperative programming a paradigm? If so, what is procedural programming? The orthogonality requirement complicates things further. Functional programming is not orthogonal to procedural programming, but OO is to both, so how do we choose which features to represent? We are going to just gloss over these formal problems and arbitrarily select five diverse families of programming languages:</p>
<ul>
<li>imperative</li>
<li>functional</li>
<li>object-oriented</li>
<li>logic</li>
<li>Lisp-like</li>
</ul>
<p>and then try to cover as many different features within each family, as practical.</p>
<p>What languages should represent them? Given the limit of five, it might seem that multi-paradigm ones suche as C++, Oz or Scala would offer the biggest bang for the buck. However, considering that the purpose is teaching, we will be better off with smaller languages; ideas can be better appreciated and internalised when presented in a context of a language that was specifically designed around them. As a result our criteria for choice will be:</p>
<ul>
<li>small – both conceptually and syntactically: can be learned faster</li>
<li>“there is only one way”: a paradigm or feature is represented clearly, preferably in its pure form</li>
<li>representative: contain constructs that are commonly found in other languages representing the same paradigm</li>
<li>practical: the language is used in the “real world”, there exists a community, tutorials, libraries and other resources</li>
<li>influential: other languages have been designed after features introduced first in this language</li>
</ul>
<h2 id="imperative">Imperative</h2>
<p>The way contemparary computers work is inherently imperative: code is simply a list of instructions for the CPU. It therefore is fitting to pick for the representative of imperative family a language that makes this connection tangible – a low-level, systems programming language such as <strong>C</strong>. C is perhaps better known for its <a href="http://ioccc.org">obfuscability</a> than for the didactic virtues, but appears to match our criteria fairly well: it is relatively small, doesn’t support any other style than imperative, has a huge codebase written in it and its syntax influenced most of today’s mainstream languages. Students learning C will be exposed to:</p>
<ul>
<li>control flow instructions</li>
<li>manual memory management</li>
<li>pointers and pointer arithmetic</li>
<li>undefined behaviour</li>
</ul>
<p>Contenders: Assembly, Pascal, Python</p>
<h2 id="functional">Functional</h2>
<p>Since we aim for paradigmatic purity and try to avoid obscurity, <strong>Haskell</strong> – a purely functional language with a large, active community is a natural choice. Syntactic sugar notwithstanding, the core is very small and can be boiled down to lambda abstraction and function application. It provides excellent platform to explain concepts such as</p>
<ul>
<li>lambda calculus</li>
<li>laziness</li>
<li>strong typing</li>
<li>type inference</li>
<li>side-effect isolation</li>
<li>tail call optimisation</li>
<li>REPL</li>
</ul>
<p>Contenders: StandardML, OCaml, also Scheme and Clojure, if we didn’t have a separate category for them</p>
<h2 id="object-oriented">Object-oriented</h2>
<p>There are two main flavours of object orientation: object-based and class-based. While the former requires fewer concepts to explain, the latter is much more common in the industry and has an excellent, dogmatic representative: <strong>Smalltalk</strong>. In Smalltalk everything is an object, even conditional instructions are in fact messages sent to Boolean objects. Exactly the conceptual minimalism we have been looking for, at the same time introducing new features such as:</p>
<ul>
<li>objects responding to messages</li>
<li>class inheritance</li>
<li>dynamic typing</li>
<li>image-based development environment</li>
</ul>
<p>Contenders: Python, Io, Eiffel, Ruby</p>
<h2 id="logic">Logic</h2>
<p>Logic programming’s heyday seems to have passed with the 1970s and 80s, but certains concepts are very relevant today. Want to understand how generic Scala collection methods return the most specific type in a given context? Lear about Horn clauses and unification! <strong>Prolog</strong> is by far the most popular language in this paradigm, so we don’t really have much choice if we want a language built around</p>
<ul>
<li>logic programming</li>
<li>term unification</li>
</ul>
<p>Contenders: none</p>
<h2 id="lisp-like">Lisp-like</h2>
<p>Lisp-likeness is not a paradigm by a long shot; Lisp is usually considered a functional language, and we have already covered that paradigm. The temptation to instead include a concatenative language was high, but the historical importance and influence of Forth pales in comparison with Lisp. Lisp, with its homoiconicity, flexible (some say non-existent) syntax and macro system is a platform of choice for many programming language researchers for a reason. From the countless dialects that mushroomed over the years we will pick <strong>Clojure</strong>, which, beside being a modern language with strong and growing community, will also expose our students to one of the major contemporary runtimes – the Java Virtual Machine. So, here’s what they can learn about:</p>
<ul>
<li>abstract syntax trees</li>
<li>macros</li>
<li>homoiconicity</li>
<li>lambda calculus</li>
<li>dynamic typing</li>
<li>continuations</li>
<li>REPL</li>
<li>JVM</li>
</ul>
<p>Contenders: Scheme, Emacs Lisp, also Factor and Forth – if we went for concatenative instead.</p>
<h2 id="what-is-missing">What is missing?</h2>
<p>A lot, obviously, especially in the more exotic end of paradigm spectrum, such as concatenative or array-based languages. It would have been nice to include at least one language with advanced module system (e.g. Standard ML) to demonstrate features that help build programs in-the-large. That said, we managed to cover an impressive list of concepts and someone who learns these five languages in reasonable depth can definitely be called a programming erudite.</p>
]]></content:encoded></item><item><title>Stolica Europy</title><link>https://blog.mmakowski.com/travel/stolica-europy/</link><pubDate>Mon, 03 Dec 2012 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/stolica-europy/</guid><description>Z Brukseli pamiętam koronkowy Grote Markt i kupę restauracji zachęcających apetycznymi menu. Zawitałem tu w 2001 roku, na InterRailu, z miesięcznym budżetem w wysokości 500 złotych. Byłem w tym czasie zafascynowany Gryphonem, i gdy czwartego dnia po wyjeździe z Warszawy mieliśmy krótki postój w Hamburgu, zaopatrzyłem się w szałamaję.
Przez resztę podróży bezskutecznie próbowałem wydobyć z niej jakiś dźwięk, aż w końcu stroik się rozsechł, i tyle było zabawy. Skutek tego zakupu był taki, że w Brukseli, podczas gdy Mierniczy z Młodożeńcem zajadali się risotto (to chyba była najtańsza pozycja w menu jednej z knajp przy Korte Beenhouwersstraat), ja mogłem się tylko z zazdrością przyglądać.</description><content:encoded><![CDATA[<p>Z Brukseli pamiętam koronkowy <em>Grote Markt</em> i kupę restauracji zachęcających apetycznymi menu. Zawitałem tu w 2001 roku, na InterRailu, z miesięcznym budżetem w wysokości 500 złotych. Byłem w tym czasie zafascynowany Gryphonem, i gdy czwartego dnia po wyjeździe z Warszawy mieliśmy krótki postój w Hamburgu, zaopatrzyłem się w szałamaję.</p>
<p><img src="https://live.staticflickr.com/8059/8242111067_00e21f2551_c.jpg" alt="https://live.staticflickr.com/8059/8242111067_00e21f2551_c.jpg"></p>
<p>Przez resztę podróży bezskutecznie próbowałem wydobyć z niej jakiś dźwięk, aż w końcu stroik się rozsechł, i tyle było zabawy. Skutek tego zakupu był taki, że w Brukseli, podczas gdy Mierniczy z Młodożeńcem zajadali się risotto (to chyba była najtańsza pozycja w menu jednej z knajp przy Korte Beenhouwersstraat), ja mogłem się tylko z zazdrością przyglądać.</p>
<p>W dalszej części podróży żywiłem się głównie masą czekoladowo-orzechową i zakupionymi okazyjnie w dublińskim Aldim baked beans w puszce. Dzięki w ten sposób zaoszczędzonym funduszom nabyłem w Genewie kolejny suwenir z wycieczki: scyzoryk Victorinox Workchamp. Ten przedmiot też ma związek z obecnym wyjazdem: mianowicie, scyzoryk ów służył mi wiernie przez dziesięć lat, aż w końcu zostawiłem go na stole w <a href="/travel/wyprawa-2010-11/park-narodowy-khao-yai/">Khao Yai</a>. Stratę tę powetowałem sobie niedługo później, kupując identyczny nóż przy okazji wizyty w Zurychu. Przez kolejne półtora roku nie rozstawałem się z nim, aż tym razem, na bramce kontrolnej przy wejściu do pociągu Eurostar relacji Londyn – Bruksela, zarekwirowano mi go, argumentując, że noże z blokowanym ostrzem są w Wielkiej Brytanii nielegalne.</p>
<h3 id="--">* * *</h3>
<p>Tym razem budżet nas aż tak nie ogranicza, stołujemy się więc w Białej Róży przy <em>Grote Markt</em> gdzie w antycznych wnętrzach, przy sztucznym kominku sycimy się zupą cebulową i bitkami wołowymi po flamandzku. W etiopskim <em>Toukoul</em> koło kościoła Jana Chrzciciela usyfiamy się po łokcie sosem awaze, wcinając wołowinę na ostro i cielęcinę na łagodnie bez użycia sztućców, pomagając sobie tylko urwanymi fragmentami naleśnika. W <em>Loli</em> przy placu Sablon dają takie scampi z jajkiem sadzonym, że moja uprzednia niechęć do tego owocu morza przeistacza się w entuzjazm. W <em>Aux Armes de Bruxelles</em> – jedynej ponoć przyzwoitej knajpie przy najeżonej marnej jakości restauracjami dla turystów Beenhouwersstraat – homar na zimno i cielęcina. Gdzie się nie obrócić, można dobrze zjeść. Tylko wybór deserów – biorąc pod uwagę opinię, jaką cieszy się belgijska czekolada – nieco rozczarowuje; najlepiej pozostać przy gofrach.</p>
<p>Co jednak, jeśli fizjologiczne ograniczenia nie pozwalają nam na pakowanie w siebie kolejnych przysmaków przez cały dzień? Można popić piwem. Jak wiadomo, Belgia słynie z piw, a smaku tutejszych Blonds i trapistowskich Dubbels nie da się pomylić z niczym innym. W Moeder Lambic przy placu Fontainas, można spróbować kilkudziesięciu, o których się wcześniej nie słyszało – nie żadne <em>Leffe</em>, <em>Chimay</em>, czy <em>Grimbergeny</em>, ale <em>Brasserie de la Senne</em> i <em>De Ranke</em>. Szczęśliwie napoje podzielone są na kategorie jasne/ciemne, łagodne/gorzkie, tak, że mimo nieznajomości nazw, z wyborem nie powinno być problemu. Dla prawdziwych konserów jest lokalna specjalność, czyli piwa dziko fermentowane m.in. z rodziny Gueuze; nie-konserom nie polecamy, bo są dość kwaśne i mało chmielowe. Prócz <em>Moeder Lambic</em>, w centrum odwiedzić warto też <em>Mort Subite</em>, którego wystrój pozostaje niezmieniony od wczesnych lat XX wieku. Miłośnicy klimatycznych wnętrz zawitać też mogą do <em>Fallstaffa</em> koło giełdy, podobno pięknego przykładu secesji, gdzie można jeszcze dogłębniej poczuć ducha fin de siècle z racji tego, że nie przyjmują kart.</p>
<p>Co jednak, jeśli i piwa więcej w siebie nie wlejemy? Można się dla odmiany ukulturalnić, zapoznając z klasyką surrealizmu. Zaczynamy od Zaandstraat, gdzie po dotarciu na szczyt schodów oczom naszym ukazjuje się zrujnowany biurowiec z powybijanymi szybami i wystający zza jakiejś dziwnej skarpy cokół kolumny kongresowej – symbolu niepodległej Belgii. Dalej na południe bulwarem Berlaimontlaan, mijamy biurowiec z lustrzaną fasadą pod którym wyro z kartonowych pudeł i worków na śmieci sklecił sobie kloszard. Po tej rozgrzewce gotowi jesteśmy na danie główne, czyli zapoznanie z twórczością René Magritte’a. W galerii przy placu królewskim co prawda płonącej tuby nie ma (jest tylko ugaszona), faceta zasłoniętego jabłkiem też poza muzealnym sklepem nie przyuważyłem, za to sporo jest metalowych kulek ze szczelinmi i trochę fajek-niefajek. Jako że nabyliśmy bilet kombi, zaglądamy też do sąsiedniej galerii, gdzie w salce na piętrze zobaczyć można fajny obraz Pietera Breugela młodszego, “Spis w Betlejem”. Na ścianie obok wisi coś, co początkowow wygląda na marną kopię, a okazuje się oryginałem autorstwa Pietera starszego.</p>
<p>Co jednak, jeśli zachwyt sztuką nie wypełni nam całego w Brukseli pobytu? Pozostają tradycyjne spacery. Warto zaopatrzyć się w mapkę rozprowadzaną przez <a href="http://facebook.com/useit">Useit</a>, która proponuje kilka niezbyt długich tras i oferuje garść pożytecznych wskazówek. W północnej części centrum spacerujemy po biznesowej dzielnicy nowoczesnych biurowców, która murem nasypu kolejowego i bramą <em>Gare du Nord</em> odgrodzona jest od uliczek pełnych zamtuzów. Na południu, przy głównym bulwarze miasta, sklepy rybne i pralnie. Okolicje <em>Gare du Midi</em> przywodzą na myśl warszawski Dworzec Centralny, z arteriami komunikacyjnymi, rozległymi parkingami i ogólnym brakiem uroku. Z tamtąd przejść można kawałek ulicą Stalingradzką a następnie zapuścić się w uliczki <em>Marolles</em>. Na placu gry w piłkę w niedzielę odbywa się pchli targ. Stąd są dwa kroki do Pałacu Sprawiedliwości – monumentalnej budowli, która, jak większość centrum Brukseli, lata świetności ma już za sobą. Na wschodzie jest dzielnica europejska, z unijnym parlamentem i gigantycznym budynkiem Komisji Europejskiej, a także biednymi osiedlami imigranckimi. Nieco dalej na wschód mieści się park jubileuszowy, gdzie odwiedzić można dwa duże gabarytowo muzea: samochodów i wojska. Muzeum samochodów to po prostu hala z masą eksponatów – można sobie obejrzeć, ale nie opowiada żadnej historii i nie angażuje zwiedzających. Podobny anachronizm zaobserwować można i w innych brukselskich muzeach: cenione muzeum instrumentøw muzycznych (MIM) daje co prawda słuchawki, które przy gablotach odgrywają dźwięki oglądanych instrumentów, ale narracji brak, i po krótkim czasie wizyta się nuży. Nawet muzeum komiksu, choć ekspozycję rozpoczyna fajnie, od kontekstu historycznego, wkrótce rozdrabnia się na dziesiątki szpalt pelnych obrazków, które mija się bez specjalnego zainteresowania.</p>
<h3 id="---1">* * *</h3>
<p>Bruksela – za wyjątkiem <em>Grote Markt</em> i przyległości – nie jest miastem specjalnie pięknym, a listopadowo-grudniowa aura, między mgłą a deszczem ze śniegiem, nie przysparza jej uroku. Cztery dni w zupełności wystrczają na zwiedzenie centrum. Trudno przy tym oprzeć się wrażeniu, że gdyby nie instytucje Unii, miasto to byłoby głęboką europejską prowincją, pozostającą nawet w lokalnym cieniu Brugii, Antwerpii czy Gandawy. Podziwiać je najlepiej przez szyby dobrej restauracji, znad szklanki mocnego, ciemnego piwa, którego nazwy nigdy wcześniej się nie słyszało.</p>
]]></content:encoded></item><item><title>Dekalog</title><link>https://blog.mmakowski.com/travel/dekalog/</link><pubDate>Sun, 14 Oct 2012 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/dekalog/</guid><description>I. nie będziesz całego pobytu w Tel Avivie spędzał na plaży Garie to to nie jest. Fale niewielkie, a przyjemność z pluskania się psują pojawiające się niekiedy ławice fragmentów foliowych torebek i innego śmiecia. Wzdłuż plaży ciągnie się dość ruchliwa ulica, za nią stoi rząd wielkich hoteli. Tym niemniej, można tam przyjemnie spędzić godzinkę albo dwie, trochę mocząc się i pływając w osłoniętych falochronami obaszarach, trochę piekąc się na słońcu. Piasek przyjemny (choć sporo w nim papierosowych petów), co kilkaset metrów znaleźć można knajpę serwującą zimne napoje, miejscowa młodzież bawi się odbijając twarde piłeczki dużymi, drewnianymi paletkami, a młodzież młodsza buduje na brzegu zamki z piasku; nieźle, jak na centrum milionowego miasta.</description><content:encoded><![CDATA[<h2 id="i-nie-będziesz-całego-pobytu-w-tel-avivie-spędzał-na-plaży">I. nie będziesz całego pobytu w Tel Avivie spędzał na plaży</h2>
<p><a href="https://blog.mmakowski.com/travel/wyprawa-2010-11/trzy-pla%C5%BCe/">Garie</a> to to nie jest. Fale niewielkie, a przyjemność z pluskania się psują pojawiające się niekiedy ławice fragmentów foliowych torebek i innego śmiecia. Wzdłuż plaży ciągnie się dość ruchliwa ulica, za nią stoi rząd wielkich hoteli. Tym niemniej, można tam przyjemnie spędzić godzinkę albo dwie, trochę mocząc się i pływając w osłoniętych falochronami obaszarach, trochę piekąc się na słońcu. Piasek przyjemny (choć sporo w nim papierosowych petów), co kilkaset metrów znaleźć można knajpę serwującą zimne napoje, miejscowa młodzież bawi się odbijając twarde piłeczki dużymi, drewnianymi paletkami, a młodzież młodsza buduje na brzegu zamki z piasku; nieźle, jak na centrum milionowego miasta.</p>
<p>Co więc zrobić z resztą dnia? Myśmy poświęcali ją przede wszystkim na spacery i wycieczki rowerowe. Trasa wzdłuż morza jest popularna i dość wygodna jeśli chce się przedostać z północnej części centrum do Jaffy, ale zdecydowanie warto zapuścić się też w zacienione platanami uliczki w okolicy placu Dizengoffa. Znaleźć tam można piękne przykłady architektury Bauhausu, z pasmami balkonów zawijającymi się wokół białych, kilkupiętrowych budynków. W jednym ze sztandarowych przedstawicieli tego stylu, Cinema Hotel przy placu Dizengoffa właśnie, można zamieszkać; myśmy rezydowali w siostrzanym <a href="http://www.atlas.co.il/center-hotel-tel-aviv/">Center Chic</a> po przeciwnej stronie uliczki Zamenhofa. Plac Dizengoffa jest w ogóle ciekawie wymyślony: ponad skrzyżowaniem ulic znajduje się platforma-deptak, z umieszczoną cetralnie fontanną w geometryczne wzory. W sobotnie południe z umieszczonych wokół głośników usłyszeć można było muzykę Bacha.</p>
<p>Większość budynków mieszkalnych w tej dzielnicy nawiązuje w jakiś sposób do stylu szkoły z Dessau. Domy te często pozbawione są parterów: na poziomie gruntu znajduje się tylko wejście do klatki schodowej i filary podpierające kolejne piętra. W stworzonych w ten sposób podcieniach znajdują się podjazdy dla samochodów, małe ogródki i gromady kotów. Budynki, pamiętające lata trzydzieste ubiegłego wieku, często nie są w najlepszym stanie; łaty odłupanego tynku, łuszcząca się farba i rdza na kratach nie odbierają im jednak uroku.</p>
<p>Jeśli dreptanie po centrum wydaje się nie dość efektywnym sposobem przemieszczania się, Tel Aviv dysponuje siecią stacji z rowerami do wynajęcia. Myśmy z nich akurat nie korzystali, bo z hotelu mogliśmy wypożyczyć za darmo, ale sądząc z popularności zielonych rowerów z logo <a href="https://www.tel-o-fun.co.il/en/">Tel-O-Fun</a>, jest to wygodna opcja. Wynająwszy rower warto przejechać się bulwarem Rotszylda a następnie zjechać wąską Shabazi ku morzu.</p>
<p>Należy w końcu wybrać się do starej Jaffy, na wzgórze, z którego roztacza się efektowna panorama nowego Tel Avivu. Kręte, wąskie uliczki, średniowieczne mury kryjące wewnątrz knajpy z falafelem i sklepy z baklawą to miniaturowa, uporządkowana wersja starej Jerozolimy – o której później.</p>
<p>Wieść przewodnikowa niesie, że Tel Aviv jest też bardzo dobrym miejscem na nocne imprezowanie, ale tego akurat nie sprawdziliśmy na własnej skórze.</p>
<h2 id="ii-nie-będziesz-się-obżerał">II. nie będziesz się obżerał</h2>
<p>To nie jest proste – wszystko jest takie smaczne! Już pierwszego wieczora w Tel Avivie wylądowaliśmy w Mexicana przy ulicy Bograszowa, gdzie z trudem zmogliśmy osiem małych torilli z różnymi meksykańskimi dodatkami – wszystko, oczywiście, pyszne. Albo weźmy takiego Raphaëla, restaurację z górnej półki, chwaloną przez Lonely Planet jako jedną z najlepszych w mieście. Tego typu lokale nie mają w zwyczaju obdarzać gości owocami swojego kunsztu szczególnie hojnie, tu jednak rewelacyjne tangine z jagnięcą łopatką jest olbrzymie; co gorsza, serwują fantastyczne pieczywo, i jak tylko zobaczą, że zbliżamy się do końca koszyka, donoszą nowe. Niby wiadomo, że nie ma się co chlebem napychać, gdy czeka nas jeszcze główne danie, ale jest tak dobry, że trudno się powstrzymać. Godzinny spacer po kolacji nie pomógł – byłem tak najedzony, że z trudem się poruszałem i jeszcze większym trudem zasypiałem.</p>
<p>Nawet prozaiczny, śniadaniowy bufet w hotelu najeżony jest zasadzkami: aromatyczne sałatki, tabbouleh, śledź, owoce, kozie sery – jedna wielka konspiracja mająca na celu wypełnienie naszych żołądków i rozwalenie dietetycznych planów. Tak nas karmiono na śniadaniach serwowanych w telaviwskim Cinema Hotel. Szczęśliwie w jerozolimskim hostelu było bardziej skromnie: muesli, mleko, sałata, pomidor, ogórek i feta; tam pokusa, żeby najeść się na zapas na cały dzień była znacznie mniejsza.</p>
<p><img src="https://live.staticflickr.com/8476/8085954066_4ec83a2e99_b.jpg" alt="Sklep z baklawą w starej Jaffie"></p>
<p>Sklep z baklawą w starej Jaffie</p>
<p>Bardziej bezpieczną opcją wydaje się być szałarma, czyli po polsku kebab – dostaje się swoje mięso i warzywa zawinięte w pitę albo płaski placek, i tyle. Miejsc serwujących ten przysmak są setki, myśmy wypróbowali jedno na rogu Agripas i króla Jerzego w Jerozolimie, po 15 szekli za sztukę – polecamy. I w przypadku tego ulicznego jedzenia należy jednak się mieć na baczności, bowiem w Jaffie, gdy tylko właściciel lokalu zorientuje się, że ma do czynienia z turystami, zagania ich do restauracji na dachu, gdzie sadzani są przy stoliku i częstowani potrawami za grube dziesiątki szekli, w otoczeniu tuzinów sałatkowo-humusowych przystawek – i znów złamanie drugiego przykazania murowane. Na marginesie, humus jest tu rewelacyjny. Ja się nie znam, ale Ania była zachwycona.</p>
<p>Jedzenie jedzeniem, a napojom też warto poświęcić nieco uwagi. Izrael podobno zdobywa renomę jako producent win. Do konkurencji z winiarskimi potentatami podchodzą izraelczycy trochę z przymrużeniem oka: przeciwko francuskiemu <em>Châteauneuf du Pape</em> wystawiają swój <em>Garage de Papa</em>; z drugiej jednak strony robią to na poważnie – wspomniane wino (rocznik 2009, produkowane przez winiarnię Lewinsohna) jest świetne. Nasza niewielka próbka – dwa różne czerwone wina, jedno w ekskluzywnym Raphaëlu, drugie w masowo-turystycznym Amigo Emil – nie pozwala na wyciąganie daleko idących wniosków, ale wydaje się, że poziom nie jest jednak zbyt równy: drugi nasz kandydat, Domaine De Latroun Pinot Noir z 2009, wypadł nader przeciętnie. Choć może to kwestia szczepu winogron, bo nie przypominam sobie Pinot Noir, które by mi naprawdę smakowało.</p>
<p>Z piw rodzimych próbowałem popularnego Goldstara (nieciekawy) i jakowyś trunek אחרזת ב’ת o smaku miodowym – ciekawostka, ale nic nowego czy zachwycającego. Lepsze jest palestyńskie Taybeh (Gold smaczniejsze od Amber), ale to też lager, czyli właściwie bez większej różnicy czy pije się to, czy Heinekena. Lepiej przejść się ulicą i zakupić wyciskany na zamówienie sok z granatów – na jerozolimskim starym mieście wyciskarki są co dwa kroki. To dość droga impreza, 25 szekli za duży kubek, ale schodzi na taką porcję około dziesięciu owoców, a teraz właśnie, na początku października, jest sezon na granaty i sok jest rzeczywiście pyszny. Jeśli nie chcemy się wykosztowywać na granaty, świeże soki cytrusowe albo miksowane koktajle mleczne lub jogurtowe są też niczego sobie.</p>
<h2 id="iii-pamiętaj-aby-na-szabas-nie-planować-obszernego-programu-zwiedzania">III. pamiętaj, aby na szabas nie planować obszernego programu zwiedzania</h2>
<p>Stosując zwrot ukuty niegdyś przez Krzyśka Miernika powiedzieć można, że w Izraelu nie ma wyzysku. Przejawia się to w tym, że czas wolny jest święty – w przenośni i dosłownie. Nasz samolot wylądował na lotnisku Ben Guriona w piątek po południu, nie tak późno nawet, przed 16, lecz okazało się, że pociągi i autobusy już nie jeżdżą. Jedyna szansa, by dostać się do Tel Avivu, to taksówka. W mieście ulice puste, sklepy i knajpy pozamykane – i tak do zmroku w sobotę. To samo w święta religijne. W poniedziałek po naszym przylocie planowaliśmy wyjeżdżać z Tel Avivu na południe. Okazało się, że w ten akurat dzień wypada Hoszana Rabba i samochód musimy odebrać do niedzielnego południa – później wszystko jest zamykane.</p>
<p>W bardziej religijnej Jerozolimie, na godzinę przed piątkowym zachodem słońca dźwięk syren przypomina pochłoniętym pracą mieszkańcom, że pora udawać się do domu na tradycyjną kolację. Jeśli chce się załapać na busa na lotnisko, trzeba zamawiać z ponad dobowym wyprzedzeniem.</p>
<p>Szczęśliwie nie ma państowych przepisów mówiących, że w soboty pracować nie wolno, tak, że znaleźć można gdzieniegdzie (w Jerozolimie poszukiwania warto zacząć od nieżydowskich kawałków starego miasta) sklepiki i stragany otwarte w szabas. Pamiętać jednak warto, że instytucje publiczne (w tym miejski transport) i większość prywatnych biznesów zamknięta jest w ten dzień na cztery spusty, co ogranicza nasze możliwości zwiedzania.</p>
<h2 id="iv-szanuj-przepisy-parkowania">IV. szanuj przepisy parkowania</h2>
<p>Ruch uliczny na bliskim wschodzie nie cieszy się dobrą sławą i stan karoserii Mazdy 2, którą wynajęliśmy na kilka dni, zdawał się to potwierdzać. Ów weteran szos z osiemdziesięcioma tysiącami kilometrów na liczniku (my dołożyliśmy kolejne pięćset) poznaczony był zadrapaniami i wgnieceniami. Wewnątrz ułamana kratka wentylacyjna, zepsuta plastikowa półka nad bagażnikiem – pod względem stanu technicznego samochód nasz znacznie odbiegał od nowiutkich aut które wypożyczaliśmy <a href="https://blog.mmakowski.com/travel/tn/">w USA</a> i <a href="https://blog.mmakowski.com/travel/dziennik-islandzki/">na Islandii</a>.</p>
<p>Jazda z biura Avis przy HaYarkon w Tel Avivie pod nasz hotel była dość żmudna; trasa, którą na piechotę pokonywaliśmy w dziesięć minut, samochodem zajęła pół godziny za sprawą kluczenia jednokierunkowymi uliczkami i korków na głównych arteriach. Następnie okazało się, że hotel nie dysponuje miejscami parkingowymi, i choć można próbować stawać na dziko, grozi to blokadą lub odholowaniem przez służby miejskie, tak, że gościom zaleca się pozostawienie samochodu na parkingu najbliższego centrum handlowego – szczęśliwie odległego o zaledwie pięć minut spaceru.</p>
<p>Poza parkowaniem i miejskimi korkami, źródłem drogowych emocji mogą być też tablice informujące gdzie się jest i dokąd jechać. Nazwy ulic zapisane są z reguły zarówno po hebrajsku jak i transkrypcją łacińską, ta ostatnia jednak nie jest ustalona jednoznacznie, więc na ulicznych tablicach odbiegać może od tej na mapie. Również oznaczenia na autostradzie nie zawsze są czytelne, zaś myśmy poskąpili na lokalny GPS i opieraliśmy się na sciągniętych w hotelu fragmentach Google Maps, w związku z czym raz wywiozło nas w kierunku odmiennym od zaplanowanego.</p>
<p>Poza tym jednak jazda samochodem po Izraelu była nadspodziewanie bezproblemowa. Nawet w gęstym ruchu telaviwskim czy jerozolimskim miejscowi kierowcy zachowywali się ostrożnie i uprzejmie, i gdyby nie kłopoty z miejscami parkingowymi byłoby to doświadczenie zupełnie bezstresowe. Samochodzik nasz, pomimo dużego przebiegu, jeździł bez zarzutu, i radził sobie dobrze zarówno na autostradzie jak i gruntowych drogach pustyni Negev.</p>
<p>Do hebrajskiego wracając: alfabetu nauczyć się dość łatwo, literek jest niewiele i większość jest łatwo rozróżnialna. Jedyny szkopuł to brak samogłosek; w <a href="http://en.wikipedia.org/wiki/Hebrew_alphabet">artykule na Wikipedii</a> jak i w innych źródłach, do których dotarłem, piszą o systemie kropek, które mają sygnalizować jaką samogłoskę wstawić, ale próżno ich szukać w napisach widocznych na mapach i tablicach informacyjnych. Spotkać je można chyba tylko w książkach dla dzieci i w hebrajskich transkrypcjach obcych słów; pewnie założenie jest takie, że dorośli już wiedzą, jak się różne słowa wymawia, więc nie muszą mieć wszystkich literek. Ja sobie z tym radziłem tak, że odczytując hebrajskie napisy między wszystkie spółgłoski wstawiałem “a”, chyba, że był tam apostrof, wtedy wstawiałem “i” – na ogół wychodziło podobnie do łacińskich transkrypcji.</p>
<h2 id="v-nie-omijaj-makhtesh-ramon">V. nie omijaj Makhtesh Ramon</h2>
<p>Czy warto odwiedzić biblijne miejsca w Galilei typu Nazaret, Betlejem etc. tego nie wiem, bośmy tam z braku czasu nie zawitali; po tym, jak wygląda zwiedzanie miejsc o podobnej proweniencji w Jerozolimie skłonny jestem jednak sądzić, że można sobie tę atrakcję bez większego żalu odpuścić. Nie należy natomiast rezygnować z podróży na południe, na pustynię Negev, w szczególności do krateru Ramon.</p>
<p>W okolicach Be’er Sheva pustynia nie jest specjalnie piękna: mi, nie nawykłemu do tego rodzaju widoków, przypominała nieco obrazki z Marsa, których ostanio dużo w mediach za sprawą misji Curiosity – tyle, że mniej rude, i upstrzone gdzieniegdzie obskurnymi, blaszanymi barakami, w których, zdaje się, mieszkają Beduini. Krater Ramon, natomiast, to zupełnie inna historia: dziura w ziemi o rozmiarze kilkanaście na kilkadziesiąt kilometrów, otoczona kilkusetmetrowymi klifami, odsłaniającymi wielokolorowe warstwy różnego rodzaju skał i zawierająca masę gór, dolin i kanionów.</p>
<p>Wrotami do krateru jest miasteczko Mitzpe Ramon, gdzie zastaliśmy zamknięte z racji Hoszana Rabba centrum informacji turystycznej, za to tuż obok otwarte mini-zoo o nazwie Bio Ramon. Tam, za opłatą 20 szekli od osoby, miła pani przewodniczka wygrzebała dla nas chowającą się w piasku jaszczurkę i opowiedziała o życiu seksualnym jeżozwierzy. Wyświetlono nam też piętnastominutowy film traktujący o pochodzeniu krateru; okazuje się, że nie powstał on na skutek spektakularnego wybuchu czy uderzenia, lecz za sprawą trwających miliony lat zjawisk krasowych.</p>
<p>Z Mitzpe Ramon prowadzi przez krater szosa do Eilat – kurortu nad Morzem Czerwonym. Przy szosie tej mieści się kilka atrakcji, między innymi tzw. “stolarnia”, czyli pagórek pokryty fragmentami bazaltowych kolumn, które komuś skojarzyły się oberżniętymi drewnianymi palikami. Do większości ciekawych tras pieszych dojechać jednak trzeba kilometrami dróg gruntowych. W Mitzpe Ramon warto zaopatrzyć się w <a href="http://parks.org.il/sigalit/DAFDAFOT/ramonEn.pdf">mapkę szlaków</a>, pokazującą również, które drogi dostępne są dla zwykłych samochodów, które tylko dla terenowych, a które przebyć można wyłącznie pieszo.</p>
<p>Do krateru zajechaliśmy pod wieczór, zatrzymaliśmy się więc na jednym z wyznaczonych miejsc campingowych. Na terenie parku znajduje się jeden camping zorganizowany, z infrastrukturą, beduińskimi namiotami i domkami, które można wynająć. Myśmy wybrali wariant bardziej dziki, czyli plac na końcu drogi biegnącej Nahal Gevanim, przy którym umieszczono tablicę informującą, że tu można nocować. Ziemia jest tam tak twarda, że nie ma co marzyć o wbiciu namiotowych szpilek; poradziliśmy sobie w końcu przytrzaskując je kamieniami.</p>
<p>Podnóże góry Saharonim, gdzie nocowaliśmy, to miejsce niezwykłe, kompletnie odludne, odległe od najbliższych większych miast o prawie sto kilometrów. W nocy pięknie widać gwiazdy, z wyraźną Drogą Mleczną i wszystkimi innymi konstelacjami, o których nie mam większego pojęcia. Spaliśmy przy otwartych drzwiach (zasunęliśmy jedynie moskitiery, żeby nam skorpiony i inne paskudztwa nie powłaziły w nocy), zasypiając widzieliśmy rozgwieżdżone niebo. Temperatura w nocy nie spadła poniżej 15 stopni, tak, że nasze lekkie śpiwory plus jedwabne wkładki okazały się w zupełności wystarczające. Jedyny mankament tego miejsca to przebiegająca nad placem linia wysokiego napięcia, której słup bez przerwy buczał i skwierczał, przypominając w ten sposób, że i na to odludzie dotarła cywilizacja.</p>
<p>Okazało się, że mieliśmy szczęście do pogody, bowiem dzień, na który zaplanowaliśmy dłuższą wycieczkę, miał być wyjątkowo chłodny – zaledwie 23 stopnie w cieniu. Inna sprawa, że informacja o temperaturze w cieniu jest na Negev niezbyt przydatna, bowiem cienia tam praktycznie nie ma – przez cały niemal czas przebywa się na słońcu. Wyruszyliśmy około 9 rano, kierując się biegnącym drogą zielonym szlakiem w stronę ruin karawanseraju, a później przez fantastyczny kanion w kształcie podkowy, którym w porze deszczowej płynie spora rzeka. Na koniec zamknęliśmy pętlę wracając na camping przez górę Saharonim. Podejście na tę ostatnią nie jest ani specjalnie strome, ani trudne technicznie, ale w tym upale, na słońcu, okazało się bardzo wyczerpujące! Pokonanie całej trasy zajęło nam niecałe trzy i pół godziny, a zapas półtora litra wody na osobę, który zabraliśmy, okazał się ledwo wystarczający; polecałbym brać ze dwa razy tyle.</p>
<p>Podczas wizyty w Bio Ramon ostrzegano nas przed licznymi jadowitymi stworzeniami, jednocześnie uprzedzając, że niewiele zwierząt zobaczymy, gdyż mieszkańcy pustyni mają zwyczaj chować się pod kamieniami i w piasku. Istotnie: jedynymi żywymi istotami, jakie spotkaliśmy – prócz kilkorga innych turystów – były ptaki, parę jaszczurek i jeden pająkowato wyglądający owad.</p>
<p><img src="https://live.staticflickr.com/8475/8085992219_5e20e095f1_c.jpg" alt="jeden z kanionów w Makhtesh Ramon"></p>
<p>jeden z kanionów w Makhtesh Ramon</p>
<h2 id="vi-nie-nocuj-na-plaży-w-ein-bokek">VI. nie nocuj na plaży w Ein Bokek</h2>
<p>O ile obozowanie w Makhtesh Ramon to fantastyczna sprawa, o tyle wystrzegać się należy namiotowania na plaży w Ein Bokek. Lonely Planet polecało to miejsce jako wygodne i przyjemne, jedno z lepszych biwakowisk nad Morzem Martwym, tymczasem miejscowość ta to typowo nadmorski kurort, obsługujący głównie turystów rosyjskich. Knajpy są nieciekawe, prysznice tylko odsłonięte, przy wyjściu z wody, a kible płatne i zamykane niedługo po zmroku. Do tego światła z ciągnącej się wzdłuż plaży ulicy i wielkich hoteli po jej przeciwnej stronie, oraz dźwięki arabskiego disco z zaparkowanego obok samochodu, którego kierowca postanowił zademonstrować moc swego systemu audio, nie tworzą klimatu sprzyjającego relaksacji.</p>
<p>Przyznać jednak należy, że pobudka przed siódmą, kiedy to słońce pojawia się nad jordańskim brzegiem jeziora zaś z pobliskiej knajpy płynąć zaczyna nastrojowe plumkanie jakiegoś niuejdżowego czilautu, gdy wciągnięcie gatek i kilkanaście metrów piaszczystej plaży dzieli nas od kojącego zanurzenia się w solance, jest całkiem przyjemna.</p>
<p>Jeśli więc nie plaża w Ein Bokek, to co? Możnaby o Morze Martwe zahaczyć tylko, popławić się trochę i jechać dalej, atrakcje z przykazania VII zaliczając w ciągu jednego dnia, bazując np. w Jerozolimie. Można zaobozować na plaży w Ein Gedi (choć nie wiem, czy będzie się to specjalnie różniło on Ein Bokek). Można poszukać hostelu. Nie wiemy, która z tych opcji jest najlepsza; wiemy jedynie, że nocleg na plaży w Ein Bokek do szczególnie przyjemnych nie należy.</p>
<h2 id="vii-nie-zapominaj-że-morze-martwe-to-nie-tylko-kąpiele">VII. nie zapominaj, że Morze Martwe to nie tylko kąpiele</h2>
<p>Kąpiel w Morzu Martwym to ciekawe doświadczenie i bynajmniej nie należy z niego rezygnować. Wejście po kostki nie daje może jeszcze powodów do entuzjazmu – ot, ciepława woda i nieruchoma tafla – jednak już przy zanużeniu się po kolana czuje się nietypową gęstość cieczy. Gdy wejdźmy po pas, ni stąd ni zowąd nasze nogi unoszą się nagle i lądujemy lekko zgięci, na plecach, unosząc się na powierzchni wody w charakterystycznej pozie widocznej na wszystkich niemalże zdjęciach znad tego słonego jeziora; okazuje się, że jest to naturalna pozycja ludzkiego ciała zanurzonego w Morzu Martwym. Położywszy się, poruszać się możemy dostojnie, wykonując powolne ruchy rękoma i pilnując, żeby nie nachlapać solanką do oczu i innych wrażliwych otworów.</p>
<p>Kąpiel jest więc obowiązkowa, ale nie powinna przysłaniać faktu, że wybrzeże “morza” to fantastyczny krajobraz gór, które w istocie górami nie są, bowiem ponad powierzchnię tego prawdziwego morza wystają zaledwie kilkadziesiąt metrów. Od powierzchini Morza Martwego dzieli je natomiast metrów ponad czterysta, tyle bowiem wynosi głębokość depresji, w której leży owo słone jezioro. Przypomnieć tu może warto, że nazwa “morze” jest mocno na wyrost, gdyż wielkość tego zbiornika wodnego porównywalna jest z jeziorami mazurskimi, zas przeciwległy, jordański brzeg, widać wyraźnie. Tym niemniej depresja owocuje spektakularnym krajobrazem kryjącym kilka perełek. Odwiedziliśmy dwie z nich: <em>Masadę</em> i park <em>Ein Gedi</em>.</p>
<p>Masada to twierdza zbudowana przez króla Heroda, który, prócz tego, że wedle przekazów biblijnych i nie tylko był niezłym paranoikiem, zapisał się w historii Żydów jako wielki budowniczy. Położona na szczycie niedostępnej skały uważana była za niezwykle trudną do zdobycia. Poczesne miejsce w historii Żydów zapewniła jej obrona przed rzymskim oblężeniem, kiedy to przekonani o nadciągającej klęsce obrońcy popełnili zbiorowe samobójstwo. Dziś do odkopanych i częściowo odbudowanych w latach sześćdziesiątych i siedemdziesiątych ubiegłego wieku ruin fortecy dostać się można od strony morza stromą ścieżką lub kolejką linową. Myśmy zdecydowali się na ten drugi wariant – po części z braku czasu, po części ze względu na to, że wspinaczkę w upale zaliczyliśmy już poprzedniego dnia, a po części ze względu na nadzieję ciekawych widoków w trakcie jazdy; te ostatnie są fajne, ale równie dobre można obejrzeć z góry (w dół) lub z dołu (w górę). Po dotarciu na płaskowyż warto wypożyczyć audioprzewodniki, które oprowadzą nas po pozostałościach pałacu Heroda, łaźni, magazynów i innych zabudowań. W odrestaurowanych pomieszczeniach zobaczyć można podłogowe mozaiki i ścienne freski – w większości są to kopie, oryginały są do obejrzenia w muzeum na dole (warto). Z murów twierdzy roztacza się piękny widok na izraelskie wybrzeże Morza Martwego, widać też wyraźnie strukturę obozów oblegających wojsk rzymskich. Na zwiedzenie kompleksu poświęciliśmy trzy godziny i było to trochę mało – część bydynków na górze musieliśmy pominąć.</p>
<p>Po południu mieliśmy być w Jerozolimie i oddać samochód, niewiele nam więc też czasu pozostało na inny ciekawy punkt wybrzeża: Ein Gedi. Prócz kurortu, spa oraz kibuca, nazwa ta oznacza też park, w którym spływające z góry strumienie ożywiają pustynny krajobraz dżunglowatą roślinnością i wodospadami. W tej scenerii wyznaczono sporo szlaków pieszych, z których większość wymaga kilku godzin marszu pod górę i w upale. Myśmy zaliczyli tylko najprostszą trasę, do wodospadu Dawida – około trzech kwadransów tam i z powrotem.</p>
<p><img src="https://live.staticflickr.com/8468/8086048459_8ae7203c06_b.jpg" alt="trasa do wodospadu Dawida"></p>
<p>trasa do wodospadu Dawida</p>
<p>Z racji swej dostępności trasa jest gęsto obsadzona przez turystów, zaś sam wodospad niezbyt spektakularny; najfajniesze są końcowe fragmenty trasy prowadzące wzdłuż potoku, stworzonym przez gęstą roślinność zadaszonym korytarzem. Czasu nam starczyło jeszcze na obejrzenie pozostałości synagogi z początkowych wieków naszej ery; zachowały się tam piękne mozaiki, praktycznie cała podłoga głównego pomieszczenia. Znajduje się ona pod wielkim namiotem, tak, że upał nie doskwiera.</p>
<h2 id="viii-nie-staraj-się-dostać-na-wzgórze-świątynne-za-wszelką-cenę">VIII. nie staraj się dostać na Wzgórze Świątynne za wszelką cenę</h2>
<p>Do Jerozolimy dotarliśmy wprost znad Morza Martwego, i po zakwaterowaniu w hostelu oraz odstawieniu pożyczonego w Tel Avivie samochodu, udaliśmy się na spacer na stare miasto.</p>
<p>Pierwsze wrażenie trudne jest do opisania, tym niemniej spróbuję. Wchodzimy przez bramę jafską i ruszamy na wprost, w ulicę Dawida; chcieliśmy znaleźć chwaloną przez Lonely Planet knajpę, którą zlokalizowaliśmy na mapie. Nasz plan to iść prawie do końca Dawida, później skręcić w Beit HaBad, w stronę bramy damasceńskiej, a następnie w El Khanqa. Podświadomie oczekiwałem chyba czegoś w stylu uliczek warszawskiej starówki, tymczasem ulica Dawida to przesmyk szeroki może na dwa metry, z obu stron nieprzerwany rząd małych sklepików, których towar, głównie asortymentu pamiątkowego, wisi i rozłożony jest przed drzwiami, czyniąc przejście jeszcze węższym. Środkiem płynie niezbyt gęsty tłum turystów. W pewnym momencie mam wrażenie, że idę nie ulicą, a tunelem; patrzę do góry, i rzeczywiście: nieba nie widać, nad głową sklepienie. Tymczasem pasaż prowadzi dalej i dalej, schodząc niezbyt stromo w dół, jakby w głąb ziemi. Wokół wciąż stragany, zapachy bardzo intensywne, drzewa sandałowego, kminu, kardamonu, goździków, kadzidła. Hałas umiarkowany: sklepikarze od czasu do czasu nagabują przechodniów, rozmawiają ze sobą po arabsku. Gdzieniegdzie słychać z głośników rytmiczną, wschodnią muzykę, z innych głośników zawodzenie muezina.</p>
<p>Dochodzimy do końca Dawida – oczywiście przegapiliśmy skręt w Beit HaBad – zakręcamy więc w lewo, na azymut. Jesteśmy wciąż w sklepionym tunelu, ale widok zupełnie inny: wszystkie stragany pozamykane (było już po piątej, zapadał zmrok), tylko jedne drzwi w długiej uliczce otwarte, za nimi komórka o wymiarze metr na półtora, cała zawalona jakimś antycznym żelastwem: biżuterią, menorami, dzbanami, itp. Trudno powiedzieć, czy to stragan, czy schowek zdziwaczałego staruszka, który ma manię gromadzenia wszystkiego, co znajdzie.</p>
<p>I ten zaułek się wnet kończy i trafiamy z powrotem na główną arterię, z jej ruchem, straganami, zapachami i hałasem. Charakter jednak się nieco zmienia, mniej jest pamiątek, pojawiają się za to rzeźnicy, na hakach wiszą półtusze baranie, obok sklepy z małymi artykułami gospodarstwa domowego, jakby więcej jest miejscowych, mniej turystów. Miejscami sklepienie znika, okazuje się, że nie do końca jest to tunel, lecz raczej wąwóz między wysokimi budynkami, których łączniki i daszki tworzą niespójny sufit. Nie jestem już pewien, czy to sklepienie, które widziałem wcześniej to było faktyczne, czy tylko mi się zdawało.</p>
<p>Po kilku lub kilkunastu minutach błądzenia odnajdujemy w końcu naszą knajpę. Po kolacji ruszamy w drogę powrotną, w jakimś straganie targuję się o cztery małe talerzyki, idzie nawet nieźle, sprzedawca schodzi z 80 do 50 szekli, ale gubię się i odchodzę z niczym. Jeśli jest coś takiego jak miejsce “magiczne”, to jerozolimskie stare miasto bez wątpienia się kwalifikuje.</p>
<p>Następnego dnia rano znów jesteśmy na starówce, tym razem w ramach wycieczki organizowanej przez Sandemans, Firma ta skutecznie promuje się organizując “darmowe” (w rzeczywistości oczekuje się, że przewodnik dostanie napiwek), <a href="http://www.newjerusalemtours.com/">dwugodzinne wycieczki po starym mieście</a>. Skorzystaliśmy z tej możliwości, i, jako że przewodnik opowiadał zajmująco, również z popołudniowej, płatnej wycieczki po świętych miejscach.</p>
<p><img src="https://live.staticflickr.com/8464/8086065422_ff07d1f720_b.jpg" alt="mało uczęszczana uliczka starego miasta"></p>
<p>mało uczęszczana uliczka starego miasta</p>
<p>Poranna, przekrojowa była bardzo fajna i dała nam podstawową wiedzę o czterech częściach starego miasta przyporządkowanych według religijno-narodowościowych podziałów – chrześcijańskiej, muzułmańskiej, żydowskiej i ormiańskiej – oraz o historii miasta, Popołudniowa jest słabsza: odwiedzamy “salę ostatniej wieczerzy”, czyli jakąś średniowieczną salkę w której turyści wyobrażają sobie, że miejsce miał ów słynny posiłek, znajdujący się piętro niżej “grobowiec króla Dawida”, czyli małą izdebkę ze skrzynią przykrytą purpurowym suknem. Odstajemy godzinę w kolejce na słońcu, żeby na dwadzieścia minut wejść na Wzgórze Świątynne, sfotografować z zewnątrz meczet Al Aksy i Kopułę na Skale – do środka wchodzić mogą tylko muzułmanie – i opuścić to superświęte miejsce. Najlepsze było na koniec, kiedy już niewiele energii do zwiedzania nam zostało: wizyta w Bazylice Grobu. Jest to najciekawszy punkt programu, bowiem organizacja tego kościoła jest kuriozalna: jeden budynek, a składa się z szeregu kaplic zbudowanych wokół różnych ważnych dla Chrześcijan miejsc, rzeczywistych lub umownych, każda pod opieką jednego z kościołów chrześcijańskich. I tak np. prawosławni mają “grób”, Ormianie zdaje się czubek Golgoty, a katolicy miejsce, gdzie nic ciekawego nie ma, chyba tylko Duch Święty. Jest ta kohabitacja źródłem różnych niesnasek, jak ta sprzed kilku lat gdy ormiańscy i greccy mnisi <a href="http://news.bbc.co.uk/1/hi/7718587.stm">pobili się nie wiadomo o co</a>.</p>
<p>Podsumowując: na “darmową” wycieczkę warto pójść, dobrze jest zobaczyć Bazylikę Grobu, na Wzgórze Świątynne tylko zajrzeć jeśli akurat nie ma kolejki (podobno czasem nie ma). Najciekawsze i tak są spacery wąskimi, krętymi i stromymi uliczkami, liczące setki lat mury i bruk, zapachy, dźwięki, kontrasty między kulturami.</p>
<h2 id="ix-odwiedź-yad-vashem">IX. odwiedź Yad Vashem</h2>
<p>Jeśli religia nas nie kręci, a potrzebujemy mocnych wrażeń, Jerozolima mieści centrum pamięci ofiar Holokaustu. Znajduje się w pięknej, górzystej okolicy na obrzeżach miasta, lecz dojechać tam łatwo: wystarczy wsiąść w tramwaj i wysiąść na ostatnim przystanku, góra Herzl, z tamtąd zaś przespacerować się dziesięć minut. Centrum jest bardzo efektowne; jego trzon stanowi budnek muzeum: długi, betonowy, leżący graniastosłup o trójkątnej podstawie, którego jeden koniec zawieszony jest nad zboczem góry. Wokół mieszczą się ogrody, w których każde drzewo zadedykowane jest komuś ze “sprawiedliwych wśród narodów” – osób, organizacji, a czasem całych narodów (Duńczycy), które broniły Żydów przed śmiercią z rąk Nazistów. Ania chcíała znaleźć drzewka kilkorga konkretnych Polaków, lecz poświęcić na to trzeba by było chyba cały dzień, tyle tam tego jest.</p>
<p>Nazistowskie mordy na Żydach to temat dobrze nam znany i nie należy się spodziewać od muzeum nowych na ten temat rewelacji. To, co robi wrażenie, to dokładna, chronologiczna dokumentacja całego procesu i nagromadzenie wszystkich tych faktów i eksponatów w jednym miejscu. Najbardziej poruszająca jest sala archiwum na samym końcu, gdzie na ścianach wielkiej rotundy mieszczą się rzędy półek, a na nich segregatory z kartoteką pomordowanych. Połowa z półek jest pusta, bowiem na temat trzech z sześciu milionów ofiar brak jest danych.</p>
<p>Pomniki narodowej martyrologii i mordów o trudnej do wyobrażenia skali widzieliśmy <a href="https://blog.mmakowski.com/travel/wyprawa-2010-11/phnom-penh/">w Kambodży</a>. Yad Vashem robi większe wrażenie, i to nie ze względu na znacznie większy rozmach przy realizacji centrum. Czerwoni Khmerzy działali w odległej kulturze, której niektóre założenia trudno jest nam zrozumieć, trudniej identyfikować się z ofiarami, oprawcami, i tymi, którzy stali z boku. Zbrodnie przeciwko Żydom miały miejsce na ulicach Warszawy, w lasach pod Lublinem, uczestniczyli w nich ludzie o podobnym nam podłożu kulturowym; to powoduje, że do Europejczyka ten akurat monument przemówi pewnie mocniej.</p>
<h2 id="x-poznaj-innych-podróżników">X. poznaj innych podróżników</h2>
<p>W Jerozolimie mieszkaliśmy w hostelu Abraham przy placu Davidka. Instytucja ta zajmuje duży budynek i oferuje noclegi we wspólnych salach i indywidualnych pokojach o przyzwoitym standardzie. Nie jest to tylko noclegowania – jednym z celów hostelu jest przybliżenie gościom kultury Izraela, i w ramach realizacji tegoż oranizowane są wycieczki bliższe (jak pub crawl) i dalsze (np. na pół dnia do kibucu) oraz kolacja szabasowa, w której każdy może wziąć udział. Posiłek zaczyna się między 19 a 20, ale warto we wspólnej kuchni pojawić się około 17:30, żeby wziąć udział w przygotowaniach. Myśmy dotarli na 18:15 i jedyna robota, która dla nas została to zmywanie i nakładanie jedzenia.</p>
<p>W naszej kolacji udział brało około pięćdziesięciu osób; rozpoczęła się od tradycyjnego błogosławieństwa świec, wina i chleba, poza tym jednak charakter miała bardzo nieformalny i stanowiła dobrą okazję do wymiany doświadczeń z innymi siedziącymi przy długich stołach globtroterami. Jedzenie fajne, głównie różnego rodzaju sałatki, do tego mięsne kulki, pieczone warzywa, ryż mocno przyprawiony goździkami.</p>
<p>Abraham hostel ma świetnie wymyśloną wspólną przestrzeń, tak, że znajomości z innymi mieszkańcami hostelu nawiązywać można nie tylko w szabas. Każdego wieczora we wspólnej sali, która mieści kuchnię, jadalnię, bar, gry stołowe, instrumenty muzyczne oraz dużo miejsca do siedzenia i leżenia, zbiera się kilkadziesiąt osób, z którymi można pogadać, wypić piwo, pograć w bilard i na inne sposoby spędzić czas w przyjaznej atmosferze. Tak właśnie upłynął nam ostatni wieczór przed wylotem i nie wątpię, że hostel i jego mieszkańcy przyczynili się do tego, że nasz wyjazd do Izraela był bardzo udany.</p>
<p><a href="http://flickr.com/gp/mmakowski/7Zi3n3/">Israel</a></p>
]]></content:encoded></item><item><title>Tesco Finest Salad</title><link>https://blog.mmakowski.com/cooking/tesco-finest-salad/</link><pubDate>Wed, 15 Aug 2012 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/tesco-finest-salad/</guid><description>After moving to London to live on my own, I rented a one bed flat located on the top floor of a 16-story high tower block. It was a 1970s, local authority building, and the unquestionable advantages of awesome view over the city, proximity to work and affordability were somewhat counterbalanced by extreme heat in the summer, biting cold in the winter and the council tenants taking their bull terriers to relieve themselves in the lift.</description><content:encoded><![CDATA[<p>After moving to London to live on my own, I rented a one bed flat located on the top floor of a 16-story high tower block. It was a 1970s, local authority building, and the unquestionable advantages of awesome view over the city, proximity to work and affordability were somewhat counterbalanced by extreme heat in the summer, biting cold in the winter and the council tenants taking their bull terriers to relieve themselves in the lift.</p>
<p><img src="https://farm1.staticflickr.com/49/125775852_008fac8b0d_n.jpg" alt="the view from the home of spaghetti with tomato sauce"></p>
<p>the view from the home of spaghetti with tomato sauce</p>
<p>I sustained on spaghetti with tomato sauce: dice a couple of tomatoes, add <em>Herbes de Provence</em>, a lot of pressed garlic and chopped parsley, and a spoon of tomato puree – these Lidl tomatoes could lie months on a shelf without going off, but flavour they had none; fry for a couple of minutes, meanwhile cooking the pasta <em>al dente</em>. Finally mix it all and add a decent amount of grated parmesan on top, plus some extra chopped parsley. Quick, cheap and delicious – I could gobble up a kilo of this stuff, so that I literally couldn’t move, that’s how I liked it.</p>
<p>Two years on, my girlfriend moved in, and after about two weeks of my staple diet declared that she’d rather dine on the bodily fluids and solids scraped off the lift’s wall than have another bite of my favourite spaghetti. Apparently, there was nothing wrong with the dish <em>per se</em>, just the frequency of it. This must have been the first time I realised you can have too much of the good thing. Turns out, once I exaggerate, that’s it – a year can pass, and Ania will still not touch it. Since then, I’m careful not to kill a perfectly good meal by making it too often, but on a couple of occasions I could not resist a new favourite and it ended with my now wife suggesting that perhaps we could order a takeaway instead. The most recent victim of my enthusiasm is a nice and simple salad, composed of ingredients available in our local Tesco’s.</p>
<p><img src="https://farm9.staticflickr.com/8298/7889342176_45b254f907_n.jpg" alt="the salad"></p>
<p><strong>Avocado</strong> is the ultimate food; nowadays I use it in everything, even in sandwiches as a butter substitute. They used to be problematic, because these bought in shops or at the markets usually needed to ripen for a day or two. Not so Tesco’s “ready to eat”, sold in twin packs. We’ll buy three packs, i.e. six pears; if you’re not as keen on avocados as I am, four will be enough. Another Tesco’s hit are Finest <strong>Piccolo Cherry Tomatoes</strong> – there is now a deal with two for £3, so why not take four? Another deal we’ll take advantage of is two packs of <strong>flame-grilled chicken mini-breasts</strong>, £5 for two packs. We’ll also need one <strong>cucumber</strong>, one <strong>iceberg lettuce</strong> and, last but not least, <strong>mozarella</strong>, two balls. I used to use Tesco’s own brand until I tried Castelli and never looked back.</p>
<p>These ingredients will suffice for two large bowls of the salad, so I use half at a time. Dice everything into cubes less that 1 cm in size, put in a large bowl, add a good glug or two of unfiltered olive oil – I find Farchioni very nice – a little bit of sea salt and lots of freshly ground black pepper. Ania doesn’t eat it, so this is enough for two of my lunches and a dinner.</p>
]]></content:encoded></item><item><title>Dziennik islandzki</title><link>https://blog.mmakowski.com/travel/dziennik-islandzki/</link><pubDate>Mon, 30 Jul 2012 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/dziennik-islandzki/</guid><description>Poniedziałek Tyle się teraz wozi ze sobą dupereli, że co i rusz zapomni się o czymś ważnym. Powtarzam sobie, że grunt, żeby paszport i pieniądze były, resztę się da zorganizować na miejscu, a tu bach – zapominam karty PADI (Ania też nie wzięła), i główny punkt programu stoi pod dużym znakiem zapytania. Przypomniałem sobie w autobusie z lotniska w Keflavik do Reykjaviku, i natychmiast wysłałem maila do firmy organizującej nurkowania w Silfra.</description><content:encoded><![CDATA[<h2 id="poniedziałek">Poniedziałek</h2>
<p>Tyle się teraz wozi ze sobą dupereli, że co i rusz zapomni się o czymś ważnym. Powtarzam sobie, że grunt, żeby paszport i pieniądze były, resztę się da zorganizować na miejscu, a tu bach – zapominam karty PADI (Ania też nie wzięła), i główny punkt programu stoi pod dużym znakiem zapytania. Przypomniałem sobie w autobusie z lotniska w Keflavik do Reykjaviku, i natychmiast wysłałem maila do firmy organizującej nurkowania w Silfra. Pół godziny później wszystko było załatwione – znaleźli nasze dane w bazie nurków, i nic nie stało na przeszkodzie, żeby kolejnego dnia rano zażyć lodowatej kąpieli. Jak myśmy sobie radzili bez smartfonów?</p>
<p>Zatrzymujemy się w guesthausie 101, czyli hoteliku z najniższej półki. W recepcji wita nas grupa Azjatów, co obudziło skojarzenia z guesthausami w których zamieszkiwaliśmy w Indochinach. Zakwaterowano nas w mieszkaniu po przeciwnej stronie ulicy, gdzie dostaliśmy dwuosobowy pokój; prócz niego był jeszcze jeden, pusty.</p>
<p>Na kolację wybieramy się do restauracji Einar Ban, reklamowanej przez przewodnik jako miejsce lubiane przez dyplomatów. Jedzenie przyzwoite, a jagnięcina wręcz świetna.</p>
<p><img src="https://live.staticflickr.com/8434/7679002772_cd4b7e2d3a_b.jpg" alt="W Einar Ban"></p>
<h2 id="wtorek">Wtorek</h2>
<p>Okazuje się, że w naszym mieszkanku mamy jednak współlokatorów – nasłuchujemy przez drzwi kiedy łazienka jest wolna, oni chyba stosują podobną taktykę, tak że unikamy stanięcia z nimi twarzą w twarz. Śniadanie w głównej siedzibie guesthouse’u jest bardzo skromne; wędliny Wikingów nie budziły nigdy mojego zaufania, na szczęście mleko jest bardzo dobre.</p>
<p>Taksówka spóźnia się dziesięć minut, później nie możemy znaleźć wypożyczalni samochodów, a w końcu okazuje się, że ktoś po nas wyjechał chociaż pisaliśmy, że przyjedziemy do biura. A cały stres związany z tym zamieszaniem niepotrzebny, bo w Þingvellir jesteśmy na dziesięć minut przed startem nurkowania.</p>
<p><a href="http://www.silfra.org/">Silfra</a> jest przereklamowana: miała być woda o temperaturze dwóch stopni, odpadające z zimna dłonie i inne extremalne atrakcje, tymczasem spędziwszy kilkanaście minutach na słońcu, w dwóch warstwach ocieplających i suchym skafandrze na wierzchu, nie mogłem się doczekać aż w końcu wskoczymy do tej zimnej wody. Widoki pod wodą za to niczego sobie, no i notoryczne problemy z kontrolą wyporności można zwalić na skafander.</p>
<p><img src="https://live.staticflickr.com/8020/7679034288_146ab7e0c1_b.jpg" alt="All OK"></p>
<p>Na <a href="http://en.wikipedia.org/wiki/Geysir">Geysirze</a> polegać nie można, odkąd zaprzestano wywoływania erupcji mydłem, za to <a href="http://en.wikipedia.org/wiki/Strokkur">Strokkur</a> bardzo ładnie odpala co parę minut. <a href="http://en.wikipedia.org/wiki/Gullfoss">Gullfoss</a> jest też niezawodny: spada z wielkim hukiem, we mgle wodnego pyłu, otoczony tęczami.</p>
<p>Nie mam nic przeciwko przejazdom w bród, urozmaicają podróż – lecz gdy luźno leżące na dnie kamienie usuwają się spod kół a woda wydaje się sięgać maski, przestaje być zabawnie. Takich emocji dostarczyła nam droga F224 do Landmannalaugar. Ośmielił nas widok samochodów po drugiej stronie wody – gdyby nie to, skończyłoby się pewnie jak przy <a href="Blog/Travel/Ucieczka%20na%20zach%C3%B3d.md">Cedar Creek Fall</a>, pozostawieniem samochodu przed wodą i pokonaniem ostatniego odcinka trasy na piechotę.</p>
<h2 id="środa">Środa</h2>
<p>Jest wiele sposobów, na które można się obudzić w namiocie. Na tym nieprzyjemnym końcu spektrum jest na przykład przebudzenie w zimnej wodzie, która ukradkiem wydostała się z pobliskiego potoku. Tym razem nie było tak źle, ale rytmiczne bębnienie kropel deszczu o tropik też zalicza się do tej gorszej części skali. Szczęście w nieszczęściu, że z reguły brzmi to dużo groźniej niż jest w rzeczywistości: drobna mżawka poprzez membranę tropiku brzmi jak ulewa. Po wychyleniu się z namiotu okazuje się, że istotnie, okoliczne góry spowite są niskimi chmurami, z których co jakiś czas coś siąpi. Nie zachęca to do dalszych wypadów, a na dzisiaj akurat mieliśmy zaplanowany dłuższy spacer po górach.</p>
<p>Nie dajemy się zniechęcić i po śniadaniu (śledzie w sosie pomidorowym okazały się niedobre, słodkie) wyruszamy, rozpoczynając szlakiem prowadzącym do Þórsmörk (przejście całego zajmuje kilka dni) i licząc na zawinięcie jakiejś ciekawej pętli.</p>
<p><img src="https://live.staticflickr.com/8142/7679165764_930a8f256f_c.jpg" alt="Landmannalaugar"></p>
<p>Ostatecznie wdrapujemy się na dwie około dziewięćsetmetrowe góry: Sudurnamur (chyba) oraz Bennisteinsalda. Tak spektakularne górskie widoki porównać mogę chyba tylko do <a href="Blog/Travel/S%C4%85%20g%C3%B3ry%2C%20to%20musi%20by%C4%87%20zimno.md">National Pass w Blue Mountains</a>: kolorowe góry, w oddali lodowce, w pobliżu dymiące skały i niezwykłe formy geologiczne. Łazimy przez pięć godzin i wracamy lekko oszołomieni niesamowitym krajobrazem.</p>
<p>Na południowym odcinku F208 oswajamy się z brodami i od piątego albo dziesiątego nawet się nie zatrzymujemy na krótkie medytacje. Pro tip: nie przejeżdżać tam, gdzie jest najszerzej, jak radzi mądrość ludowa, tylko tam, gdzie jest najpłycej. Nota bene, Ford Kuga w wersji Titanium S z dwulitrowym dieslem i automatyczną skrzynią to super auto, szczególnie, jeśli większość czasu spędza się na przyzwoitych drogach, ale nie stroni się też od <a href="http://en.wikipedia.org/wiki/Roads_in_Iceland#F_roads">F-ek</a>.</p>
<p>Kolacja w hotelu Skaftafell w porządku, ale nie zapada szczególnie w pamięć; Ania jadła owcę, ja <a href="http://en.wikipedia.org/wiki/Arctic_char">palię</a>.</p>
<h2 id="czwartek">Czwartek</h2>
<p>Tym razem pobudka jest słoneczna i ciepła. Na zbiórkę eksploratorów lodowca nie mamy daleko, mniej niż pięćdziesiąt metrów od naszego namiotu. Wycieczkę prowadzi Czeszka – w ogóle sporo cudzoziemców wydaje się tu robić w branży turystycznej. Daje nam się wspinać po lodowej ściance; przy tej okazji doświadczam na skórze własnych dłoni, że jak przy wspinaczce skałkowej, lepiej mieć buty ciut za ciasne niż zbyt luźne. Poza tym łażenie w rakach po firnie i szukanie przejść między lodowcowymi szczelinami jest fajne, ale nie na tyle, żeby od razu rozglądać się za kolejnymi okazjami do spacerów po lodowcach.</p>
<p><img src="https://live.staticflickr.com/7130/7679315762_862f0197c7_b.jpg" alt="Wspinaczka po lodzie"></p>
<p>Mało by brakowało, a wyjechalibyśmy ze Skaftafell nie zaliczywszy <a href="http://en.wikipedia.org/wiki/Svartifoss">Svartifoss</a>. Przypominamy sobie jednak, i w półtorej godziny tam i z powrotem mamy z głowy i tę atrakcję. Całkiem ładny wodospad, ale wygląd nie rekompensuje tłumu turystów, który trzeba znosić na szlaku. <a href="http://en.wikipedia.org/wiki/J%C3%B6kuls%C3%A1rl%C3%B3n">Jökulsárlón</a> też trochę rozczarowuje, choć może to wina mniej jego (góry lodowe mogłyby być gęstsze, ale są całkiem pokaźne), a bardziej pogody, która po południu się psuje – jest zimno i popaduje.</p>
<p>Na koniec dnia popełniamy jeszcze niedopatrzenie i rezerwujemy hotel gdzie indziej, niż planowaliśmy, w związku z czym w Vik nie zatrzymujemy się na podziwianie krajobrazów, wystających z wody skał, czarnych plaż i maskonurów, a jedynie na konsumpcję steka z wieloryba – mięso ciemniejsze niż wołowina, przyrządzone na krwisto, całkiem smaczne, choć mam wrażenie, że zaznało uroków zamrażarki. Ania trafia gorzej: tradycyjne, Islandzkie <em>shark bites</em> są nie do zjedzenia ze wzgledu na okropny posmak, <em>fish stew</em> składa się głównie z ziemniaków; suszona ryba tylko jakoś się broni, o ile wysmaruje się ją obficie masłem. Dodana do tego równie tradycyjna anyżówka Ani nie bardzo smakuje; ja bym się może i poświęcił, ale akurat mi nie wolno.</p>
<p>Około północy docieramy w końcu do omyłkowego hotelu Selfoss w Selfoss.</p>
<h2 id="piątek">Piątek</h2>
<p>Nic się właściwie nie dzieje. Po długiej jeździe, którą urozmaicam sobie nieplanowanym wpadaniem w poślizgi na F61, docieramy do Holmavik, gdzie do zaliczenia mamy muzeum czarowniców (to faceci głównie byli). Największym hitem jest kawałek kamienia, któremu poświęcono cały, zaciemniony pokój i szereg plansz informacyjnych. Kamień ma zagłębienie, w którym być może była kiedyś krew, co niektórzy skłonni są uznać za poszlakę, że nie jest wykluczone że Wikingowie uprawiali jakieś obrzędy wymagające składania ofiar z czegoś żywego. Tak na prawdę <a href="http://tywkiwdbi.blogspot.co.uk/2010/10/necropants-explained.html">nekroportki</a> są ciekawsze.</p>
<p>Bardziej od muzeum podoba mi się wybrzeże Strandir, czyli droga objeżdżająca wschodnią część zachodnich fjordów. Do tych norweskich się to nie umywa, ale jest całkiem ładnie. W Drangsnes, jak przykazuje Lonely Planet, moczymy się w przydrożnych jacuzzi.</p>
<p><img src="https://live.staticflickr.com/8150/7679385854_bb45c766ae_c.jpg" alt="Strandir"></p>
<p>Na wieczór docieramy na camping w Nordafjörður – pierwszy, na którym są chyba sami Islandczycy. Dobrze, że wyprysznicowaliśmy się w Drangsnes, bo camping takimi udogodnieniami chyba nie dysponuje.</p>
<h2 id="sobota">Sobota</h2>
<p>Słoneczna pobudka – trudno nie lubić Islandii w taką pogodę. Wchodzimy na górę, tę na prawo od wyjścia z campingu; wystarczy iść kawałek drogą, a później wypatrywać żółtych słupków, które nie zawsze są dobrze widoczne – czasem miast nimi trzeba kierować się zdrowym rozsądkiem. Góra ma 430 metrów, droga tam i z powrotem zajmuje jakieś dwie godziny.</p>
<p>Jak na koniec świata, basen na plaży w Krossnes jest zaskakująco pełen Islandczyków. Wchodzimy na chwilę i oczekujemy na zwolnienie się jacuzzi, ale po kilkunastu minutach nasza cierpliwość się wyczerpuje i ruszamy w drogę powrotną, przy okazji zaliczając chatkę czarownika, czyli krytą darnią chałupę siedemnastowiecznej islandzkiej biedoty. Tip: z Reykjavik do Holmavik dużo szybciej jedzie się drogą 60 niż 61; widoki też są chyba lepsze.</p>
<p>Na stacji w Holmavik Ania zamiast hamburgera z małymi frytkami dostaje wielką torbę frytek. Zdegustowani postanawiamy zatrzymać się w stolicy na porządną kolację. Okazuje się, że Reykjavik dysponuje campingiem nieopodal centrum. Campingi w Islandii to super wynalazek, kosztują jedną dziesiątą tego co hotel i zawsze mają miejsca. Nie należy tylko za bardzo liczyć na prysznice, bo np. ten w Skaftafell dysponował dwoma na kilkuset camperów, a w Nordafjörður żadnych chyba nie było.</p>
<p>Taksówkarz, poproszony o dobrą restaurację z rybami, wysadza nas pod <a href="http://fiskmarkadurinn.is/english/">Fish Market</a>. Zapakowane jest pod sufit, ale znajdują dla nas miejsca przy barze, z widokiem na kuchnię. Nie pamiętam, kiedy ostatnio jadłem takie dobre ryby. Sashimi z wieloryba karłowatego jest rewelacyjne, superdelikatne, zupa z ogonów homara bardzo intensywna, żabnica pyszna, molwa bez fajerwerków, ale też niczego sobie. Tip kolejny: wina są tam dość drogie (jak i jedzenie), ale wśród tych z najniższej półki cenowej znaleźć można bardzo smaczne, nowozelandzkie Sauvignon Blanc.</p>
<p>Na zakończenie dnia urządzamy sobie namiastkę <a href="http://www.whygoiceland.com/the-reykjavik-runtur.html">rúnturku</a>, którego czasoprzestrzeń rozciąga się od hotelowej knajpy, gdzie sprzedają piwa z mikrobrowarów, do pierwszej w nocy.</p>
<p><img src="https://live.staticflickr.com/8020/7707220634_e3a2656639_c.jpg" alt="Fish Market od kuchni"></p>
<h2 id="niedziela">Niedziela</h2>
<p>Uczestnictwo w rozrywce dla mas budzi we mnie czasem uczucie wstydu. Tak jest też z wycieczką do <a href="http://www.bluelagoon.com">błękitnej laguny</a>: po drodze czuję dyskomfort gdy uświadamiam sobie, że jadący samochodem za mną też udają się do tego miejsca i wiedzą, że ja tam podążam. Spa jest położone wśród wulkanicznych kamulców, na pustkowiu; woda jest jasnobłękitna, zupełnie nieprzejrzysta i pozostawia na kamieniach biały osad, powodujący, że całe miejsce wygląda bardzo niecodziennie. Ania wybiera się na zabiegi upiększające, ja w tym czasie, wraz z setką innych turystów, moczę się w głównej części laguny. Odkrywam przy okazji, że pokrywający w niektórych miejscach dno bardzo miękki, lotny muł składa się głównie z owłosienia i naskórka pozostawionego przez innych nurzających się.</p>
<p>Od bajorka lepsza okazuje się restauracja Lava, gdzie za niezbyt wygórowaną kwotę czterech tysięcy koron islandzkich można się najeść do woli nienajgorszym sushi i pysznym wędzonym łososiem. Na to akurat starcza nam czasu przed odlotem do domu.</p>
<h3 id="--">* * *</h3>
<iframe src="https://www.google.com/maps/d/embed?mid=1yeHVfbR-5db_lBf6EqWMCeNoR_c&ehbc=2E312F" width="640" height="480"></iframe>
<p><a href="https://www.flickr.com/photos/mmakowski/sets/72157630828197002/">Iceland</a></p>
]]></content:encoded></item><item><title>Wild Boar Fillet à la Białowieża</title><link>https://blog.mmakowski.com/cooking/wild-boar-fillet-%C3%A0-la-bia%C5%82owie%C5%BCa/</link><pubDate>Thu, 15 Mar 2012 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/wild-boar-fillet-%C3%A0-la-bia%C5%82owie%C5%BCa/</guid><description>There is often that one ingredient. You’re in a supermarket and a vegetable you don’t normally eat catches your eye, or it’s a jar of some obscure substance that suddenly seems like a promising kernel around which you can build a dinner. Or, it’s something rare, that you got from someone and sits in your pantry waiting for that moment of inspiration. This evening’s dish is going to be of this kind.</description><content:encoded><![CDATA[<p>There is often that one ingredient. You’re in a supermarket and a vegetable you don’t normally eat catches your eye, or it’s a jar of some obscure substance that suddenly seems like a promising kernel around which you can build a dinner. Or, it’s something rare, that you got from someone and sits in your pantry waiting for that moment of inspiration. This evening’s dish is going to be of this kind. But, to make things a bit more convoluted, “the one” will be different for me and different for you.</p>
<p>So far, the approach I’ve taken in these posts was to present what a migrant of Polish origin, but open to influences from all over the world, may concoct given the ingredients commonly available in British supermarkets. This time round we’ll make it closer to my native cuisine, hence more challenging.</p>
<p>In my case, the trigger for this dish, the one ingredient everything was supposed to be build around, was a <strong>tenderloin of wild boar</strong> which I purchased at the Billericay Farmer’s Market. For a local though, a rarer item might turn out to be <strong>wild mushrooms</strong> – boletes, to be more specific. Of these, the easiest to encounter among your local supermarket’s shelves are dried porcini. These will do – in fact, they are typically excellent – but you’ll need a couple of handfuls, so it’s going to be expensive. My supply originates from the countless boxes of mushrooms that my parents pick, dry and store, so this was the easy part for me.</p>
<p>Other ingredients are mundane. Two onions, Two white rolls – paninis are a good choice. A cup of soured cream, mild olive oil – or just vegetable oil, if we want to stick to orthodox Polish ingredients, where olive oil is virtually unknown. Some black pepper. Some wheat flour, Yolk of two eggs. New potatoes for the side. Monasterio de Santa Cruz to drink (other good red should do just as well). Lancashire and Blue Lancashire cheese to have something to finish the wine with.</p>
<p>Preparation couldn’t be easier: just fry everything and then bake it. First, soak good two or three handfuls of the dried mushrooms in a very small amount of water, and once soked, boil briefly. Drain, but keep the liquid. Slice the mushrooms into thin bits. Meanwhile do the frying, all of it one after another, in the same pan:</p>
<ul>
<li>the boar tenderloin – cut into slices some half an inch thick and dusted in flour. Fry briefly on both sides</li>
<li>the rolls – no need to add oil this time round. Fry until you get golden-brown croutons</li>
<li>the onions – sliced into thin slices; after a minute or two add the mushrooms; keep frying until the onion is soft</li>
</ul>
<p><img src="https://farm8.staticflickr.com/7189/6970802939_fa303e996e.jpg" alt="the dish"></p>
<p>Grease a flat oven proof dish with oil and nestle the pieces of roll and meat in one layer. If there are any pieces of roll left over, you can crumble them into the onion and mushrooms. For the sauce, put in a bowl and mix:</p>
<ul>
<li>the onions and mushrooms</li>
<li>soured cream</li>
<li>freshly ground pepper</li>
<li>yolks of two eggs</li>
<li>the water left from boiling mushrooms – there should be no more than 1/3rd of a cup of it!</li>
</ul>
<p>Cover meat and croutons with the sauce and put in an oven at 180 degrees for 20 minutes. Serve with baked new potatoes (dip in olive oil, add salt, pepper and herbes de Provence and put in the oven ten minutes before the meat et al.) and the wine and finish with Lancashire.</p>
<p>In terms of the richness of flavour I wouldn’t rate it on par with the mock-Mexican, mock-Asian and mock-Mediterranean recipes I have described (and will describe!). To make the matters worse, the photo also doesn’t do the dish justice. But I’d venture to say that all of these shortcomings are made up for by the unmistakable aroma of wild mushrooms. So if you are contemplating a game dish, you could do worse than give <em>filet z dzika po Białowiesku</em> a go.</p>
]]></content:encoded></item><item><title>Test of Github as a Tutorial Hosting Platform - Literate Specifications with specs2</title><link>https://blog.mmakowski.com/technology/test-of-github-as-a-tutorial-hosting-platform-literate-specifications-with-specs2/</link><pubDate>Sun, 15 Jan 2012 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/test-of-github-as-a-tutorial-hosting-platform-literate-specifications-with-specs2/</guid><description>This is an experiment with how well Github is suited to host coding tutorials. Turns out that the navigation and presentation could be a bit better, but overall it seems to be fairly usable. And since the tutorial has the form of a git repository, we are not restricted to using Github, but can come up with software that is specifically designed to present the subsequent commits as steps of a tutorial… clearly, DVCS and self-contained repositories are very powerful ideas.</description><content:encoded><![CDATA[<p>This is an experiment with how well Github is suited to host coding tutorials. Turns out that the navigation and presentation could be a bit better, but overall it seems to be fairly usable. And since the tutorial has the form of a git repository, we are not restricted to using Github, but can come up with software that is specifically designed to present the subsequent commits as steps of a tutorial… clearly, DVCS and self-contained repositories are very powerful ideas.</p>
<p>Instructions:</p>
<ul>
<li>go to <a href="https://github.com/mmakowski/literate-specs-tutorial/commits/">the commit history of the repo</a></li>
<li>starting from the bottom, click on the commit id button to see the description of the step and the code changes introduced in it</li>
<li>when finished with the step, go back to the list of commits to see the next one.</li>
</ul>
<p>Oh, and if you’re into BDD, technical writing or literate programming you might find the content of the tutorial of interest.</p>
]]></content:encoded></item><item><title>せっかちな人のためのうどん</title><link>https://blog.mmakowski.com/cooking/%E3%81%9B%E3%81%A3%E3%81%8B%E3%81%A1%E3%81%AA%E4%BA%BA%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%86%E3%81%A9%E3%82%93/</link><pubDate>Thu, 15 Dec 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/%E3%81%9B%E3%81%A3%E3%81%8B%E3%81%A1%E3%81%AA%E4%BA%BA%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%86%E3%81%A9%E3%82%93/</guid><description>For people of occidental origin such as myself, the first degree of initiation in Wagamama’s menu is invariably Chicken Katsu Curry. Those who dare to abandon the comfortable familiarity of breaded chicken, rice, and sauce not altogether unlike the gravy often served with traditional English pies will arrive in the land of wok-fried udon noodles – that’s the second degree, and this what I have so far achieved. I can only guess what happens further, but would venture a supposition that one must at some point attain the level of a bowl of ramen, which, according to Wagamama’s own advertising, seems to be what every fashionable young person orders there.</description><content:encoded><![CDATA[<p>For people of occidental origin such as myself, the first degree of initiation in <a href="http://www.wagamama.com/">Wagamama</a>’s menu is invariably Chicken Katsu Curry. Those who dare to abandon the comfortable familiarity of breaded chicken, rice, and sauce not altogether unlike the gravy often served with traditional English pies will arrive in the land of wok-fried udon noodles – that’s the second degree, and this what I have so far achieved. I can only guess what happens further, but would venture a supposition that one must at some point attain the level of a bowl of ramen, which, according to Wagamama’s own advertising, seems to be what every fashionable young person orders there.</p>
<p>I happen to own a Wagamama’s cookbook. Once, in Basildon’s Eastgate shopping mall, in a inconspicuous Chinese shop which mostly deals in martial arts accessories, but also happens to stock some alimentary provisions for warriors of the East, I stumbled upon a pack of udon noodles, and purchased it with the view that it can be used with one of the recipes from said book.</p>
<p><img src="https://farm8.staticflickr.com/7154/6474214851_fb233d34d4_m.jpg" alt="https://farm8.staticflickr.com/7154/6474214851_fb233d34d4_m.jpg"></p>
<p>A couple of months have passed and I have finally decided to have a go. A cursory look at <em>yaki udon</em> recipe made it clear that the chief purpose of the book is to encourage the peruser to abandon all hope of preparing the meal at home, and instead go to the closest Wagamama restaurant and order the food there. The ingredients list mentions not fewer than three sauces, preparation of each requiring a mixture of various kinds of soy sauce, different types of sake, and a lot of time. On top of that there are things like <em>chikuwa</em> (the book helpfully says, that this ingredient in general can be omitted without much damage to the dishes), dried shallots, and spicy fish powder.</p>
<p>Obviously, we’ll be alright without all this fancy rubbish. Instead, we’ll grab whatever Japanese can be found at the local supermarket and make do with that. I happened to find a pack of pickled ginger – <em>gari</em> – and a bottle of rice wine for cooking. There’s also always some wasabi, but it won’t fit well with this dish.</p>
<h2 id="yakitori-soba-curry-sauce">Yakitori Soba Curry Sauce</h2>
<p>The three sauces alluded to above were <em>yakitori</em>, <em>yaki soba</em> and <em>curry oil</em>. We’ll take a shortcut and make a single one that combines all – and in a fraction of time required for proper preparation of just one of them.</p>
<p><img src="https://farm8.staticflickr.com/7024/6474216605_b2ac35a359_m.jpg" alt="https://farm8.staticflickr.com/7024/6474216605_b2ac35a359_m.jpg"></p>
<p>First, very thinly slice a <strong>garlic clove</strong> and a similarly sized piece of fresh <strong>ginger</strong>. Heat some <strong>vegetable oil</strong> in a small pan. Add <strong>star anise</strong> and a <strong>bay leaf</strong> and let it fry for half a minute or so. Then add the sliced garlic and ginger, some <strong>dried chilli flakes</strong>, <strong>smoked paprika</strong>, and some ground <strong>cinnamon</strong>, <strong>turmeric</strong> and <strong>cumin</strong>. mix everything and fry for another thirty seconds. Then add about 50 ml or so of <strong>light soy sauce</strong> and similar amount, of <strong>rice wine</strong> – if you don’t have that a regular white wine will do. Add two cubes of <strong>brown sugar</strong> and a small pinch of <strong>salt</strong>. Bring everything to boil, then remove the star anise and bay leaf. Boil on high heat for a minute or two, until the mixture begins to thicken. Remove from the heat and put outside of the window to cool. That’s our sauce.</p>
<h2 id="the-noodles">The Noodles</h2>
<p>The <strong>udon</strong> I bought was vacuum-packed and soft already, it was sufficient to throw it into a pan of boiling water for two minutes, then drain and put for a while under cold running water.</p>
<h2 id="the-rest">The Rest</h2>
<p><img src="https://farm8.staticflickr.com/7146/6474217871_d4a6f73da1_m.jpg" alt="https://farm8.staticflickr.com/7146/6474217871_d4a6f73da1_m.jpg"></p>
<p>Once drained, put the cooked udon in a large bowl. Add a pack of peeled <strong>king prawns</strong> (ideally raw), half of a <strong>leek</strong>, sliced in pieces 1 mm thick, a couple of <strong>salad or spring onions</strong>, cut in 2 cm long pieces, a handful of <strong>beansprouts</strong>, half of of <strong>sweet, red pepper</strong>, cut in thin batons, some five or six slices of <em><strong>gari</strong></em> and some <strong>dried onions</strong> (a much easier to buy substitute for dried shallots). Thinly slice half of a box of <strong>shiitake mushrooms</strong> and add to the bowl as well. Finally, retrieve the sauce from outside – it should have completely cooled by now – pour in the bowl and mix everything together so that all the ingredients are covered in the sauce.</p>
<h2 id="the-final-fry">The Final Fry</h2>
<p>Put a wok or a large pan on very high heat. When the wok is very hot pour in some vegetable oil and wait until it heats up so that it is smoking. Throw the contents of the bowl into the pan and stir fry on maximum heat for two or three minutes, until the prawns are thoroughly cooked. Serve with lager – Asahi or Tyskie.</p>
<p><img src="https://farm8.staticflickr.com/7032/6474218607_43969c4094_m.jpg" alt="https://farm8.staticflickr.com/7032/6474218607_43969c4094_m.jpg"></p>
]]></content:encoded></item><item><title>The Making of a Burrito</title><link>https://blog.mmakowski.com/cooking/the-making-of-a-burrito/</link><pubDate>Sun, 20 Nov 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/the-making-of-a-burrito/</guid><description>A couple of years ago a new take-away moved into what used to be a dental practice directly beneath the platform of a Docklands Light Railway station. The establishment called itself “Tortilla” – a fitting, if somewhat unimaginative name for a place that sells burritos. Given that it was just next door to where I used to work at the time, it didn’t take me – a long-time chilli con carne buff – to become a regular.</description><content:encoded><![CDATA[<p>A couple of years ago a new take-away moved into what used to be a dental practice directly beneath the platform of a Docklands Light Railway station. The establishment called itself “Tortilla” – a fitting, if somewhat unimaginative name for a place that sells burritos. Given that it was just next door to where I used to work at the time, it didn’t take me – a long-time <em>chilli con carne</em> buff – to become a regular. At some point Tortilla’s burritos must have been my primary sustenance during the working days.</p>
<p>As is often the case with food I’m addicted to, I attempted to recreate this culinary masterpiece in my own kitchen. The ingredients are simple enough: a tortilla, some rice, fried onions and peppers, some beans, some meat and salsa, lettuce, chillies and soured cream. A couple of the items above deserve more detailed discussion.</p>
<ul>
<li><strong>tortilla</strong>: there’ll be a decent choice in your local supermarket, but you can also make your own. It’s a bit time-consuming, so we won’t do it this time round. Choose six large, wheat ones.</li>
<li><strong>rice</strong>: the take-away offers a choice of tomato or lime and coriander. I find the latter has much more character, so we’ll need a small bunch of fresh coriander, one lime and, of course, some easy-cook long grain rice.</li>
<li><strong>beans</strong>: any random can won’t do; what we should go for are refried pinto beans. Cans of these, made by Discovery, should be in Mexican section of said supermarket. Take three.</li>
<li><strong>meat</strong>: Tortilla offers dry chicken, tough steak and succulent pork. We’ll go for the latter, so grab one nice, large fillet.</li>
<li><strong>salsa</strong>: again, we’re not going to make our own just yet; the supermarket’s Mexican section should have a choice of at least two: Discovery’s, in a plastic, squeezable bottle, and Old El Paso, in a glass jar. Get the El Paso one, it’s much nicer.</li>
</ul>
<p>The other items are so mundane they barely deserve a mention, but here we go, so that the shopping list for the nearby Tesco’s is complete:</p>
<ul>
<li>one large onion</li>
<li>two peppers: red and yellow</li>
<li>a bag of fresh, green chillies</li>
<li>some crunchy lettuce – a little gem will do</li>
<li>a pot of soured cream</li>
</ul>
<p>Obviously, we always have some garlic, red wine, extra virgin olive oil and smoked paprika in our pantry, so no need to list these.</p>
<p>After getting home with all these we need to start with the meat as soon as possible. Ideally it should be slow-cooked, but I’m never inclined to prepare my dinner a day in advance, so somewhat accelerated slow cooking will have to do: first cut the pork fillet in half and season well with paprika. In the mean time heat some olive oil in a pan; once really hot, sear the pork for a couple of minutes, until it becomes brown. Reduce the heat to minimum, add one halved chilli, a couple of lightly crushed cloves of garlic and pour in some red wine so that there is about 5 mm of it at the bottom of the pan. Cover and leave to simmer for about an hour or hour and a half, adding some more wine from time to time if the liquid evaporates.</p>
<p>The rest of the ingredients is much less involved, so after starting the meat off in the manner prescribed, we can take a break.</p>
<p>Some 20 minutes before the meat is ready – or about an hour from the start – put sliced onions and peppers in a pan so that they soften. Cook the rice (a glass of it for six burritos), and once it absorbs all the water, mix it with some roughly chopped coriander and lime juice. Slice the lettuce and thinly slice the chilli. Heat the refried beans (half a can per burrito) in a pan. Put the grill in the oven on high.</p>
<p>Once the meat has cooked (it should be easy to shred with a fork), the rice is ready, onions and peppers soft and beans hot, it’s time to put everything together. Tear off a square of kitchen foil and put it on the worktop. Heat a tortilla under the grill, a couple of seconds on each side, and put on the foil. On that put some rice, beans, onions and peppers, meat, salsa, lettuce, chillies and soured cream. Don’t worry if it seems a bit too much to fit comfortably in the tortilla – that’s what the kitchen foil is for!</p>
<p>Now comes the tricky bit: rolling it all into a neat packet. I contemplated recording a video with a demonstration, but my skill in this matter proved so inadequate that I thought I’d better leave it to the reader’s ingenuity. The idea is to start rolling both the tortilla and the foil together, from the end closer to you, then grab the other end of tortilla and lift it so that the contents don’t spill out, at the same time taking care that they don’t flow out from the sides. It actually sounds more complicated than it is – if in doubt, go to Tortilla at lunchtime and have a look how they do it.</p>
<p>The final result is a bit messy, but surprisingly close in taste to what people are prepared to queue for during lunch hours at Canary Wharf, so we must congratulate ourselves on this effort.</p>
<p><img src="https://farm8.staticflickr.com/7019/6427077133_0f942577e5_b.jpg" alt="all pieces of the dish"></p>
]]></content:encoded></item><item><title>Pollo con Pancetta alla Avanzi</title><link>https://blog.mmakowski.com/cooking/pollo-con-pancetta-alla-avanzi/</link><pubDate>Thu, 10 Nov 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/pollo-con-pancetta-alla-avanzi/</guid><description>For quite a while I have been relying on recipes scavenged from various corners of the web, with little added creativity. There are some which I would like to share my take on, like Jamie’s fish linguine – I even have a nice photo taken already – but going for something so much borrowed would require considerable literary embellishment, which recently I have felt incapable of.
So, Jamie’s fish will have to wait; meanwhile, leftovers to the rescue of creative spirit!</description><content:encoded><![CDATA[<p>For quite a while I have been relying on recipes scavenged from various corners of the web, with little added creativity. There are some which I would like to share my take on, like Jamie’s fish linguine – I even have a nice photo taken already – but going for something so much borrowed would require considerable literary embellishment, which recently I have felt incapable of.</p>
<p>So, Jamie’s fish will have to wait; meanwhile, leftovers to the rescue of creative spirit! Half of a small swede has been lingering in the corner of my fridge for too long and today I have finally decided to challenge this sad state of affairs. A search on what is nowadays my primary source of culinary ideas, BBC Good Food website, produced a promising <a href="http://www.bbcgoodfood.com/recipes/8095/swede-mash">swede mash</a>. To be honest, I was not so much excited by the mash itself, as by the opportunity to try out the new <a href="http://www.braun.com/global/household/food-preparation/multiquick-hand-blenders/multiquick-5.html">Braun Multiquick 5</a> we had delivered yesterday.</p>
<p>My dear wife, as much as she supports my cooking endavours, would probably not be amused by the prospect of dinner consisting entirely of swede mash, so I picked a couple of additional items at random: two small, organic chicken breasts, a pack of pancetta, a tomato and a small onion. The chicken ended up wrapped in pancetta and cooked uncovered for 25 minutes in a 180°C oven; tomato and onion had been thinly sliced and with some addition of black pepper and olive oil acted as a salatary ersatz. The chicken was then served on a bed of swede mash.</p>
<p>As you can probably deduce from the fact that I decided to share this recipe, all in all the result was interesting. The sweetness of the swede, the salty-smokiness of pancetta, the familiarity of tomato and onion, spiciness of roasted chilli (another leftover which I couldn’t help not to throw in its entirety into the dish with the chicken) together made for an enjoyable, if simple, dish.</p>
<p><img src="https://farm7.static.flickr.com/6220/6348067335_9938cc2864_m.jpg" alt="the Braun Multiquick blender"></p>
<p>And last but not least, the Multiquick 5 did its job to a satisfactory standard. I didn’t manage to take any pictures before the food was gone, so let the silent hero of the evening feature as an illustration of this experiment.</p>
]]></content:encoded></item><item><title>TN</title><link>https://blog.mmakowski.com/travel/tn/</link><pubDate>Tue, 01 Nov 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/tn/</guid><description>Jacka Danielsa tu nie uświadczysz. W knajpach królują piwa: koncernowe i paskudne Budy i Millery oraz ciekawe ales (India Pale, Amber, Dark) z mikrobrowarów. W liquor store też bardziej w oczy rzucają się słoiki z lokalnym bimbrem niż kwadratowe butelki z czarną etykietą. Krainę whiskey wyobrażałem sobie1 jako nie kończące się pola jęczmienia, kukurydzy, i czego tam jescze nie używają do produkcji Jacka, tymczasem zobaczyliśmy wzgórza i lasy a też i całkiem pokaźne góry.</description><content:encoded><![CDATA[<p>Jacka Danielsa tu nie uświadczysz. W knajpach królują piwa: koncernowe i paskudne Budy i Millery oraz ciekawe ales (India Pale, Amber, Dark) z mikrobrowarów. W liquor store też bardziej w oczy rzucają się słoiki z lokalnym bimbrem niż kwadratowe butelki z czarną etykietą. Krainę whiskey wyobrażałem sobie<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> jako nie kończące się pola jęczmienia, kukurydzy, i czego tam jescze nie używają do produkcji Jacka, tymczasem zobaczyliśmy wzgórza i lasy a też i całkiem pokaźne góry.</p>
<p>Tennessee nie mieści się raczej w ścisłej czołówce atrakcyjnych turystycznie stanów. Pod względem piękna przyrody trudno mu konkurować z Wyoming, Utah i Colorado, zaś metropolie ani się umywają do Nowego Jorku, Los Angeles czy Chicago. Tym niemniej dostępne tam atrakcje bez najmniejszego problemu wypełnią nam tydzień. Program poniższy ułożyłem tak, żeby dało się go wykonać zarówno objazdowo – wtedy jest łatwiej, bo wszystko jest w miarę po drodze – jak i rezydując w jednym punkcie stanu i wybierając się na jednodniowe wycieczki.</p>
<p>Pierwszą rzeczą o którą należy się zatroszczyć po przylocie – poza bagażem, który w lotach wewnątrz Stanów nagminnie jest opóźniony albo ginie – jest samochód. Dla obeznanych z amerykańskimi realiami jest to sprawa oczywista, dla mnie jednak zaskoczeniem było, że wypad po mleko z miejsca gdzie mieszkałem zajmował na rowerze kilka godzin – najbliższy sklep z jedzeniem był odległy o około 20 km. Tak więc: samochód. Na lotnisku nie ma z tym najmniejszego problemu: wystarczy podejść do budki jednej z licznych wypożyczalni, wylegitymować się prawem jazdy oraz wyłożyć od małych kilkuset do dużych kilkuset dolarów, i po pięciu minutach ma się do dyspozycji samochód na tydzień. Wybór typów i modeli jest spory, i jeśli jest taka możliwość warto wziąć Forda Mustanga, Chevroleta Corvette albo inną legendę amerykańskich szos – w samochodzie przemierzymy setki mil autostrad i spędzimy kilka godzin każdego dnia, warto więc by i ten czas wypełniony był chłonięciem lokalnej tradycji i podziwianiem myśli technicznej. Poza tym, przy benzynie kosztującej połowę tego, co w Europie, ekonomika jazdy nie wpłynie znacząco na nasz budżet.</p>
<h2 id="dzień-1-nashville">Dzień 1: Nashville</h2>
<p>Jako że jesteśmy w amerykańskiej stolicy muzyki, pierwsze kroki kierujemy do <em>Country Music Hall of Fame</em>. Zawartość tego przybytku jest mi znana niestety tylko z opowieści, bowiem myśmy do miasta zawitali już po zamknięciu (muzeum czynne jest do 17:00). Z eksponatów godnych uwagi wymienić należy przede wszystkim dwa samochody: pozłacany Elvisa, oraz, ciekawsza jeszcze, <a href="http://www.audioe.com/circus/AMA2008/images/WebbsCaddyLG.jpg">bryka niejakiego Webba Pierce’a</a>, z rewolwerami zamiast klamek drzwi, siodłem między przednimi fotelami i deską wysadzaną srebrnymi dolarówkami.</p>
<p>Po zapoznaniu się z historią muzyki country wypada doświadczyć i jej teraźniejszości. W tym celu udajemy się na znajdujący się jedną przecznicę od <em>Hall of Fame</em> Broadway. Przy nim znajdziemy dziesiątki barów, a w każdym gwiazdę <em>in spe</em> produkującą się na żywo. Nie pozostaje nic innego jak zaopatrzyć się w butelkę lokalnego IPA i zasiąść przy barze. Na koniec wizyty warto też zaspokoić potrzeby ciała. Miłośnikom kuchni włoskiej odradzić należy knajpę mieszczącą się przy czwartej alei, obok greckiej Santorini, polecić natomiast taką, co do której nie wiem gdzie się mieści, ale rozpoznać ją można po stojącym wewnątrz tramwaju.</p>
<p><img src="https://live.staticflickr.com/6109/6304929079_a04d1c9c27_h.jpg" alt="Broadway wieczorem"></p>
<p>Broadway wieczorem</p>
<h2 id="dzień-2-mammoth-cave">Dzień 2: Mammoth Cave</h2>
<p>To nie Tennessee, ale całkiem niedaleko, półtorej godziny jazdy z Nashville, a zobaczyć naprawdę warto. Mammoth Cave to podobno najdłuższa jaskinia na świecie: łączna długość zbadanych korytarzy przekracza znacznie 600 km. Zwiedzać ją można na dwa sposoby: wygodnymi, oświetlonymi szlakami, albo w kaskach, czołgając się tunelami i przeciskając przez wąskie szczeliny.</p>
<p><img src="https://live.staticflickr.com/6038/6305427282_e76d4a35bf_c.jpg" alt="Fragment Grand Avenue w Mammoth Cave"></p>
<p>Fragment Grand Avenue w Mammoth Cave</p>
<p>Wycieczki drugiego typu są bardzo emocjonujące (podobno – my nie byliśmy), ale jest ich znacznie mniej, odbywają się tylko w weekendy i bilety na nie należy rezerwować ze znacznym wyprzedzeniem. Jeśli nasza wizyta wypada akurat w ciągu tygodnia albo nie udało nam się załapać na bilety, pozostaje dreptanie turystycznym chodnikiem. Tak czy inaczej, w centrum turystycznym należy pojawić się rano, bo ciekawsze, dłuższe wycieczki wtedy właśnie wyruszają.</p>
<p>Z <a href="http://www.nps.gov/maca/planyourvisit/gocavetours.htm">szerokiego wachlarza spacerów po podziemiach</a> wybierzemy czterogodzinną, sześciokilomtetrową <em>Grand Avenue Tour</em>. Na wycieczkę nie wolno zabierać własnego jedzenia, ale nie ma się czego obawiać – na szlaku, półtora kilometra od wejścia, znajduje się kantyna, gdzie pożywić się można gorącą zupą z puszki Campbell’s, kanapką z indykiem oraz kawą; są też poidełka i toalety. Trasa wiedzie najpierw rurą (przekrój na oko to jakieś 10 metrów szerokości na 4 wysokości) by po sali jadalnej przekształcić się w wąski na metr i głęboki na dziesięć kanion. Na koniec zobaczyć można liczne formacje naciekowe, w tym tzw. “Zamarzniętą Niagarę”. Po wyjści na powierzchnię załapać się jeszcze można na jedną z krótkich, popołudniowych wycieczek – ale o ile nie jest się zadeklarowanym miłośnikiem podziemi, cztery godziny w zupełności wystarczają by docenić rozległość systemu jaskiniowego.</p>
<h2 id="dzień-3-twin-arches">Dzień 3: Twin Arches</h2>
<p>Sto mil na południowy wschód od Mammoth Cave, przy granicy między Kentucky a Tennessee znajdziemy park <em>Big South Fork</em>, a w nim dwa wielkie łuki skalne, <em>Twin Arches</em>. Nie prezentują się może tak okazale, jak ich bardziej znani kuzyni z Utah – po części dlatego, że stoją w lesie – ale są całkiem spore, w szczególności łuk południowy, który można podziwiać z dołu zaś po wspięciu się nań napawać się malowniczą scenerią porośniętego lasem wąwozu. Przy okazji tej wycieczki pora roku, w której zdecydowaliśmy się odwiedzić Tennessee, odegra istotną rolę. W tym rejonie ładnie jest w październiku, gdy jest jeszcze dość ciepło (w dzień z reguły powyżej 20 stopni Celsjusza), a ustępują już letnie upały z towarzyszącą im nieznośną wilgocią. Zimy są w Tenessee podobno niezbyt ciekawe, bezśnieżne; wiosna jest prawdopodobnie ładna, ale na korzyści jesieni przemawia paleta kolorów, które przybierają liście drzew.</p>
<p><img src="https://live.staticflickr.com/6222/6304860615_0fa49a6965_h.jpg" alt="Łuk południowy"></p>
<p>Łuk południowy</p>
<p>Zakładając, że do łuków dotarliśmy najkrótszą pieszą trasą, z pobliskiego parkingu, po ich oględzinach warto udać się dalej, w stronę <em>Jake’s Place</em>. Po drodze zobaczyć można jak formują się nowe łuki w miejscach, gdzie skała ulega erozji. Zależnie od tego, jak daleko się zapuścimy tą trasą (wracać trzeba będzie tą samą drogą), cały spacer trwać będzie godzinę albo dwie.</p>
<h2 id="dzień-4-oak-ridge">Dzień 4: Oak Ridge</h2>
<p>Miasteczko Oak Ridge powstało w czasie drugiej Wojny Światowej. Od okolicznych rolników odkupiono ziemię, ogrodzono wielki teren płotem i postawiono na nim zakłady produkujące uran do bomby atomowej, którą w końcu zrzucono na Hiroshimę<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. Historię tę można w szczegółach prześledzić odwiedzając <em>Museum of Science and Energy</em>.</p>
<p><img src="https://live.staticflickr.com/6236/6303614737_0f9b651caa_c.jpg" alt="Replika bomby zrzuconej na Hiroshimę"></p>
<p>Ponadto muzeum, czyniąc zadość nazwie, zawiera ekspozycje na temat produkcji energii z różnych źródeł, jednak to część poświęcona wojennej historii Oak Ridge i militarnym zastoswaniom energii atomowej jest najciekawsza. Eksponatem który dość łatwo przegapić, a warto obejrzeć, jest stojący na zewnątrz muzeum domek, w jakim podczas wojny kwaterowani byli pracownicy zakładów.</p>
<p>Dawna fabryka uranu to obecnie trzy kompleksy: Y-12, który pozostał wojskowy i zamknięty, przekształcany w centrum technologiczne K-25, który można oglądać ze specjalnie w tym celu przygotowanej platformy po przeciwnej stronie szosy, oraz X-10, który obecnie mieści cywilne laboratorium. To ostatnie skolonizowane zostało przez naukowców z Wydziału Fizyki Uniwersytetu Warszawskiego, tak, że warto się zorientować, czy przypadkiem nie rezyduje tam ktoś znajomy; można się wtedy załapać na wieczory z grami planszowymi, wyjazdy do Knoxville na koncerty, mecze tenisowe i masę innych atrakcji, bez których pobyt w Tennessee jest znacznie uboższy.</p>
<h2 id="dzień-5-great-smoky-mountains">Dzień 5: Great Smoky Mountains</h2>
<p>Główna atrakcja przyrodnicza rejonu to stanowiące część pasma Apalachów <em>Great Smoky Mountains</em>. Są to góry stare, z wyglądu przypominające nieco wyższe, bo dochodzące do 2000 metrów, Bieszczady. Na jednodniową wycieczkę wybierzemy jeden z popularnych a zarazem efektownych szlaków: z parkingu na przełęczy <em>Newfound Gap</em> na <em>Charlie’s Bunion</em> i z powrotem.</p>
<p><img src="https://live.staticflickr.com/6051/6303583017_5fc2586c86_c.jpg" alt="Widok ze szlaku na Charlie&amp;rsquo;s Bunion"></p>
<p>Widok ze szlaku na Charlie&rsquo;s Bunion</p>
<p>Przed wyruszeniem należy pamiętać o odpowiednim sprzęcie, w szczególności ciepłej bluzie i czapce; jesienią, nawet gdy w dolinach panuje przyjemne 25 stopni, na odsłoniętych graniach zimny wiatr potrafi się dać we znaki. Pokonanie trasy pieszo zajmie nam mniej niż cztery godziny, należy jednak mieć zapas czasu na korki samochodowe, które w weekendy powstają na górskich drogach i potrafią opóźnić powrót o dobrą godzinę.</p>
<p>Jeślibyśmy chcieli spędzić w górach więcej niż jeden dzień, trzeba wziąć pod uwagę rodowitych mieszkańców tych stron – niedźwiedzie. Lasy porastające zbocza gór zamieszkane są przez setki tych stworzeń, zarówno powszechniejsze czarne niedźwiedzie, jak i większe i bardziej agresywne Grizzly. Jedne i drugie są niezwykle łase na przenoszony w plecakach prowiant, dlatego też obozować należy tylko w wyznaczonych do tego miejscach, które wyposażone są w specjalne liny umożliwiające zawieszenie plecaków na takiej wysokości i w takiej odległości od drzew, że pozostają one poza zasięgiem żarłocznych zwierzaków. O pozostawianiu jakiegokolwiek jedzenia czy odpadków poza tak zabezpieczonymi plecakami oczywiście mowy być nie może.</p>
<h2 id="dzień-6-tennessee-aquarium">Dzień 6: Tennessee Aquarium</h2>
<p>Oceanarium w Chattanoodze podzielone jest na dwie części, nazwane umownie “rzeczną” i “oceaniczną”. Zwiedzanie zaczniemy od rzecznej, jest bowiem większa i bardziej unikalna – oceanariów morskich jest na pęczki, zaś takich, w których skonstruowano fragment płynącej, górskiej rzeki, nie znam wielu. We wspomnianej rzece pluskają wydry, a pstrągi próbują płynąć pod prąd w poszukiwaniu terenów rozrodczych.</p>
<p><img src="https://live.staticflickr.com/6059/6303675343_45ce7e1863_c.jpg" alt="Motyl w części oceanicznej"></p>
<p>Motyl w części oceanicznej</p>
<p>Poza tym jednak centralne miejsce w budynku rzecznym zajmuje wielki zbiornik ze zwierzętami morskimi: wielkimi płaszczkami i żółwiami – tylko rekinów brakuje. Te znajdziemy w częście oceanicznej (czymże byłoby oceanarium bez rekinów?). Najciekawszym fragmentem tego budynku okaże się jednak pomieszczenie ze zwierzętami nie kojarzonymi raczej z oceanem – motylami.</p>
<h2 id="--">* * *</h2>
<iframe src="https://www.google.com/maps/d/embed?mid=1eJWnL6_-Yw2Q-jt64-e3M7I3FFI&ehbc=2E312F" width="640" height="480"></iframe>
<p>Tu tydzień, który mielismy przeznaczony na zwiedzanie wschodniego Tennessee, dobiega końca. Pora udać się na lotnisko, zdać samochód i udać się w dalszą drogę. Propozycje, dokąd, zaprezentuję w kolejnym odcinku.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>trochę bez sensu, w końcu Szkocja to też w dużej mierze góry i inne tereny nie nadające się pod uprawę&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>bomba zrzucona później na Nagasaki zawierała pluton, który wyprodukowano w innych zakładach, mieszczących się w stanie Washington&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>Scala LiftOff London 2011 - Day 1</title><link>https://blog.mmakowski.com/technology/scala-liftoff-london-2011-day-1/</link><pubDate>Sat, 15 Oct 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/scala-liftoff-london-2011-day-1/</guid><description>Compared to last year’s LiftOff, which was an un-conference pretty much all the way, this year’s is split into morning, structured sessions, and afternoon open spaces resembling 2010 format. As usual, I tried to jot down the more interesting points from the day. The below is by no means a complete record and definitely suffers from insufficient editing and research (no time for that, sorry!). With this disclaimer out of the way:</description><content:encoded><![CDATA[<p>Compared to <a href="https://blog.mmakowski.com/technology/scala-liftoff-london-2010-day-1/">last year’s LiftOff</a>, which was an un-conference pretty much all the way, this year’s is split into morning, structured sessions, and afternoon open spaces resembling 2010 format. As usual, I tried to jot down the more interesting points from the day. The below is by no means a complete record and definitely suffers from insufficient editing and research (no time for that, sorry!). With this disclaimer out of the way:</p>
<h2 id="david-pollaks-keynote">David Pollak’s Keynote</h2>
<p>David started off by – actually, having arrived late I’m not exactly sure what he started with, but the key points of his talk can be summarised as:</p>
<ul>
<li>
<p>“crossing the chasm” into mass popularity takes time; e.g. for NeXT it took years until the ideas promoted by the company found their way to mass market, via Apple</p>
</li>
<li>
<p>London, NY, Bay Area – most active for Scala; Scala programmers in these centres tend to hear mostly the opinions of others in a similar position. Voices of people from outside are often ignored by the community</p>
</li>
<li>
<p>Scala needs to cater for “daily developer” who uses Eclipse, not Emacs</p>
</li>
</ul>
<p>After the keynote the conference split into three tracks, of which I picked the one with what looked like the most challenging content.</p>
<h2 id="miles-sabin-scala-coroutines-and-generators">Miles Sabin: Scala Coroutines and Generators</h2>
<p>Miles has a history of presenting interesting research results based on his in-depth understanding of the type system and language features. This time he showed an implementation of two constructs – coroutines and generators – using Scala’s delimited continuations.</p>
<h3 id="classification-of-continuations">Classification of continuations</h3>
<p>The continuations can be classified along two axes:</p>
<ul>
<li><strong>full/delimited</strong>: full captures the program until the very end, delimited only captures portion</li>
<li><strong>direct implementation/CPS transform</strong>: direct uses stack manipulation (copying, <a href="http://en.wikipedia.org/wiki/Spaghetti_stack">“spaghetti stack”</a>), CPS transformation modifies the functions to accept a continuation parameter</li>
</ul>
<p>Full continuation support is common (<code>call/cc</code> in Lisp, <code>setjmp/longjmp</code> in C, also Smalltalk, ML); until recently not possible on JVM because we have not had access to the runtime. Continuations are primarily used for defining higher-level control constructs like concurrency constructs and exception handling. They offer a lot more in typed setting, but Miles didn’t go into the details this time round.</p>
<h3 id="continuations-in-scala">Continuations in Scala</h3>
<p><code>shift</code>/<code>reset</code> – delimited continuation via localised CPS transformation; the transformation allowed it to run efficiently on a standard JVM (no longer that relevant, with JVM coroutines effort, on which later)</p>
<ul>
<li><code>reset { ... }</code> delimits the continuation</li>
<li><code>shift { (cont: ...) =&gt; ... }</code> captures the continuation up to the enclosing reset</li>
</ul>
<p><code>shift</code> must be enclosed within a corresponding <code>reset</code> – this is enforced by the compiler using effect system encoded in types. The entire functionality is provided by a compiler plugin which has to be explicitly enabled: <code>scala -P:continuations:enable</code>.</p>
<h3 id="coroutines">Coroutines</h3>
<p>Coroutines are an imperative control structure: subroutines with multiple entry and exit points. They interleave computations, can replace threads in some situations, but without parallelism – iterleaving is performed sequentially. They are an useful abstraction for event-drive, asynchronous network applications.</p>
<p>Miles created a library which provides coroutines in Scala. Example:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">TestCoroutines</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">import</span> <span style="color:#555">Coroutines._</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> main<span style="color:#000;font-weight:bold">(</span>args<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Array</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">String</span><span style="color:#000;font-weight:bold">])</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    coroutine <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">while</span> <span style="color:#000;font-weight:bold">(</span><span style="color:#000;font-weight:bold">true</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>        prntln<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;Hi!&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>        yld
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    coroutine <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">while</span> <span style="color:#000;font-weight:bold">(</span><span style="color:#000;font-weight:bold">true</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>        println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;Ho!&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>        yld
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">for</span> <span style="color:#000;font-weight:bold">(</span><span style="color:#000;font-weight:bold">_</span> <span style="color:#000;font-weight:bold">&lt;-</span> <span style="color:#099">1</span> until <span style="color:#099">20</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#458;font-weight:bold">Scheduler</span><span style="color:#000;font-weight:bold">.</span>yld
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>This, as can be expected, will print “Hi!” followed by “Ho!”, both repeated twenty times.</p>
<p>How does it work?</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">sealed</span> <span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">Trampoline</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> coroutine<span style="color:#000;font-weight:bold">(</span>body<span style="color:#000;font-weight:bold">:</span> <span style="color:#000;font-weight:bold">=&gt;</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#3c5d5d;font-weight:bold">@cps</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Trampoline</span><span style="color:#000;font-weight:bold">])</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#000;font-weight:bold">=</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">Scheduler</span><span style="color:#000;font-weight:bold">.</span>addThunk<span style="color:#000;font-weight:bold">((</span><span style="color:#458;font-weight:bold">Unit</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">=&gt;</span> reset <span style="color:#000;font-weight:bold">{</span> body <span style="color:#000;font-weight:bold">;</span> <span style="color:#458;font-weight:bold">Done</span> <span style="color:#000;font-weight:bold">})</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> yld<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#458;font-weight:bold">@cps</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Trampoline</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">...</span> <span style="color:#998;font-style:italic">// invokes shift
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">// there is also a Scheduler object which invokes thunks
</span></span></span></code></pre></div><p>the type of <code>yld</code> guarantees it can only be called inside coroutine – Unit with <code>@cps</code> annotation is not a subtype of Unit without the annotation.</p>
<h3 id="generators">Generators</h3>
<p>Generators encapsulate production of a sequence of values lazily. They are the primary means used by Python for lazy iterators, there is even a framework, Twisted, which based its concurrency model on generators.</p>
<p>Again, Miles wrote a Scala library providing generators:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">TestGenerators</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">import</span> <span style="color:#555">Generators._</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> main <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">val</span> fibs <span style="color:#000;font-weight:bold">=</span> generator <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">def</span> fib<span style="color:#000;font-weight:bold">(</span>s0<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">,</span> s1<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Unit</span> <span style="color:#458;font-weight:bold">@Gen</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>        yld<span style="color:#000;font-weight:bold">(</span>s0<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>        fib<span style="color:#000;font-weight:bold">(</span>s1<span style="color:#000;font-weight:bold">,</span> s0 <span style="color:#000;font-weight:bold">+</span> s1<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      fib<span style="color:#000;font-weight:bold">(</span><span style="color:#099">0</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#099">1</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">for</span> <span style="color:#000;font-weight:bold">(</span>i <span style="color:#000;font-weight:bold">&lt;-</span> fibs take <span style="color:#099">10</span><span style="color:#000;font-weight:bold">)</span> println<span style="color:#000;font-weight:bold">(</span>i<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>Some interesting points:</p>
<ul>
<li><code>fib(0, 1)</code> looks like a non-terminating call – except for the <code>yld</code> call</li>
<li><code>@Gen</code> is a CPS annotation – again, protects us from using <code>yld</code> outside of a generator</li>
</ul>
<p>The implementation is very similar to coroutines. Generators completely hide the continuations; a library can expose a generator and its user doesn’t need to know anything about the CPS transformation.</p>
<h3 id="limitations">Limitations</h3>
<p>Scala delimited continuations have a number of serious limitations:</p>
<p>First of all, CPS effect types are a mixed blessing: everything along the path from <code>shift</code> to <code>reset</code> has to be CPS-aware. We can’t shift from within any Java code, or in general any library which is not CPS-aware. Consider this call stack:</p>
<pre tabindex="0"><code>scala: reset
  java lib
     scala: shift
</code></pre><p>The <code>shift</code> produces a CPS-annotated result, but it can’t pass through the Java library layer.</p>
<p>Second, related problem is that the effect types don’t play nicely with some language constructs:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span>  coroutine <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">for</span> <span style="color:#000;font-weight:bold">(</span><span style="color:#000;font-weight:bold">_</span> <span style="color:#000;font-weight:bold">&lt;-</span> <span style="color:#099">1</span> until <span style="color:#099">10</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      println<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;Hi!&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>      yld <span style="color:#998;font-style:italic">// &lt;-- causes error
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>Scala <code>for</code> is desugared into method calls, but these are not CPS-aware!</p>
<p>Finally, the behaviour of transformed code can be hard to reason about: e.g. our <code>fib</code> looks like we should be able to annotate it with <code>@tailrec</code>, but in fact the compiler will complain, because it doesn’t look to it like it is tail-recursive after the CPS transformation is performed! This is puzzling, given the fact that by definition CPS code is tail-recursive, but shows that even the compiler can get confused by the transformation.</p>
<h3 id="jvm-coroutines">JVM Coroutines</h3>
<p>The limitations of JDK with respect to interesting control flows are addressed by a patch on OpenJDK created by Lukas Stadler as a part of Da Vinci Machine Project. It offers direct support for coroutines and generators through library additions and JIT-level modifications, but with no bytecode changes. This is implemented via stack manipulation – a hybrid of stack copying and spaghetti stack.</p>
<p>The structure of a coroutine is similar to what Miles coded up in his library:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">class</span> <span style="color:#458;font-weight:bold">MyCoroutine</span> <span style="color:#000;font-weight:bold">extends</span> <span style="color:#458;font-weight:bold">Coroutine</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#998;font-style:italic">// some code
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span>  `yield`<span style="color:#000;font-weight:bold">()</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>The advantage of JVM solution is that it lets us use coroutines which interact with Java libraries. An example provided by Miles was a SAX parser handler, where a coroutine allowed to deal with the inversion of control imposed by a push parser:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span>parser<span style="color:#000;font-weight:bold">.</span>parse<span style="color:#000;font-weight:bold">(</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">new</span> <span style="color:#458;font-weight:bold">File</span><span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;contentxml&#34;</span><span style="color:#000;font-weight:bold">),</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">DefaultHandler</span><span style="color:#000;font-weight:bold">()</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">override</span> <span style="color:#000;font-weight:bold">def</span> startElemt<span style="color:#000;font-weight:bold">(...)</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>      ret<span style="color:#000;font-weight:bold">(</span>some<span style="color:#000;font-weight:bold">(</span>qName<span style="color:#000;font-weight:bold">))</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">)</span>
</span></span></code></pre></div><p>As mentioned before, this can’t be done with Scala continuations because <code>startElement</code> is not CPS-aware.</p>
<h2 id="phil-bagwell-lock-free-resizable-concurrent-tries">Phil Bagwell: Lock-Free Resizable Concurrent Tries</h2>
<p>In an enthusiastic, crazily paced talk, Phil, who works with Alex Prokopec and Tiark Rompf at EPFL, has shown us some serious data structure/algorithm/bit twiddling results. His motivation was to create a data structure that is suitable for highly parallel:</p>
<ul>
<li>caches</li>
<li>dictionaries</li>
<li>sparse arrays</li>
<li>convergence algorithms</li>
</ul>
<h3 id="hash-tries">Hash Tries</h3>
<p>The presentation relied heavily on diagrams, so sadly these textual notes do not capture his points effectively, but I’ll try anyway:</p>
<p>We use 4-way branching in each tree node for illustration (in practice it will be 32). The place for a value in the tree is found by looking at the hash code. The first four bits determine the branch we take in the root node, following two specify position on the second level, etc:</p>
<pre tabindex="0"><code>000000: [x| | | ]
010000: [ |x| | ]
000100: [p| | | ]; p -&gt; [x| | | ]
</code></pre><p>This is fast, but we end up with trees that have too many gaps and waste memory. Phil then explained a possible strategy for compression of the tree, where I got lost (did I mention the pace of the talk?). The proposed solution suffered from linear cost for finding the item at the lowest level of the trie. Solution: provide a bitmap index showing which cells are real and then compress all levels:</p>
<pre tabindex="0"><code>[48| |57| ]   -&gt;   1010:[48| |57| ]   -&gt;   10:[48|57]
</code></pre><p>Some bit-twiddling was required to interpret the bitmap.</p>
<p><em>TODO: look up the details of this structure</em></p>
<p>In practice, 32 fan out in every node turned out to be a good match for CPU cache line sizes; the trade off for the distance to go between items versus making a copy of a part of the trie gave optimal results at this node size.</p>
<h3 id="making-it-concurrent">Making it Concurrent</h3>
<p>How do we make our trie concurrent? For scalability in the presence of massive concurrency we want to avoid locks. <em>Compare-and-swap</em> instruction is a well-known alternative: <code>CAS(address, expected_value, new_value): bool</code> is na “optimistic lock”, and is available on the JVM and natively in Intel processors. Sample usage:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> counter<span style="color:#000;font-weight:bold">()</span> <span style="color:#000;font-weight:bold">=</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">do</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    a <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">READ</span><span style="color:#000;font-weight:bold">(</span>addr<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    b <span style="color:#000;font-weight:bold">=</span> a <span style="color:#000;font-weight:bold">+</span> <span style="color:#099">1</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span> <span style="color:#000;font-weight:bold">while</span> <span style="color:#000;font-weight:bold">(!</span><span style="color:#458;font-weight:bold">CAS</span><span style="color:#000;font-weight:bold">(</span>addr<span style="color:#000;font-weight:bold">,</span> a<span style="color:#000;font-weight:bold">,</span> b<span style="color:#000;font-weight:bold">))</span>
</span></span></code></pre></div><p>This can also be implemented using a spinlock – but then, it’s blocking, which we don’t want.</p>
<p>It turned out that making tries concurrent presented a number of challenges, a solution of each leading to the next problem.</p>
<h3 id="inserting-into-a-trie-concurrently">Inserting into a trie concurrently</h3>
<p>We can allocate the new/updated node, then do a CAS on the cell in the parent node where the reference to our updated node needs to be inserted. This can immediately lead to a data race, because the node we are CAS-ing on might have been modified already, hence removed from the trie. According to Phil, after three weeks of pondering on this issue, and some beers the night before, he came up with a solution: introduce intermeidate I-nodes between the nodes containing data and perform CAS on them.</p>
<p>It turned out that the speed was not impaired; as a metter of fact, good properties of the new structure wrt. caching outweighted the overhead of additional node hops.</p>
<h3 id="deleting-from-a-trie">Deleting from a trie</h3>
<p>With that out of the way, the problem now is that deletion can’t compress levels when only a single item is left in a leaf; if it did that, we could lose an insertion to that leaf which happened concurrently. The solution involved disallowing insertion during compression. How can this be achieved without a lock? It turns out that if a special cell (“T-node”) is attached to the leaf to be compressed, and the threads are instructed to do their best to get rid of that node, it results in the expected behaviour; many threads might be compressing the same node in parallel and race for whose result will make it to the trie, but in the end the results of their work are the same, so it doesn’t matter which one wins. While it was not immediately obvious that this algorithm was in fact lock-free, Alex Prokopec proved it.</p>
<p>In the end, ensuring lock freedom took most of the time spent working on this data structure.</p>
<h3 id="scalability">Scalability</h3>
<p>Phil presented a number of plots comparing CHT with alterantive hash map implementations. While it appeared to scale very nicely on 8-way system, it really shone on a 64-core systems. In particular, it had a huge advantage over alternatives for insertions on 4x 8-core i7, this was due to peculiarities of this particular architecture.</p>
<h3 id="snapshots">Snapshots</h3>
<p>Additional work allowed the tries to be snapshot, in constant time:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">val</span> sn <span style="color:#000;font-weight:bold">=</span> cht<span style="color:#000;font-weight:bold">.</span>snap
</span></span></code></pre></div><p>This allows the program to carry on modifying <code>cht</code> while <code>sn</code> continues to represent the state of the trie when the snapshot was taken. Its uses involve massively parallel computations, e.g. fluid flow analysers, monte carlo simulators and resource optimisers.</p>
<h3 id="fast-hash-functions">Fast Hash Functions</h3>
<p>The second part of Phil’s talk circled around “the best function he has ever written”, which turned out to be a hashing function.</p>
<p>With parallel collections it is sometimes needed to re-assemble a hash map from the results of parallelised computations. While doing so, it has been measured that the existing Java hash function was one of the major performance blockers. Phil tried to devise a hashing function that would scale well while having all the pre-requisite properties spelled out by an authority in the field, Bob Jenkins:</p>
<ul>
<li>1 bit change causes half bits to change (on average)</li>
<li>no funnels</li>
<li>Poisson distribution</li>
</ul>
<p>also useful:</p>
<ul>
<li>Chi²</li>
<li>be reversible</li>
</ul>
<p>He started off by multiplying the input value by a magic number: <code>101101 * 010011</code>, but soon noticed a problem: the bits on the right influenced the left, but not the other way round. If the right-hand side has little entropy, clusters of hash codes are formed. A solution was to reverse the result and multiply again:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">val</span> magic <span style="color:#000;font-weight:bold">=</span> <span style="color:#099">0x9e3775cd</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> bhash<span style="color:#000;font-weight:bold">(</span>i<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">=</span> reverseBytes<span style="color:#000;font-weight:bold">(</span>i <span style="color:#000;font-weight:bold">*</span> magic<span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">*</span> magic
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">// slow version; Integer.reverseBytes does this in one x86 instruction!
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span><span style="color:#000;font-weight:bold">def</span> reverseBytes <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">val</span> i <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">(</span>x <span style="color:#000;font-weight:bold">&lt;&lt;</span> <span style="color:#099">16</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">+</span> <span style="color:#000;font-weight:bold">(</span>x <span style="color:#000;font-weight:bold">&gt;&gt;&gt;</span> <span style="color:#099">16</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">((</span>i <span style="color:#000;font-weight:bold">&amp;</span> K8<span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">&lt;&lt;</span> <span style="color:#099">8</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">+</span> <span style="color:#000;font-weight:bold">((</span>i <span style="color:#000;font-weight:bold">&gt;&gt;&gt;</span> <span style="color:#099">8</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">&amp;</span> K8<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>How do we choose magic number? It:</p>
<ul>
<li>should have about the same number of 1s and 0s</li>
<li>should have max run of 3 of same</li>
<li>must be odd (otherwise is not reversible, loses the last bit)</li>
</ul>
<p>Performance results and statistical properties are encouraging:</p>
<table>
<thead>
<tr>
<th>Algorithm</th>
<th>Time</th>
<th>Statistical properties</th>
</tr>
</thead>
<tbody>
<tr>
<td>Murmur hash (baseline)</td>
<td>16 ns</td>
<td>poor</td>
</tr>
<tr>
<td>Bhash32</td>
<td>16 ns</td>
<td>good</td>
</tr>
<tr>
<td>Bhash64</td>
<td>14 ns</td>
<td>good</td>
</tr>
</tbody>
</table>
<p>The hypothesis on why 64 runs faster is that it is a result of the layout of registers in x86 processor.</p>
<h3 id="kojo">Kojo</h3>
<p>With a couple of minutes left, Phil did a quick demo of <a href="http://kogics.net/sf:kojo">Kojo</a> – a learning environment, which turned out to be a very effective presentation tool for Phil’s job as the marketing manager for TypeSafe. The environment indeed looks like an excellent learning aid.</p>
<h2 id="park-benchfish-bowl">Park Bench/Fish Bowl</h2>
<p>After the lunch break there was a “park bench” session, where delegates took turns to sit at the centre and discuss Scala-related topics. The beer, handed out before the session, was meant to encourage more vigorous discussion, but on me it only had the effect of inducing drowsiness, which meant I have not remembered much of what has been discussed.</p>
<h2 id="ad-hoc-sessions">Ad-hoc Sessions</h2>
<p>Finally, the delegates assembled into groups to discuss specific subjects, among them “Scala in production”, “Kojo” and “parser combinators”. I sat through the Kojo session presented by Phil Bagwell, and had a chance to catch up with him afterwards. Phil is a captivating speaker; it is really curious that I don’t recollect his name ever being mentioned in numerous Scala discussion groups that I follow. He definitely seems to be at the centre of the Scala library optimisation work and can talk for hours about how large customers such as LinkedIn drive the optimisation effort, how distributed collections are going to differ from parallel collections, how language virtualisation enables “concurrency for the masses” and what challenges taking it further, into virtual hardware and cloud, poses. As a speaker Phil reminds me of Simon Peyton Jones, which is about as good as it can get. Another name to look for when skimming conference speaker lists.</p>
]]></content:encoded></item><item><title>Setting up BuildBot with Windows Slave on AWS EC2</title><link>https://blog.mmakowski.com/technology/setting-up-buildbot-with-windows-slave-on-aws-ec2/</link><pubDate>Mon, 15 Aug 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/setting-up-buildbot-with-windows-slave-on-aws-ec2/</guid><description>Not long ago I set up a BuildBot instance for wxHaskell and thought about sharing my experience with configuring all the elements of the system. Johan Tibell’s commentary to the State of Haskell, 2011 survey, and his call for Windows bots to test Hackage libraries, prompted me to finally put my notes together into tutorial of a sort. There is nothing Haskell-specific, so if you are looking to automate Windows builds of apps written in any other language this guide should provide all the info you need.</description><content:encoded><![CDATA[<p>Not long ago I set up a BuildBot instance for wxHaskell and thought about sharing my experience with configuring all the elements of the system. Johan Tibell’s <a href="http://blog.johantibell.com/2011/08/results-from-state-of-haskell-2011.html">commentary to the State of Haskell, 2011 survey</a>, and his call for Windows bots to test Hackage libraries, prompted me to finally put my notes together into tutorial of a sort. There is nothing Haskell-specific, so if you are looking to automate Windows builds of apps written in any other language this guide should provide all the info you need.</p>
<h2 id="the-setup">The Setup</h2>
<p><a href="http://trac.buildbot.net">BuildBot</a> is a build server designed specifically for automating builds of software that targets multiple platforms. The central server (master) sends build requests to multiple slaves, each of which can be configured differently. The server receives the build results from slaves, aggregates them and displays via a web interface. While the server should be accessible at all times, the slaves are only required when there is something to build.</p>
<p>In order for the build to be repeatable and to avoid random errors introduced by unrelated configuration changes, it would be nice for the slaves to be dedicated machines with a known initial configurations. This sounds like an ideal setting for using virual servers created from a disk image specifically for the build. Thanks to services like Amazon EC2 it is relatively easy and inexpensive to set up such a box.</p>
<p>Helpfully, BuildBot supports so called “latent slaves”, which are started by the server when there is a build to run, and are stopped when there is no more work to do. Furthermore, there is an implementation of a latent slave that works with EC2.</p>
<h2 id="what-we-will-need">What we will need</h2>
<p>For the BuildBot master, we’ll need a server with shell access, which is permanently online and where you can open a port to a non-HTTP traffic (this is required for accepting slave connections). I’ve used a <a href="http://webfaction.com">WebFaction</a> shared hosting with a dedicated IP (additional 5$ per month), which is required for the aforementioned port.</p>
<p>We’ll set up the slave on Amazon EC2. I’m not going to cover how to set up an account there as the process is straightforward and there are numerous resources on how to do this. Hosting of the disk image (AMI) will set us back a couple of dollars per month; on top of that we’ll need to pay for the time our slave is running, which for typical builds that take less than an hour and one build every day running on a micro instance will add another couple of dollars.</p>
<h2 id="the-master">The Master</h2>
<p>All of the steps below happen on the always-online server. They assume that <code>python</code> on our server runs Python version 2.7.</p>
<h3 id="virtualenv">Virtualenv</h3>
<p>Download the tarball from [http://pypi.python.org/pypi/virtualenv/] and untar to a temporary directory. In there run <code>python setup.py instal --dry-run</code>. If it complains about missing directories, create them. Continue running with –dry-run until it passe, then run without –dry-run. Once done, we should end up with <code>virtualenv</code> script in <code>~/bin</code>. We can then get rid of the tarball and temporary directory.</p>
<h3 id="buildbot">BuildBot</h3>
<p>Follow the <a href="http://buildbot.net/buildbot/docs/current/tutorial/firstrun.html#creating-a-master">BuildBot tutorial</a>. I installed BuildBot in <code>~/opt/buildbot</code> instead of suggested <code>~/tmp/buildbot</code>, other than that I followed it to the letter.</p>
<p>Opening the BuildBot website to the outside world depends on how our server is set up. For WebFaction it involved creating a custom web application via the control panel. This web application got assigned a port number, which then needed to be set in BuildBot’s config by editing <code>~/opt/buildbot/sandbox/master/master.cfg</code> and changing the <code>http_port</code> in <code>c['status'].append(html.WebStatus(http_port=8010, authz=authz_cfg))</code> to the assigned port.</p>
<p>Finally, we might want to set up a cron job to automatically start the master should it die for any reason; here’s the script I used:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#999;font-weight:bold;font-style:italic">#!/bin/bash
</span></span></span><span style="display:flex;"><span><span style="color:#999;font-weight:bold;font-style:italic"></span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"># starts the buildbot master if it&#39;s not running already</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#008080">HOME</span><span style="color:#000;font-weight:bold">=</span>/home/mmakowski
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ps -ef | grep <span style="color:#d14">&#39;buildbot start master&#39;</span> | grep -vq grep
</span></span><span style="display:flex;"><span><span style="color:#008080">RUNNING</span><span style="color:#000;font-weight:bold">=</span><span style="color:#008080">$?</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">if</span> <span style="color:#000;font-weight:bold">[</span> <span style="color:#008080">$RUNNING</span> -ne <span style="color:#099">0</span> <span style="color:#000;font-weight:bold">]</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">then</span>
</span></span><span style="display:flex;"><span>    <span style="color:#0086b3">cd</span> <span style="color:#008080">$HOME</span>/opt/buildbot
</span></span><span style="display:flex;"><span>    <span style="color:#0086b3">source</span> sandbox/bin/activate
</span></span><span style="display:flex;"><span>    <span style="color:#0086b3">cd</span> sandbox
</span></span><span style="display:flex;"><span>    buildbot start master
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">fi</span>
</span></span></code></pre></div><p>Then <code>crontab -e</code> and add entry:</p>
<pre tabindex="0"><code>0       *       *       *       *       /home/mmakowski/bin/buildbot-start-master-if-not-running &amp;
</code></pre><p>which will ensure that the script will run once every hour.</p>
<h2 id="the-slave">The Slave</h2>
<p>If we have a Windows box handy we might want to test the slave setup on it before playing with AWS instance, which is billed by the hour.</p>
<p>Log on to <a href="https://console.aws.amazon.com/ec2">AWS Management Console</a> and set up a Windows instance using one of the Windows AMIs provided by Amazon((I’ll assume we used a 64-bit OS in the instructions that follow; if not, 32 bit versions of relevant software should be used instead of the ones mentioned)) (see <a href="http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/">EC2 Gettings Started guide</a> for step-by-step instructions). After a couple of minutes we will be able to retrieve the administrator password and connect using Remote Desktop Connection (if on Windows) or rdesktop (on Linux or Mac).</p>
<p>Once logged on, we need to change the administrator password to something we’ll remember and install the following software:</p>
<ul>
<li><a href="http://www.python.org/getit/releases/2.7/">Python 2.7</a> (64 bit)</li>
<li><a href="http://sourceforge.net/projects/pywin32/files/pywin32/">Pywin32</a></li>
<li><a href="http://pypi.python.org/pypi/setuptools#windows">easy_install</a></li>
<li><a href="http://twistedmatrix.com/trac/wiki/Downloads">Twisted</a></li>
<li>Using easy_install set up <code>zope.interface</code>: <code>easy_install zope.interface</code></li>
<li>unzip <a href="http://code.google.com/p/buildbot/downloads/list">BuildBot Slave</a> to a temporary directory and run <code>setup.py install</code> in there</li>
</ul>
<p>On top of that we will need to install any other software required to build the project we’re setting the slave up for (VCS client, compiler, libraries etc.)</p>
<p>Once it is done, we can follow <a href="http://buildbot.net/buildbot/docs/current/tutorial/firstrun.html#creating-a-slave">the slave part of the BuildBot tutorial</a> to make sure that the slave can communicate with the master and can handle build requests.</p>
<p>Note that so far the slave we set up is a regular (non-latent) one, i.e. master will assume that it is always online and available to handle build requests. We’ll address this shortly; for now it’s important to make sure that the builds work as expected on our newly set up server.</p>
<h2 id="making-it-latent">Making it Latent</h2>
<h3 id="the-slave-1">The Slave</h3>
<p>After we are happy that the master can invoke builds, one final piece of slave configuration is ensuring that the slave process starts up automatically after the server is brought on line; on Windows this is done using services. Making slave run as a service will require a piece of custom Python code. I’ve used <a href="http://nyc-dba.blogspot.com/2008/10/running-buildbot-buildslave-as-windows.html">the script by Ira Pfeifer</a>, modified slightly to work with recent version of BuildBot. Here it is, for your convenience; make sure to update the environment variables set in the script to contain everything your build needs:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#d14">&#34;&#34;&#34; buildbot_slave_service.py
</span></span></span><span style="display:flex;"><span><span style="color:#d14">
</span></span></span><span style="display:flex;"><span><span style="color:#d14">Original Author: Ira Pfeifer
</span></span></span><span style="display:flex;"><span><span style="color:#d14">Email: ipfeifer -dot- tech -at- gmail
</span></span></span><span style="display:flex;"><span><span style="color:#d14">&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">sys</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">os</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">subprocess</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">win32serviceutil</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">win32service</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">win32event</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">win32api</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">time</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">from</span> <span style="color:#555">buildslave.scripts</span> <span style="color:#000;font-weight:bold">import</span> runner
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">from</span> <span style="color:#555">buildslave.scripts.startup</span> <span style="color:#000;font-weight:bold">import</span> start
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"># change paths as appropriate</span>
</span></span><span style="display:flex;"><span>slavepath <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">&#34;c:</span><span style="color:#d14">\\</span><span style="color:#d14">buildbot</span><span style="color:#d14">\\</span><span style="color:#d14">slave-wxhaskell&#34;</span>
</span></span><span style="display:flex;"><span>homepath <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">&#34;</span><span style="color:#d14">\\</span><span style="color:#d14">&#34;</span>
</span></span><span style="display:flex;"><span>os<span style="color:#000;font-weight:bold">.</span>environ[<span style="color:#d14">&#39;HOMEDRIVE&#39;</span>] <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">&#34;C:&#34;</span>
</span></span><span style="display:flex;"><span>os<span style="color:#000;font-weight:bold">.</span>environ[<span style="color:#d14">&#39;HOMEPATH&#39;</span>] <span style="color:#000;font-weight:bold">=</span> homepath
</span></span><span style="display:flex;"><span>os<span style="color:#000;font-weight:bold">.</span>environ[<span style="color:#d14">&#39;PATH&#39;</span>] <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">r</span><span style="color:#d14">&#34;C:\Python27;C:\Python27\Scripts;C:\Program Files (x86)\Haskell\bin;C:\Program Files (x86)\Haskell Platform\2011.2.0.1\lib\extralibs\bin;C:\Program Files (x86)\Haskell Platform\2011.2.0.1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;c:\program files (x86)\wx-config;c:\program files (x86)\Darcs;C:\Users\Administrator\AppData\Roaming\cabal\bin&#34;</span>
</span></span><span style="display:flex;"><span>os<span style="color:#000;font-weight:bold">.</span>environ[<span style="color:#d14">&#39;WXWIN&#39;</span>] <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">r</span><span style="color:#d14">&#34;C:\wxWidgets2.8&#34;</span>
</span></span><span style="display:flex;"><span>os<span style="color:#000;font-weight:bold">.</span>environ[<span style="color:#d14">&#39;WXCFG&#39;</span>] <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">r</span><span style="color:#d14">&#34;gcc_dll\mswu&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">class</span> <span style="color:#458;font-weight:bold">BuildSlaveService</span>(win32serviceutil<span style="color:#000;font-weight:bold">.</span>ServiceFramework):
</span></span><span style="display:flex;"><span>    _svc_name_ <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">&#34;BuildBot_Slave_wxHaskell&#34;</span>
</span></span><span style="display:flex;"><span>    _svc_display_name_ <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">&#34;BuildBot Slave wxHaskell&#34;</span>
</span></span><span style="display:flex;"><span>    _svc_description_ <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">&#34;Buildbot slave based in &#34;</span> <span style="color:#000;font-weight:bold">+</span> slavepath
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> __init__(<span style="color:#999">self</span>, args):
</span></span><span style="display:flex;"><span>        win32serviceutil<span style="color:#000;font-weight:bold">.</span>ServiceFramework<span style="color:#000;font-weight:bold">.</span>__init__(<span style="color:#999">self</span>, args)
</span></span><span style="display:flex;"><span>        <span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>stop_event <span style="color:#000;font-weight:bold">=</span> win32event<span style="color:#000;font-weight:bold">.</span>CreateEvent(<span style="color:#000;font-weight:bold">None</span>, <span style="color:#099">0</span>, <span style="color:#099">0</span>, <span style="color:#000;font-weight:bold">None</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> <span style="color:#900;font-weight:bold">SvcDoRun</span>(<span style="color:#999">self</span>):
</span></span><span style="display:flex;"><span>        <span style="color:#998;font-style:italic"># The service starts a subprocess that will run the actual buildbot</span>
</span></span><span style="display:flex;"><span>        <span style="color:#998;font-style:italic"># so that it can be stopped by simply killing off the subprocess.</span>
</span></span><span style="display:flex;"><span>        <span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>child <span style="color:#000;font-weight:bold">=</span> subprocess<span style="color:#000;font-weight:bold">.</span>Popen([<span style="color:#d14">&#34;python&#34;</span>, __file__, <span style="color:#d14">&#34;start&#34;</span>])
</span></span><span style="display:flex;"><span>        isAlive <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">True</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000;font-weight:bold">while</span> isAlive:
</span></span><span style="display:flex;"><span>            time<span style="color:#000;font-weight:bold">.</span>sleep(<span style="color:#099">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> <span style="color:#900;font-weight:bold">SvcStop</span>(<span style="color:#999">self</span>):
</span></span><span style="display:flex;"><span>        <span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>ReportServiceStatus(win32service<span style="color:#000;font-weight:bold">.</span>SERVICE_STOP_PENDING)
</span></span><span style="display:flex;"><span>        handle <span style="color:#000;font-weight:bold">=</span> win32api<span style="color:#000;font-weight:bold">.</span>OpenProcess(<span style="color:#099">1</span>,<span style="color:#099">0</span>,<span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>child<span style="color:#000;font-weight:bold">.</span>pid)
</span></span><span style="display:flex;"><span>        <span style="color:#998;font-style:italic"># returns exit code - wrap w/ error handling?</span>
</span></span><span style="display:flex;"><span>        win32api<span style="color:#000;font-weight:bold">.</span>TerminateProcess(handle, <span style="color:#099">0</span>)
</span></span><span style="display:flex;"><span>        win32api<span style="color:#000;font-weight:bold">.</span>CloseHandle(handle)
</span></span><span style="display:flex;"><span>        isAlive <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">False</span>
</span></span><span style="display:flex;"><span>        <span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>ReportServiceStatus(win32service<span style="color:#000;font-weight:bold">.</span>SERVICE_STOP_PENDING)
</span></span><span style="display:flex;"><span>        win32<span style="color:#000;font-weight:bold">.</span>SetEvent(<span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>hWaitStop)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        SvcShutdown <span style="color:#000;font-weight:bold">=</span> SvcStop
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">def</span> <span style="color:#900;font-weight:bold">start_buildslave</span>():
</span></span><span style="display:flex;"><span>    config <span style="color:#000;font-weight:bold">=</span> runner<span style="color:#000;font-weight:bold">.</span>Options()
</span></span><span style="display:flex;"><span>    config<span style="color:#000;font-weight:bold">.</span>parseOptions([<span style="color:#d14">&#39;start&#39;</span>, slavepath])
</span></span><span style="display:flex;"><span>    so <span style="color:#000;font-weight:bold">=</span> config<span style="color:#000;font-weight:bold">.</span>subOptions
</span></span><span style="display:flex;"><span>    start(so)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">if</span> __name__ <span style="color:#000;font-weight:bold">==</span> <span style="color:#d14">&#39;__main__&#39;</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">if</span> <span style="color:#0086b3">len</span>(sys<span style="color:#000;font-weight:bold">.</span>argv) <span style="color:#000;font-weight:bold">&gt;</span> <span style="color:#099">1</span> <span style="color:#000;font-weight:bold">and</span> sys<span style="color:#000;font-weight:bold">.</span>argv[<span style="color:#099">1</span>] <span style="color:#000;font-weight:bold">==</span> <span style="color:#d14">&#34;start&#34;</span>:
</span></span><span style="display:flex;"><span>        start_buildslave()
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">else</span>:
</span></span><span style="display:flex;"><span>        win32serviceutil<span style="color:#000;font-weight:bold">.</span>HandleCommandLine(BuildSlaveService)
</span></span></code></pre></div><p>Put this somewhere on the server and run <code>buildbot_slave_service.py install</code>. Then go to Services application and change the startup to <code>run automatically (delayed start)</code>, as Administrator.</p>
<p>After this is done we are ready to take a snapshot of the servers hard drive, so that we can start clones later on. Once the AMI appears as <em>available</em> in AMIs section of the EC2 console we will terminate the instance we’ve just configured.</p>
<h3 id="the-master-1">The Master</h3>
<p>We’ll need one additional Python library to enable BuildBot master to control EC2 instances: <a href="http://code.google.com/p/boto/">boto</a>. On the master server, cd to <code>~/opt/buildbot</code>, activate the sandbox (<code>. sandbox/bin/activate</code>) and run <code>easy_install boto</code>.</p>
<p>It’s now time to tell master to treat our slave as latent. The setup is described in the <a href="http://buildbot.net/buildbot/docs/current/full.html#Amazon-Web-Services-Elastic-Compute-Cloud-_0028_0022AWS-EC2_0022_0029">BuildBot docs</a>, and it boils down to updating <code>c['slaves']</code> like this:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#998;font-style:italic">####### BUILDSLAVES</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"># The &#39;slaves&#39; list defines the set of recognized buildslaves. Each element is</span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"># a BuildSlave object, specifying a unique slave name and password.  The same</span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"># slave name and password must be configured on the slave.</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">from</span> <span style="color:#555">buildbot.buildslave</span> <span style="color:#000;font-weight:bold">import</span> BuildSlave
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">from</span> <span style="color:#555">buildbot.ec2buildslave</span> <span style="color:#000;font-weight:bold">import</span> EC2LatentBuildSlave
</span></span><span style="display:flex;"><span>c[<span style="color:#d14">&#39;slaves&#39;</span>] <span style="color:#000;font-weight:bold">=</span> [EC2LatentBuildSlave(<span style="color:#d14">&#39;&lt;slave name&gt;&#39;</span>, <span style="color:#d14">&#39;&lt;slave password&gt;&#39;</span>, <span style="color:#d14">&#39;t1.micro&#39;</span>,
</span></span><span style="display:flex;"><span>                                   region<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">u</span><span style="color:#d14">&#39;eu-west-1&#39;</span>,
</span></span><span style="display:flex;"><span>                                   ami<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">&#39;ami-12345678&#39;</span>,
</span></span><span style="display:flex;"><span>                                   identifier<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">&#39;&lt;key identifier&gt;&#39;</span>,
</span></span><span style="display:flex;"><span>                                   secret_identifier<span style="color:#000;font-weight:bold">=</span><span style="color:#d14">&#39;&lt;secret key&gt;&#39;</span>)]
</span></span></code></pre></div><p>Where:</p>
<ul>
<li><code>&lt;slave name&gt;</code> and <code>&lt;slave password&gt;</code> are the same as the ones we used so far</li>
<li><code>t1.micro</code> is the type of EC2 instance; change it to a bigger one if that’s what you require for your build (check <a href="http://aws.amazon.com/ec2/pricing/">the prices</a> before doing that though)</li>
<li><code>region</code> should be the region where you set up your AMI (can be seen in the AWS console)</li>
<li><code>ami-12345678</code> is the id of the AMI we have created from the slave instance</li>
<li><code>&lt;key identifier&gt;</code> and <code>&lt;secret key&gt;</code> can be generated and obtained from the <em>Security Credentials</em> section of your <a href="http://aws.amazon.com/account/">AWS account</a>.</li>
</ul>
<p>Finally, in BuildBot 0.8.4 there is an <a href="http://trac.buildbot.net/ticket/1931">issue with EC2 instances not being terminated</a>. If left unfixed it can lead to each build’s disk image being left active indefinitely and charging to our account! The bug should be fixed in BuildBot 0.8.5; in the mean time we can patch it by hand, by replacing <code>instance.stop()</code> with <code>instance.terminate()</code> in <code>~/opt/buildbot/sandbox/lib/python2.7/site-packages/buildbot-0.8.4p2-py2.7.egg/buildbot/ec2buildslave.py</code>.</p>
<p>Once this is done, a <code>buildbot restart master</code> should provide us with a BuildBot process running with the final set up and starting up EC2 slave when required.</p>
<h3 id="fixing-the-slave">Fixing the Slave</h3>
<p>If it turns out that our slave configuration needs an update, here is what we do:</p>
<ul>
<li>in AWS console, create a new instance using our slave AMI</li>
<li>connect to the instance using Remote Desktop Connection/rdesktop and make the necessary config changes</li>
<li>create a new AMI from the reconfigured instance and then termiante the instance</li>
<li>update the master config with the new AMI id</li>
</ul>
<h3 id="debugging-the-master">Debugging the Master</h3>
<p>While the source code of BuildBot might be a bit difficult to follow for someone not versed in Twisted, I found the <a href="http://buildbot.net/buildbot/docs/current/tutorial/tour.html#debugging-with-manhole">manhole interface</a> invaluable in tracking down what turned out to be a trivial config issue.</p>
<h2 id="gotchas">Gotchas</h2>
<p>Two things I got bitten by and which took a little bit to investigate and fix are:</p>
<ul>
<li>AWS instance reboot on startup. The Windows box is rebooted by AWS immediately after being started; apparently this is required for some TCP/IP-related reconfiguration to take effect. As a result it is crucial that our BuildBot slave service is set up with <strong>delayed start</strong>. Otherwise the service will start and report to the master; it can even start running the build, when suddenly the server will reboot. After the reboot the service will come back up and try to connect again, but the master will reject this connection as unsolicited.</li>
<li>The <code>instance.stop()</code> issue mentioned earlier. Strangely, I would swear that my setup had been working for about a week without any patches, with instances being terminated; the “orphaned” stopped instances seemed to have started appearing suddenly and without any changes in either the slave or the server code or config. I can only assume I must have been seeing things, since <code>instance.stop()</code> has been there all the time and I’d never expect it to terminate an instance.</li>
</ul>
<p>Hopefully you won’t come across any more nasty surprises. Happy building!</p>
]]></content:encoded></item><item><title>Scala Exchange 2011 - Day 1</title><link>https://blog.mmakowski.com/technology/scala-exchange-2011-day-1/</link><pubDate>Fri, 15 Jul 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/scala-exchange-2011-day-1/</guid><description>I’ve attended a day full of Scala-related talks at Scala Exchange 2011, and, as was the case with the previous events organised by SkillsMatter, I felt that relating what was said and what my impressions were will help me digest all the new pieces of information. So, here it goes.
State of Scala In the keynote talk Martin Odersky explained how his perception of usefulness of functional programming in the real world shifted from a good fit for XML manipulation to concurrent and parallel computing.</description><content:encoded><![CDATA[<p>I’ve attended a day full of Scala-related talks at Scala Exchange 2011, and, as was the case with the previous events organised by SkillsMatter, I felt that relating what was said and what my impressions were will help me digest all the new pieces of information. So, here it goes.</p>
<h2 id="state-of-scala">State of Scala</h2>
<p>In the keynote talk <strong>Martin Odersky</strong> explained how his perception of usefulness of functional programming in the real world shifted from a good fit for XML manipulation to concurrent and parallel computing. Most of the time was spent on explaining how persistent (i.e. immutable) collections provide a good model for implicit parallelism. Starting from a concise solution to a <a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.113.1831&amp;rep=rep1&amp;type=pdf">phone number to sentences encoding problem</a>, Martin showed how the parallel collections introduced in Scala 2.9 make it possible to take advantage of multiple cores with minimal code changes; all it took was changing the type of a word list from <code>List[String]</code>to <code>ParVector[String]</code> and calling <code>par</code> method on a range to obtaine 2.5x speed-up on a four-core machine. According to Martin, this is a major step towards solving the <a href="http://www.nitrd.gov/subcommittee/hec/materials/ACAR1_REPORT.pdf">Popular Parallel Programming</a> challenge. At the first glance, it might seem like this sort of parallelisation could be done in a way that is transparent to the users of the collections. Unfortunately, this is not the case; for instance, users of <code>Seq</code> expect the order of processing elements to be stable, but <code>ParSeq</code> cannot guarantee this. Because of that, Scala’s collection hierarchy has been expanded to support <code>General*</code> traits, which are used as a base for sequential (as in Scala 2.8) and parallle (<code>Par*</code>) collections. A natural next step for implicit parallelism would be to scale the collection operations out to multiple nodes. Arguably the most popular model for distributed computing nowadays is map/reduce, first popularised by Google and made widely available by Apache Hadoop. However, some problems require hundreds of map/reduce steps and Martin’s hope is that putting collection abstractions on top of map/reduce can make distributed computation accessible to the wider developer community.</p>
<p>On the explicit parallelism side, an interesting twist was mentioning <a href="http://akka.io">Akka</a> as the source of tools like actors, software transactional memory and futures. This is obviously the consequence of Martin’s commercial alliance with Jonas Bonér under the <a href="http://typesafe.com">TypeSafe</a> umbrella. Martin also recognised problems with existing actor implementation in Scala (most notably performance issues and memory leak associated with storing unprocessed messages in the inbox) and announced that Akka’s and Scala’s actor implementation will be merged in future releases.</p>
<p>Carrying on the subject of parallelism, Martin accepted that neither parallel collections nor actors would be a good fit for massively parallel machines, like the NVIDIA Fermi, which requires in the order of 24000 threads to fully utilise its computing power. An approach currently investigated by researchers from EPFL and Standford is to provide domain-specific languages embedded in Scala that will use the knowledge of the domain for parallelisation – something Martin referred to as “language virtualisation”. An example given was Liszt, a language for calculating molecular flows, useful e.g. to model the air flows in a jet engine. The code in Liszt is converted to abstract syntax tree, which in turn gets processed by a specialised compiler generating code for the target platform. The compiler needs to be specialised to each domain, but Martin’s hope is large parts of it can be reused, making development of highly-parallel DSLs cheaper.</p>
<p>Mentioned among other plans for the future were a common framework for querying collections and databases (Linq for Scala?), libraries for Scala reflection and for reactive programming and improvements to Scala.NET. Other ideas being explored but not being commited to yet are including scala.io in the core library, a way of encoding information about side effects in the type system and a Scala to JavaScript translator. Modularisation of Scala library is being looked at, but given past failed efforts Martin is not overly optimistic this will be delivered any time soon.</p>
<h2 id="eclipse-ide-for-scala">Eclipse IDE for Scala</h2>
<p>After the break <strong>Martin</strong> returned to the stage to show how his initial commercial venture, <em>Scala Solutions</em>, attempted to improve the tool support for Scala by taking over the development of Eclipse IDE for Scala. While the Scala support in IntelliJ IDEA was getting significantly better with each release, the Eclipse plug-in, suffering from lack of commercial support and limited number of contributors, was lagging behind and the popular opinion was that it is inadequate for any serious work. The involvement of Scala Solutions was meant to change this: Eugene Vigdorchik joined from JetBrains to provide IDE experience, Iulian Dragos became the project lead while Martin became involved in modifying the compiler to suit the requirements of the IDE.</p>
<p>It’s worth noting at this point that while IntelliJ maintains its own Scala typechecker, the decision for Eclipse was to use the EPFL Scala compiler for error reporting in the UI. The advantages of this approach was that it guaranteed consistency with the main compiler and saving of effort – according to Martin writing the type checker from scratch would take between one and two man-years. On the other hand, IDE-specific type checkers can be faster than fully-fledged compilers, simply because they can cut corners where it doesn’t affect the accuracy of error reporting. Another disadvantage of the chose solution was that it tied Eclipse plug-in to a particular version of scala compiler.</p>
<p>The chosen architecture was to run the compiler in a separate thread which would receive work requests – a request would require determining either the type at given source position or the completion list – and respond via a dataflow variable (<code>SyncVar</code>). The implementation proved tricky: first of all, it needed to ensure that all compiler activity took place on a single thread, so that the internal state was protected. Secondly, the requirement to run up to hunderds of compilation tasks per minute exposed a number of memory leaks in the type checker. Finally, to make the error reporting responsive, the type checking had to be made selective, so that only the path in the AST leading to the node currently being changed was type-checked.</p>
<p>I did make a couple of attempts at using Scala IDE for Eclipse. The last one was about a year ago and after another disappointment I settled on Emacs+Ensime. The result of Scala Solutions’ work look promising indeed, and while it still seems to be behind IntelliJ in terms of features and reliability (Martin’s demo of working with the scala compiler itself didn’t go particularly smoothly, to put it mildly), it is getting there and deserves a serious look. Coming up are integration with SBT builder, an improved REPL and proper Scala debugger – as a long time Eclipse JDT user I plan to watch the development of this plug-in closely.</p>
<h2 id="scalaz---get-functional">Scalaz - Get Functional</h2>
<p>Scalaz provides hard-core functional programmers with the tools they are used to from Haskell: a hierarchy of type classes an their instances for standard Scala types. <strong>Jason Zaugg</strong>, one of the most active committers of the library, provided an overview of how type classes are encoded in Scala and how they can be used. One of the highlights was a demonstration of how type classes are useful based on well-known Java <code>Comparator</code> interface:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">&lt;</span>T<span style="color:#000;font-weight:bold">&gt;</span> <span style="color:#458;font-weight:bold">void</span> <span style="color:#900;font-weight:bold">sort</span><span style="color:#000;font-weight:bold">(</span>List<span style="color:#000;font-weight:bold">&lt;</span>T<span style="color:#000;font-weight:bold">&gt;</span> ts<span style="color:#000;font-weight:bold">,</span> Comparator<span style="color:#000;font-weight:bold">&lt;?</span> <span style="color:#000;font-weight:bold">super</span> T<span style="color:#000;font-weight:bold">&gt;</span> comparator<span style="color:#000;font-weight:bold">)</span>
</span></span></code></pre></div><p>What was missing was a clearer explanation of motivation for the set of type classes as provided by Scalaz. It got close to a really compelling example when Jason has shown how a <code>Seq[Promise[Int]]</code> can be turned into a <code>Promise[Seq[Int]]</code>, but I can’t help but feel that this example could have been presented more effectively.</p>
<p>Referential transparency, modularity and compositionality are very nice properties indeed, but the syntax used to achieve them in Scala is somewhat unpleasant. Let’s see:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">Monoid</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> zero<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">A</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> append<span style="color:#000;font-weight:bold">(</span>a1<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">,</span> a2<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">A</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>implict <span style="color:#000;font-weight:bold">def</span> T2Monoid<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span>, <span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">](</span><span style="color:#000;font-weight:bold">implicit</span> ma<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Monoid</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">],</span> mb<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Monoid</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">])</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Monoid</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span>, <span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">)</span><span style="color:#a61717;background-color:#e3d2d2">]</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">new</span> <span style="color:#458;font-weight:bold">Monoid</span><span style="color:#000;font-weight:bold">[(</span><span style="color:#458;font-weight:bold">A</span>, <span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">)]</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> zero <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">(</span>ma<span style="color:#000;font-weight:bold">.</span>zero<span style="color:#000;font-weight:bold">,</span> mb<span style="color:#000;font-weight:bold">.</span>zero<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> append<span style="color:#000;font-weight:bold">(</span>a1<span style="color:#000;font-weight:bold">:</span> <span style="color:#000;font-weight:bold">(</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">),</span> a2<span style="color:#000;font-weight:bold">:</span> <span style="color:#000;font-weight:bold">(</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">))</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">(</span>ma<span style="color:#000;font-weight:bold">.</span>append<span style="color:#000;font-weight:bold">(</span>a1<span style="color:#000;font-weight:bold">.</span>_1<span style="color:#000;font-weight:bold">,</span> a2<span style="color:#000;font-weight:bold">.</span>_1<span style="color:#000;font-weight:bold">),</span> mb<span style="color:#000;font-weight:bold">.</span>append<span style="color:#000;font-weight:bold">(</span>a1<span style="color:#000;font-weight:bold">.</span>_2<span style="color:#000;font-weight:bold">,</span> a2<span style="color:#000;font-weight:bold">.</span>_2<span style="color:#000;font-weight:bold">))</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>while the equivalent Haskell code would be:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">class</span> <span style="color:#458;font-weight:bold">Monoid</span> a <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  zero <span style="color:#000;font-weight:bold">::</span> a
</span></span><span style="display:flex;"><span>  append <span style="color:#000;font-weight:bold">::</span> a <span style="color:#000;font-weight:bold">-&gt;</span> a <span style="color:#000;font-weight:bold">-&gt;</span> a
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">instance</span> (<span style="color:#458;font-weight:bold">Monoid</span> a, <span style="color:#458;font-weight:bold">Monoid</span> b) <span style="color:#000;font-weight:bold">=&gt;</span> <span style="color:#458;font-weight:bold">Monoid</span> (a, b) <span style="color:#000;font-weight:bold">where</span>
</span></span><span style="display:flex;"><span>  zero <span style="color:#000;font-weight:bold">=</span> (zero, zero)
</span></span><span style="display:flex;"><span>  (a1, b1) `append` (a2, b2) <span style="color:#000;font-weight:bold">=</span> (a1 `append` a2, b1 `append` b2)
</span></span></code></pre></div><p>Furthermore, while Scalaz provides the <code>IO</code> monad to separate the side-effecting code from pure one, it is only done by convention and not enforced by the compiler – unlike in Haskell. On the other hand, Scala’s implicits are slightly more expressive than Haskell’s type classes, allowing for usage of the default instance but also providing a custom one when required. All in all, the talk was a good introduction to Scalaz for those familiar with Haskell; for the others, the opaque syntax and lack of clearly defined benefit might have been off-putting.</p>
<h2 id="representing-polymorphic-function-values-in-scala-using-type-classes">Representing Polymorphic Function Values in Scala Using Type Classes</h2>
<p>After handing over the day-to-day Scala IDE development to Scala Solutions/Typesafe team, <strong>Miles Sabin</strong> seems to be thriving in cutting-edge type system research. His <a href="https://blog.mmakowski.com/technology/functional-programming-exchange-2011/#scrap-your-boilerplate-with-scala">Scrap Your boilerplate with Scala talk</a> on Functional Programming Exchange, while presenting a Scala encoding of a fascinating result, left part of the audience confused, due to large amount of material being presented in a very short time. This time round the ratio was much better and we had a chance to at least understand the problem in reasonable detail.</p>
<p>The problem is that while Scala makes it easy to define a polymorphic <em>method</em>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">Id</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> id<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">](</span>a<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">=</span> a
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>when converting this method to a function value (the distiction between a method and a function is one of Scala quirks) using the trailing underscore syntax we are forced to provide a concrete type (e.g. <code>val fid = id[Int] _</code>), otherwise we’ll end up with a useless function with inferred type <code>Nothing =&gt; Nothing</code>. One way to work around that would be to make use of the way Scala represents functions and provide a custom function object with polymorphic <code>apply</code> method:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">PolyFn1</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">M</span><span style="color:#000;font-weight:bold">[</span><span style="color:#000;font-weight:bold">_</span><span style="color:#000;font-weight:bold">]]</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> apply<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">](</span>t<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">M</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">]</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">val</span> pf <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">new</span> <span style="color:#458;font-weight:bold">PolyFn1</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">List</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> apply<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">](</span>t<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">List</span><span style="color:#000;font-weight:bold">(</span>t<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>While the “function definition” is not particularly pleasing to the eye, we can still take advantage of the standard application syntax. We can write <code>pf(23)</code> and <code>pf(&quot;str&quot;)</code> and both will typecheck – i.e. <code>pf</code> is a parametrically polymorphic function.</p>
<p>But this was not sufficient for Miles; what he wanted to achieve was ad-hoc polymorphism, like the one allowed by Haskell’s type classes. The solution to this problem was the centrepiece of the talk, and, sadly, the part whose details I wasn’t able to follow. It seemed to boil down to using a single typeclass <code>TransCase[F, A, B]</code> whose instances represented an arbitrary function <code>A =&gt; B</code> and were selected by providing a phantom type as the first type parameter.</p>
<p>Below is what I hope is a faithful reproduction of one of Miles’s examples. In the definition of <code>inc</code>, the actual function to run is provided via a type parameter (<code>Inc</code>):</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">IncFn</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">import</span> <span style="color:#555">PolyFun._</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">class</span> <span style="color:#458;font-weight:bold">Inc</span> <span style="color:#000;font-weight:bold">extends</span> <span style="color:#458;font-weight:bold">PTrans</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Inc</span><span style="color:#000;font-weight:bold">]</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">Inc</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> apply<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">](</span>f0<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">T</span> <span style="color:#000;font-weight:bold">=&gt;</span> T<span style="color:#000;font-weight:bold">)</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">new</span> <span style="color:#458;font-weight:bold">TransCase</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Inc</span>, <span style="color:#458;font-weight:bold">T</span>, <span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">{</span> <span style="color:#000;font-weight:bold">val</span> f <span style="color:#000;font-weight:bold">=</span> f0 <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">implicit</span> <span style="color:#000;font-weight:bold">def</span> incInt<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">TransCase</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Inc</span>, <span style="color:#458;font-weight:bold">Int</span>, <span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Inc</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Int</span><span style="color:#000;font-weight:bold">](</span><span style="color:#000;font-weight:bold">_</span> <span style="color:#000;font-weight:bold">+</span> <span style="color:#099">1</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">implicit</span> <span style="color:#000;font-weight:bold">def</span> incString<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">TransCase</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Inc</span>, <span style="color:#458;font-weight:bold">String</span>, <span style="color:#458;font-weight:bold">String</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Inc</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">String</span><span style="color:#000;font-weight:bold">](</span><span style="color:#000;font-weight:bold">_</span> <span style="color:#000;font-weight:bold">+</span> <span style="color:#d14">&#34;*&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> inc<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">](</span>t<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">)(</span><span style="color:#000;font-weight:bold">implicit</span> f<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">TransCase</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Inc</span>, <span style="color:#458;font-weight:bold">T</span> ,<span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">])</span> <span style="color:#000;font-weight:bold">=</span> f<span style="color:#000;font-weight:bold">(</span>t<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  inc<span style="color:#000;font-weight:bold">(</span><span style="color:#099">23</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>  inc<span style="color:#000;font-weight:bold">(</span><span style="color:#d14">&#34;foo&#34;</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>Finally, this mechanism was used to define a function that lifted a function of arbitrary arity to <code>Option</code> monad. Miles is planning to write a blog post on this soon so watch <a href="http://www.chuusai.com/blog/">http://www.chuusai.com/blog/</a> if you are interested in a coherent explanation.</p>
<p>Given conceptual difficulty, the practicality of this approach seems questionable. Miles admitted that the proposed encoding is not something he would recommend for production use; nevertheless, it was yet another demonstration of the power of Scala’s type system and a number of conference attendees twitted about having their “mind blown”, which I assume must be a geeky expression of utmost appreciation.</p>
<h2 id="apache-esme---using-scala-and-lift-for-social-messaging">Apache ESME - Using Scala And Lift For Social Messaging</h2>
<p>During FP Exchange back in March I disliked the Play framework and WebSharper presentations, but it clearly must be me: another web-related talk and again something I can’t seem to get excited about. <strong>Vassil Dichev</strong> talked about an <a href="http://esme.apache.org/">Apache project ESME</a>, which seems to be a Twitter-like application built on Lift web framework and targeted at corporate intranets. Vassil elaborated on the advantages of Lift: Comet for server-initiated updates and abstraction of underlying communication mechanism, tight security via automatic escaping of user inputs and type-checked SQL queries and lightweight actors. The application itself seemed to provide little beyond what Twitter does.</p>
<p>Lift is one of most widely used toolkits built on top of Scala, so I assume most of the audience was to some extent familiar with it and its advantages. The talk had the flavour of “what I liked about scala/Lift when I was implementing this project”, which can be helpful, but even more helpful is sharing experiences of what works and what doesn’t and some deeper reflection on how to approach introducing Scala in a “real” project.</p>
<h2 id="stairway-to-heaven-or-scala-in-the-real-world">Stairway to Heaven or Scala in the “Real World”</h2>
<p>Which, incidentally, was what the following talk was about. <strong>Chris Marshall</strong> has been working in Java for over 10 years, implementing systems in the financial sector. Like many other Java developers at some point he got fed up with the boilerplate required in Java to e.g. express simple collection transformations. His initial requirement was for “java with closures” and Scala seemed like a natural choice. Chris has now been using Scala for three years and shared a number of insights on adopting it in the workplace:</p>
<ul>
<li>start by converting a project of reasonable size, around 50 to 100 classes; nothing very important, since you will probably make mistakes and end up wanting to throw the thing away</li>
<li>keep going over the same piece of code, gradually improving it to be more concise and idiomatic; if in doubt about style or best approach, ask for suggestions on Stack Overflow; writing Java in Scala is a waste of time</li>
<li>focus on small apps, not generic libraries; mistakes in libraries will propagate to the apps which use them</li>
<li>binary compatibility should not be an issue – it’s normally not a problem to recompile a couple of libraries when Scala version changes, unless the number of libraries is large or they are provided to external clients</li>
<li>actor model is a good fit for applications which process a stream of events but also need to manage the lifecycle</li>
<li>actors have also caveats: they are not particularly good for GUIs and remote actors are flaky.</li>
</ul>
<p>One remark I found particularly interesting was about how programming in Scala changed the way Chris codes in Java. For example, he reconfigured his IDE so that the keywords and types are not prominent – he found that they obscure the structure of the program.</p>
<h2 id="fostering-scala-adoption-in-your-enterprise">Fostering Scala Adoption in Your Enterprise</h2>
<p><strong>Glen Ford</strong> approached the issue of Scala adoption from a different angle: selling it to the decision-makers. He stated some rules which might seem obvious in retrospect, but which are often overlooked by the developers trying to push for the introduction of a new technology from the bottom-up. For example:</p>
<ul>
<li>don’t try to bring Scala to workplace just to learn it; ensure there is a tangible benefit for the company</li>
<li>Identify the person who makes the decision and what the benefit is to people who don’t code; in particular, how will it make/save/protect money? Remember: time is money!</li>
<li>try to connect with the people who make decisions before you try to influence them</li>
<li>when recruiting, scala can be used as a filter to hire better programmers</li>
<li>organise training yourself – explain scala to others, circulate blogs and presentations</li>
<li>try to adopt scala for pilot projects, spikes, prototypes, testing code</li>
<li>a new language is a trade-off: it does increase the complexity of technological landscape, but also gives a chance to address technical debt, move the platform forward</li>
<li>tool chain might be a problem: managers have to deal with the lowest common denominator, and tools are very important to improve productivity of the worse programmers</li>
</ul>
<h2 id="the-unfiltered-web-framework">The Unfiltered Web Framework</h2>
<p>Did I say that I don’t like web framework presentations? Scratch that; <strong>Dustin Whitney’s</strong> fifteen-minute overview of <a href="https://github.com/n8han/Unfiltered">Unfiltered</a> was interesting, well paced and to the point. First of all, Unfiltered is not a “framework”, but a set of libraries which can be included in an SBT project and used to implement stand-alone apps responding to HTTP requests using request matchers and response functions and combinators – a major selling point as far as I’m concerned. The API looked lightweight, a bit like Scalatra, but – according to the speaker – more idiomatic to Scala. It is mature enought for Dustin to use it in production apps. Finally, in response to a question from the audience, Dustin expressed his disregard for servlet containers with which he immediately bought me over. Executable jars FTW.</p>
<h2 id="how-to-build-a-high-performance-scalable-infrastructure-in-under-5-minutes">How to Build a High Performance, Scalable Infrastructure in Under 5 Minutes</h2>
<p><strong>David Savage</strong> attempted to explain how his employer, <a href="http://www.paremus.com/">Paremus</a>, deploys scalable and modular services. From what I could understand without being familiar with some of the technologies discussed, the platform consists of a minimal kernel that pulls all the dependencies in the form of OSGi modules. The system is defined as the components, transport, scaling and contract, with components and scaling requirements defined in an XML file and contracts expressed as LDAP filters. Overall Scala played a seemingly insignificant role of implementation language for one of the services – even its interface was defined in Java – so it felt a bit like an excuse to present an otherwise unrelated commercial product. David mentioned that Scala provided for the “high performance” part of the headline, but it was not elaborated on in any detail.</p>
]]></content:encoded></item><item><title>Functional Programming Exchange 2011</title><link>https://blog.mmakowski.com/technology/functional-programming-exchange-2011/</link><pubDate>Sun, 20 Mar 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/functional-programming-exchange-2011/</guid><description>After the success that Scala LiftOff London 2010 was I didn’t hesitate long before signing up for a number of other Scala and functional programming events hosted by Skills Matter. The first of them was Functional Programming Exchange. Below are notes from most of the sessions of this one-day conference.
Managing Parallelism - Embrace Diversity The event started with Simon Peyton Jones discussing the importance of parallel computing, how different problems call for different approaches and how functional languages (and Haskell in particular) are well suited for the task.</description><content:encoded><![CDATA[<p>After the success that <a href="https://blog.mmakowski.com/technology/scala-liftoff-london-2010-day-1/">Scala LiftOff London 2010</a> was I didn’t hesitate long before signing up for a number of other Scala and functional programming events hosted by Skills Matter. The first of them was Functional Programming Exchange. Below are notes from most of the sessions of this one-day conference.</p>
<h2 id="managing-parallelism---embrace-diversity">Managing Parallelism - Embrace Diversity</h2>
<p>The event started with <strong>Simon Peyton Jones</strong> discussing the importance of parallel computing, how different problems call for different approaches and how functional languages (and Haskell in particular) are well suited for the task.</p>
<h3 id="task-parallelism">Task Parallelism</h3>
<p>For applications which require not so much parallelism (i.e. usage of multiple processors to improve performance) as concurrency (the problem involves multiple threads of execution), e.g. GUIs, web servers or BitTorrent clients, shared memory and threads are a convenient model. Haskell offers “green” threads (spawned using <code>forkIO</code> function) which are very lightweight, allowing a commodity machine to run millions of them. The infamous difficulty of writing correct multi-threaded programs is largely due to commonly used synchronisation primitive: lock. The solution offered here is Software Transactional Memory: sections of code which operate on shared variables are wrapped in <code>atomically</code> function, which attempts to commit the transaction and rolls back and retries if conflicts are discovered. Transactions don’t protect threads from starvation, but they prevent deadlocks and livelocks and can be composed.</p>
<p>While the threaded model and shared memory might seem inherently imperative, Haskell shows its strength here by enforcing (by means of <code>STM</code> monad) separation of the state which needs to be handled in transactional manner from the rest of the program and ensures that transaction logging and rollback affects the minimal number of variables. This is key for performance; Microsoft tried to introduce STM to .Net but had to abandon the efforts because the runtime cost of transactions was too high in an imperative setting.</p>
<h3 id="distributed-memory">Distributed Memory</h3>
<p>A parallel computation model which received a lot of attention in recent years is that of actors – independent processes which don’t share any memory and communicate via asynchronous messages. A Haskell library that implements this functionality is currently being worked on as a part of a research project. One of the obstacles that had to be overcome was determining when the function sent to remote actor for execution can be serialised, given that it can close over non-serialisable values from the enviornment. A new paper discussing the solution to this problem should appear on <a href="http://research.microsoft.com/en-us/people/simonpj/#current">Simon’s web page</a> shortly. Apparently the implementation already works well enough for the researchers to be able to experiment with running k-means clustering in map/reduce style on Amazon’s EC2.</p>
<h3 id="functional-parallelism">Functional Parallelism</h3>
<p>Certain functions, like <code>map</code>, parallelise naturally. In Haskell this can be done semi-implicitly: one has to change <code>map</code> to <code>parMap</code>, but that’s the only change required in order to take advantage of multiple cores – that is, assuming the program was written so that <code>map</code> was at the heart of processing in the first place. This approach doesn’t scale beyond a single machine and the speed-ups are relatively small, but it can be achieved very cheaply, by simply replacing one function with another. In certain scenarios these modest speed-ups are worth pursuing: for example <a href="http://hackage.haskell.org/package/cpsa">Cryptographic Protocol Shapes Analyzer</a> often takes hours to run, so 3x improvement is noticeable.</p>
<h3 id="data-parallelism">Data Parallelism</h3>
<p>A property that enables <code>map</code> to be parallelised is independence of pieces of data on which it operates. This is a key to using multiple cores at large scale: being able to split the data into chunks and perform computations in parallel. As an illustration we have been shown an example of face-recognition software, which used a pipeline of functions to process an array of data. Using <a href="http://hackage.haskell.org/package/accelerate">Accelerate</a> Haskell library then allowed to transform this program to take advantage of GPU simply by replacing type <code>Array a b</code> with <code>Acc (Array a b)</code>. <code>Acc (Array a b)</code> represents a syntax tree of a program returning <code>Array a b</code>. This syntax tree can be passed to <code>CUDA.run :: Acc a -&gt; a</code> function that based on the syntax tree generates code that can be run on CUDA-capable NVIDIA GPUs. Fascinating as it was, the example did not make it clear how this approach differs from functional parallelism and how it enables scaling beyond what was possible with <code>parMap</code>.</p>
<p>In most of data-parallel solution implemented so far (map/reduce, MPI) the parallelisation takes place in a single place: the data is split into chunks and then a sequential computation is run for each chumk. Another approach would be to let the computations resulting from partitioning the data be parallelised further. The cost model for nested data parallelism is terrible, but not all hope is lost: Guy Blelloch proposed transforming nested programs to flat ones at compile time. This technique involves a number of open problems and is still an area of active research.</p>
<h3 id="conclusion">Conclusion</h3>
<p>All succesful parallel processing solutions implemented to date have been done in a declarative fashion. Simon believes FP has a chance to become huge, because it’s the only way to solve this problem. Haskell has a well-established support for threads synchronised using STM; support for other modes of parallelism is still in early phases but we can expect some new developments in the course of this year.</p>
<p>Merits of the talk aside, Simon proved that he is not only an FP legend but also a brilliant speaker: enthusiastic, fast, but always making sure the audience follows. His presentation alone was good enough reason to attend this conference.</p>
<p><a href="http://skillsmatter.com/podcast/scala/talk-by-haskell-expert-simon-peyton-jones">Managing parallelism: embrace diversity, but control side effects | SkillsCast</a></p>
<h2 id="functional-web">Functional Web</h2>
<p><strong>Sadek Drobi</strong> of <a href="http://www.zenexity.fr/">Zenexity</a> presented how FP support in Scala influenced the design of <a href="http://www.playframework.org/">Play web framework</a>. As an example, it turned out that exceptions are not a good model for undesired HTTP responses, because these responses are valid (and frequently occuring) results as opposed to exceptional cases. A mechanism to make this explicit was a form <code>Either</code> type, which could then be processed using <code>for</code> comprehensions (a.k.a “monadic syntax”) as if the desired scenario happened:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">for</span> <span style="color:#000;font-weight:bold">(</span>u <span style="color:#000;font-weight:bold">&lt;-</span> getUser<span style="color:#000;font-weight:bold">;</span>
</span></span><span style="display:flex;"><span>     vs <span style="color:#000;font-weight:bold">&lt;-</span> getVideosFor<span style="color:#000;font-weight:bold">(</span>u<span style="color:#000;font-weight:bold">))</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">yield</span> vs
</span></span></code></pre></div><p>In the event of <code>getUser</code> failing to produce a valid user the “undesired” result would be carried through and yielded as a result of this <code>for</code> comprehension.</p>
<p>Other features highlighted by Sadek were Scala’s XML library (useful for parsing responses from other services on the web) and pattern matching (used for processing SQL result sets). Here the significance of functional approach was not that obvious at all – it seemed that in the case of XML parsing the same benefit (of just updating XPaths to make the application work with other service provider’s XML) could have been achieved in any mainstream OO language. Also the SQL processing did not represent the state of the art as it used strings to represent SQL queries and hence gave up all compile time checks possible with libraries like <a href="http://squeryl.org/">Squeryl</a>. These points were raised by the audience and have not been addressed by Sadek in a satisfactory manner.</p>
<p>Overall, while the use of <code>Either</code> for error processing could have been enlightening for some, it wasn’t exactly a cutting edge FP result and did not justify a 45 minute slot of conference’s prime time.</p>
<p><a href="http://skillsmatter.com/podcast/scala/talk-by-sadek-drobi">Functional Web: Functional Programing for Web Integration and Mashups | SkillsCast</a></p>
<h2 id="f-in-the-enterprise">F# in the Enterprise</h2>
<p>After the first two talks the conference split into two tracks. Faced with a choice between <strong>David Pollak’s</strong> <a href="http://liftweb.net/"><em>Lift</em></a> talk and <strong>Simon Cousin’s</strong> *F# in the Enterprise//, I opted for the latter; the ways in which FP makes it’s way into industry seemed more interesting than a web framework which I have already had a chance to hear about.</p>
<p>Simon works for energy trading arm of E.ON which deals with balancing the supply of and demand for electricity. The demand varies throughout the day and the characteristics of power generation units (i.e. power stations) make it difficult to fit the supply exactly to the demand curve, so the surplus has to be sold and shortfalls need to be covered for by buying from other providers. Two of the problems Simon’s team had to solve were calculation of profitability, i.e. determining the order of generation units so that the least cost-effective generators are only used at peak times, and optimisation of power generation schedule to fit the demand curve.</p>
<p>The calculator was initially written in C#, but it soon became apparent that it was an algorithmic problem not suitable for an OO representation: the program consisted of static classes with static methods. One the optimisation side, the solution has been implemented in linear integer programming language <a href="http://www.fico.com/en/Products/DMTools/Pages/FICO-Xpress-Optimization-Suite.aspx">Xpress-MP</a> which did not integrate very well with the rest of .Net-based application and required services of experts knowledgable in this particular language, who are relatively few. Simon and the team began rewriting these components in F# and after a year, almost as soon as Microsoft released Visual Studio 2010 with F# support, put the new implementation in the production environment. The new optimiser was two orders of magnitude faster than the old one, with 1:4 reduction in lines of code and no bugs uncovered during a year of production use. How did Simon’s team manage to achieve this impressive result?</p>
<p>First of all, large parts of the system that have been written in C# and worked well have been left intact. To integrate the F# modules into the system Simon followed the advice of <a href="http://www.amazon.com/exec/obidos/tg/detail/-/0321125215/qid=1075413529//ref=sr_8_xs_ap_i6_xgl14/104-7719441-3523101?v=glance&amp;s=books&amp;n=507846"><em>Domain-Driven Design</em></a> book: define the interface in terms of the OO model and provide a stateless service implementing this interface. The C# interface was therefore implemented in F#, with a thin layer on the F# side wrapping the OO model to prepare it for use in functional code and, in addition, to take advantage of extra F# features like units of measure:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fsharp" data-lang="fsharp"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#458;font-weight:bold">MinutePoint</span> <span style="color:#000;font-weight:bold">=</span> PowerPoint
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">let</span> <span style="color:#008080">x</span> <span style="color:#000;font-weight:bold">(</span>p<span style="color:#000;font-weight:bold">:</span> MinutePoint<span style="color:#000;font-weight:bold">):</span> <span style="color:#458;font-weight:bold">float</span><span style="color:#000;font-weight:bold">&lt;</span>minute<span style="color:#000;font-weight:bold">&gt;</span> <span style="color:#000;font-weight:bold">=</span>
</span></span><span style="display:flex;"><span>    minute<span style="color:#000;font-weight:bold">.</span>lift p<span style="color:#000;font-weight:bold">.</span>X
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">let</span> <span style="color:#008080">y</span> <span style="color:#000;font-weight:bold">(</span>p<span style="color:#000;font-weight:bold">:</span> MinutePoint<span style="color:#000;font-weight:bold">):</span> <span style="color:#458;font-weight:bold">float</span><span style="color:#000;font-weight:bold">&lt;</span>MW<span style="color:#000;font-weight:bold">&gt;</span> <span style="color:#000;font-weight:bold">=</span>
</span></span><span style="display:flex;"><span>    <span style="color:#555">MW</span>.lift p<span style="color:#000;font-weight:bold">.</span>Y
</span></span></code></pre></div><p>where <code>PowerPoint</code> is a type from OO model.</p>
<p>Another aspect of using F# that required some creativity was establishing coding practices. Test-Driven Development did not seem to be a good fit (kudos for saying that with <a href="http://www.m3p.co.uk/blog/">Steve Freeman</a> in the audience); instead, Simon found exploratory programming using script file and a REPL built into Visual Studio more productive. He would write the functions in the script file, test them interactively, and once he was happy with how they worked, transfer them to the module file that formed part of the solution.</p>
<p>The talk was excellent. It did not assume any prior knowledge of either F# or energy trading, explained these concilsely and described both qualities of FP that make it a good fit for certain enterprise-type projects and practicalities of working with F# code.</p>
<p><a href="https://skillsmatter.com/skillscasts/1792-fsharp-in-the-enterprise">F# in the Enterprise | SkillsCast</a></p>
<h2 id="blazehtml">BlazeHtml</h2>
<p>The next split-track slot offered the choice between <strong>Jonas Bonér’s</strong> and <strong>Viktor Klang’s</strong> <a href="http://akka.io/"><em>Akka</em></a> and <a href="http://jaspervdj.be/blaze/"><em>BlazeHtml</em></a> by <strong>Jasper van der Jeugt</strong>. I’ve heard an extended version of the Akka talk the day before so went to hear Jasper explaining the challenges of HTML generation.</p>
<p>It turns out that Haskell provides a decent support for web development, with <a href="http://hackage.haskell.org/packages/archive/wai/0.0.0/doc/html/Network-Wai.html">WAI</a> library implementing HTTP parsing and functional abstractions for a web application and middleware. Web application frameworks mentioned by Jasper were:</p>
<ul>
<li><a href="http://happstack.com/index.html">Happstack</a> – mature, with complete stack</li>
<li><a href="http://docs.yesodweb.com/">Yesod</a> – utilising WAI, very high level, DSL-focused</li>
<li><a href="http://snapframework.com/">Snap</a> – fast, clean, concurrent and with nearly 100% test coverage</li>
</ul>
<p>Each of these has to deal with generation of HTML. BlazeHtml fills this gap by providing a DSL for describing the structure of HTML document and a very fast generation engine. A HTML document description looks as follows:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">heaad</span> <span style="color:#000;font-weight:bold">$</span> <span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>  title <span style="color:#d14">&#34;Title&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">body</span> <span style="color:#000;font-weight:bold">$</span> <span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>  div <span style="color:#000;font-weight:bold">!</span> class_ <span style="color:#d14">&#34;fancy&#34;</span> <span style="color:#000;font-weight:bold">$</span> <span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>    <span style="color:#d14">&#34;Literal&#34;</span>
</span></span><span style="display:flex;"><span>  div <span style="color:#000;font-weight:bold">!</span> id <span style="color:#d14">&#34;info&#34;</span> <span style="color:#000;font-weight:bold">$</span> <span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>    p <span style="color:#d14">&#34;content ...&#34;</span>
</span></span><span style="display:flex;"><span>    p <span style="color:#d14">&#34;some more content...&#34;</span>
</span></span></code></pre></div><p>This syntax makes use of Haskell features such as monadic <code>do</code> notation and the GHC extension enabling overloaded strings. It makes it easy for the users to define their own abstractions and incorporate them in the document definition; e.g. function defined as</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">includeJS</span> source <span style="color:#000;font-weight:bold">=</span>
</span></span><span style="display:flex;"><span> script <span style="color:#000;font-weight:bold">!</span> type_ <span style="color:#d14">&#34;text/javascript&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000;font-weight:bold">!</span> src source
</span></span><span style="display:flex;"><span>        <span style="color:#000;font-weight:bold">$</span> mempty
</span></span></code></pre></div><p>can then be invoked in the HTML definition.</p>
<p>Transforming this structure into HTML string seemed like a straightforward job, but Jasper soon corrected this misconception. The transformation is all about string concatenation, which, when done naively, can throw performance out of the window. For this reason BlazeHtml employed a Builder pattern, which is very much like Java’s <code>StringBuilder</code>, but thanks to implementing <code>Monoid</code> type class can be used with all Haskell functions operating on monoids. Builders consist of functions that generate signals corresponding to buffer writing events, so that the function extracting textual data from builders knows when a fresh buffer needs to be provided. This implementation (now available as a <a href="http://hackage.haskell.org/packages/archive/blaze-builder/latest/doc/html/Blaze-ByteString-Builder.html">separate module</a>) resulted in very high performance, with BlazeHtml beating competition by a wide margin in <a href="http://jaspervdj.be/blaze/benchmarks.html">Bigtable benchmark</a>.</p>
<p>Finally, there are multiple ways to represent the generated HTML string: it could be either a <code>[Char]</code>, or a <code>ByteString</code>, which doesn’t carry the encoding information, or a <code>Text</code>, which uses UTF16 encoding so is wasteful for languages using Latin alphabet but very useful for other scripts. Haskell makes it easy to provide the HTML in all these formats at once:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">StaticString</span> <span style="color:#000;font-weight:bold">=</span> { string <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">String</span>
</span></span><span style="display:flex;"><span>                    , utf8 <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ByteString</span>
</span></span><span style="display:flex;"><span>                    , utf16 <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Text</span>
</span></span><span style="display:flex;"><span>                    }
</span></span></code></pre></div><p>Thanks to laziness, actual computation of each representation of the HTML string will only take place if the application needs to send it over the network (or use in some other form of I/O) so there is no overhead associated with carrying around all three representations.</p>
<p><a href="https://skillsmatter.com/skillscasts/1819-blazehtml-a-blazingly-fast-html-combinator-library">BlazeHtml: a blazingly fast HTML combinator library | SkillsCast</a></p>
<h2 id="client-based-web-apps-in-f-with-websharper">Client-Based Web Apps in F# with WebSharper</h2>
<p>After two split sessions the tracks merged for <strong>Adam Granicz’s</strong> presentation of <a href="http://www.websharper.com/">WebSharper</a> – a <a href="http://code.google.com/webtoolkit/">GWT</a>-like system for developing both server and client-side web app code in F#.</p>
<p>WebSharper was the only commercial product discussed at the conference and perhaps for that reasong the talk had a sales pitch vibe. Adam went on demonstrating how dynamic client intereface features and client-side input validation can be implemented using combinators provided by WebSharper. The UI is constructed using *formlets//, which represent UI elements and can be composed, and *flowlets//, which extend the concept of formlet by supporting sequences of forms. These are compiled to JavaScript that runs on the client. A sample WebSharper formlet can look as follows:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fsharp" data-lang="fsharp"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">[&lt;</span>JavaScript<span style="color:#000;font-weight:bold">&gt;]</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">let</span> <span style="color:#008080">Snippet1d</span> <span style="color:#000;font-weight:bold">=</span>
</span></span><span style="display:flex;"><span>  <span style="color:#555">Formlet</span>.Yield <span style="color:#000;font-weight:bold">(</span><span style="color:#000;font-weight:bold">fun</span> name <span style="color:#000;font-weight:bold">-&gt;</span> name<span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">&lt;*&gt;</span> <span style="color:#000;font-weight:bold">(</span><span style="color:#555">Controls</span>.Input <span style="color:#d14">&#34;&#34;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#000;font-weight:bold">|&gt;</span> <span style="color:#555">Validator</span>.IsNotEmpty
</span></span><span style="display:flex;"><span>       <span style="color:#000;font-weight:bold">|&gt;</span> <span style="color:#555">Enhance</span>.WithValidationIcon<span style="color:#000;font-weight:bold">)</span>
</span></span></code></pre></div><p>Formlets can then be rendered using various JavaScript backends – YUI, JQuery etc. WebSharper provides a comprehensive library of wrappers for popular JavaScript libraries and a Visual Studio template for wrapping third-party libraries that are not supported out of the box.</p>
<p>Not working daily on web applications I might be biased against frameworks and toolkits targeted at web development, but as was the case with Sadek’s talk, my impression was that this one did not deserve its 45-minute slot and the time would have been better spent by e.g. allowing Miles Sabin to expand on the problem and solution he presented in one of the short talks that followed.</p>
<p><a href="https://skillsmatter.com/skillscasts/1773-talk-by-adam-granicz">Client-based web applications in F# with WebSharper 2.0 | SkillsCast</a></p>
<h2 id="vslab-plugin---extending-visual-studio-interactively">VSLab Plugin - Extending Visual Studio Interactively</h2>
<p>A break was followed by a series of three short talks. Twenty minutes for each was very tight and all three presentations seemed rushed, with the speakers talking unusually fast and running over their allocated time slots.</p>
<p>The relay race started with <strong>Antonio Cisternino</strong> showing his work on a Visual Studio add-in <a href="http://vslab.codeplex.com/">VSLab</a>. Antonio was excited by introduction of F# REPL to Visual Studio, but was missing the ability to plot graphics directly from the REPL, in the spirit of Matlab and Mathematica. He decided to provided this functionality as an add-in, and in doing so had to overcome difficulties associated with the F# REPL running in a process separate from Visual Studio. Solving that required usage of win32 API for proxying draw messages and COM to get hold of the correct instance of Visual Studio in the case when many instances are started. In the end he succeeded and was able to show pretty impressive 4D function plots with DirectX animation.</p>
<p><a href="https://skillsmatter.com/skillscasts/1785-talk-by-antonio-cisternino-more-information-coming-soon">VSLab plugin, extending Visual Studio interactively | SkillsCast</a></p>
<h2 id="f-on-the-server-side">F# on the Server Side</h2>
<p><strong>Tomáš Petříček</strong> is a recognisable figure in F# community, with <a href="http://www.manning.com/petricek/">a book</a> on functional .Net published by Manning and StackOverflow reputation <a href="http://stackoverflow.com/users/33518/tomas-petricek">close to 40k</a>. His talk focused on the features of F# which make it well suited for server-side development – in this instance “server” meaning a “web server”. Two solutions presented were asynchronous workflows, which provide a convenient syntax for event-based programming style (which seems to be another name for <a href="http://en.wikipedia.org/wiki/Continuation-passing_style">continuation-passing style</a>) familiar from <a href="http://nodejs.org/">Node.js</a>, and Erlang-like agents – a popular topic, mentioned earlier on the day in Simon Peyton Jones’s and Jonas Bonér talks. These approaches were illustrated by a web proxy (using asynchronous workflows) and a cache (implemented as an agent).</p>
<p><a href="https://skillsmatter.com/skillscasts/1799-talk-by-tomas-more-info-coming-soon">F# on the server-side | SkillsCast</a></p>
<h2 id="scrap-your-boilerplate-with-scala">Scrap Your Boilerplate with Scala</h2>
<p><strong>Miles Sabin</strong>, known mostly from his work on <a href="http://www.scala-ide.org/">Scala IDE for Eclipse</a>, attempted to show how a result from a <a href="http://research.microsoft.com/pubs/67439/gmap3.pdf">classic paper</a> by Ralf Lämmel and Simon Peyton Jones can be translated from the setting it was originally presented in, Haskell, to Scala. It was an ambitious endavour, involving first presenting a problem which would clasically be solved using either a visitor (OO), or structural recursion and pattern matching (FP), explaining how these approaches are not extensible and lead to boilerplate code and then showing a solution based on encoding of Haskell’s type classes in Scala. Despite the talk running for 45 instead of planned 20 minutes I found it difficult to follow the details of the solution. A shame, as it (undoubtedly) demonstrated the elegance afforded by expressive type systems. It seems like my “to read” list will grow by another paper.</p>
<p><a href="https://skillsmatter.com/skillscasts/1786-talk-by-scala-expert-miles-sabin">Scrap your boilerplate with Scala | SkillsCast</a></p>
<h2 id="pizza-and-beer">Pizza and Beer</h2>
<p>As soon as Miles finished (and half an hour after the planned end of talks) we have been treated to pizza and beer, which were, fortunately, still warm and cold (respectively). This was an excellent opportunity to evasedrop on Simon Peyton Jones and Miles Sabin discussing how type checking is the most widely applied formal method and how it is important to not discourage programmers from using it by making type systems overly complicated (read: <a href="/dependent%20types">dependent types</a> and variance(?) polymorphism are not coming to Haskell anytime soon).</p>
<p>A park bench panel discussion was planned after the refreshments, but due to lack of significant interest and late hour all further discussion has been moved to</p>
<h2 id="the-crown-tavern">The Crown Tavern</h2>
<p>Skills Matter reserved an area upstairs where we could discuss the events of the day, analyse the origins of Australian animals’ poisonousness, solve some circuit design problems and exercise other forms of socialising. I also had a chance to learn by the way of organoleptic testing that Sharp’s I.P.A. is much better than whatever bitter they might have had at The Crown, and, trivial as it might be, to me that was the most readily applicable lesson from 2011 Functional Programming Exchange.</p>
]]></content:encoded></item><item><title>Haskell MVC</title><link>https://blog.mmakowski.com/technology/haskell-mvc/</link><pubDate>Thu, 10 Mar 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/haskell-mvc/</guid><description>with wxHaskell and STM
With popularity of Haskell raising in recent years I have decided to have a look at how suitable it is as a general-purpose programming language. The experiment involves writing a Windows client for FIBS.
It turned out to be far from easy.
It might be down to my lack of familiarity with functional programming patterns. Or perhaps, despite growing popularity, there are still no established FP GUI patterns yet.</description><content:encoded><![CDATA[<p><em><strong>with wxHaskell and STM</strong></em></p>
<p>With popularity of Haskell raising in recent years I have decided to have a look at how suitable it is as a general-purpose programming language. The experiment involves writing a <a href="https://github.com/mmakowski/habaz">Windows client for FIBS</a>.</p>
<p>It turned out to be far from easy.</p>
<p>It might be down to my lack of familiarity with functional programming patterns. Or perhaps, despite growing popularity, there are still no established FP GUI patterns yet. Either way, I struggled with structuring the code in a way that would let me work on the app incrementally, implementing a bit of game logic, a bit of GUI, connecting it together etc.</p>
<p>I therefore looked for help in the more familiar territory of object-oriented patterns and here’s what I came up with: a Model-View-Controller for Haskell.</p>
<p>The idea is to split the code roughly into modules corresponding to OO Model, View and Controller, with certain changes to accommodate different programming paradigm. Here’s how these modules will be playing together:</p>
<ul>
<li>Model defines a data type whose constructors represent states in which the model can be. It also provides functions which represent the transitions between states. Ideally it should be purely functional, with no side-effects.</li>
<li>View defines a data type whose value contains all elements of the view that need to be acted upon by Controller. It also defines (side-effecting) functions that represent atomic GUI updates, for use by the Controller. Finally it provides a <code>view</code> function that constructs the GUI. No application logic is encapsulated in this module.</li>
<li>Controller provides a <code>controller</code> function, that given a Model and a View ties them together and defines the application logic.</li>
</ul>
<p>This program is an attempt to demonstrate how this could work. I wanted to write it in literate style (.lhs) but it turned out that the support for Literate Haskell among HTML pretty-printers available to me is non-existent, so I decided for this semi-literate style instead.</p>
<p>To compile it run:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>ghc -package wx MVC.hs
</span></span></code></pre></div><p>So, let’s have a look at the example.</p>
<h2 id="example">Example</h2>
<p>For the GUI we will use wxHaskell, hiding identifiers that will conflict with names we want to use for our own purposes:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">Graphics.UI.WX</span> <span style="color:#000;font-weight:bold">hiding</span> (<span style="color:#458;font-weight:bold">Menu</span>, <span style="color:#900;font-weight:bold">menu</span>)
</span></span></code></pre></div><p>For running commands asynchronously we will need <code>forkIO</code> which runs an IO action in a new thread:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">Control.Concurrent</span> (<span style="color:#900;font-weight:bold">forkIO</span>)
</span></span></code></pre></div><p>For communication between the UI and asynchronous processing threads we will use Software Transactional Memory (STM), in particular a transactional variable to hold current state of the Model:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">Control.Concurrent.STM.TVar</span> (<span style="color:#458;font-weight:bold">TVar</span>, <span style="color:#900;font-weight:bold">newTVarIO</span>, <span style="color:#900;font-weight:bold">readTVar</span>, <span style="color:#900;font-weight:bold">readTVarIO</span>,
</span></span><span style="display:flex;"><span>                                    <span style="color:#900;font-weight:bold">writeTVar</span>)
</span></span></code></pre></div><p>Operations on <code>TVar</code> are modelled as STM monad. To have them actually performed we need <code>atomically</code> function which turns an STM action into an IO action:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">Control.Concurrent.STM</span> (<span style="color:#900;font-weight:bold">atomically</span>)
</span></span></code></pre></div><p>In the main function of the app we need to:</p>
<ul>
<li>create the initial Model</li>
<li>create and start the View</li>
<li>run the controller function, passing to it the Model and the View</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">main</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">IO</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">main</span> <span style="color:#000;font-weight:bold">=</span> start <span style="color:#000;font-weight:bold">$</span> <span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>  v <span style="color:#000;font-weight:bold">&lt;-</span> view
</span></span><span style="display:flex;"><span>  controller initialModel v
</span></span></code></pre></div><h3 id="model">Model</h3>
<p>Our Model will have two states: Locked and Unlocked, and a counter that counts the number of modifications:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Locked</span> <span style="color:#458;font-weight:bold">Int</span>
</span></span><span style="display:flex;"><span>           <span style="color:#000;font-weight:bold">|</span> <span style="color:#458;font-weight:bold">Unlocked</span> <span style="color:#458;font-weight:bold">Int</span>
</span></span><span style="display:flex;"><span>           <span style="color:#000;font-weight:bold">deriving</span> <span style="color:#458;font-weight:bold">Show</span>
</span></span></code></pre></div><p>We’ll have the model start in Locked state.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">initialModel</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Locked</span> <span style="color:#099">0</span>
</span></span></code></pre></div><p>Now we can define transitions between the states. Note that as long as the model is pure these will be pure functions. To make it obvious when we refer to Model state transitions let’s introduce a type alias:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#458;font-weight:bold">ModelTransition</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">Model</span>
</span></span></code></pre></div><p>We’ll have <code>lock</code> and <code>unlock</code> transitions toggle between these two states:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">lock</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ModelTransition</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">lock</span> (<span style="color:#458;font-weight:bold">Unlocked</span> n) <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Locked</span> n
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">unlock</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ModelTransition</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">unlock</span> (<span style="color:#458;font-weight:bold">Locked</span> n) <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Unlocked</span> n
</span></span></code></pre></div><p>In addition, an Unlocked model can be modified. We intentionally make this transition slow to demonstrate how asynchronous processing is handled by the View and Controller:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">modify</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ModelTransition</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">modify</span> (<span style="color:#458;font-weight:bold">Unlocked</span> n) <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Unlocked</span> (slowSucc n <span style="color:#099">100000000</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">where</span> slowSucc n <span style="color:#099">0</span> <span style="color:#000;font-weight:bold">=</span> n <span style="color:#000;font-weight:bold">+</span> <span style="color:#099">1</span>
</span></span><span style="display:flex;"><span>        slowSucc n k <span style="color:#000;font-weight:bold">=</span> slowSucc n (k <span style="color:#000;font-weight:bold">-</span> <span style="color:#099">1</span>)
</span></span></code></pre></div><h3 id="view">View</h3>
<p>We need a representation of View that exposes all its elements that Controller might need to access. Here the relevant elements include top-level window, the menu items and the model display. The menu items are nested to illustrate how hierarchical data structure can help in managing the view representation – in real application there will dozens of active UI elements and it would be awkward to have all of them listed as separate arguments to View datatype constructor.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">View</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">View</span> { mainWindow <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Frame</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span>                 , menu <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Menu</span>
</span></span></code></pre></div><p>We will use a static text control to display the state of the mode:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span>                 , modelDisplay <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">StaticText</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span>                 }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">data</span> <span style="color:#458;font-weight:bold">Menu</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Menu</span> { lockItem <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">MenuItem</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span>                 , unlockItem <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">MenuItem</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span>                 , modifyItem <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">MenuItem</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span>                 }
</span></span></code></pre></div><p>A counterpart to <code>ModelTransition</code> in the View is <code>ViewAction</code>, which given a Model and a View makes a change to the View:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#458;font-weight:bold">ViewAction</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">View</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">IO</span> <span style="color:#0086b3">()</span>
</span></span></code></pre></div><p>The atomic view actions we will need in this example are:</p>
<ul>
<li>disabling/enabling Lock/Unlock/Modify menu items</li>
<li>refreshing model display</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">enableLockItem</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ViewAction</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">enableLockItem</span> <span style="color:#000;font-weight:bold">_</span> v <span style="color:#000;font-weight:bold">=</span> set (lockItem <span style="color:#000;font-weight:bold">$</span> menu v) [ enabled <span style="color:#458;font-weight:bold">:=</span> <span style="color:#458;font-weight:bold">True</span> ]
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">disableLockItem</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ViewAction</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">disableLockItem</span> <span style="color:#000;font-weight:bold">_</span> v <span style="color:#000;font-weight:bold">=</span> set (lockItem <span style="color:#000;font-weight:bold">$</span> menu v) [ enabled <span style="color:#458;font-weight:bold">:=</span> <span style="color:#458;font-weight:bold">False</span> ]
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">enableUnlockItem</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ViewAction</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">enableUnlockItem</span> <span style="color:#000;font-weight:bold">_</span> v <span style="color:#000;font-weight:bold">=</span> set (unlockItem <span style="color:#000;font-weight:bold">$</span> menu v) [ enabled <span style="color:#458;font-weight:bold">:=</span> <span style="color:#458;font-weight:bold">True</span> ]
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">disableUnlockItem</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ViewAction</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">disableUnlockItem</span> <span style="color:#000;font-weight:bold">_</span> v <span style="color:#000;font-weight:bold">=</span> set (unlockItem <span style="color:#000;font-weight:bold">$</span> menu v) [ enabled <span style="color:#458;font-weight:bold">:=</span> <span style="color:#458;font-weight:bold">False</span> ]
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">enableModifyItem</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ViewAction</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">enableModifyItem</span> <span style="color:#000;font-weight:bold">_</span> v <span style="color:#000;font-weight:bold">=</span> set (modifyItem <span style="color:#000;font-weight:bold">$</span> menu v) [ enabled <span style="color:#458;font-weight:bold">:=</span> <span style="color:#458;font-weight:bold">True</span> ]
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">disableModifyItem</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ViewAction</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">disableModifyItem</span> <span style="color:#000;font-weight:bold">_</span> v <span style="color:#000;font-weight:bold">=</span> set (modifyItem <span style="color:#000;font-weight:bold">$</span> menu v) [ enabled <span style="color:#458;font-weight:bold">:=</span> <span style="color:#458;font-weight:bold">False</span> ]
</span></span></code></pre></div><p>View will not have a reference to the Model. Instead it will be told by the Controller when the View needs to be refreshed and the Model to be drawn will be provided then. Here, the function that will be invoked by the Controller is called <code>refreshModelDisplay</code> and just shows Model’s textual representation in the static text control:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">refreshModelDisplay</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ViewAction</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">refreshModelDisplay</span> m v <span style="color:#000;font-weight:bold">=</span> set (modelDisplay v) [ text <span style="color:#458;font-weight:bold">:=</span> show m ]
</span></span></code></pre></div><p>Finally, we’ll need a device to combine these atomic actions into sequences that are themselves <code>ViewActions</code>. Let’s define a new operator <code>&gt;&amp;&gt;</code> to do just that:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span>(<span style="color:#000;font-weight:bold">&gt;&amp;&gt;</span>) <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ViewAction</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">ViewAction</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">ViewAction</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">a1</span> <span style="color:#000;font-weight:bold">&gt;&amp;&gt;</span> a2 <span style="color:#000;font-weight:bold">=</span> <span style="color:#900;font-weight:bold">\</span>m v <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#000;font-weight:bold">do</span> a1 m v; a2 m v
</span></span></code></pre></div><p>Note that we can pass the input <code>m</code> and <code>v</code> to subsequent actions because they have no effect on (pure) <code>m</code> and any side-effects will be reflected in GUI elements referenced from <code>v</code>.</p>
<p>The function that creates the view sets up all GUI elements but does not define any logic. It returns a <code>View</code> value in the context of an <code>IO</code> action.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">view</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">IO</span> <span style="color:#458;font-weight:bold">View</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">view</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">do</span>
</span></span></code></pre></div><p>Our user interface will consist of a window with a menu containing items corresponding to each of Model transitions and a text display to show the state of the Model.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span>  mainWindow <span style="color:#000;font-weight:bold">&lt;-</span> frame [ text <span style="color:#458;font-weight:bold">:=</span> <span style="color:#d14">&#34;MVC&#34;</span> ]
</span></span><span style="display:flex;"><span>  modelDisplay <span style="color:#000;font-weight:bold">&lt;-</span> staticText mainWindow <span style="color:#458;font-weight:bold">[]</span>
</span></span><span style="display:flex;"><span>  m <span style="color:#000;font-weight:bold">&lt;-</span> menuPane [ text <span style="color:#458;font-weight:bold">:=</span> <span style="color:#d14">&#34;Transition&#34;</span> ]
</span></span></code></pre></div><p>We have to ensure that the initial state of the View is consistent with the initial state of the Model. Model starts in Locked state, so “Lock” and “Modify” menu items have to be disabled:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span>  lockItem <span style="color:#000;font-weight:bold">&lt;-</span> menuItem m [ text <span style="color:#458;font-weight:bold">:=</span> <span style="color:#d14">&#34;Lock&#34;</span>
</span></span><span style="display:flex;"><span>                         , enabled <span style="color:#458;font-weight:bold">:=</span> <span style="color:#458;font-weight:bold">False</span>
</span></span><span style="display:flex;"><span>                         ]
</span></span><span style="display:flex;"><span>  unlockItem <span style="color:#000;font-weight:bold">&lt;-</span> menuItem m [ text <span style="color:#458;font-weight:bold">:=</span> <span style="color:#d14">&#34;Unlock&#34;</span> ]
</span></span><span style="display:flex;"><span>  modifyItem <span style="color:#000;font-weight:bold">&lt;-</span> menuItem m [ text <span style="color:#458;font-weight:bold">:=</span> <span style="color:#d14">&#34;Modify&#34;</span>
</span></span><span style="display:flex;"><span>                           , enabled <span style="color:#458;font-weight:bold">:=</span> <span style="color:#458;font-weight:bold">False</span>
</span></span><span style="display:flex;"><span>                           ]
</span></span><span style="display:flex;"><span>  set mainWindow [ menuBar <span style="color:#458;font-weight:bold">:=</span> [m] ]
</span></span></code></pre></div><p>Last but not least, to allow other threads to run we need a dummy timer running in the GUI. This is due to a wxHaskell glitch described, among other places, here: [http://stackoverflow.com/questions/3176682/wxhaskell-asynchronous-updates]</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span>  t <span style="color:#000;font-weight:bold">&lt;-</span> timer mainWindow [ interval <span style="color:#458;font-weight:bold">:=</span> <span style="color:#099">10</span>, on command <span style="color:#458;font-weight:bold">:=</span> return <span style="color:#0086b3">()</span> ]
</span></span><span style="display:flex;"><span>  return <span style="color:#000;font-weight:bold">$</span> <span style="color:#458;font-weight:bold">View</span> mainWindow
</span></span><span style="display:flex;"><span>                (<span style="color:#458;font-weight:bold">Menu</span> lockItem unlockItem modifyItem)
</span></span><span style="display:flex;"><span>                modelDisplay
</span></span></code></pre></div><h3 id="controller">Controller</h3>
<p>So, we now have a Model with its transitions and a View with its actions. The job of Controller is to put these two together, i.e. perform Model and View updates according to user actions. The <code>controller</code> function is, on the face of it, very simple, it just creates a transactional variable to hold the Model, binds actions to UI elements and refreshes the View:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">controller</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">View</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">IO</span> <span style="color:#0086b3">()</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">controller</span> model view <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">do</span>
</span></span></code></pre></div><p>The Model reference is stored in a transactional variable so that it can be modified by actions running concurrently in different threads.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span>  modelTV <span style="color:#000;font-weight:bold">&lt;-</span> newTVarIO model
</span></span><span style="display:flex;"><span>  bindGUIActions modelTV view
</span></span><span style="display:flex;"><span>  refreshModelDisplay model view
</span></span></code></pre></div><p>That’s it.</p>
<p>But what exactly happens in <code>bindGUIActions</code>? Before we get there, let’s ponder on this combining of Model transitions with View updates we just mentioned. How can this be achieved? What would be the type of this combination (let’s call it <code>ModelAndViewUpdate</code>)?</p>
<p>View updates are IO actions, so the result of the combination would have to yield an IO action. It would act upon a View and a Model. We chose to store the model in a <code>TVar</code>, so it would make sense for <code>ModelAndViewUpdate</code> to update this <code>TVar</code> as opposed to returning the modified Model in the context of IO. It seems we arrived at the following type for <code>ModelAndViewUpdate</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">type</span> <span style="color:#458;font-weight:bold">ModelAndViewUpdate</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">TVar</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">View</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">IO</span> <span style="color:#0086b3">()</span>
</span></span></code></pre></div><p>We can now manufacture these <code>ModelAndViewUpdates</code> from <code>ModelTransitions</code> and <code>ViewActions</code> as follows:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span>(<span style="color:#000;font-weight:bold">&lt;@&gt;</span>) <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ModelTransition</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">ViewAction</span> <span style="color:#000;font-weight:bold">-&gt;</span> <span style="color:#458;font-weight:bold">ModelAndViewUpdate</span>
</span></span><span style="display:flex;"><span>(<span style="color:#000;font-weight:bold">&lt;@&gt;</span>) modelTrans viewAct modelTV view <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">do</span>
</span></span></code></pre></div><ul>
<li>first we atomically apply the transition to the Model stored in <code>modelTV</code>:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span>  atomically <span style="color:#000;font-weight:bold">$</span> <span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>    model <span style="color:#000;font-weight:bold">&lt;-</span> readTVar modelTV
</span></span><span style="display:flex;"><span>    writeTVar modelTV <span style="color:#000;font-weight:bold">$</span> modelTrans model
</span></span></code></pre></div><ul>
<li>then invoke the View action passing to it the updated Model:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span>  model <span style="color:#000;font-weight:bold">&lt;-</span> readTVarIO modelTV
</span></span><span style="display:flex;"><span>  viewAct model view
</span></span></code></pre></div><p>Note we defined this function as an infix operator <code>&lt;@&gt;</code>, so applying it like in <code>modelTransition &lt;@&gt; viewUpdate</code> will yield a <code>ModelAndViewUpdate</code> that is a combination of these two.</p>
<p>With this in place we can define <code>ModelAndViewUpdate</code>s for each UI action. First let’s combine atomic UI operations into complex ones corresponding to the Model transition. For <code>unlock</code> we will:</p>
<ul>
<li>enable Lock menu item</li>
<li>disable Unlock menu item</li>
<li>enable Modify menu item</li>
<li>refresh the model display</li>
<li>display an info dialog that the model has been unlocked.</li>
</ul>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">unlockVU</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ViewAction</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">unlockVU</span> <span style="color:#000;font-weight:bold">=</span> enableLockItem <span style="color:#000;font-weight:bold">&gt;&amp;&gt;</span>
</span></span><span style="display:flex;"><span>           disableUnlockItem <span style="color:#000;font-weight:bold">&gt;&amp;&gt;</span>
</span></span><span style="display:flex;"><span>           enableModifyItem <span style="color:#000;font-weight:bold">&gt;&amp;&gt;</span>
</span></span><span style="display:flex;"><span>           refreshModelDisplay <span style="color:#000;font-weight:bold">&gt;&amp;&gt;</span>
</span></span><span style="display:flex;"><span>           <span style="color:#900;font-weight:bold">\</span><span style="color:#000;font-weight:bold">_</span> v <span style="color:#000;font-weight:bold">-&gt;</span> infoDialog (mainWindow v) <span style="color:#d14">&#34;Unlocked&#34;</span>
</span></span><span style="display:flex;"><span>                              <span style="color:#d14">&#34;Warning: the model can now be modified!&#34;</span>
</span></span></code></pre></div><p>and the <code>ModelAndViewUpdate</code> is now quite obvious:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">unlockCmd</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ModelAndViewUpdate</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">unlockCmd</span> <span style="color:#000;font-weight:bold">=</span> unlock <span style="color:#000;font-weight:bold">&lt;@&gt;</span> unlockVU
</span></span></code></pre></div><p>We can do the same for the remaining two actions (no dialog this time):</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">lockVU</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ViewAction</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">lockVU</span> <span style="color:#000;font-weight:bold">=</span> disableLockItem <span style="color:#000;font-weight:bold">&gt;&amp;&gt;</span>
</span></span><span style="display:flex;"><span>         enableUnlockItem <span style="color:#000;font-weight:bold">&gt;&amp;&gt;</span>
</span></span><span style="display:flex;"><span>         disableModifyItem <span style="color:#000;font-weight:bold">&gt;&amp;&gt;</span>
</span></span><span style="display:flex;"><span>         refreshModelDisplay
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">lockCmd</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ModelAndViewUpdate</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">lockCmd</span> <span style="color:#000;font-weight:bold">=</span> lock <span style="color:#000;font-weight:bold">&lt;@&gt;</span> lockVU
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">modifyCmd</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ModelAndViewUpdate</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">modifyCmd</span> <span style="color:#000;font-weight:bold">=</span> modify <span style="color:#000;font-weight:bold">&lt;@&gt;</span> refreshModelDisplay
</span></span></code></pre></div><p>It’s prefreable to have <code>ModelAndViewUpdate</code>s defined in terms of <code>&lt;@&gt;</code>, since it guarantees that the Model updates behave well in muti-threaded scenario, but it’s not essential – nothing stops us from defining a value of type <code>ModelAndViewUpdate</code> by hand. If we do this extra care needs to be taken to ensure that Model updates don’t suffer from race conditions.</p>
<p>We are now ready to bind actions to UI elements.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span><span style="color:#900;font-weight:bold">bindGUIActions</span> <span style="color:#000;font-weight:bold">::</span> <span style="color:#458;font-weight:bold">ModelAndViewUpdate</span>
</span></span><span style="display:flex;"><span><span style="color:#900;font-weight:bold">bindGUIActions</span> modelTV view <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>  set (lockItem <span style="color:#000;font-weight:bold">$</span> menu view)   [ on command <span style="color:#458;font-weight:bold">:=</span> run lockCmd ]
</span></span><span style="display:flex;"><span>  set (unlockItem <span style="color:#000;font-weight:bold">$</span> menu view) [ on command <span style="color:#458;font-weight:bold">:=</span> run unlockCmd ]
</span></span><span style="display:flex;"><span>  set (modifyItem <span style="color:#000;font-weight:bold">$</span> menu view) [ on command <span style="color:#458;font-weight:bold">:=</span> run modifyCmd ]
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">where</span>
</span></span></code></pre></div><p>What should <code>run</code> do? Its type signature needs to be <code>ModelAndViewUpdate -&gt; IO ()</code>, i.e. <code>(TVar Model -&gt; View -&gt; IO ()) -&gt; IO ()</code> which (not less than its name) suggests that it should execute supplied update function by passing <code>modelTV</code> and <code>view</code> to it. So we could simply do:</p>
<pre tabindex="0"><code>run cmd = cmd modelTV view
</code></pre><p>and it would work as expected, with one caveat: if cmd was running for a long time it would freeze the UI, because the operation would be executed in the UI thread.</p>
<p>Well, we have imported <code>forkIO</code> for a reason:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-haskell" data-lang="haskell"><span style="display:flex;"><span>    run cmd <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>      forkIO <span style="color:#000;font-weight:bold">$</span> cmd modelTV view
</span></span><span style="display:flex;"><span>      return <span style="color:#0086b3">()</span>
</span></span></code></pre></div><p>Now, note that as a result of this <code>forkIO</code> we are updating the UI from a non-UI thread. This is something most of UI toolkits prohibit. wxHaskell seems more permissive in this respect, but I have not investigated this matter fully. If it turns out that an update needs to be done in the UI thread then it significantly complicates the pattern. A possible solution would involve providing a transactional chanel (<code>TChan</code>) from the async thread to the GUI thread to which the async action would write required UI updates. These updates would then be read by a timer handler and applied to the View.</p>
<p>That concludes the example. Try running it and see how the UI actions behave. Try, for example, invoking “Modify” or “Lock” while other “Modify” is still running.</p>
<h2 id="discussion-and-disclaimers">Discussion and Disclaimers</h2>
<p>This, obviously, was a toy example. For real-life applications there is likely to be a couple of things which might need to be modified.</p>
<p>For instance, what if Model is not pure? The main thing that will break is <code>&lt;@&gt;</code> operator, since it executes a Model transition in STM monad, and that will not be possible if transition is tainted with IO. One solution will be to use a <code>TMVar</code> instead of <code>TVar</code> to store the Model. A value can be taken out of <code>TMVar</code> for the period of processing and then put back in, thus ensuring atomicity. This will increase synchronisation between threads but is unlikely to be a problem in practice.</p>
<p>What are the advantages of this pattern?</p>
<p>To me the most immediate benefit is that it imposes a structure on the code and defines boundaries which determine where ceratin piece of logic should be put. That’s the main thing I was trying to achieve in the context of my FIBS client app.</p>
<p>Another “structural” benefit is that it provides a decent separation of effectful, impure computations from pure functions. There is no escape from IO as far as GUI is concerned and the advantage of MVC is that it is restricted to View and upper layers of Controller.</p>
<p>Finally, as the example hopefully shows, the resulting structure is relatively easy to follow, even for FP newbies coming from OO background.</p>
<p>Any disadvantages?</p>
<p>It’s easy to see that View data type and the set of atomic ViewActions is going to be massive in a non-trivial app. Also all of these enable/disable ViewActions look like boilerplate.</p>
<p>The way <code>&lt;@&gt;</code> is defined, it is assumed that all UI updates take place after Model transition has completed. Sometimes it might be difficult to model the domain in such a way that Model and UI updates happen one after another and it might be desirable to update UI as the transition happens.</p>
<p>I’m sure I’ll discover more once I try to apply this pattern to my app.</p>
<p>And finally, some disclaimers:</p>
<p>As stated, I have not investigated fully the multi-threaded behaviour of wxHaskell. The FAQ at <a href="http://www.haskell.org/haskellwiki/WxHaskell/FAQ">http://www.haskell.org/haskellwiki/WxHaskell/FAQ</a> states that Haskell threads do not work with wxHaskell but does not specify what exactly is broken. My experiments seem to be contradicting that statement, but they might not have been complex enough to expose problems.</p>
<p>Furthermore, I’m new to Haskell and in spite of certain effort which I put into learning this stuff I still don’t fully grasp and lack intuition about some FP concepts so there might be aspects of this example which can be made more idiomatic or otherwise improved.</p>
<p>The raw source of this post can be found <a href="https://gist.github.com/850698">on Github</a>.</p>
]]></content:encoded></item><item><title>Po powrocie</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/po-powrocie/</link><pubDate>Mon, 14 Feb 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/po-powrocie/</guid><description>30 stycznia, zgodnie z planem wróciliśmy do domu. Minęły od tego czasu dwa tygodnie, wypadałoby więć jakoś go podsumować zanim wszystko wyleci z głowy. Wycieczka spełniła wszystkie moje oczekiwania i nawet rezygnacji z Fraser Island i Gold Coast nie wspominam z żalem, bo dzięki temu zobaczylismy australijski outback. A co dokładnie było takie fajne? Jakie pomysły się nie sprawdziły?
Pomysły Poniżej trzy listy. Pierwsza zawiera rzeczy, które może nie są oczywiste (jak Angkor Wat czy Wielka Rafa), ale godne polecenia, zapadające w pamięć jako coś fajnego.</description><content:encoded><![CDATA[<p>30 stycznia, zgodnie z planem wróciliśmy do domu. Minęły od tego czasu dwa tygodnie, wypadałoby więć jakoś go podsumować zanim wszystko wyleci z głowy. Wycieczka spełniła wszystkie moje oczekiwania i nawet <a href="/travel/wyprawa-2010-11/ucieczka-na-zach%C3%B3d/">rezygnacji z Fraser Island i Gold Coast</a> nie wspominam z żalem, bo dzięki temu zobaczylismy australijski <a href="/travel/wyprawa-2010-11/przez-outback/">outback</a>. A co dokładnie było takie fajne? Jakie pomysły się nie sprawdziły?</p>
<h2 id="pomysły">Pomysły</h2>
<p>Poniżej trzy listy. Pierwsza zawiera rzeczy, które może nie są oczywiste (jak Angkor Wat czy Wielka Rafa), ale godne polecenia, zapadające w pamięć jako coś fajnego. W drugiej wyszczególniam nauczki: na co warto przy takiej podróży uważać i czego unikać. Trzecia to aspekty, które trudno jednoznacznie sklasyfikować jako pozytywne albo negatywne, a które miały duży wpływ na przebieg wyjazdu.</p>
<h3 id="dobre">Dobre</h3>
<ul>
<li>
<p><strong>Jechać na dwa miesiące</strong>. To akurat tyle czasu, żeby porządnie wypocząć i zobaczyć kawał świata nie spiesząc się zanadto, a jednocześnie nie znudzić się podróżowaniem. Chciałoby się jeszcze pojeździć, ale powrót do domu jest bardzo przyjemny.</p>
</li>
<li>
<p><strong>Zwolnić się z pracy przed wyjazdem</strong>. Aby powrót był przyjemny, warto w miarę możliwości zadbać o to, żeby następnego dnia po przylocie nie musieć zrywać się rano i pędzić do biura, gdzie przez tygodnie nieobecności spiętrzyła się masa spraw. Fajnie jest dać sobie jeszcze parę tygodni na wypoczynek w domowych pieleszach i poćwiczenie na fortepianie, poczytanie o monadach i endofunktorach i w ogóle pozajmowanie się tymi różnymi rzeczami, którymi zawsze chciało się zajmować, ale praca nie zostawiała czasu.</p>
</li>
<li>
<p><strong>Motorowery w Azji południowo-wschodniej</strong>. Stosunkowo tani, a dający olbrzymią swobodę, środek lokomocji. Wietnamski ruch drogowy często jest demonizowany, tymczasem poza miastami jest zupełnie znośnie, wystarczy zachować elementarną ostrożność. <a href="/travel/wyprawa-2010-11/z-hanoi-do-sajgonu/">Jazda bocznymi drogami</a> to już frajda w czystej postaci: pusto, piękne widoki – rewelacja.</p>
</li>
</ul>
<p><img src="https://farm6.static.flickr.com/5130/5309240084_e6889967a2.jpg" alt="szczęśliwa para na motorowerze na tle pól ryżowych"></p>
<p>radocha z jazda motorowerem jest duża</p>
<ul>
<li><strong>Australijskie fale</strong>. Nie byłem nigdy miłośnikiem spędzania wakacji nad morzem. Upał, monotonia, tłumy smażące się na słońcu, nic ciekawego. Wizyty na <a href="/travel/wyprawa-2010-11/trzy-pla%C5%BCe/">plażach Garie i Cronulla</a> kompletnie zmieniły mój pogląd na tę sprawę. Taplanie się potężnych falach to wielka frajda i szkoda, że w Europie trudno o miejsca, gdzie można się tę rozrywce oddawać na tę skalę, co na wschodzie Australii.</li>
<li><strong>Canon S95</strong>. Świetny aparat. Robi zdjęcia bardzo dobrej jakości, nagrywa filmy w High Definition, pozwala zmieniać wszystkie ustawienia, jakie mógłbym chcieć zmienić, i jeszcze trochę, a do tego mieści się w kieszeni i przetrwa noszenie w niej przez osiem tygodni. Jedyne, co by się przydało, to większy zakres przesłony, ale na to, zdaje się, nie pozwalają rozmiary obiektywu.</li>
<li><strong>Poliestrowe spodnie</strong>. <a href="/travel/wyprawa-2010-11/ekwipunek-tropikalny/">Jednak</a>. Są bardzo lekkie, szybko schną i – o to miałem największe obawy – są przewiewne. Skończyło się tak, że większość Australii przejechałem w plastikowych szortach (spodnie miały odpinane nogawki), nie w konkurentach z mojego ulubionego lnu. Jeśli moje nawracanie na materiały syntetyczne będzie postępowało nadal w takim tempie, to na kolejną wyprawę pojadę w <a href="http://www.crocs.eu/crocs-classic/10001,en_ES,pd.html?cid=301&amp;cgid=men-footwear">Crocsach</a>. Skoro już o butach mowa, następny wygrany tej wycieczki to:</li>
<li><strong>Obuwie firmy Teva</strong>. Sandały tej firmy polecał nam przed wyjazdem Kuba. Jakieś sandały już miałem, ale potrzebowałem butów, i tak się akurat złożyło, że znalazłem fajną parę wyprodukowaną przez Tevę. Chodziłem w nich tylko przez kilka dni, nie chciałbym więc nadmiernie chwalić ich na zapas, ale zapowiadają się świetnie: są lekkie i wygodne jak domowe kapcie. Już w trakcie wyjazdu, w Sajgonie, kupiłem natomiast sandały i po dniu lub dwóch przyzwyczajania się do parcianych pasków i plastikowej podeszwy nosiłem je bez problemów przez okrągły miesiąc. Okazały się wygodne i praktyczne, poza tym Ani bardzo odpowiadał ich wygląd.</li>
</ul>
<h3 id="złe">Złe</h3>
<ul>
<li><strong>Odkładać zakupy pamiątek na “lepszą okazję”</strong>. Nieraz jest tak, że w jakimś turystycznym miejscu jest masa stoisk z różnymi fajnymi rzeczami, ale odkładamy zakupy, myśląc, że skoro tu jest tylu turystów, to ceny na pewno są wielokrotnie wyższe niż w mniej popularnych miejscach, więc lepiej poczekać. Po dotarciu w owo mniej popularne miejsce okazuje się, że owszem, turystów nie ma, ale pamiątek też nie, a ta figurka w Siem Reap czy naszyjnik w Halong kosztowały w końcu tylko pięć czy dziesięć dolarów, więc nie taki znów majątek. Jak coś jest fajne to należy kupować (targując się, oczywiście), a nie czekać na lepsze czasy.</li>
</ul>
<p><img src="https://farm6.static.flickr.com/5127/5290620114_7ff53bab30.jpg" alt="sklep z pamiątkami w Hanoi"></p>
<ul>
<li><strong>Zostawiać pusty dom na długo</strong>. Niezamieszkany dom żyje własnym życiem i zmienia się, na ogół, niesetety, nie na lepsze. Na przykład rury kanalizacyjne nie używane przez dłuższy czas zarastają różnym świństwem; po naszym powrocie okazało się, że woda ze zlewu i z pralki nie spływa. Skończyło się na wzywaniu specjalistów od przepychania kanalizacji. Niby kilka razy w tygodniu do domu zaglądała opiekunka od kotów, ale, jak widać, nie wystarczyło to do utrzymania naszej rezydencji w stanie pełnej sprawności technicznej.</li>
</ul>
<h3 id="kluczowe">Kluczowe</h3>
<ul>
<li><strong>Jeździć w towarzystwie</strong>. Tu miałem dylemat, czy to “dobre”, czy “kluczowe”. Z <a href="http://nastopach.pl">Martą i Kubą</a> podróżuje się świetnie – są sympatyczni i bezkonfliktowi, przez dwa miesiące ani przez moment nie żałowałem, że zdecydowaliśmy się jeździć razem. Podróżowanie we czwórkę ma wiele zalet (jeśli trzeba się rozdzielić, na przykład żeby ktoś pilnował rzeczy, a ktoś poszedł coś załatwić, to nikt nie zostaje sam; można jeździć jednym samochodem i zrzucać siena paliwo) przy niewielu wadach (trudniej złapać wspólnego stopa i trzeba się łapać), no i razem jest raźniej. Z drugiej strony nie wiadomo jak by to wyglądało gdybyśmy podróżowali tylko we dwójkę z Anią. Może nasze wspomnienia byłyby nie gorsze?</li>
</ul>
<p><img src="https://farm6.static.flickr.com/5048/5290031657_993be90784.jpg" alt="nasza grupa w czapkach świętego Mikołaja"></p>
<ul>
<li><strong>Zwiedzać Australię w lecie</strong>. Lato nie jest w Australii sezonem turystycznym. Niby zdawaliśmy sobie z tego sprawę jeszcze przed przylotem, bo przewodniki wspominały coś o porze deszczowej, o nieprzejezdnych drogach itp., ale konsekwencje w pełni uświadomiliśmy sobie dopiero po przylocie i przejechaniu jakiegoś tysiąca kilometrów. <a href="/travel/wyprawa-2010-11/ucieczka-na-zach%C3%B3d/">Gigantyczne powodzie</a>, pozamykane atrakcje, <a href="/travel/wyprawa-2010-11/przez-outback/">opustoszałe miasteczka</a> – tego można się spodziewać w Australii w styczniu. Ma to swój urok, ale warto być tego stanu rzeczy świadomym zawczasu i zastanowić się, czy na pewno nie lepiej zaplanować podróż na być może chłodniejszą, lecz i spokojnieszą część roku.</li>
</ul>
<h2 id="budżet">Budżet</h2>
<p>Wydatki przed wyjazdem pochłonęły około £6000. W kwocie tej znalazły się wszystkie długodystansowe bilety lotnicze, sprzęt, ubezpieczenia, szczepienia, leki, wietnamskie wizy, zaliczka za wynajęcie samochodu, opłata za opiekę nad kotami i pewnie jeszcze jakieś rzeczy, o których w tej chwili nie pamiętam. Pozostało jeszcze upewnić się, że będziemy mieli za co żyć podczas podróży.</p>
<p>System, który zastosowaliśmy, polegał na podzieleniu kasy na dwie części. Jedna, na codzienne wydatki, wynosiła liczbę dni w drodze pomnożoną przez przyjętą dzienną stawkę. Druga, na wydatki niecodzienne, zawierała kwotę, która pokryć miała duże koszty, o których wiedzieliśmy z góry – nurkowanie na Wielkiej Rafie, 4x4 na Fraser Island, wynajęcie campera w Australii – oraz zawierać rezerwę na nieprzewidziane wypadki. Jako dzienną stawkę przyjęliśmy £50, co pomnożone przez 56 dni wynisło około £3000. Na nurkowanie przeznaczyliśmy £500, na samochód £1500, na Fraser Island £300, do tego £700 rezerwy – razem kolejne £3000. W trakcie podróży na bieżąco analizowaliśmy nasze wydatki i gdy w pewnym momencie okazało się, że nasza dzienna stawka przekroczy założone £50 podbiliśmy ją do £64, przesuwając £600 z kasy specjalnej do codziennej. Wyzbywanie się środków przebiegało następująco:</p>
<p><img src="budget_sea_au.png" alt="wykres zmniejszania się naszego budżetu wraz z postępem wyprawy"></p>
<p>Gruba czerwona kreska to stan kasy codziennej, niebieska to kasa specjalna. Cienka czerwona linia pokazuje jak wyglądałaby kasa codzienna gdybyśmy każdego dnia wydawali dokładnie tyle, ile wynosi dzienna stawka. Wykres pokazuje kwoty już po przesunięciu środków, czyli kasa codzienna startuje z poziomu £3600 zaś specjalna z £2400.</p>
<p>Nie należy z tego wykresu wyciągać zbyt daleko idących wniosków. Na przykład, Laos jest generalnie tańszy od Wietnamu, ale w Laosie akurat postanowiliśmy trochę zaszaleć ze standardem hoteli, zaś w Wietnamie część czasu mieszkaliśmy i podróżowaliśmy na koszt naszych gospodarzy. Poza tym większe wydatki, jak bilet lotniczy z Vientiane do Hanoi, zaburzają nieco obraz rzeczywistych kosztów życia.</p>
<p>W sumie koszt wyjazdu zamknął się w kwocie £12000, czyli tyle, ile na początku (z sufitu) zakładaliśmy. Na pewno można podróżować oszczędniej – dzienna stawka Marty i Kuby była znacznie niższa od naszej.</p>
<h2 id="trasa">Trasa</h2>
<p>Korzystając z tego, że podróż mam jeszcze świeżo w pamięci, postanowiłem udokumentować jej przebieg na mapie:</p>
<iframe src="https://www.google.com/maps/d/embed?mid=140AJ6Z6zRYWROtxoEYSJh9vOcIA&hl=en&ehbc=2E312F" width="640" height="480"></iframe>]]></content:encoded></item><item><title>Roasted Root Vegetables</title><link>https://blog.mmakowski.com/cooking/roasted-root-vegetables/</link><pubDate>Mon, 14 Feb 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/cooking/roasted-root-vegetables/</guid><description>Commonly when preparing the main course we start with the choice of meat (if any) and the way to cook it, and then treat the vegetables, rice etc. as an addition. For today’s course I’m doing something opposite: make vegetables the cetrepiece, with meat acting as a side dish. The first time I ate something similar was in December 2009 in Lapland, with -30°C outside, so somehow naturally I associate it with winter.</description><content:encoded><![CDATA[<p>Commonly when preparing the main course we start with the choice of meat (if any) and the way to cook it, and then treat the vegetables, rice etc. as an addition. For today’s course I’m doing something opposite: make vegetables the cetrepiece, with meat acting as a side dish. The first time I ate something similar was in December 2009 in Lapland, with -30°C outside, so somehow naturally I associate it with winter.</p>
<p><img src="https://farm6.static.flickr.com/5215/5453335706_6645461f57.jpg" alt="roasted vegetables"></p>
<p>We’ll need:</p>
<ul>
<li>a baking dish</li>
<li>some extra virgin olive oil</li>
<li>herbes de Provence</li>
<li>salt and black pepper</li>
</ul>
<p>and some root vegetables. The set is not fixed, and if you can’t get something or there is one that you’d like to add then feel free to experiment. As a rule, the more different kinds of vegetable you put in, the better – just make sure they require similar amount of time to cook. This time round I’ll use:</p>
<ul>
<li>two or three medium-sized baking potatoes</li>
<li>half of a celeriac</li>
<li>half of a swede</li>
<li>half of a turnip</li>
<li>two large carrots</li>
<li>one large parsnip</li>
<li>one onion</li>
<li>one whole bulb of garlic.</li>
</ul>
<p>The ingredients as listed should suffice for four servings, i.e. two dinners for Ania and me. The dish can be stored in the fridge and reheated in the oven – just cover it with some kitchen foil for storage and reheating so that it doesn’t dry out in the process. Celeriac, swede and turnips are normally sold in whole bulbs so I tend to buy twice the amount listed and have enough of the stuff for four dinners, but only half of that can fit into a standard baking dish at a time.</p>
<p>Right, so now that we have all that is necessary, let’s finally cook something.</p>
<p>Put some olive oil in the baking dish. Dice the vegetables into cubes roughly 1.5 cm in size; peel the onion and dice it in a similar-sized cubes – the layers will come apart, try to keep them together because thin pieces will cook too quickly and burn. The garlic bulb goes in as whole, just peel off the loose skin, but don’t peel individual cloves. Put everything in the dish, add plenty of herbes de Provence, season with some salt and pepper and mix so that all pieces of veg are coated in olive oil and herbs. Pre-heat the oven to 180°C and bake uncovered for 45 mins to one hour. To ensure that it cooks evenly and to prevent thinner pieces and onion from burning you might want to take the dish out from the oven and stir the contents every 15 minutes.</p>
<p>This can be eaten on its own, as the different vegetables provide for a variety of texture and flavour, but it’s a good idea to add some soft goat’s cheese. If you can’t imagine a dinner without meat then go for lamb; any kind – roasted shoulder, grilled escalopes or minted kebab – will suit well. When it comes to drinks have either red wine or a beer, whichever takes your fancy this cold winter evening.</p>
]]></content:encoded></item><item><title>Singapur</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/singapur/</link><pubDate>Sat, 29 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/singapur/</guid><description>Singapur to już ostatni przystanek na naszej trasie. Zatrzymaliśmy się tu na trzy dni; Ania chciała jeszcze trochę skorzystać ze wody i słońca, ja powałęsać się po mieście. Woda owszem, była, nawet w dużych ilościach, jednak nie w formie, na jaką liczyliśmy, bo leciała z chmur. Słońce też się pojawiało, ale z reguły nie wtedy, kiedy woda; Ania była niepocieszona.
Wałęsanie się wychodziło nieco lepiej. Pierwszego dnia obeszliśmy Chinatown, nadbrzeże przy sali koncertowej (zwanej durianem, ze względu na przypominający ten owoc kolczasty dach) i centrum biznesowe, kolejnego zajrzeliśmy do tonącego w strugach deszczu Little India.</description><content:encoded><![CDATA[<p>Singapur to już ostatni przystanek na naszej trasie. Zatrzymaliśmy się tu na trzy dni; Ania chciała jeszcze trochę skorzystać ze wody i słońca, ja powałęsać się po mieście. Woda owszem, była, nawet w dużych ilościach, jednak nie w formie, na jaką liczyliśmy, bo leciała z chmur. Słońce też się pojawiało, ale z reguły nie wtedy, kiedy woda; Ania była niepocieszona.</p>
<p><img src="https://live.staticflickr.com/5294/5426654646_d14213edd4_c.jpg" alt="Ania karmi ptaki w Jurong Bird Park"></p>
<p>Wałęsanie się wychodziło nieco lepiej. Pierwszego dnia obeszliśmy Chinatown, nadbrzeże przy sali koncertowej (zwanej durianem, ze względu na przypominający ten owoc kolczasty dach) i centrum biznesowe, kolejnego zajrzeliśmy do tonącego w strugach deszczu Little India. Ostatni dzień spędziliśmy głównie w Jurong Bird Park, czyli zoo z samymi ptakami – niektóre ptaszarnie były imponujące, np. dwa hektary tropikalnego lasu wraz z trzydziestometrowej wysokości sztucznym wodospadem, zamknięte ze wszystkich stron siatką; mieszkańcy zoo też byli niczego sobie: kolorowe papugi, tukany, pelikany, orły, sowy – dużo interesujących gatunków ptaków. Jest tego tyle, że opadłem z sił po niecałej godzinie, za to Ania bez chwili wytchnienia ganiała od woliery do ptaszarni, od klatki do stawu z flamingami. Mogłaby tam pewnie spędzić cały dzień, ale trzeba się było zbierać na samolot.</p>
<p>Wieczory poświęciliśmy na spotkania ze znajomymi: jeden z moimi dawnymi współpracownikami, Rhojelem i Andym, drugi z Galvinem – kolegą Ani z czasów udziału w konkursie ThinkQuest. To drugie spotkanie odbyło się w odległym o kilkanaście kilometrów od centrum miasta Bukit Timah, na markecie jedzeniowym. Miejsc tego typu jest w Singapurze zatrzęsienie i zawsze mam z nimi problem, bowiem w każdym jest kilkadziesiąt maleńskich kramików, każdy specjalizujący się w jakimś rodzaju azjatyckiego jedzenia. Oględziny kramu z reguły nie wyjaśniają co dokładnie jest serwowane, nazwy potraw takoż; pomagają trochę umieszczone na szyldach fotografie dań, ale głównym problemem pozostaje to, że wybór przyprawia o zawrót głowy. Na ogół moja wizyta w takim miejscu wygląda tak, że przez pół godziny krążę między straganami nie mogąc się zdecydować co zamówić, aż w końcu biorę jakieś nieciekawe, za to bezpieczne nudle albo curry.</p>
<p>Pomoc Galvina i jego żony Charmaine w wyborze jedzenia okazała się nieoceniona. Żeby w przyszłości uniknąć rozterek – i oszczędzić ich czytelnikom tego bloga – wynotowałem poniżej trochę potraw, które dla nas wybrali, i które okazały się wyśmienite:</p>
<ul>
<li>laksa – tradycyjne danie singapurskie pochodzenia malezyjskiego. Jest to zupa z curry z mlekiem kokosowym, w klasycznej wersji pływają w niej nudle i krewetki królewskie (obrane!), jest dość pikantna, ale bez przesady – jak ktoś lubi ostrzej można dodać pasty z chilli.</li>
<li>chai tow kway – taki omlet zawierający kawałki jakiegoś ciasta, które nie ma smaku, a jest z niewiadomych przyczyn nazywane marchewkowym. Wywodzi się podobnież z Chin.</li>
<li>zupa rybna – na straganie leży zielenina (zielona cebulka, pak choi, jakieś inne miejscowe wynalazki), warzywa oraz surowe płaty ryby bez ości; w dużym garze jest gorący, lekki bulion. Każda porcja przygotowywana jest następująco: do małego garnka wlewany jest bulion i stawiany jest na ostrym ogniu, tak, że zaczyna intensywnie bulgotać. Do tego wrzucana jest zielenina, warzywa i ryba, wszystko razem gotowane jest przez około minutę, po czym przelewane jest do miski i podwane. Zupa jest bardzo gorąca, ale kawałki ryby wciąż są bardzo scisłe i nie rozpadają się; mają świetną konsystencję do jedzenia pałeczkami i sprawiają wrażenie bardzo świeżych.</li>
<li>pieróg z lepkiego ryżu (<em>Oryza glutinosa</em>) z mięsem barana i pieczonym kasztanem – “posiłek w jednym” – są i węglowodany (ryż), i białko (mięso), i witaminy (kasztan?).</li>
<li>satay – grillowane mięso na patyku i charakterystyczny sos z orzeszków ziemnych. To akurat jest znane w Europie, a przynajmniej w Anglii, gdzie jest często podawane jako przekąska do piwa.</li>
</ul>
<p>Po raz pierwszy spróbowaliśmy też duriana. Owoce te to symbol Singapuru, uwielbiane przez miejscowych i osławione na świecie za sprawą specyficznego zapachu. Po przezwyciężeniu bariery jaką jest woń owoc okazuje się być całkiem smaczny, słodkawy, kremową konsystencją przypominający dojrzałe avocado.</p>
<h3 id="--">* * *</h3>
<p>Po pierwszym pobycie w Singapurze, trzy lata temu, zastanawiałem się, czy chciałbym na dłużej zamieszkać w tym mieście. Odpowiedź była negatywna; niby przyjemnie, ciepło i czysto, ale daleko od rodziny i przyjaciół, wokół obca kultura i niewiele do roboty w wolnym czasie, bo kraik jest malutki. Czy od tego czasu coś się zmieniło?</p>
<p><img src="https://live.staticflickr.com/5138/5426017405_c623eff636_c.jpg" alt="singapurska architektura i zagospodarowanie przestrzeni nam pasuje"></p>
<p>Gdy byliśmy w Singapurze przelotem, po drodze z Azji do Australii, uderzyło mnie jak znajome to miasto się wydaje, jak bliskie mi kulturowo, w porównaniu z egzotyką Wietnamu, Laosu, Kambodży i Tajlandii. Podczas obecnego pobytu moja sympatia i podziw dla tego miejsca wcale nie maleje. Jest tu wszystko, czego do wygodnego życia potrzeba; zresztą spójrzmy:</p>
<ul>
<li>jedzenie: tu Singapur nie ma chyba konkurencji na całym świecie. Olbrzymia liczba wspomnianych wcześniej <em>food courts</em> powoduje, że mało kto jada w domu. Posiłki w takich miejscach kosztują nie więcej niż 6 dolarów singapurskich (równowartość trzech funtów), a wybierać można ze wszystkich kuchni południowo-wschodniej Azji, a czasem też reprezentantów innych kontynentów. Osoby o bardziej wyrafinowanym podniebieniu z pewnością nie będą rozczarowane ofertą restauracji z wyższej półki, których też jest zatrzęsienie.</li>
<li>zakupy: czy istnieje lepszy sposób na rozładowanie stresu i poprawę samopoczucia niż włóczenie się po sklepach, <em>window shopping</em>, a czasem kupienie jakiegoś ciucha albo gadżetu? Tu znów Singapur nie ma sobie równych, liczba i rozmiary centrów handlowych jest niewiarygodna, aż dziw bierze, w jaki sposób te wszystkie sklepy się utrzymują.</li>
<li>podróże: sam Singapur jest maleńki, ale stanowi świetną bazę wypadową na Azję południowo-wschodnią, a także na Australię. Głównym atutem jest tu położenie geograficzne oraz rewelacyjne lotnisko Changi, gdzie dojeżdża się metrem z centrum w 40 minut i w 10 minut dociera do bramki (Kolejki do prześwietlania bagaży? Wolne żarty!) – nie to co lotniska londyńskie, na które wyruszać trzeba na pięć godzin przed terminem odlotu. Wygląda na to, że weekendowe wypady z Singapuru są praktycznie wykonalne, a dysponując tygodniem wakacji możnaby się wybrać i na Nową Zelandię.</li>
<li>znajomi: zarówno Ania jak i ja dorobiliśmy się znajomych wśród miejscowych. Nie są to może bliscy przyjaciele, ale z pewnością miło się z nimi spędza czas i fakt, że mimo dosć krótkiej znajomości chętnie się z nimi spotykamy dobrze rokuje w kwestii nawiązywania nowych przyjaźni w Singapurze.</li>
<li>wygoda mieszkania: skłamałbym twierdząc, że każdy singapurczyk mieszka w willi z ogrodem i basenem. Większość gnieździ się w olbrzymich mrówkowcach, <em>condos</em>, i byłby to pewien regres w porównianiu z Europą. Z drugiej strony nawet rodziny o przeciętnych dochodach mogą sobie pozwolić na pokojówkę i nianię (najczęściej pochodzenia filipińskiego), co może być nieocenione gdy ma się małe dzieci lecz chce się kontynuować karierę zawodową albo choćby wyjść od czasu do czasu wieczorem do klubu albo restauracji.</li>
<li>wygoda przemieszczania się: Singapur dysponuje jedną z najbardziej efektywnych i niezawodnych sieci metra, uzupełniona jest ona autobusami, które jeżdżą w miarę punktualnie, lecz czasem utykają w korkach, których w mieście o tych rozmiarach i tak szybko rozbudowującym się uniknąć się nie da.</li>
<li>estetyka otoczenia: w mieście jest dużo zieleni i przestrzeni a nowopowstające budowle, szczególnie w centrum, mają niezwykle ciekawe formy i są architektonicznie bardzo udane.</li>
<li>koty: można je sprowadzać z Anglii bez kwarantanny (to kluczowa kwestia dla Ani!)</li>
</ul>
<p>Singapur jest miastem gdzie wszystko wydaje się działać jak należy. Komunikacja miejska jeździ tak jak się od niej tego oczekuje, drogowskazy kierują we właściwą stronę, tablice informacyjne są zrozumiałe, budynki estetyczne, jest porządek i czysto, wszystko jest nowoczesne. Podobało się nam bardzo, i kto wie, może kiedyś pomieszkamy tu dłużej?</p>
]]></content:encoded></item><item><title>Sydney</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/sydney/</link><pubDate>Wed, 26 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/sydney/</guid><description>Jeśli przypadkiem znajdziecie się w Sydney na kilka dni i nie będziecie mieli pomysłu, co z tym czasem zrobić, możecie wybrać kilka pozycji z menu poniżej. Wszystkie przetestowaliśmy osobiście; przy atrakcjach płatnych podajemy orientacyjne ceny za jedną osobę oraz czas, który są w stanie zagospodarować.
Stek z kangura. Kangurów niby jest w Australii zatrzęsienie, ale restauracji serwujących mięso tych zwierząt nie ma wcale tak wiele, a jeśli akurat macie pecha i w Queensland, które jest głównym dostawcą kangurzyny dla Sydney, jest akurat powódź stulecia, może się okazać, że znalezienie tego specjału graniczy z cudem.</description><content:encoded><![CDATA[<p>Jeśli przypadkiem znajdziecie się w Sydney na kilka dni i nie będziecie mieli pomysłu, co z tym czasem zrobić, możecie wybrać kilka pozycji z menu poniżej. Wszystkie przetestowaliśmy osobiście; przy atrakcjach płatnych podajemy orientacyjne ceny za jedną osobę oraz czas, który są w stanie zagospodarować.</p>
<p><strong>Stek z kangura</strong>. Kangurów niby jest w Australii zatrzęsienie, ale restauracji serwujących mięso tych zwierząt nie ma wcale tak wiele, a jeśli akurat macie pecha i w Queensland, które jest głównym dostawcą kangurzyny dla Sydney, jest akurat powódź stulecia, może się okazać, że znalezienie tego specjału graniczy z cudem. Warto jednak próbować, bo usmażona na półkrwisto polędwica kangurza jest przepyszna. Jeśli nie macie miejsca zamówionego wcześniej, kroki swe skierujcie w okolice Cockle Bay Wharf. Najpierw, jeszcze przy King street, znajduje się restauracja Kingsley’s, gdzie kangura miewają. Jeśli nie tam, to w ciągu restauracji na Cockle Bay Wharf i w centrum Harbourside po przeciwnej stronie wody znajdzie się kilka z mięsem tym w menu. Myśmy sprawdzili jedną z nich, której nazwy nie pamiętam, ale łatwo poznać, bo serwuje kuchnię marokańską i ma stosowny do tego wystrój. 2h, 50$</p>
<p><strong>Film w Imax</strong>. Jeśli poszliście na kangura do Cockle Bay Wharf, ale okazało się, że restauracje otwierają dopiero o 18 i macie jeszcze wolną godzię, możecie spędzić ją przed największym na świecie ekranem trójwymiarowego kina Imax. Większość wyświetlanych tam filmów trwa 45 minut i jest robiona specjalnie na potrzeby tego systemu projekcyjnego. Myśmy poszli na <em>Hubble 3D</em> opowiadający o konserwacji kosmicznego teleskopu Hubble’a. Pokazuje on jak wystrzeliwywyany jest prom kosmiczny, jak astronauci wychodzą w przestrzeń wymieniać komponenty teleskopu, prezentuje też – na bardzo elementarnym poziomie – niektóre odkrycia poczynione za pomocą tego przyrządu. Film był raczej średni, niezbyt ciekawy, a i zdjęcia nie zawsze najlepszej jakości, ale na nas, po raz pierwszy mających do czynienia z trójwymiarowym kinem, jakość obrazu i realizm trzech wymiarów zrobił bardzo duże wrażenie. 1h, 19$</p>
<p><strong>Zwierzaki w Taronga Zoo</strong>. Po kilku tygodniach podróży po Australii na pewno chętnie zobaczylibyście w końcu te wszystkie koale, dziobaki, wombaty i inne dziwy natury, które figurują licznie na pocztówkach ale w naturze pokazywać się nie chcą. Nic prostszego: wystarczy udać się do Circular Quay, z tamtąd popłynąć promem do ogrodu zoologicznego Taronga. W kasie promowej można od razu kupić bilet zawierający wstęp do zoo; zapewnia on też przejażdżkę kolejką linową łączącą dwa końce ogrodu (niezłe widoki na centrum Sydney) oraz wstęp na naszpikowane ekologiczną dydaktyką popisy tresowanych fok. Przede wszystkim jednak można obejrzeć endemiczne gatunki: kangury i wallabies leniwie wylegujące się pod ścianami i drapiące po obu parach genitaliów, siedzące nieruchomo emu, powoli przeżuwające pędy eukaliptusa koale, wombaty i inne małe torbacze przysypiające gdzieś w kącie i nurkującego, jakby od niechcenia, dziobaka. Tylko diabeł tasmański jest pełen wigoru i gania w kółko po malutkim wybiegu, otoczonym fotografiami nowotworów pyska, które prawdopodobnie wykończą ten gatunek w ciągu najbliższych kilkudziesięciu lat. 4h, 50$</p>
<p><img src="https://live.staticflickr.com/5172/5407170737_2c48f010f2_c.jpg" alt="https://live.staticflickr.com/5172/5407170737_2c48f010f2_c.jpg"></p>
<p><strong>Spacer po Harbour Bridge, The Rocks i okolicach opery</strong>. Leniwe popołudnie można spędzić spacerując po północnym krańcu Central Business District, czyli dzielnicy drapaczy chmur i centrów handlowych. Mieszczą się tam dwie najsłynniejsze budowle Sydney: budynek opery oraz Harbour Bridge. Z mostu rozciąga się bardzo ładny widok na operę, spod opery na most, a pomiędzy mieści się Circular Quay, czyli centralna przystań promów, oraz dzielnica The Rocks. Ta ostatnia przez długi czas cieszyła się złą sławą, jako miejsce, gdzie skupia się najbardziej podejrzany element Sydney. Obecnie jest to bardzo przyjemna plątanina wąskich zaułków i niezliczonej ilości schodków, pełna knajpek i sklepików. Most i opera wyglądają lepiej po zmroku, The Rocks widzieliśmy tylko za dnia, ale prawdopodobnie noc nie ujmuje im uroku, tak więc tę wycieczkę warto zaplanować na wieczór. 3h, za darmo</p>
<p><img src="https://live.staticflickr.com/5015/5407213285_251f8fa42c_c.jpg" alt="https://live.staticflickr.com/5015/5407213285_251f8fa42c_c.jpg"></p>
<p><strong>Kolacja na Sydey Tower</strong>. Wysoka na trzysta metrów, Sydney Tower dysponuje obrotową restauracją, w której nie wstając od stolika można podziwiać widoki na wszystkie strony miasta. Od stolika wstawać jednak warto, ponieważ restauracja ta to samoobsługowy bufet, z całkiem przyzwoitym jedzeniem. Przebojem są krewetki w sosie tamaryndowo-kokosowym oraz mięciutka jagnięcina duszona z ciecierzycą, ale wszystkie dania, których próbowałem (do wyboru jest ich ze trzydzieści) trzymały przynajmniej zadowalający poziom. Warto też zostawić trochę miejsca na sery (tylko dwa gatunki, ale całkiem smaczne), owoce, oraz lody. To nie jedzenie jednak jest głównym magnesem przyciągającym turystów na wieżę, lecz widoki. Cudów się nie spodziewajcie: jest to niby najwyższy punkt, z jakiego można oglądać Sydney, ale jedna z głównych atrakcji, opera, jest prawie całkiem zasłonięta przez okoliczne wieżowce. Z widocznością również bywa różnie – nawet lekka mgiełka unosząca się na wysokości kilkuset metrów może mocno dać się we znaki. Problemem mogą być też szyby, niezbyt czyste i mocno odbijające światło z wnętrza restauracji, tak, że o efektownych zdjęciach nie ma co marzyć. Warto zamówić stolik na taką porę, żeby załapać się na zmierzch i zobaczyć panoramę Sydney i za dnia, i w nocy; w styczniu dobrą porą na rozpoczęcie kolacji jest godzina 20. Pamiętać przy tym należy, że po przysługującym wam półtorej godziny (restauracja wykonuje w tym czasie półtora obrotu) możecie zostać od stolika wyproszeni żeby zwolnić miejsce dla kolejnych gości. 1.5h, 80$</p>
<p><img src="https://live.staticflickr.com/5251/5407203497_59501c4fb2_c.jpg" alt="https://live.staticflickr.com/5251/5407203497_59501c4fb2_c.jpg"></p>
<p><strong>Boy Charlton Swimming Pool</strong>. Po wieczornym obżarstwie w bufecie rozpocznijcie dzień zdrowo, od przepłynięcia kilku długości w znajdującym się nieopodal ogrodów botanicznych pięćdziesięciometrowym, odkrytym basenie. Warto być tam wcześnie (otwierają o 6 rano), bo wtedy liczyć można na cały tor tylko dla siebie. Pamiętajcie o okularkach do pływania, bo woda jest słona i szczypie. Po wyjściu z wody można się zrelaksować na stojących na brzegu leżakach. 1h, 6$</p>
<p><img src="https://live.staticflickr.com/5216/5407216947_5e090bc7a9_c.jpg" alt="https://live.staticflickr.com/5216/5407216947_5e090bc7a9_c.jpg"></p>
<p><strong>Kultura aborygenów w muzeum australijskim.</strong> Aborygeni mają w społeczeństwie australijskim miejsce szczególne. Z jednej strony ich kultura i zwyczaje, które praktykują po dziś dzień, wydają się dość prymitywne, jak w przypadku plemion afrykańskich, z drugiej jednak żyją w jednym z najwyżej rozwiniętych krajów na świecie, gdzie czyni się dużo starań żeby zarówno zapewnić im dostęp do zdobyczy współczesnej cywilizacji, jak i pozwolić na kultywowanie ich własnej tradycji. Skomplikowana jest też kwestia własności ziemi i tego, kto do czego ma tu moralne prawo. Implikacje społeczne tego stanu rzeczy są dość zagmatwane i wystawa muzealna nie wyjaśni wam w tej kwestii zbyt wiele. Pozwoli za to na pewien wgląd w tradycyjne wierzenia rdzennych plemion australijskich i formy, jakie przybiera ich współczesna sztuka. Szczególnie ta ostatnia jest interesująca i bardzo zróżnicowana – od prymitywnych, schematycznych rysunków na korze, po oryginalne, abstrakcyjne kompozycje malowanę farbą akrylową na płótnie. Malunki z dużą ilością szczegółów, upstrzone charakterystycznymi białymi kropeczkami, są bardzo wizualnie atrakcyjne. Przy okazji obrazują też skomplikowany system aborygeńskich wierzeń, z ich tęczowymi wężami – stwórcami świata i innymi mitologicznymi postaciami zwierząt. 2h, 12$</p>
<p><img src="https://live.staticflickr.com/5137/5407829476_a208039dc8_c.jpg" alt="https://live.staticflickr.com/5137/5407829476_a208039dc8_c.jpg"></p>
]]></content:encoded></item><item><title>Trzy plaże</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/trzy-pla%C5%BCe/</link><pubDate>Sun, 23 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/trzy-pla%C5%BCe/</guid><description>Po Górach Błękitnych dotarliśmy do Sydney i choć zostało nam jeszcze kilka dni rozbijania się naszym zielonym vanem, kronika naszej trasy tu się zakończy. Kręcić się teraz będziemy w okolicach Sydney i mniej czasu spędzać będziemy w samochodzie a więcej na zwiedzaniu ciekawych miejsc, stąd odmienny od wcześniejszych charakter niniejszego wpisu.
Zapanowała ostatnio moda, nawet w poważnej prasie, na recenzje pisane przez osoby skąd inąd znane, lecz w dziedzinie, której dotyczy recenzja, będące ignorantami.</description><content:encoded><![CDATA[<p>Po Górach Błękitnych dotarliśmy do Sydney i choć zostało nam jeszcze kilka dni rozbijania się naszym zielonym vanem, kronika naszej trasy tu się zakończy. Kręcić się teraz będziemy w okolicach Sydney i mniej czasu spędzać będziemy w samochodzie a więcej na zwiedzaniu ciekawych miejsc, stąd odmienny od wcześniejszych charakter niniejszego wpisu.</p>
<p>Zapanowała ostatnio moda, nawet w poważnej prasie, na recenzje pisane przez osoby skąd inąd znane, lecz w dziedzinie, której dotyczy recenzja, będące ignorantami. Prezenterka telewizyjna opisuje wrażenia z jazdy najnowszym modelem Ferrari, komik wypowiada się na temat ostatnich elektronicznych gadżetów – przykłady możnaby mnożyć. Postanowiłem przeciwstawić się temu niepokojącemu trendowi i zrecenzować coś, o czym, mówiąc bez fałszywej skromności, mam niejakie pojęcie: plaże.</p>
<p>Pierwsze doświadczenie z plażowaniem miałem w wieku lat trzech, kiedy to pod opieką babci i dziadka spędziłem dwa tygodnie w Skowronkach nad Bałtykiem. Nad morze powtórnie pojechałem dziesięć lat później, tym razem do Chłapowa, w towarzystwie babci i kuzyna. W styczniu 2007 roku byłem na kilka dni w Dębkach w celu eksploracji plaży zimową porą. Jak widać z powyższego, temat nadmorskich plaż nie jest mi obcy. Miałem ostatnio okazję zapoznać się bliżej z trzema plażami położonymi na południe od Sydney i chciałbym ten odcinek podróżnego bloga im właśnie poświęcić.</p>
<h2 id="garie">Garie</h2>
<p>Zacznijmy od południa, czyli leżącej około trzydziestu kilometrów na południe od Sydney Garie Beach. Znajduje się ona na terenie Królewskiego Parku Narodowego, co wiąże się z tym, że dostać się tam można wyłącznie samochodem, a przy wjeździe należy uiścić opłatę w wysokości 11 dolarów australijskich. Zapewnia to naszemu pojazdowi jeden dzień bezkarnego pobytu na terenie parkowych atrakcji. Opłaty można uniknąć przyjeżdżając poza godzinami szczytu, czyli przed 11 albo po 15 (w weekendy szczyt może trwać dłużej), bo budka z biletami jest wówczas nieczynna, jednak jest to ryzykowne, bo gdy jakiś strażnik przyuważy na parkingu samochód bez przepustki to może wlepić mandat. Nam się to na szczęście nie przytrafiło.</p>
<p>Parking nie jest wielki, mieści pewnie poniżej dwustu pojazdów. Obok znajduje się niewielkie schronisko YHA i budynek z łazienkami, oba bardzo ładne i pasujące do otoczenia. Sama plaża jest długa na kilkaset metrów i od strony lądu ograniczona jest urwiskiem, z wyjątkiem odcinka koło parkingu, gdzie łagodnie schodząca do morza dolinka pozwala na dostęp.</p>
<p>Najlepszą dostępną na tej plaży rozrywką jest wchodzenie do morza po pas albo po szyję i bycie poniewieranym przez fale. Te są gigantyczne, ich amplituda praktycznie nie pozwala na normalne pływanie, ale kto by pływał, gdy można unosić się na wodzie, lub stać w niej i być z ogromnym impetem kotłowanym i wyrzucanym na brzeg, zbierając przy okazji pod kąpielówkami kilogramy morskiego piasku? Frajda jest ogromna. Należy jedynie uważać na wodę powracającą do morza, bo jej prąd może porwać i wyciągnąć na głębsze wody. Zdają sobie z tego sprawę ratownicy, którzy dwukrotnie podczas dwóch naszych wizyt “zamykali” plażę z powodu zbyt dużych fal.</p>
<p>Po sesji falowej odpocząć można wylegując się na piasku, a schodząc z plaży opłukać się z soli i piachu pod stojącym przy wejściu na prysznicem. Przyparkingowe łazienki dysponują też porządniejszymi natryskami, gdzie można się dokładnie umyć przy użyciu mydła.</p>
<p><img src="https://farm6.staticflickr.com/5097/5404930971_cf976b9c77_n.jpg" alt="https://farm6.staticflickr.com/5097/5404930971_cf976b9c77_n.jpg"></p>
<h2 id="wattamolla">Wattamolla</h2>
<p>Kolejna plaża w Królewskim Parku Narodowym, bardzo jednak różna od Garie. Jej położenie jest dość ciekawe, bowiem jest to dość krótka, stumetrowa może, grobla, pomiędzy małą zatoczką otwartą na morze z jednej strony, a jeziorkiem z drugiej. Z boków plaża zamknięta jest od północy skałami, zaś od południa zalesionym pagórkiem, zboczem którego wiedzie ścieżka z parkingu nad morze. To pierwsza niedogodność: parkuje się jakieś pięć minut spaceru od plaży, a przy parkingu znajdują się toalety i prysznice, tak, że wizyta w ubikacji wiąże się z niewielką wyprawą. Skoro już o prysznicach mowa, wattamollańskie ani się umywają do tych na Garie: nie dość, że budynek jest bardzo wysłużony, to spośród ośmiu kabin woda jest tylko w jednej.</p>
<p>Wattamolla nadrabia widokami: zatoczka jest bardzo malownicza, osłania też od pełnomorskich fal, pozwalając na pływanie i snorklowanie. Z drugiej strony, na Garie zorientowaliśmy się, że właśnie fale są największą atrakcją na tym wybrzeżu, tak że plażowanie na Wattamolla jest nudnawe. Na domiar złego na plaży znaleźć można było sporo martwych ptaków, co czyniło leżenie plackiem mniej atrakcyjnym niż na Garie.</p>
<p><img src="https://farm6.staticflickr.com/5140/5405542360_840914d283_n.jpg" alt="https://farm6.staticflickr.com/5140/5405542360_840914d283_n.jpg"></p>
<h2 id="cronulla">Cronulla</h2>
<p>W odróżnieniu od poprzedniczek, Cronulla Beach mieści się w mieście. Wzdłuż niej prowadzi ulica i znajdują się parkingi, tak że nawet w niedzielę w środku dnia, kiedy na plaży spodziewać się można było największych tłumów, nie mieliśmy większego problemu ze znalezieniem miejsca dla samochodu. Z ulicy do morza jest pięćdziesiąt metrów, przy miejscach parkingowych są prysznice, tak, że można po prostu zaparkować, wyskoczyć na chwilę do morza, po piętnastu minutach wyjść, opłukać się i jechać dalej. Łatwość dostępu powoduje, że na plaży faktycznie są tłumy, jednak jej długość – ponad dwa kilometry – powoduje, że nie jest to problemem. Co prawda na wyznaczonych kąpieliskach jest bardzo gęsto – poza nimi prądy morskie są ponoć zbyt niebezpieczne – jednak przy zachowaniu pewnej dozy ostrożności można do morza wchodzić na odcinkach, gdzie ratownicy nie pilnują – ograniczają się tylko do okazjonalnego upominania, że niebezpiecznie – za to plażowiczów jest mniej.</p>
<p>Podobnie jak na Garie, Cronulla wystawiona jest na otwarte morze, co wiąże się z potężnymi falami. Znów najlepszy sposób spędzania czasu to bycie kotłowanym przez wodę i podróżowanie z wielkimi prędkościami na łamiącej się fali. Jeślibym miał wybierać między Garie a Cronulla to wskazałbym na tę pierwszą – jest mniejsza, ale też ładniej położona, i dostęp do niej jest trudniejszy, dzięki czemu w wodzie ma się mniej towarzystwa.</p>
<p><img src="https://farm6.staticflickr.com/5300/5404965343_de2e85ed93_n.jpg" alt="https://farm6.staticflickr.com/5300/5404965343_de2e85ed93_n.jpg"></p>
]]></content:encoded></item><item><title>Są góry, to musi być zimno</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/s%C4%85-g%C3%B3ry-to-musi-by%C4%87-zimno/</link><pubDate>Wed, 19 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/s%C4%85-g%C3%B3ry-to-musi-by%C4%87-zimno/</guid><description>17 stycznia park narodowy Warrumbungle – Lithgow, 4362 – 4773 kilometr Noc spędzona na parkingu w parku narodowym Warrumbungle była pierwszą od dawien dawna, podczas której nie dokuczały nam komary. Panował też przyjemny chłód – wjechaliśmy w niewielkie góry, nasz nocleg położony był 500 metrów nad poziomem morza. Jedyny mankament to fakt, że nocowaliśmy na terenie parku bez uiszczenia stosownej opłaty, w związku z czym musieliśmy się zebrać dość wcześnie rano, żeby nas przypadkiem strażnicy nie namierzyli.</description><content:encoded><![CDATA[<h2 id="17-stycznia">17 stycznia</h2>
<h3 id="park-narodowy-warrumbungle--lithgow-4362--4773-kilometr">park narodowy Warrumbungle – Lithgow, 4362 – 4773 kilometr</h3>
<p>Noc spędzona na parkingu w parku narodowym Warrumbungle była pierwszą od dawien dawna, podczas której nie dokuczały nam komary. Panował też przyjemny chłód – wjechaliśmy w niewielkie góry, nasz nocleg położony był 500 metrów nad poziomem morza. Jedyny mankament to fakt, że nocowaliśmy na terenie parku bez uiszczenia stosownej opłaty, w związku z czym musieliśmy się zebrać dość wcześnie rano, żeby nas przypadkiem strażnicy nie namierzyli.</p>
<p>Kolejna korzyść z powrotu do cywilizacji jest taka, że mój telefon komórkowy ożywa i mogę przy jego pomocy korzystać z Internetu. Podczas jazdy przez outback sygnał sieci dostępny był tylko w miasteczkach, ale najwyraźniej mój operator komórkowy (Global Gossip) nie miał z właścicielem sieci (Telstra, zdaje się) umowy i wykonywać mogłem tylko telefony alarmowe.</p>
<p>Śniadanie jemy na stolikach przy parkingu, gdzie mieliśmy nocleg. Mleko jest zupełnie zamarznięte, trochę trwa, zanim udaje się odmrozić je na tyle, żebym był w stanie zjeść moje dyżurne muesli. Korzyść jest taka, że część płynna jest bardzo esencjonalna, bo wodę wymroziło.</p>
<p>Po śniadaniu ruszamy na dwuipółgodzinny spacer przez pobliskie skałki zwane Split Rock. Idziemy w ostrym słońcu, w drodze na górę następuje kryzys, bo Ania nie może złapać oddechu, jednak po krótkim odpoczynku idzie dalej. Na szczycie przyjemnie, słońce, piękne widoki, i jedyny zgrzyt to wyjątkowo natrętne muchy, które podróżowały z nami od połowy drogi na szczyt. Mają w zwyczaju krążyć w okół głowy i od czasu do czasu zatrzymywać się dziesięć centymetrów przed nosem. Trudno je utłuc, przegonić też się nie bardzo da, o polubieniu mowy być nie może.</p>
<p><img src="http://farm6.staticflickr.com/5171/5404064761_4dc2e54aae.jpg" alt="Ania postanowiła zrównać Split Rock z ziemią"></p>
<p>Po zejściu na parking postanawiamy jechać do Blue Mountains po więcej górskich wrażeń. Nie spieszy nam się jednak, zatrzymujemy się więc w pobliskim miasteczku Dubbo na Internet. Pod wieczór ruszamy w stronę Katoomby, która stanowi dobrą bazę wypadową do Blue Mountains. Po drodze zatrzymujemy się na kolację w Molong – Marta przygotowuje spaghetti Bolognese do niego pijemy Australijskie czerwone wino, które oczywiście okazuje się dobre. Przy okazji rozmrażamy lodówkę, mając nadzieję, że przywróci jej to rozsądek i przestanie mrozić bez sensu.</p>
<p>Po kolacji jadę dalej i około północy dowożę śpiącą już ekipę do Lithgow, gdzie na parkingu obok szosy rozbijamy obóz. Jest jeszcze chłodniej niż poprzedniej nocy – jesteśmy już prawie kilometr nad poziomem morza.</p>
<h2 id="18-stycznia">18 stycznia</h2>
<h3 id="lithgow--katoomba-4773--4821-kilometr">Lithgow – Katoomba, 4773 – 4821 kilometr</h3>
<p>Z Lithgow do Katoomby jest rzut beretem. Lądujemy tam przed południem i spędzamy trochę czasu w centrum miasteczka, gdzie Kuba próbuje znaleźć sobie nowe spodnie trekkingowe. Jego North Face’y po dziewięciu miesiącach w trasie podlegają gwałtownemu procesowi dezintegracji. W Azji radził sobie oddając je do zacerowania za dolara, obecnie jednak nie dość, że cerowanie podrożało, to spodniom nic już nie jest w stanie pomóc.</p>
<p>W międzyczasie my z Anią odwiedzamy sklep z kapeluszami, gdzie Ania zaopatrza się w bardzo ładny zielony czepek, ja natomiast kupuję tradycyjne australijskie nakrycie głowy z kangurzej skóry. O takim kapeluszu marzyłem od małego, najbardziej jednak zaważyły względy praktyczne: jest bardzo lekki, ponadto można go złożyć w ćwierć i wsadzić do torby, a po wyjęciu wróci do pierwotnego kształtu.</p>
<p><img src="https://farm6.staticflickr.com/5140/5404082181_4d246c1bb3.jpg" alt="kapelusz, Maciek i Three Sisters"></p>
<p>Katoomba położona jest na szczycie klifu nad jedną z dolin Blue Mountains i dysponuje tarasem widokowym zwanym Echo Point, z którego można ową dolinę i okalające ją skały podziwiać. A podziwiać jest co: pionowe ściany z piaskowca pną się na setki metrów, w dole jest gęsty, wilgotny las, panorama obejmuje całą dolinę, szeroką na kilkanaście kilometrów. Z platformy widokowej widać też charaketrystyczne skałki zwane Three Sisters, do których robimy sobie później spacer – we trójkę, bez Kuby, któremu po wczorajszym treku dokucza kolano.</p>
<p>Widoki są niewątpliwą zaletą miasteczka, wadą jest natomiast brak campingu w rozsądnej cenie. Na jedynym tego typu obiekcie za naszą czwórkę i samochód zażyczyli sobie 60$, zrobiliśmy więc w tył zwrot i zaparkowaliśmy na podwórku hostelu, tzw. “backpackers”, gdzie za dolarów 40 mamy dostęp do wszystkich udogodnień. Z Kubą najpierw korzystamy ze stołu do bilarda, a następnie ja zaszywam się w przestronnej kuchni, gdzie przygotowuję indyjskie curry. Wszystko jest paczkowane, z supermarketu: sos, biryani, naany, tylko kurczaka trzeba podsmażyć – mimo to, a może dzięki temu, posiłek przyjęty został dobrze. Po kolacji Ania załatwia nam hotel w Sydney, a ja męczę nową kampanię w Battle for Wesnoth.</p>
<h2 id="19-stycznia">19 stycznia</h2>
<h3 id="katoomba--valley-of-the-waters--katoomba-4821--4850-kilometr">Katoomba – Valley of the Waters – Katoomba, 4821 – 4850 kilometr</h3>
<p>Co noc, to zimniej. Tej nocy przyszła chmura i budzimy się w chłodnej mżawce. Na dziś zaplanowany mamy długi, siedmiogodzinny szlak w odległej od Katoomby o kilka kilometrów Valley of The Waters. Pochmurna pogoda nie jest nam straszna, tam więc kierujemy nasz pojazd.</p>
<p>Szlak zaczyna się w miasteczku Wentworth, położonym, podobnie jak Katoomba, na szczycie klifu. Ruszyliśmy więc najpierw w dół, do doliny, bardzo stromymi schodami wzdłuż wodospadu Victoria Falls. Po kilku minutach odpadł Kuba – kolano wciąż się nie wykurowało i nie pozwala mu na dłuższe marsze, w szczególności po schodach. Idziemy dalej we trójkę.</p>
<p>Wypogadza się, wychodzi słońce, zaś widoki na gigantyczny wodospad (w sumie ma około 300 metrów wysokości) są fantastyczne, jednak zejście nie należy do najłatwiejszych. Jest stromo, a kamienie są mokre i śliskie, co boleśnie odczuwa Ania wyłożywszy się na jednym z nich. Na szczęście obyło się bez poważnej kontuzji, kontynuujemy więc marsz na dół, a później dnem doliny, do Vera Falls. W wilgotnym lesie jest masa pijawek, jednej udało się pożywić na mojej łydce, pomimo skarpetki, która wedle etykietki miała zapobiegać tego typu zdarzeniom. Pod wodospadem włażę do jeziorka, jest dość płytko, woda zimna, słońce za chmurami, nie siedzę w nim więc zbyt długo. Do dalszej części szlaku cofamy się po swoich śladach. Trasa do Vera Falls jest mało uczęszczana, przez dwie godziny spotykamy troje turystów.</p>
<p><img src="https://farm6.staticflickr.com/5131/5404152267_edf1e53ef5.jpg" alt="Wentworth Falls widziane z National Pass"></p>
<p>Dalsza część wycieczki wiedzie przez National Pass. Jest to wykuty w ogromnym (na oko ponad stumetrowym) klifie trawers, i widokowo jedna za najbardziej efektownych tras jakimi dane mi było iść. Nad głową ma się kilkadziesiąt metrów ściany, która miejscami tworzy ogromne przewieszki, z których leje się woda, spadając kilkanaście metrów od wiodącej wzdłuż ściany ścieżki i tworząc ogromne krople, które z dołu sprawiają wrażenie jakby poruszały się w zwolnionym tempie. Widoki są doprawdy niesamowite.</p>
<p>Godzinny mniej więcej spacer tym szlakiem doprowadził nas do kolejnego wodospadu, Wentworth Falls. Podobnie jak Victoria Falls ma on około 300 metrów wysokości, jednak o ile Victoria ukryta jest w lesie, Wentworth zobaczyć można w całej okazałości – jest to efektowna kulminacja niesamowitej trasy. Po krótkim postoju u szczytu dolnego stopnia wodospadu – tu Marta odkryła, że podczas spaceru nakarmiła kilka pijawek – wchodzimy stromymi schodami na górę, skąd szlakiem wiodącym szczytem klifu, lecz mniej widokowo efektownym, bo ukrytym w lesie, wracamy na parking.</p>
<p>Na kolację Kuba z Martą zaplanowali grillowane mięso i warzywa, próbujemy więc odpalić jednen z publicznych grilli w parku. Mają one formę postumentu, na górze którego znajduje się metalowa płyta o powierzchni lekko nachylonej do środka, w którym znajduje się mała dziurka; na jednej ze ścianek jest przycisk, który uruchamia podgrzewanie płyty. W tym wypadku spotkało nas rozczarowanie: większość napotkanych urządzeń jest brudna, a te z czystą płytą nie działają. Postanawiamy więc spędzić kolejną noc w Katoombiańskim backpackersie, gdzie korzystać możemy z gazowego grilla. Przygotowana na nich kolacja jest znakomita, szczególnie do gustu przypadł mi kurczak w sosie satay, ciekawe były też kiełbaski z kangura.</p>
]]></content:encoded></item><item><title>Przez outback</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/przez-outback/</link><pubDate>Sun, 16 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/przez-outback/</guid><description>13 stycznia okolice Clermont – Barcaldine, 2440 – 2907 kilometr W Clermont dowiadujemy się, że droga z Balcardine na południe jest zamknięta w Charleville. Stawia to pod znakiem zapytania nasz plan jazdy do Nowej Południowej Walii. Od czego jednak jest plan C? Uderzymy przez Mount Isa do Alice Springs w Terytorium Północnym (to jedyne 1500 km), zobaczymy te słynną wielką pustynię oraz Uluru, czyli największy głaz na ziemi, a później już pojedziemy wprost do Sydney – to raptem niecałe 2800 km!</description><content:encoded><![CDATA[<h2 id="13-stycznia">13 stycznia</h2>
<h3 id="okolice-clermont--barcaldine-2440--2907-kilometr">okolice Clermont – Barcaldine, 2440 – 2907 kilometr</h3>
<iframe src="https://www.google.com/maps/d/embed?mid=1U0FIY-Bo1OjL33fBNvyWe2ib9ug&ehbc=2E312F" width="640" height="480"></iframe>
<p>W Clermont dowiadujemy się, że droga z Balcardine na południe jest zamknięta w Charleville. Stawia to pod znakiem zapytania nasz plan jazdy do Nowej Południowej Walii. Od czego jednak jest plan C? Uderzymy przez Mount Isa do Alice Springs w Terytorium Północnym (to jedyne 1500 km), zobaczymy te słynną wielką pustynię oraz Uluru, czyli największy głaz na ziemi, a później już pojedziemy wprost do Sydney – to raptem niecałe 2800 km!</p>
<p>Tymczasem jednak tak czy inaczej należy się dostać do Barcaldine. Pierwsze większe miasteczko na naszej trasie to Emerald, które słynie z kopalni szlachetnych kamieni. Droga do niego jest nad wyraz monotonna, krajobraz to ciągnące się po horyzont trawy. W Emerald planujemy uzupełnić zapasy mleka i kupić mięso na kolację kolejnego dnia. W centrum handlowym zastajemy jednak same puste półki i informację, że ze względu na problemy z dostawami wprowadza się limit dwóch bochenków chleba i dwóch litrów mleka na rodzinę. Mleka nie ma zresztą w ogóle, owoców prawie wcale, z mięsa tylko kilka niezbyt pięknych kawałków wołowiny. Trasy zaopatrzeniowe do miasta prowadzą przez Rockhampton i St. George, czyli miejsca najbardziej dotknięte powodzią, mamy więc nadzieję, że w miasteczkach dalej na zachód sytuacja będzie lepsza.</p>
<p>Jedziemy więc na zachód. Krajobraz robi się coraz bardziej egzotyczny, przy drodze widać niewielkie termitiery i drzewa butelkowe. Co półtorej godziny mijamy miasteczka jak z westernów – wzdłuż jednej ulicy przez kilometr ciągna się piętrowe zabudowania z głębokimi podcieniami, w cetrum jest saloon (czyli po tutejszemu “hotel”), na ulicach pusto, wiatr przegania tylko tumbleweed, miejscowi przyglądają się nam podejrzliwie. Jedno z tych miasteczek, Jericho, słynie z rodeo, gdzie kowboje ujeżdżają byki, poza sezonem jednak i ta wątpliwa atrakcja jest niedostępna.</p>
<p><img src="http://farm6.staticflickr.com/5258/5394576214_bec256d725.jpg" alt="Barcaldine, typowe outbackowe miasteczko"></p>
<p>Barcaldine, typowe outbackowe miasteczko</p>
<p>Pod wieczór lądujemy w Barcaldine, gdzie mleka wciąż nie ma, ale dowiadujemy się, że droga na południe jednak jest przejezdna. To chyba dobrze, bo podróż przez Alice Springs oznaczałaby bite siedem dni jazdy samochodem, a tak będziemy mieli jeszcze czas żeby się gdzieś zatrzymać i coś obejrzeć. Tylko co? Outback to pustkowie, pod każdym względem. Nie ma tu nic, tylko droga i trawy po horyzont.</p>
<p>Zatrzymujemy się na campingu gdzie Marta przygotowuje sałatkę z ryżu i tuńczyka. Po jedzeniue do północy gramy we trójkę (bez Marty) w Wesnoth; dochodzimy do wniosku, że gra wieloosobowa wiąże się ze zbyt dużymi przestojami. Kuba, korzystając z dostępu do Internetu, sciąga grę na ich laptopa.</p>
<h2 id="14-stycznia">14 stycznia</h2>
<h3 id="okolice-barcaldine--charleville-2907--3326-kilometr">okolice Barcaldine – Charleville, 2907 – 3326 kilometr</h3>
<p>Ranek czternastego stycznia upłynął pod znakiem małżeńskich kłótni o komputery. Ania chciała korzystać z Internetu, ja grać w Wesnoth; Marta chciała grać w jakąś odmianę tetrisa, Kuba w Wesnoth. Nie mogliśmy się dogadać czyja potrzeba jest pilniejsza i kto ma lepsze alternatywy na jej zaspokojenie. Następnym razem trzeba będzie wziąć po jednym netbooku na osobę.</p>
<p>Po drodze widzimy pierwsze pociągi drogowe, czyli ciężarówki ciągnące nie jedną, jak w Europie, lecz trzy lub więcej naczep. Monstra te mogą osiągać ponad pięćdziesiąt metrów długości i jeśli wyprzedzają należy je przepuszczać zjeżdżając na pobocze i zatrzymując się. Zupełnie niespodziewanie, w zabitym dechami miasteczku Augenthella znajdujemy w sklepie swieże mleko! Poza tym jednak dzień ten nie różni się specjalnie od poprzedniego. Znów monotonna droga, miasteczka co sto lub więcej kilometrów, wyglądające jak z planów westernów, znów oddaję Kubie kierownicę na ostatnią godzinę.</p>
<p><img src="https://farm6.staticflickr.com/5056/5394025831_597b40bac2.jpg" alt="pociąg drogowy"></p>
<p>pociąg drogowy</p>
<p>Dojeżdżamy do Charleville, które według przewonika dysponuje centrum astronomicznym, w którym turyści mogą przez teleskop oglądać niebo. Centrum i mieszcząca się w nim informacja turystyczna są zamknięte, postanawiamy jednak wykorzystać bardzo ładny teren, na którym są położone, na kolację i nocleg.</p>
<p>Przy przygotowaniach do kolacji towarzyszy nam stadko kangurów. Zwierzęta te, jeden z symboli Australii, widzieliśmy dotąd tylko na drodze, w postaci rozjechanej. Na żywo są bardziej interesujące: skaczą, drą się, stają na ogonach i boksują. O zmroku zabierają się z trawnika, a my zjadamy kolację w postaci marokańskiego curry z dynią i kuskusem. Wegetariańskie, bo przez ostatnie dwa dni nigdzie nie udało się kupić ani drobiu, ani jagnięciny.</p>
<p>Kuba wynalazł jakieś gniazdka elektryczne w ścianie jednego z budynków, podpinamy tam laptopy i gramy w Wesnoth do północy – Kuba swoją kampanię, ja swoją.</p>
<h2 id="15-stycznia">15 stycznia</h2>
<h3 id="charleville--bourke-3326--3796-kilometr">Charleville – Bourke, 3326 – 3796 kilometr</h3>
<p><img src="https://farm5.staticflickr.com/4139/5394635728_2f9f998389.jpg" alt="droga przez outback"></p>
<p>droga przez outback</p>
<p>Rano my z Anią wstajemy stosunkowo wyspani, w odróżnieniu od naszych towarzyszy, którzy spali na dole, gdzie bardzo dokuczały komary. Uporali się w końcu z nimi przy pomocy moskitiery. Po śniadaniu kontynuujemy podróż na południe. Krajobraz zmienia się nieco, wciąż trawy po horyzont, ale na poboczach szosy pojawia się charakterystyczna dla zdjęć z australijskich drógczerwona ziemia , rośnie też trochę drzew. Poza tym jednak widok jest wciąż monotonny, sąsiednie miasteczka są od siebie odległe o ponad sto kilometrów, na połkach sklepowych wciąż brak świeżych rzeczy. W chaszczach przy drodze przyuważamy strusia i robimy mu sesję zdjęciową.</p>
<p>Po południu przekraczamy granicę między Queensland a Nową Południową Walią. Zmienia się sporo: temperatura spada o 10 stopni Celsjusza, czas przesuwa się o godzinę do przodu a droga zaczyna prowadzić przez zalane wodą tereny. Około 17 dojeżdżamy do Bourke. Queenslandowski outback miał być strasznym zadupiem, to jednak było nic w porównaniu z tą mieściną. Mają niby centrum wystawowe, dwa supermarkety, troche historycznych budynków, a w sklepach nareszcie niczego nie brakuje; jednak dwa napotkane rednecki gatunku żeńskiego informują nas, że w miasteczku lepiej nie biwakować, bo przyjdą wandale i nam zdemolują campera; że jak dzieciaki pływające na belkach w starym porcie będą nas prosiły o dwa dolary, to żeby im nie dawać; oferują też pomoc w zdobyciu kangurzego mięsa. Na policji dowiadujemy się, że droga na wschód jest nieprzejezdna i należy jechać dalej na południowy wschód, gdzie powódź nie doszła jeszcze i powinno się jeździć bez problemów.</p>
<p>Zatrzymujemy się na campingu pod miastem, w miejscu, skąd zwykle startują wycieczki parostatkiem. Poziom wody w rzece Darling jest tak wysoki, że dochodzi do miejsc campingowych. Na miejscu są dwa baseny, właściwie bardziej oczka wodne o długości dziesięciu metrów. Próbujemy się w nich kąpać, co jest całkiem przyjemne, Ania jednak przechodzi kryzys, bo owady zamieszkujące licznie te wody włażą jej pod kostium i przebierają nóżkami powodując dyskomfort.</p>
<p>W campingowej kuchni napotykamy grupę ortodoksyjnych Żydów pijących piwo i jedzących ciasteczka. Panowie grają w karty, panie studiują torę. Jest akurat szabas, Kuba służy im więc pomocą przy odpaleniu elektrycznej kuchenki, później jednak niweluje zdobyte w ten sposób względy biorąc garnki Starozakonnych do przygotowywania naszych kolacyjnych fajitas. Szczęśliwie odbywa się bez poważniejszego skażenia niekoszerną żywnością.</p>
<p>Po kolacji gramy trochę w kierki i inne gry karciane, później korzystamy z dostępności prądu i siedzimy w kuchni przy laptopach. Ania z Martą oglądają film, my z Kubą gramy w Liero a później kontynuujemy swoje kampanie w Battle for Wesnoth. Towarzyszą nam chmary owadów, na szczęście niewiele z nich gryzie.</p>
<h2 id="16-stycznia">16 stycznia</h2>
<h3 id="bourke--park-narodowy-warrumbungle-3796--4362-kilometr">Bourke – park narodowy Warrumbungle, 3796 – 4362 kilometr</h3>
<p>Nad ranem budzi nas bzyczenie komarów. Mam wrażenie, że wciąż jakiś lata mi nad uchem. Próbuję się chować pod kołdrą, ale robi się strasznie gorąco, po piętnastu minutach nie wytrzymuję, wychodzę z naszego dachowego namiotu i pryskam się cały repelentem. Chyba pomaga, do rana nic mnie nie budzi.</p>
<p>Rano, na opustoszałym campingu, robimy sobie śniadanie. Naszej samochodowej lodówce udało się zamrozić mleko. Urządzenie można regulować, oba suwaki ustwiliśmy, zgodnie z zaleceniem faceta z wypożyczalni, w minimalnych pozycjach, żeby akumulator wytrzymał przez noc. Początkowo chłodziła ledwo-ledwo, teraz coś jej się poprzestawiało i jak coś dotyka ścianki to nie ma szans – zamarznie.</p>
<p><img src="https://farm5.staticflickr.com/4089/5394661960_d6ba9926a0.jpg" alt="Kuba bada bród"></p>
<p>Kuba bada bród</p>
<p>Po śniadaniu ruszamy w trasę. Mam wrażenie, jakbym przez outback jechał już trzy tygodnie, nie trzy dni. Ciekawe: z jednej strony fragmenty podróży, w których dużo się działo, jak Kambodża czy Wietnam, wydają się być tak niedawno, z drugiej nasza podróż przez australijskie pustkowia zdaje się trwać od wieków. Postanawiamy złamać tę monotonię i zahaczyć o Macquarie Marshes, czyli mokradła, na których jest rezerwat przyrody. Jedziemy kilkadziesiąt kilometrów od głównej trasy boczną drogą, później zjeżdżamy na drogę gruntową (wypożyczalnia tego zabrania, kara wynosi 1250$), ale mokradeł, jak i rzeki, wzdłuż której mają się ciągnąć, jakoś nie widać. Wracamy więc okrężną drogą, i tu robi się bardziej mokro: jest bardzo dużo ptaków, napotykamy też kilka przejazdów w bród. Na dwóch z nich kilkudziesięciometrowy odcinek drogi jest pod wartko płynącą wodą i wygląda to na tyle groźnie, że puszczamy przodem Kubę, żeby własnymi stopami zbadał grunt. W końcu przejechać się udaje, głębokość nie przekraczała 20 cm. Jadąc, przyuważamy jeszcze na drodze dwa nieduże węże, jeden był czerwono-czarny, drugi prążkowany.</p>
<p>Wieczorem, po kolacji mojego autorstwa (paella z krewetkami) kierownicę przejmuje Kuba. Gdy obudziłem się około północy byliśmy już w parku narodowym Warrumbungle, niniejszym opuszczając outback, czyli głębokie zadupie Australii.</p>
]]></content:encoded></item><item><title>Ucieczka na zachód</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/ucieczka-na-zach%C3%B3d/</link><pubDate>Wed, 12 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/ucieczka-na-zach%C3%B3d/</guid><description>9 stycznia Lake Eacham – okolice Woodstock, 442 – 909 kilometr O szóstej rano można było nas zastać w parku na ławce nad rzeczką, w ciszy i skupieniu wpatrujących się w taflę wody. Nie staliśmy się bynajmniej miłośnikami wędkowania; próbowaliśmy dojrzeć dziobaki, które podobno żerują w tym miejscu. Na próżno – pora roku nie jest po temu najlepsza, a dziobaki to bardzo płochliwe stowrzenia
Szczęścia do dużych egzemplarzy tutejszej fauny póki co nie mamy.</description><content:encoded><![CDATA[<h2 id="9-stycznia">9 stycznia</h2>
<h3 id="lake-eacham--okolice-woodstock-442--909-kilometr">Lake Eacham – okolice Woodstock, 442 – 909 kilometr</h3>
<p>O szóstej rano można było nas zastać w parku na ławce nad rzeczką, w ciszy i skupieniu wpatrujących się w taflę wody. Nie staliśmy się bynajmniej miłośnikami wędkowania; próbowaliśmy dojrzeć dziobaki, które podobno żerują w tym miejscu. Na próżno – pora roku nie jest po temu najlepsza, a dziobaki to bardzo płochliwe stowrzenia</p>
<p>Szczęścia do dużych egzemplarzy tutejszej fauny póki co nie mamy. Krokodyle widzieliśmy tylko małe, kangurów podobno jest mnóstwo, ale my jakoś żadnego nie zauważyliśmy, ani jednego kazuara ani strusia, nic. Dużo jest za to latających owadów i żywiących się nimi ropuch, gekonów i pająków. Przedstawiciel tych ostatnich towarzyszył mi rano w braniu prysznica. Był dość duży, zostawiłem mu więc sporo miejsca, nie chcąc sprawdzać, czy jest z tych gryzących i jadowitych.</p>
<p>Przez Australię jedzie się przyjemnie, bo nie ma się poczucia, że piękne krajobrazy uciekają, że przez chwilę widok jest zachwycający, ale znika zanim zdążę się nim ponapawać. Podobają mi się wzgórza z tropikalnymi lasami schodzącymi do brzegu oceanu? Starczy mi ich na dwa dni jazdy. Rozległa równina, okolona wyrastającymi na horyzoncie górami? Spokojna głowa, jutro też będzie, mimo, że przejedziemy 500 km. Pustynia z czerwonym piachem po horyzont? Starczy jej na tydzień jeżdżenia. Jeżdżąc samochodem trudno sie nie nasycić Australią.</p>
<p>Jadąc Bruce Highway przyuważamy drogowskaz na “winnicę” o obrazowej nazwie Murdering Point, gdzie produkują wina z tropikalnych owoców. Ani bardzo smakuje wytrawne wino z lychee, porto z bliżej niezidentyfikowanych owoców, posiadające podobno bukiet cytrusowo-śliwkowo-morwowy i likier kawowo-czekoladowy, kupujemy więc te trzy butelki za niebagatelną kwotę 75$. Będą na desery i do kolacji.</p>
<p>Minąwszy Townsville zjechaliśmy z Bruce Highway na Overlanders Highway, którą dojechaliśmy do mniejszej drogi łączącej prowadzącej z Woodstock z powrotem na jedynkę (taki numer nosi Bruce Highway). Tam zatrzymaliśmy się na nocleg i skonsumowaliśmy makaron z boczkiem i surówkę z kiszonej kapusty, zaserwowane przez Martę i Kubę. Przy kolacji towarzyszyła nam chmara owadów, część z nich gryząca; jedliśmy przy stoliku wewnątrz samochodu, włączywszy uprzednio silnik i klimatyzację, co okazało się dość skutecznym środkiem na latające paskudztwa.</p>
<h2 id="10-stycznia">10 stycznia</h2>
<h3 id="okolice-woodstock--eungella-909--1367-kilometr">okolice Woodstock – Eungella, 909 – 1367 kilometr</h3>
<p>Przed 7 rano obudził nas straszny upał. Zebraliśmy się z naszego obozu i na przydrożnym placyku postojowym. Przy Bruce Highway można takie napotkać co kilkadziesiąt kilometrów, wyposażone są w stoliki pod dachem, toaletę i zasilane drewnem lub gazem grille – grillowanie to chyba narodowy zwyczaj australijczyków. Na śniadanie usmażyliśmy naleśniki, zrobione ze specjalnego preparatu, który kupuje się w plastikowej butelce, dolewa się wody, potrząsa i już można smażyć.</p>
<p>Później podążaliśmy na południe, zatrzymując się w Conway National Park na kąpiel w wodospadzie o nazwie Cedar Creek Fall. Droga do wodospadu prowadziła przez bród; nie był głęboki, może do kostek, na wszelki wypadek zostawiliśmy jednak samochód przed wodą i ostatni kilometr pokonaliśmy na piechotę. Wodospad okazał się efektowny i licznie odwiedzany przez turystów. Ci najbardziej odważni (albo najgorzej wyposażeni w wyobraźnię) skakali ze znajdującej się około 10 metrów ponad powierzchnią wody skalnej półki prosto w miejsce, gdzie wodospad wpada do znajdującego się poniżej jeziorka. My zadowoliliśmy się opłynięciem rzeczonego jeziorka.</p>
<p>Na nocleg wybraliśmy się do wynalezionego przez dziewczyny w przewodniku parku narodowego Eungella. Aby się tam dostać pokonać trzeba było kilka kilometrów ostrego podjazdu, ale widok, jaki roztaczał się z góry w zupełności to wynagradzał. Zatrzymaliśmy się na campingu z przepięknym widokiem na dolinę; ponowiliśmy też próbę zobaczenia dziobaka w środowisku naturalnym, i tym razem podobno nam się udało. Ja widziałem tylko jakiś mały, czarny kształt poruszający się po powierzchni wody, ale Ania zapewnia, że był to właśnie ów jajorodny ssak.</p>
<p><img src="https://farm6.staticflickr.com/5219/5394432150_afb760fa6c.jpg" alt="widok z campingu w parku narodowym Eungella"></p>
<p>Na kolację przyrządziłem chilli con carne, do tego wypiliśmy drugą nabytą za 4$ butelkę wina, tym razem czerwonego – również okazało się bardzo smaczne.</p>
<h2 id="11-stycznia">11 stycznia</h2>
<h3 id="eungella--capricorn-coast-1367--1791-kilometr">Eungella – Capricorn Coast, 1367 – 1791 kilometr</h3>
<p>Tego dnia po raz pierwszy Kuba zasiadł na dłużej za kierownicą. Po raz pierwszy też dostrzegliśmy oznaki powodzi, która dotknęła południowo-wschodnią część stanu Queensland i o której dużo słyszeliśmy od przylotu do Australii. Po drodze z Mackay do Rockhampton jechaliśmy wzdłuż torów kolejowych przykrotych wodą, mijaliśmy też ogromne rozlewiska. My z Anią tymczasem leniuchujemy z tyłu samochodu grając w <a href="http://www.wesnoth.org">Battle for Wesnoth</a>, aż prąd w laptopie się kończy.</p>
<p>W okolicach Rockhampton decydujemy się na szukanie noclegu na dziko przy stukilometrowej pętli widokowej przechodzącej przez Capricorn Coast. Zatrzymujemy się przy bocznej drodze, gdzie Marta przygotowuje kolację: spaghetti z łososiem, szpinakiem i sosem śmietanowym. Wykańczamy też kupiony w Murdering Point likier.</p>
<h2 id="12-stycznia">12 stycznia</h2>
<h3 id="capricorn-coast--okolice-clermont-1791--2440-kilometr">Capricorn Coast – okolice Clermont, 1791 – 2440 kilometr</h3>
<p>Rano próbujemy dokończyć pętlę widokową i okazuje się, że tuż przy Rockhampton droga jest zalana przez Fitzroy River i nieprzejezdna. Szczęśliwie miejscowi prowadzą nas drogą wiodącą między innymi cmentarnymi alejkami i nie musimy wracać stu kilometrów pętli – dostajemy się do Rockhampton i przekraczamy rzekę.</p>
<p><img src="https://farm6.staticflickr.com/5216/5393856147_3322258187.jpg" alt="taki znak zatrzymał nas tuż przed końcem pętli Capricorn Coast"></p>
<p>Tu zatrzymujemy się w centrum handlowym aby zweryfikować nasze dalsze plany i okazuje się co następuje: drogi do Fraser Island, czyli piaskowej wyspy będącej naszym kolejnym celem, są generalnie przejezdne, jednak główne miasto w okolicy właśnie się przygotowuje na kolejną falę powodziową, dodatkowo sytuacja w Brisbane, przez które jechalibyśmy dalej na południe, staje się krytyczna, mieszkańcy są ewakuowani i o przejechaniu tamtędy przez najbliższe parę dni mowy być nie może; trudno też przewidzieć kiedy drogi zostaną otwarte. Co gorsza stan rzeki Fitzroy i okolicznych rzeczek jest wciąż bardzo wysoki i kolejne deszcze mogą nas kompletnie odciąć od reszty Australii. Decydujemy się więc na plan B: rezygnujemy z Fraser Island i cofamy się kilkaset kilometrów na północ, aby przebić się wgłąb lądu i tamtędy spróbować pojechać na południe.</p>
<p>Po drodze mijamy znów zalane tereny. Na postoju rozmawiam z kierowcą z firmy kurierskiej, który mówi, że nigdy wcześniej nie widział tak pustej Bruce Highway. Faktycznie, na tej głównej arterii komunikacyjnej biegnącej wzdłuż wschodniego wybrzeża Australii, inne samochody mijamy co kilkanaście minut, resztę czasu spędzamy na pustej szosie.</p>
<p>Wspomnieć tu warto o tym, jak władze Queensland starają się zapobiegać wypadkom spowodowanym zmęczeniem i sennością kierowców. Na Bruce Highway co i rusz napotkać można tablice z hasłami typu “survive this drive”, “brake the drive, stay alive”, “arrive alive” czy “rest or R.I.P.”, co kilkadziesiąt kilometrów są postoje (z tych korzystamy, bo dysponują toaletami i stolikami, przy których można się posilić). Odległości między najbliższymi miejscowościami często przekraczają tu 100 km, drogi są wąskie i dozwolone prędkości z reguły nie przekraczają 100 km/h; po sobie spostrzegłem, że znużenie zaczyna się tu odczuwać znacznie szybciej niż prowadząc samochód w Europie.</p>
<p>Planujemy zanocować nad morzem, w Armstrong Beach, miejscowość okazuje się jednak niezbyt sympatyczna, przygotowujemy więc tylko z Anią kolację – steki z cielęciny, do tego gotowane ziemniaki i szparagi – i kontynuujemy jazdę, aby w nocy zyskać trochę kilometrów. Około północy za kierownicą zmienia mnie Kuba. Droga robi się kompletnie pusta, najwyraźniej nikt inny nie wpadł na podobny do naszego pomysł na podróż na południe – a może nie jeździ się tu w nocy? Około pierwszej zatrzymujemy się na nocleg w zatoczce na poboczu drogi.</p>
]]></content:encoded></item><item><title>Wilgotne tropiki</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/wilgotne-tropiki/</link><pubDate>Sat, 08 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/wilgotne-tropiki/</guid><description>6 stycznia Cairns – Cape Tribulation, 0 – 162 kilometr Przed południem odebraliśmy 434 MZX z biura w centrum Cairns, dokąd z Kubą wybraliśmy się z naszego couchsurfingowego locum na piechotę. Mój apel o nadanie pojazdowi pięknej nazwy, na wzór okrętów i statków kosmicznych, został zignorowany (a szkoda; o ile bardziej dostojnie brzmiałoby: “Z dziennika pokładowego Endavour” albo “Z dziennika pokładowego Bee’s Knees”!), pozostaniemy więc przy identyfikatorze, który nadało mu państwo australijskie, a może stan Queensland, nie wiem dokładnie jak się tu rzeczy mają.</description><content:encoded><![CDATA[<h2 id="6-stycznia">6 stycznia</h2>
<h3 id="cairns--cape-tribulation-0--162-kilometr">Cairns – Cape Tribulation, 0 – 162 kilometr</h3>
<p>Przed południem odebraliśmy 434 MZX z biura w centrum Cairns, dokąd z Kubą wybraliśmy się z naszego <a href="http://www.couchsurfing.org/profile.html?id=EDT4F15">couchsurfingowego locum</a> na piechotę. Mój apel o nadanie pojazdowi pięknej nazwy, na wzór okrętów i statków kosmicznych, został zignorowany (a szkoda; o ile bardziej dostojnie brzmiałoby: “Z dziennika pokładowego Endavour” albo “Z dziennika pokładowego Bee’s Knees”!), pozostaniemy więc przy identyfikatorze, który nadało mu państwo australijskie, a może stan Queensland, nie wiem dokładnie jak się tu rzeczy mają.</p>
<p><img src="https://farm6.staticflickr.com/5051/5391336871_cdf9b7b135.jpg" alt="nasz camper w środowisku naturalnym"></p>
<p>Wehikuł nasz to wiekowa (1998 rocznik) Toyota Estima, w dobrym stanie; na liczniku ma 138669 km, co przyjmujemy za punkt odniesienia przy podawaniu przebytych odległości. Samochód wyposażony jest w niewielki, półtoralitrowy chyba, silnik i automatyczną skrzynię biegów. Ruszając czułem jakbym prowadził duży autobus; rozpędzanie do 100 km/h trwa około 60 sekund, zawieszenie jest bardzo miękkie i nie tłumi drgań, tak, że na nierówności drogi samochód reaguje majestatycznym bujaniem, które odczuć można jeszcze kilkanaście sekund po minięciu dziury, która je spowodowała. Ciekawostką są też dźwigienki wycieraczek i kierunkowskazów zamienione miejscami: wycieraczki są z lewej a kierunkowskazy z prawej strony kierownicy.</p>
<p>Wewnątrz pojazd wyposażony jest w dwa siedzenia z przodu, następnie kanapę zwróconą tyłem do kierunku jazdy, na której podczas jazdy się nie siedzi i która rozkłada się na noc, aby wraz z tylnymi siedzeniami stworzyć szeroki, lecz dość krótkie, łóżko. następnie jest przestrzeń, w której można rozłożyć stolik, i w której podczas jazdy walają się pomniejsze bagaże, a za nią wspomniane tylne siedzenia. Za tylnymi siedzeniami jest kuchnia, do której dostęp uzyskuje się poprzez otwarcie tylnej klapy. Mamy tam lodówkę (zasilana z osobnego akumulatora wytrzymuje około sześciu godzin postoju) kuchenkę gazową z dwoma palnikami, zlew, z którego woda wylewa się pod podwoziem, i trochę przestrzeni magazynowej.</p>
<p>Na dachu przymocowany jest bagażnik z klapą, która otwiera się pod kątem tworząc namiot, w którym mieści się spanie dla dwóch osób. Podczas jazdy trzymamy tam pościel i trzy z czterech dużych plecaków. Pasażerowie z tyłu do dyspozycji mają odtwarzacz DVD (drugi, przenośny, podłączyć można w namiocie na dachu) oraz wiatraczek. W sumie wyposażenie jest bogate i pomysłowo upakowane. Jucy Rentals, czyli firma, wynajmująca te vany, nazywa tę konfigurację <a href="http://www.jucy.com.au/jucy-choppa.asp">“Choppa”</a>.</p>
<p><img src="https://farm6.staticflickr.com/5019/5391319959_def96a6bd8.jpg" alt="widok z jednego ze wzgórz w parku narodowym Daintree"></p>
<p>Za pierwszy cel obraliśmy sobie Cape Tribulation i park narodowy Daintree położone w sercu wpisanego na listę Unesco obszaru wilgotnych lasów tropikalnych. Nasza droga prowadziła wzdłuż piaszczystych plaż, na których jednak kąpiel była nie wskazana, ponieważ o tej porze roku w morzu roi się od parzących meduz, spotkać można też słonowodne krokodyle. Jedna z plaż, Ellis Beach, dysponowała fragmentem morza, który był oczyszczony z intruzów i ogrodzony siatką, zażyliśmy więc tam morskiej kąpieli.</p>
<p>Park narodowy Daintree obejmuje wzgórza i góry (najwyższa ma ponad 1300 m wysokości) porośnięte tropikalnym lasem, który schodzi aż do piaszczystych brzegów morza. Od promu na rzece Daintree, gdzie rozpoczyna się park, do Cape Tribulation prowadzi około trzydziestu kilometrów asfaltowej szosy. Za przylądkiem droga zmienia sie w gruntową i pojazdy z napędem na cztery koła mogą nią jechać dalej, aż do Cooktown. Droga prowadzi przez gęsty, tropikalny las; co kilka kilometrów napotkać można małe sklepiki, są też trzy campingi, poza tym tylko dżungla.</p>
<p>W regionie obowiązuje zakaz obozowania na dziko, a strażnicy leśni jeżdżą i wlepiają mandaty, zameldowaliśmy się więc na campingu niedaleko przylądka. Recepcja była już zamknięta a otwierano ją dopiero po 7:30 rano, postanowiliśmy więc skorzystać z okazji i przenocować za darmo. Umówiliśmy się z Martą i Kubą, że za wieczorne posiłki odpowiedzialni jesteśmy na zmianę, raz my, raz oni. Tego dnia wypadała nasza kolej, przygotowałem więc makaron penne z cebulą, pieczarkami, kurczakiem i pesto – proste danie, które dość często robię w domu.</p>
<h2 id="7-stycznia">7 stycznia</h2>
<h3 id="cape-tribulation--mossman-162--282-kilometr">Cape Tribulation – Mossman, 162 – 282 kilometr</h3>
<p>Zgodnie z planem wyruszamy wcześnie. Chcemy tego dnia wrócić na południe, w stronę Cairns, po drodze zaliczając rejs po rzece Daintree, gdzie podobno zobaczyć można krokodyle. Marcie we znaki daje się przywiezione z Wietnamu przeziębienie, postanawia więc przeleżeć dzień na tylnej kanapie samochodu i nie towarzyszy nam w wypadach. Po drodze do promu zatrzymujemy się przy sklepie Masona, nieopodal którego można się wykąpać w górskim potoku. Kąpiel urozmaicona jest skokami z zawieszonej na gałęzi liny, woda jest chłodna i przejrzysta, miejsce urocze, spędzamy tam więc dobre pół godziny.</p>
<p>Rejsy na krokodyle startują tuż przy promie, po południowej stronie rzeki. Wykupujemy bilety, które pozwalają nam dodatkowo na jeszcze jeden rejs, z samej wioski Daintree, w górnej części biegu rzeki. Tego dnia wcześniejsze kursy widziały podobno trzy młode i jednego starego krokodyla, nam udaje się jednak dostrzec tylko te małe. Jesteśmy pod wrażeniem spostrzegawczości sterującego łódką brodatego, wysokiego Australijczyka, który dostrzega krokodylki, których my nie jesteśmy w stanie wypatrzyć naewt gdy podpłynie na pięć metrów i pokaże dokładnie miejsce. Ratujemy się robiąc zdjęcia wskazanych fragmentów brzegu i powiększając je następnie: rzeczywiście, widać wtedy małe, półmetrowej długości krokodyle. Przewodnik-sternik opowiada przy okazji o zwyczajach tych gadów, o tym, jak po czterdziestu latach osiągają długość pięciu metrów i jak dożywają nawet dwustu lat. Podczas drugiego rejsu, z wioski, mijamy jednego tylko krokodyla, większego, ale za to tak schowanego, że nawet Kuba ze swoim potężnym obiektywem nie miał łatwego zadania gdy portretował gada. Krokodyle krokodylami, widoki podczas tych przejażdżek są piękne.</p>
<p><img src="https://farm6.staticflickr.com/5051/5391967602_905e28677f.jpg" alt="mały krokodyl wylegujący się na brzegu rzeki Daintree"></p>
<p>Na koniec dnia docieramy w okolice miasteczka Mossman, gdzie nocujemy na dziko, przy bocznej drodze, nad potokiem. Na kolację Marta z Kubą przygotowują kurczaka w sosie curry z mlekiem kokosowym, do tego ryż.</p>
<h2 id="8-stycznia">8 stycznia</h2>
<h3 id="mossman--lake-eacham-282--442-kilometr">Mossman – Lake Eacham, 282 – 442 kilometr</h3>
<p>Przedpołudnie i część popołudnia spędziliśmy w Mossman Gorge. Obeszliśmy tam kilkukilometrowy szlak po tropikalnej dżungli, gdzie najciekawszym punktem były drzewa z płaskimi, wysokimi korzeniami, które pomagały w wychwytywaniu tlenu z powietrza (w glebie jest go tam bardzo mało) oraz w gromadzeniu opadłych liści i innych składników kompostu, oraz wykąpaliśmy się w rwącym potoku górskim. Kuba przy okazji uratował dziweczynę, która spanikowała gdy porwał ją ostry nurt. Trenowaliśmy też przepływanie w wodzie pędzącej po przekroczeniu wodospadu.</p>
<p>Potem wyruszyliśmy na południe, do Atherton Tablelands, płaskowyżu nieopodal Cairns, gdzie klimat miał być mniej upalny. Nasza droga prowadziła Captain Cook Highway, jednopasmową szosą wzdłuż brzegu oceanu. W północnej Australii główne drogi, tzw. highways, to często właśnie wąskie szosy, jak ta między Brańszczykiem a Tuchlinem. Ruch jest na nich niewielki, więc w zupełności wystarczają.</p>
<p><img src="https://farm6.staticflickr.com/5252/5392095921_b2051646af.jpg" alt="szosa kapitana Cooka"></p>
<p>Pod wieczór dotarliśmy w okolice jeziora Eacham i z braku lepszych pomysłów na nocleg rozbiliśmy obóz na rozsądnym cenowo – 25 AUD – campingu. Kolacja była wspólna: ja z Anią wykonaliśmy sałatkę grecką zaś Marta przygotowałą tosty z serem. Wypróbowaliśmy też Australijskie białe wino za 4 AUD, okazało się bardzo smaczne.</p>
]]></content:encoded></item><item><title>Dwa dni w mokrych gaciach</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/dwa-dni-w-mokrych-gaciach/</link><pubDate>Wed, 05 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/dwa-dni-w-mokrych-gaciach/</guid><description>Rekina przegapić się nie dało. Był niepokaźnych rozmiarów, długi może na metr, z białym czubkiem płetwy – normalnie możnaby na niego nie zwrócić uwagi, ale teraz światło sześciu latarek było zwrócone właśnie na jego podłużny korpus, wszędzie indziej była nieprzenikniona ciemność. Przypomniałem sobie instrukcję obrony przed rekinem: oświetlić się latarką, żeby zobaczył, jaki jestem duży – wtedy przestanę dla niego być atrakcyjny jako pokarm. Manewr ten okazał się tym razem niepotrzebny; rekin, po początkowym zainteresowaniu światłem latarek, odpłynął w siną (a raczej czarną) dal.</description><content:encoded><![CDATA[<p>Rekina przegapić się nie dało. Był niepokaźnych rozmiarów, długi może na metr, z białym czubkiem płetwy – normalnie możnaby na niego nie zwrócić uwagi, ale teraz światło sześciu latarek było zwrócone właśnie na jego podłużny korpus, wszędzie indziej była nieprzenikniona ciemność. Przypomniałem sobie instrukcję obrony przed rekinem: oświetlić się latarką, żeby zobaczył, jaki jestem duży – wtedy przestanę dla niego być atrakcyjny jako pokarm. Manewr ten okazał się tym razem niepotrzebny; rekin, po początkowym zainteresowaniu światłem latarek, odpłynął w siną (a raczej czarną) dal.</p>
<p>Z latarkami należy też uważać w obecności żółwi. Zwierzęta te śpią pod wodą, wziąwszy uprzednio głęboki oddech, który wystarcza im na kilka godzin. Jeśli się je obudzi, próbują wziąć kolejny, a w swojej drodze na powierzchnię kierują się światłem księżyca. Świecące w jego kierunku latarki powodują konfuzję, gdyż spodziewa się jednego księżyca, a widzą kilka. Powinno się wtedy zasłonić latarkę (nigdy nie należy jej wyłączać), żeby zwierzak bezpiecznie odnalazł drogę.</p>
<p><img src="https://farm6.static.flickr.com/5162/5337341902_b8909efd6b.jpg" alt="Nurkująca ania w pozie ryby"></p>
<p>Tą bezcenną wiedzą podzielił się z nami, w dość humorystyczny sposób, jeden z instruktorów na Reef Encounter, katamaranie, na którym spędziliśmy okrągłą dobę nurkując, snorklując, wylegując się na słońcu, jedząc i śpiąc. Chciałoby się powiedzieć, że załoga składała się z typowych Australijczyków – ich opalenizna, swoboda w obcowaniu z wodą, luz i poczucie humory doskonale pasowały do stereoptypu – lecz było wśród nich też kilkoro młodych Anglików, którym najwyraźniej udzielił się antypodański sposób bycia. Trudno się ich dobremu humorowi dziwić – życie na statku zakotwiczonym na Wielkiej Rafie, słońce, morze, nurkowanie, to praca-marzenie.</p>
<p>Nadmorska promenada w Cairns pęka w szwach od biur rezerwujących rejsy dla nurków. Wycieczki takie warto rezerwować z kilkudniowym wyprzedzeniem, tak, że gdy pojawiliśmy się w mieście w niedzielę rano, a wypływać na dwudniowe nurkowanie chcieliśmy we wtorek, nasz wybór był bardzo ograniczony. Reef Encounter, czterdziestodwuosobowy katamaran kotwiczący na stałe na rafie (a właściwie pływający pomiędzy wchodzących w skład Wielkiej Rafy rafami, znajdującymi się w okolicy Cairns), był jedyną łódką z miejscami w wybranym przez nas terminie i mieszczącą się w naszym budżecie. Jako że statek znajduje się non stop na morzu, dopływa się do niego mniejszym katamaranem, Reef Experience, który prócz kursowania w charakterze autobusu dla gości Reef Encounter, wozi też turystów na jednodniowe wycieczki nurkowo-snorklowe.</p>
<p>Tryb życia na takim statku jest taki, że cały czas gania się w kąpielówkach – najlepszym miejscem na spędzanie czasu między nurkowaniami (a nie ma go wiele!) jest górny pokład, na którym rozstawione są leżaki. Po nurkowaniu wskakiwaliśmy tylko pod prysznic (kajuty mają własne łazienki) żeby spłukać sól, i byliśmy gotowi na leżakowanie albo jedzenie, zależeni od tego, co było zaplanowane na bieżącą przerwę w zabawach wodnych.</p>
<p>Podczas naszego pobytu na Reef Encounter statek kotwiczył w dwóch miejscach Hastings Reef, jednej z popularnych raf w pobliżu Cairns. Popularnej, nie znaczy zatłoczonej: pierwszego dnia byliśmy jedynym statkiem w zasięgu wzroku, drugiego musieliśmy się rafą dzielić z pasażerami Reef Experience i jeszcze jednego jachtu – wtedy zrobiło się dość tłoczno, w wodzie było ponad sto osób. W programie mieliśmy sześć sesji nurkowania, w tym jedną nocną. Jako certyfikowani nurkowie (uprawnienia zrobiliśmy dwa lata temu w Egipcie) byliśmy pozostawieni samym sobie – podczas sesji mieliśmy się tylko zapakować w sprzęt, odhaczyć na liście i mogliśmy iść do wody i pływać gdzie chcieliśmy. Nasze poprzednie nurkowanie miało miejsce podczas egipskiego kursu i nigdy nie nurkowaliśmy bez przewodnika, na pierwszą sesję popłynęliśmy więc z jednym z instruktorów. Obyło sie bez problemów; ośmieliło to nas i na pozostałe nurkowania – za wyjątkiem nocnego – pływaliśmy sami. Całkiem to fajne; początkowo miałem tylko kłopoty z podwodną nawigacją i kontrolą głębokości przy wynurzaniu, ale znalazłem na to proste recepty (np. trzymanie się cumy podczas trzyminutowego postoju na głębokości pięciu metrów) i w ostatniej sesji wszystko było już pod kontrolą.</p>
<p><img src="https://farm6.static.flickr.com/5282/5337340694_664daecdc0.jpg" alt="widok podczas porannego snorklowania"></p>
<p>Właśnie snorklowanie będzie chyba najprzyjemniejszym wspomnieniem z tej dwudniowej wycieczki. Po części za sprawą kłopotów z zatokami, które nasiliły się podczas nocnego nurkowania i wyeliminowały mnie z porannej sesji. Zatoki są przestrzenią wewnątrz ciała, w których podczas zmiany głębokości ciśnienie powietrza nie wyrównuje się w sposób naturalny i trzeba mu w tym pomagać – jedną z metod jest zatykanie nosa i próba wydmuchnięcia przezeń powietrza, co skutkuje wpompowaniem go do zatok. Jest to bardzo skuteczne, o ile nie ma się kataru, a ta właśnie przypadłość towarzyszyła mi od wylotu z Wietnamu. Kolejne zanurzenia drugiego dnia odbyłem mimo tego bez większych kłopotów, z ostatniego niespodziewanie odpadła za to Ania – również z powodu problemu z zatokami. Najwyraźniej nie jesteśmy urodzonymi płetwonurkami. Tym niemniej, pięć nurkowań w 24 godziny to sporo, a i snorklowanie, które uprawialiśmy w czasie rekonwalescencji, należało do bardzo udanych.</p>
]]></content:encoded></item><item><title>Powrót do cywilizacji</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/powr%C3%B3t-do-cywilizacji/</link><pubDate>Mon, 03 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/powr%C3%B3t-do-cywilizacji/</guid><description>Zakończyliśmy już azjatycką część naszej przygody. Po Sylwestrze w Sajgonie i pożegnaniu z Trungiem i Justyną, pierwszego stycznia rano zapakowaliśmy się w samolot do Singapuru, skąd, tego samego dnia wieczorem, wylecieliśmy do Australii.
Siedząc w Starbucksie w Plaza Singapura i wyglądając na zalaną deszczem Orchard Road czułem się zabawnie. W mieście tym gościłem przez dwa tygodnie ponad trzy lata temu i nie powiedziałbym, że się w jakikolwiek sposób z nim zżyłem, jednak teraz, po czterech tygodniach podróży przez kompletnie obce miejsca czułem się jakbym po raz pierwszy od piętnastu lat odwiedzał budynek swojej podstawówki.</description><content:encoded><![CDATA[<p>Zakończyliśmy już azjatycką część naszej przygody. Po Sylwestrze w Sajgonie i pożegnaniu z Trungiem i Justyną, pierwszego stycznia rano zapakowaliśmy się w samolot do Singapuru, skąd, tego samego dnia wieczorem, wylecieliśmy do Australii.</p>
<p>Siedząc w Starbucksie w Plaza Singapura i wyglądając na zalaną deszczem Orchard Road czułem się zabawnie. W mieście tym gościłem przez dwa tygodnie ponad trzy lata temu i nie powiedziałbym, że się w jakikolwiek sposób z nim zżyłem, jednak teraz, po czterech tygodniach podróży przez kompletnie obce miejsca czułem się jakbym po raz pierwszy od piętnastu lat odwiedzał budynek swojej podstawówki. Pamięć w detalach szwankuje, wiele się od ostatniej wizyty zmieniło, w około są sami nieznajomi, ale ma się poczucie jakiegoś rodzaju swojskości. Całkiem to przyjemne.</p>
<p>Przyjemny jest też powrót do po zachodniemu rozumianej cywilizacji: możliwości porozumienia się inaczej niż na migi, ustalonych cen, rozkładów jazdy, ładu, higieny… żadnej z tych rzeczy w Singapurze nie brakuje, jest to jedno z najbardziej uporządkowanych miejsc jakie dane mi było odwiedzić.</p>
<p><img src="https://farm6.static.flickr.com/5005/5318365660_0232b7c9bb.jpg" alt="wagon metra w Singapurze"></p>
<p>Spędziliśmy w mieście tylko kilka godzin między jednym a drugim lotem, ale wystarczyło to na częściową przynajmniej regenerację przeładowanego aparatu poznawczego.</p>
<p>Australia natomiast to w ogóle taka Anglia w której ktoś zapomniał zgasić światło i napuścić ludzi, przez co jest jasno, gorąco, dużo przestrzeni, a mieszkańcy zadowoleni i wyluzowani. Poza tym, ten sam język (nawet akcent nie jest tak udziwniony jak u Nowozelandczyków), takie same centra handlowe, w nich te same sieci sklepów – zupełnie jak w domu. Wiąże się z tym jedna tylko nieprzyjemność, mianowicie ceny. Te, dla przybyszów z Azji południowo-wschodniej, mogą być szokujące. Tam 15$ wystarczało z reguły na nocleg i wyżywienie dla dwóch osób na jeden dzień, tutaj w tej cenie trudno znaleźć jedno łóżko na sali zbiorowej. Sytuację pogarasza fakt, że od czasu, kiedy planowaliśmy podróż po Australii, tutejsza waluta bardzo się umocniła i faktyczny koszt np. wynajęcia samochodu będzie wyższy niż nasze wstępne wyliczenia. Jakoś sobie z tym poradzimy; trzeba będzie przypomnieć sobie techniki oszczędnościowe opracowane podczas InterRaila czy objazdu Norwegii. Wyjazdy te wspominam ciepło po dziś dzień, nie mogło więc być aż tak źle – i teraz także nie będzie.</p>
]]></content:encoded></item><item><title>Rzemieślnicza Republika Wietnamu</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/rzemie%C5%9Blnicza-republika-wietnamu/</link><pubDate>Sat, 01 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/rzemie%C5%9Blnicza-republika-wietnamu/</guid><description>Diamond Shopping Mall znajduje się przy jednej z najbardziej reprezentacyjnych ulich Sajgonu, biegnącej od frontu Pałacu Zjednoczenia. Na parterze tego ekskluzywnego centrum handlowego kupić można perfumy Chanel, Gucci i innych cenionych marek. Kolejne piętra oferują ubrania od najsłynniejszych projektantów, zegarki Rolex i Omega i inne luksusowe akcesoria. Podobnie jak marki, ceny są dla przybysza z Zachodu znajome: od dziesiątków dolarów za flakony perfum po tysiące za kreacje i zegarki.
Dwudziestominutowy spacer na południe, najpierw ulicą Pasteura a później w prawo, w Le Loi, zaprowadzi nas do Bien Thanh.</description><content:encoded><![CDATA[<p>Diamond Shopping Mall znajduje się przy jednej z najbardziej reprezentacyjnych ulich Sajgonu, biegnącej od frontu Pałacu Zjednoczenia. Na parterze tego ekskluzywnego centrum handlowego kupić można perfumy Chanel, Gucci i innych cenionych marek. Kolejne piętra oferują ubrania od najsłynniejszych projektantów, zegarki Rolex i Omega i inne luksusowe akcesoria. Podobnie jak marki, ceny są dla przybysza z Zachodu znajome: od dziesiątków dolarów za flakony perfum po tysiące za kreacje i zegarki.</p>
<p>Dwudziestominutowy spacer na południe, najpierw ulicą Pasteura a później w prawo, w Le Loi, zaprowadzi nas do Bien Thanh. Asortyment jest tu bardzo podobny: ubrania, buty, perfumy i zegarki luksusowych marek. Charakter miejsca jest jednak znacznie bardziej azjatycki: zatłoczony bazar ze sprzedawcami nagabującymi przechodzących turystów i wąskimi alejkami między stoiskami. Ceny również zupełnie inne niż w odwiedzonym przed chwilą mallu: perfumy po kila dolarów, zegarki Patek Philippe, za które uprzywilejowana garstka krezusów płaci bajońskie sumy, tu oferowane są w przystępnych dla plebsu cenach kilkunastu do kilkudziesięciu dolarów.</p>
<p>Przepaść, jaka dzieli ceny tych identycznych niemal dóbr jest groteskowa i uświadamia do jak ulotnych i błahych rzeczy przywiązujemy wagę, przynajmniej tę wyrażaną za pośrednictwem naszych portfeli. Logo producenta, fakt, że torba uszyta została we Francji a nie w Chinach, sama świadomość, że coś jest “oryginalne” powodują, że gotowi jesteśmy zapłacić za przedmiot wielokrotnie więcej. Jakość? Owszem, część podróbek jest tandetna i nie dość, że na pierwszy rzut oka można je zidentyfikować, to ich trwałość miast w latach liczy się w dniach; jednakże w przypadku wielu produktów, jak ubrania czy okulary słoneczne, nic nie stoi na przeszkodzie, żeby stworzyć idealną kopię, przy użyciu tych samych materiałów i technik produkcji co oryginał, i sprzedawać ją za ułamek ceny tegoż. Ba, nawet tradycyjne mechaniczne zegarki, to uosobienie precyzji i kunsztu technicznego, podrobić dziś można tak, że funkcjonalnie różnicy nie ma – mechanizm jest, działa równo, materiały są doskonałej jakości i tylko ekspert odróżniłby kopię od oryginału. Tymczasem cena odzwierciedla faktyczny koszt produkcji i pozbawiona jest komponentu związanego z prestiżem marki – a także, oddając sprawiedliwość producentom oryginałów, komponentu odzwierciedlającego koszt zaprojektowania produktu; ostatecznie ktoś te rzeczy wymyślił, szlachetne kształty i zapachy to owoc czyjegoś talentu i ciężkiej pracy.</p>
<p>Dla mnie owe podróbki, szczególnie te bardziej wyrafinowane, są nie tylko wyrazem przedsiębiorczości Wietnamczyków i ich braku poszanowania dla własności intelektualnej, ale przede wszystkim odzwierciedleniem olbrzymich pokładów rzemieślniczego talentu, umiejętności produkowania pięknych rzeczy. Zresztą, zapomnijmy o kopiach produktów znanych marek, były one tylko pretekstem, wprowadzeniem do tematu i nie chciałbym wywołać wrażenia, że zapamiętałem Wietnam jako kraj, w którym można kupić Roleksa za dziesięć dolarów. Nie; Wietnam to dla mnie kraj koronkowych zdobień wyrzeźbionych w drewnie, rozmaitości kolorów, tkanin i wzorów, pięknie wykończonych budowli i efektownych mebli, precyzyjnie wykonanych modeli żaglowców z tysiącem szczegółów i szczególików – słowem, wszelkiej maści manifestacji kunsztu rzemieślniczego. Wystarczy przespacerować się uliczkami starego miasta w Hanoi, gdzie z setek sklepików z pamiątkami wyzierają drewniane pudełka, zestawy płytek do madżonga, figurki, torebki, kolczyki, bransoletki, szale, instrumenty muzyczne… owszem, sama ilość tych przedmiotów wylewająca się ze sklepów i kramów powoduje, że przestają one zachwycać a zaczynają irytować, że dostrzega się pospolitość i kicz niektórych pamiątek, owszem, wzory są powtarzalne do bólu – jednak biorąc do ręki te rzeczy nie sposób nie czuć podziwu dla osób, które wystrugały figurki, ulepiły i pomalowały czajniczki czy wyhaftowały scenki rodzajowe. Poza tym większość z nich jest naprawdę ładna, co w przemyśle pamiątkarskim stanowi ewenement na skalę światową.</p>
<p><img src="https://farm6.staticflickr.com/5164/5290598494_1bc5306eeb.jpg" alt="https://farm6.staticflickr.com/5164/5290598494_1bc5306eeb.jpg"></p>
<p>Rzemieślniczy Wietnam widać nie tylko w drobnych suwenirach. Współczesne budynku użyteczności publicznej, jak restauracje czy hoteliki, mają częstokroć wnętrza bogato okraszone drewnianymi rzeźbieniami, które – jak sie domyślam – stanowią przykład tradycyjnej wietnamskiej sztuki zdobniczej. W tychże hotelach i restauracjach natknąć się można na masywne, wykonane ze szlachetnego drewna i znakomitej jakości kamienia meble, o prostych, lecz efektownych kształtach. Powszechność pięknych, kunsztownych form powoduje, że Wietnam jawi się jako kraj pełen osób o niezwykłych zdolnościach manualnych, być może nie biegłych w tworzeniu, lecz przynajmniej w najwyższych lotów odtwarzaniu. Kambodża i Laos oferują podobnego typu rękodzieło, jednak jakość produktów z tych krajów ani się umywa do tego, co zobaczyć można w Wietnamie.</p>
<p>Skoro jesteśmy już przy porównaniach z zachodnimi sąsiadami: również w innych sferach Wietnam jawi się przy Kambodży i Laosie jako starszy brat. Jest pod pewnymi względami bardzo podobny, jednak znacznie zamożniejszy, bardziej ruchliwy; Phnom Penh i Vientiane to przy Hanoi i Sajgonie prowincjonalne miasteczka. Także kuchnia wietnamska jest bardziej zróżnicowana, ma bardziej wyrazisty charakter i jest po prostu smaczniejsza.</p>
<p>Inne wrażenie, które pozostawił we mnie Wietnam, to braku czasu, żeby zobaczyć to, co zobaczyć by się chciało. Cóż, podczas naszej tam wizyty pogodzić i wyważyć trzeba było wiele spraw: nasze oraz Marty i Kuby harmonogramy i budżety, Trunga czas poświęcony na spotkania z krewnymi, na wprowadzanie Justyny do grona rodziny oraz na zajmowanie się nami. W sytuacji, gdy tyle sprzecznych nieraz interesów wymagało uzgodnienia, cieszyć się należy z tego, że w stosunkowo krótkim czasie udało nam się zobaczyć kilka fascynujących miejsc w tym ogromnym kraju, że spędziliśmy trochę czasu w gronie, w którym rzadko mamy okazję sie spotkać, i że poznaliśmy w jakimś stopniu wietnamską kulturę i lokalny charakter.</p>
]]></content:encoded></item><item><title>Z Hanoi do Sajgonu</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/z-hanoi-do-sajgonu/</link><pubDate>Fri, 31 Dec 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/z-hanoi-do-sajgonu/</guid><description>Pisanie niniejszego sprawozdania wyglądać miało tak, że po dniu zwiedzania, usadowiwszy się w pokoju hotelowym, przez dwie lub trzy godziny spisuję wrażenia i przemyślenia w ciekawej i pomysłowej formie. Rzeczywistość okazuje się nieco inna; za wyjątkiem Don Khon i Vientiane, gdzie mieliśmy parę dni wytchnienia, reszta wycieczki to maraton: zwiedzanie, szukanie hoteli, szukanie transportu do następnego miejsca, jazda autobusami itd. Trudno wykroić wystarczającą ilość czasu żeby pomyśleć jak i o czym napisać – pozostaje pożegnać się z inteligentną formą i po prostu notować naprędce to, co się wydarzyło – zanim się wszystko pozapomina.</description><content:encoded><![CDATA[<p>Pisanie niniejszego sprawozdania wyglądać miało tak, że po dniu zwiedzania, usadowiwszy się w pokoju hotelowym, przez dwie lub trzy godziny spisuję wrażenia i przemyślenia w ciekawej i pomysłowej formie. Rzeczywistość okazuje się nieco inna; za wyjątkiem Don Khon i Vientiane, gdzie mieliśmy parę dni wytchnienia, reszta wycieczki to maraton: zwiedzanie, szukanie hoteli, szukanie transportu do następnego miejsca, jazda autobusami itd. Trudno wykroić wystarczającą ilość czasu żeby pomyśleć jak i o czym napisać – pozostaje pożegnać się z inteligentną formą i po prostu notować naprędce to, co się wydarzyło – zanim się wszystko pozapomina.</p>
<p>Na pokonanie około dwóch tysięcy kilometrów, które dzielą stolicę Wietnamu od największego w tym kraju miasta, mieliśmy cztery dni. W ich trakcie chcieliśmy nie tylko dotrzeć z północy na południe, ale też obejrzeć po drodze kilka ciekawych miejsc. Ze wstępnego planu pominąć ostatecznie musieliśmy jedno: zabytkowe miasto Hoi An, gdzie dotarliśmy około 18, i skąd już pół godziny później musieliśmy wyjeżdżać. Atrakcje, które udało się nam zaliczyć, to:</p>
<h2 id="tunele-vinh-moc">Tunele Vinh Moc</h2>
<p>W trakcie wojny mieszkający nad morzem niopodal miasta Dong Ha wieśniacy, aby mieć gdzie chronić się przed amerykańskimi nalotami, wydrążyli pod ziemią setki metrów tuneli, w których między 1966 a 1972 zamieszkiwała cała wioska. Tunele położone są na głębokości od 10 do ponad 20 metrów, na szerokość mają nie więcej niż 80 cm a wysokość między półtora a dwa metry. W ścianach znajdują się wnęki, w kŧórych żyły rodziny, mieścił się szpital, sala porodowa (urodziło się tam podobno siedemnaścioro dzieci), łazienki. Do zwiedzania udostępniona jest tylko część sieci tuneli, ale i to robi spore wrażenie, zarówno za sprawą skali przedsięwzięcia jak i warunków, w jakich ich mieszkańcom przyszło przez lata egzystować: niewątpliwie doskwierała im ciasnota, brak świeżego powietrza i naturalnego światła – schronienie opuszczać mogli tylko nocą.</p>
<p>Do znajdujących się na odludziu tuneli dotarliśmy z Dong Ha na motorkach. Moje drugie podejście do prowadzenia tego najpopularniejszego w Azji południowo-wschodniej środka transportu przyniosło wyzwania w postaci nożnej zmiany biegów (poprzednio, w <a href="/travel/wyprawa-2010-11/park-narodowy-khao-yai/">Khao Yai</a>, jechałem jednobiegowym skuterem) oraz wietnamskiego ruchu drogowego, który jest znacznie gęstszy i mniej przewidywalny niż w innych miejscach, które odwiedzaliśmy. Szczęśliwie osiemdziesięciokilometrowa trasa okazała się bezproblemowa, połowa jej wiodła mało uczęszczaną i malowniczą drogą poprowadzoną wśród pól ryżowych.</p>
<p><img src="https://farm6.staticflickr.com/5007/5305465996_9ddf84c7be.jpg" alt="https://farm6.staticflickr.com/5007/5305465996_9ddf84c7be.jpg"></p>
<h2 id="cytadela-w-hue">Cytadela w Hue</h2>
<p>Na początku XIX w. założyciel dynastii Nguyenów przeniósł stolicę do Hue i wybudował wielką, otoczoną murami i fosą cytadelę, w której mieściło się całe miasto. W jej wnętrzu znalazł się kolejny fort, z własnymi murami i fosą, który mieścił budynki rządowe – wśród nich wzorowane na pekińskim zakazanym mieście “purpurowe zakazane miasto”, czyli prywatną rezydencję władcy. Większość tej części cytadeli spłonęła w 1947 roku, w trakcie wojny z Francją o niepodległość. Budynki są obecnie odtwarzane, ale większość powierzchni dawnej rezydencji pokrywają ruiny i trawa. Pozostała część zewnętrznej cytadeli to normalnie dziś funkcjonujące miasto – tyle, że oddzielone od reszty Hue murami i fosą.</p>
<h2 id="wydmy-w-mui-ne">Wydmy w Mui Ne</h2>
<p>Jazda z Hue do Mui Ne trwała 24 godziny, wiązała się z dwiema przesiadkami i nie należała do przyjemnych. Szczęśliwie jesteśmy już tylko niecałe 300 km od Sajgonu, i w Wietnamie czeka nas już tylko pokonanie jednego autobusowego odcinka. Mui Ne okazało się znacznie bardziej skomercjalizowane niżeśmy to sobie rysowali po lekturze przewodników – tam przedstawiane było trochę jak zapomniana wioska z ładną plażą, zastaliśmy tymczasem nadmorski kurort gdzie plaży nie widać zza szeregu hoteli, ruch na głównej ulicy jest niemal jak w Hanoi, ceny europejskie a w knajpach pełno Rosjan. Warto tu jednak było przyjechać dla znajdujących się 40 km od miasteczka piaskowych wydm. Dotarliśmy do nich znów na wynajętych motorowerach – tym razem dopadł nas pech i złapałem gumę, na szczęście tuż przy wydmach był warsztat gdzie za 5 dolarów (stargowane z 20) naprawili dętkę.</p>
<p>Wydmy nazywane są “wietnamską Saharą”, i rzeczywiście, idąc po nich przez pewien czas na horyzoncie nie widać nic prócz usypanych z piasku pagórków – bardzo to efektowne. Przedsiębiorczy miejscowi na początku trasy wynajmują plastikowe maty, na których można z wydm zjeżdżać. Ze względu na współczynnik tarcia piasku osiągane prędkości znacznie ustępują tym, do których przyzwyczaił nas śnieg, ale zabawa i tak jest niezła, a na pamiątkę we wszystkich częściach garderoby i na wszystkich odkrytych częściach ciała pozostają kilogramy drobnego, żółtego piasku.</p>
<p><img src="https://farm6.staticflickr.com/5048/5304906793_cc243e3b98.jpg" alt="https://farm6.staticflickr.com/5048/5304906793_cc243e3b98.jpg"></p>
]]></content:encoded></item><item><title>Wigilia w Hanoi</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/wigilia-w-hanoi/</link><pubDate>Mon, 27 Dec 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/wigilia-w-hanoi/</guid><description>Aż trudno uwierzyć, że od naszego przylotu do Hanoi minęły tylko trzy dni. Tyle się w tym czasie wydarzyło, że trudno wszystko spamiętać, obawiam się więc, że niniejsze sprawozdanie będzie sprawiało wrażenie poszatkowanego i przeładowanego – spróbujmy jednak zrelacjonować co najważniejsze. Trung, gdy się z nim umawialiśmy na spotkanie, stwierdził, że “mama wszystko załatwi”. Nie wiedzieliśmy czego się spodziewać; przed naszym wylotem z Vientiane do Hanoi dowiedzieliśmy się jedynie, że hotel mamy już załatwiony i opłacony – o zwrocie kosztów mowy nie było – i żeby tam się po przylocie udać.</description><content:encoded><![CDATA[<p>Aż trudno uwierzyć, że od naszego przylotu do Hanoi minęły tylko trzy dni. Tyle się w tym czasie wydarzyło, że trudno wszystko spamiętać, obawiam się więc, że niniejsze sprawozdanie będzie sprawiało wrażenie poszatkowanego i przeładowanego – spróbujmy jednak zrelacjonować co najważniejsze. Trung, gdy się z nim umawialiśmy na spotkanie, stwierdził, że “mama wszystko załatwi”. Nie wiedzieliśmy czego się spodziewać; przed naszym wylotem z Vientiane do Hanoi dowiedzieliśmy się jedynie, że hotel mamy już załatwiony i opłacony – o zwrocie kosztów mowy nie było – i żeby tam się po przylocie udać. Uprzedzając nieco fakty i szczegóły: gościnność rodziców Trunga przekroczyła nasze najśmielsze oczekiwania. Zaplanowali dla nas cały pobyt w Hanoi i okolicach, zorganizowali wszystkie hotele, przejazdy i atrakcje, dbali o to, żebyśmy jedli często, dużo i dobrze, Wszystko też nam fundowali.</p>
<p><img src="https://farm6.static.flickr.com/5207/5296322621_0a29dee65f.jpg" alt="zatoka Halong"></p>
<p>Po prowincjonalnych dość stolicach Kambodży i Laosu Hanoi okazało się miastem bardzo dużym i ruchliwym. Zweryfikować zmuszony byłem swoje wrażenia odnośnie ruchu ulicznego w tej części Azji – w Hanoi jest on chaotyczny, ale w odróżnieniu od Vientiane i Phnom Penh nie sprawia wrażenia bezpiecznego. My po mieście i okolicach wożeni byliśmy przez szofera rodziców Trunga i przyznać trzeba, że zatrudnianie kierowcy w Hanoi nie jest czystym luksusem, ale rozwiązaniem niezwykle praktycznym. Szofer poruszał się w gęstym i nieprzewidywalnym ruchu bardzo sprawnie i dowoził nas do kolejnych zaplanowanych przez mamę Trunga atrakcji w tempie, które trudno by nam było osiągnąć podróżując na własną rękę. W “ceramicznej wiosce” Zobaczyliśmy cały proces produkcji ceramiki, od formowania kształtów, przez suszenie, malowanie i wypalanie. Odwiedziliśmy najstarszy uniwersytet, tzw. “świątynię literatury” oraz muzeum etnograficzne, w międzyczasie konsumując bardzo dobre Pho – popularne wietnamskie danie, taki lekki rosół z kluskami. Przespacerowaliśmy się też po sklepach starego miasta – i to wszystko w ciągu jednego dnia!</p>
<p>Ale na tym nie koniec. Wieczorem spotkaliśmy się wszyscy – nasza czwórka, Trung z Justyną i rodzicami oraz dwiema kuzynkami – na kolacji wigilijnej, która miejsce miała w restauracji, gdzie gigantyczny bufet oferował dziesiątki potraw, głównie azjatyckich. Zamiast karpia wcinałem więc rybę w ostrym sosie z trawą cytrynową, zamiast klusek z makiem – ciasteczka ryżowe, zamiast uszek do barszczu – ucho świńskie, w sajgonce. Wróbelka smażonego w całości w głębokim oleju, z racji jarsko-rybnych tradycji polskiej wieczerzy wigilijnej, oszczędziłem.</p>
<p><img src="https://farm6.static.flickr.com/5048/5290031657_993be90784.jpg" alt="ekipa po kolacji wigilijnej"></p>
<p>Pierwszego dnia świąt wybraliśmy się do zatoki Halong. Wspomnieć tu wypada, że, podobnie jak ruch motorowerowo-samochodowy, pogoda zmieniła się po naszym przylocie do Hanoi diametralnie. Ze słonecznych trzydziestu stopni zrobiło się pochmurne piętnaście. Opatuleni we wszystkie nasze ciepłe ciuchy wsiedliśmy na łódkę, która w całości wynajęta została dla naszej, dziewięcioosobowej tym razem, ekipy. Wkrótce po wypłynięciu otoczył nas baśniowy krajobraz wystających z wody kopcowatych skał. Muszę jednak przyznać, że bardziej niż widoki – na te byłem w pewnej mierze przygotowany, poza tym pochmurna aura niekoniecznie eksponowała w krajobrazie to, co w nim najlepsze – z wycieczki zapamiętałem jedzenie. Jakiś czas po wypłynięciu dotarliśmy do osiedla składającego się z tratw pływających po zatoce. Po zejściu na tratwy okazało się, że w ich wnętrzu są ogrodzone siatką baseny, w których roi się od wszelkiego rodzaju zwierzątek morskich: ryb, krabów, krewetek, langust, kalmarów, rozgwiazd i małż. Wybraliśmy tam – a właściwie wybrano za nas, bo z naszym znikomym doświadczeniem trudno nam się było zdecydować – nasz obiad. Składało się nań kilka kilo krabów, krewetek i langust oraz siedmiokilowa ryba. Załadowaliśmy to wszystko na nasz statek i po upływie trzydziestu minut na stoły wjechały pierwsze dania: gotowane langusty, krewetki i kraby, później upieczona ryba i zupa rybna, do tego ryż i pyszne sosy. Mam na ogół pewne opory przed jedzeniem żyjątek takich jak kraby, w których aby dobrać się do części jadalnej trzeba walczyć z niezbyt apetycznymi wnętrznościami i zewnętrznościami, ale tym razem jakoś mi to wszystko nie przeszkadzało i był to jeden z najpyszniejszych posiłków jakie kiedykolwiek jadłem.</p>
<p>Wracając do portu zajrzeliśmy jeszcze do jaskini w jednej z tych skalistych wysepek. Tak jej rozmiary jak i mieszczące się w niej kolumny stalaktytów i stalagmitów były imponujące, ale wrażenie psuło kolorowe oświetlenie i tłumy zwiedzających – była to najpopularniejsza chyba jaskinia jaką zwiedza się podczas jednodniowych wycieczek po zatoce.</p>
<p><img src="https://farm6.static.flickr.com/5289/5296924352_a25c8cdc99.jpg" alt="stalaktyty w jaskini na zatoce Halong"></p>
<p>Dnia kolejnego (czyli drugiego dnia świąt) wracaliśmy do Hanoi: my z Martą i Kubą na dworzec kolejowy, Justyna z Trungiem i rodziną do nich do domu. Jeszcze przed wyjazdem tata Trunga zabrał nas na znajdujące się nad zatoką wzgórze, które niedawno odkupił od wojska. Rozciąga się z niego wspaniały widok i pomysł Nguyena seniora jest taki, żeby zbudować tam hotel. W drodze powrotnej zatrzymaliśmy się na obiad w restauracji (znów do naszej dyspozycji mieliśmy całą salę jadalną i znów rodzice Trunga fundowali), gdzie prócz znakomitego jedzenia zaserwowano nam repertuar wietnamskich pieśni ludowych, wykonywanych na żywo. Początkowo wychodziło to tak sobie, bo wykonwcy śpiewali przez system nagłaśniający, który dodawał koszmarny pogłos, tak, że nie tylko przeszkadzało to nam w słuchaniu, ale i wokalistom w śpiewaniu. W końcu jednak rodzice Trunga przekonali ich, by śpiewali <em>a cappella</em>, i efekt był naprawdę interesujący – intonacja bardzo się poprawiła, usłyszeć też można było różne niuanse, np. w piosence z okolic Hue fragmenty frazy śpiewane były z zamkniętym gardłem.</p>
<h3 id="--">* * *</h3>
<p>Słowa te piszę w pociągu nocnym relacji Hanoi – Hue, przy dźwiękach kolęd w wykonaniu Camerata Silesia, co, przyznać musicie, stanowi dość niecodzienną kombinację.</p>
]]></content:encoded></item><item><title>Azja po dwóch tygodniach</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/azja-po-dw%C3%B3ch-tygodniach/</link><pubDate>Thu, 23 Dec 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/azja-po-dw%C3%B3ch-tygodniach/</guid><description>Vientiane jest zabawne. Ma fontanny, które włączane są tylko gdy nieopodal przejeżdżają kolumny samochodów z oficjelami, i Champs-Élysées z żelbetowym łukiem triumfalnym, w którym mieszczą się stragany z pamiątkami. Poza tym jest to miasto nad wyraz kameralne i spokojne. Lenimy się tu, wałęsając się po mieście, szukając biżuterii i ozdób do kostiumów tanecznych i nadrabiając zaległości we wgrywaniu zdjęć na Flickr. Korzystając z braku wydarzeń do zrelacjonowania podzielę się więc spostrzeżeniami dotyczącymi tego kawałka Azji, który do tej pory udało nam się zobaczyć.</description><content:encoded><![CDATA[<p>Vientiane jest zabawne. Ma fontanny, które włączane są tylko gdy nieopodal przejeżdżają kolumny samochodów z oficjelami, i Champs-Élysées z żelbetowym łukiem triumfalnym, w którym mieszczą się stragany z pamiątkami. Poza tym jest to miasto nad wyraz kameralne i spokojne. Lenimy się tu, wałęsając się po mieście, szukając biżuterii i ozdób do kostiumów tanecznych i nadrabiając zaległości we wgrywaniu zdjęć na Flickr. Korzystając z braku wydarzeń do zrelacjonowania podzielę się więc spostrzeżeniami dotyczącymi tego kawałka Azji, który do tej pory udało nam się zobaczyć.</p>
<h2 id="pogoda">Pogoda</h2>
<p>Jest ciepło i sucho. Ciepło, to znaczy na ogół ponad 30 stopni w cieniu, choć na <a href="/travel/wyprawa-2010-11/jedna-z-czterech-tysi%C4%99cy/">Don Khon</a> mieliśmy chwilowe ochłodzenie, kiedy to temperatura w dzień spadła do około 25, a w nocy wynosiła chyba poniżej 20. Sucho, to znaczy podczas ostatnich dwóch tygodni deszcz zaobserwowaliśmy dwa razy: potężna, lecz krótka, ulewa w <a href="/travel/wyprawa-2010-11/phnom-penh/">Phnom Penh</a> oraz niewielki deszcz na Don Khon.</p>
<h2 id="transport">Transport</h2>
<p>Wyjąwszy stopowanie i motorowery w <a href="/travel/wyprawa-2010-11/park-narodowy-khao-yai/">Khao Yai</a> oraz pociąg do Pak Chong, na dłuższych dystansach poruszamy się głównie autokarami. W turystycznych miejscach jest pełno sklepików – często funkcjonują one przy hotelach i restauracjach – organizujących bilety do wszystkich popularnych celów w promieniu dwóch dni drogi. Bilety na dystansach poniżej 1000 km kosztują w przedziale 9-25$ w zależności od popularności trasy i standardu pojazdu. Najczęściej poruszaliśmy się tzw. V.I.P. busami, które mają rozkładane siedzenia, klimatyzację i telewizor, który czasem na szczęście jest wyłączony; niekiedy zdarza się też działająca toaleta. Na trasach, których pokonanie zajmuje około 10 godzin, funkcjonują nocne autokary sypialne, które zamiast siedzeń mają łóżka. Jechaliśmy takim z Pakse do Vientiane; łóżka są bardzo wąskie, we dwoje z trudem się mieściliśmy na podwójnym, ale wyspać się można lepiej niż na zwykłych fotelach.</p>
<p><img src="https://farm6.static.flickr.com/5284/5284290659_790c5cd191.jpg" alt="na górze laotańska, przejściowa forma tuk tuka, z wciąż widoczną spuścizną po motocyklu; na dole w pełni wyewoluowany tuk tuk"></p>
<p>na górze laotańska, przejściowa forma tuk tuka, z wciąż widoczną spuścizną po motocyklu; na dole w pełni wyewoluowany tuk tuk</p>
<p>Poza Bangkokiem transport publiczny w miastach praktycznie nie istnieje. Taksówek samochodowych jest niewiele – tu znów Bangkok jest wyjątkiem – i często nie można ich łapać na ulicy, trzeba udać się na postój, na ogół jedyny w mieście, albo zatelefonować. W tej sytuacji głównym środkiem transportu pozostają tuk tuki. W zależności od kraju określenie to oznacza różne pojazdy, których cechą wspólną jest niewielki rozmiar i zadaszona, lecz poza tym otwarta, platforma z siedzeniami dla pasażerów z tyłu. Wyewoluowały one zapewne z motorowerów z przyczepkami (tak wyglądają tuk tuki kambodżańskie), poprzez przody od motocykli z dospawanymi z tyłu platformami pasażerskimi (zaobserwować je można w Laosie) aż po trójkołowe pojazdy, które z motocyklowymi przodkami nie mają z wyglądu wiele wspólnego (Tajlandia, Laos). Jazda takim wehikułem na dystansie kilku kilometrów kosztuje równowartość 2-5 dolarów. Pojazdy te spotkać można zawsze pod hotelami i w miejscach odwiedzanych przez turystów. Kierowcy nagabują przechodniów i na ogół podają zawyżone ceny, tak że zawsze opłaca się negocjować. Inna możliwość transportu dla jednej lub dwóch osób poruszających się bez większego bagażu to “moto”, czyli gość podwożący gdzie trzeba motorowerem. Ania z Martą jechały takim w Phnom Penh i były chyba zadowolone. W większości turystycznych miejsc można też wypożyczyć rowery (1-2$ za dzień).</p>
<h2 id="noclegi">Noclegi</h2>
<p>Miasta albo w całości są zagłębiami hotelowymi (Siem Reap) albo takowe posiadają w okolicach atrakcji turystycznych (Khao San w Bangkoku, Riverside w Vientiane etc.). Ceny za noc zaczynają się od 5$ i w niektórych miejscach (Phnom Penh na przykład) za tę kwotę dostać można całkiem przyzwoity pokoik, z wiatrakiem (czyli bez klimatyzacji) i z własną łazienką. Generalnie jednak standardy i ceny różnią się znacznie w zależności od miejsca i poszukując pokoju w turystycznych gettach jest się skazanym na jakieś kompromisy – albo pokój bez okna, albo bez łazienki, albo bez Internetu, albo drogi…</p>
<p>Podróżując z Martą i Kubą, którzy budżetu pilnują z żelazną dyscypliną, zamieszkiwaliśmy w najtańszych guest housach (tak tu mówią na małe hoteliki). W Laosie trochę się rozochociliśmy i na Don Khon oraz w Vientiane zatrzymaliśmy się w hotelach z nieco wyższej półki – głównie dlatego, że nie mieliśmy tu w planach intensywnego zwiedzania i spodziewaliśmy się, że pokoju hotelowym będziemy spędzali stosunkowo dużo czasu, dobrze więc, żeby było to miejsce gdzie przyjemnie jest przesiadywać. Hoteliki standardem przypominają to, co spotkać można w Europie, jedyna różnica to łazienki, gdzie prysznic nie jest na ogół oddzielony żadną zasłoną ani kabiną, tak że przy myciu dostaje się całej łazience. W pokojach bez klimatyzacji na ogół nie ma też ciepłej wody.</p>
<h2 id="jedzenie">Jedzenie</h2>
<p>Autentyczne lokalne potrawy najłatwiej znaleźć na ulicy, zwłaszcza wieczorem. Na chodnikach rozstawiają się wtedy stragany z grillami na których pieką się kurczaki i ryby, wokami w których smażą się warzywa i nudle i wielkimi garami z zupą. Zjeść można na miejscu, siedząc na plastikowych krzesełkach przy plastikowych stolikach, albo wziąć na wynos – jedzenie dostaje się wtedy w foliowej torebce, zjedzenie z niej zupy wymaga pewnej gimnastyki. Takie przenośne, czy też przewoźne stoiska zobaczyć czasem można gdy się przemieszczają – mają wtedy formę szklanej gabloty na kółkach, przypiętej z boku albo z przodu do roweru lub motoroweru.</p>
<p><img src="https://farm6.static.flickr.com/5007/5284286163_f8058b5f68.jpg" alt="uliczny stragan z jedzeniem"></p>
<p>uliczny stragan z jedzeniem</p>
<p>Kolejny stopień w hierarchii gastronomicznej stanowią kafejki, które serwują zasadniczo to samo (i w podobnych cenach), co przewoźne stragany, ale dysponują własnym lokalem – na ogół jest to po prostu wiata lub taki jakby garaż na parterze budynku. Są w końcu i “prawdziwe” restauracje, skierowane głównie do bardziej zamożnych turystów. W tych serwujących dania kuchni lokalnej jedzenie bywa bardzo dobre i nie zawsze kosztuje majątek.</p>
<p>No właśnie, jedzenie: w większości przypadków jest to albo ryż z czymś, albo kluski z czymś, albo zupa (wywar z kości i mięsa) z kluskami i z czymś. Ja byłem trochę rozczarowany, bo spodziewałem się masy aromatów, przypraw, superostrych sosów i rozmaitości niespotykanych w Europie warzyw, tymczasem to, co tu w tych prostych straganach i jadłodajniach serwują do złudzenia przypomina dania z noodle house’u na Greenwich, koło Cutty Sark. Tych azjatyckich specjałów, których namiastki tak smakowały mi zawsze w londyńskich tajskich knajpach, szukać chyba trzeba tu w restauracjach z wyższej nieco półki; uliczne stragany tymczasem to przecież odpowiednik zachodnich budek z hot dogami – i gdy się o tym pamięta wcale nie wypadają tak blado. W szczególności wybór, jaki oferują, jest ogromny. Większość tego, co serwują, jest dla zachodniego turysty zupełnie strawne; co najwyżej czasem natknąć się można na fragmenty nie uważane u nas za jadalne, jak głowa kurczaka, która zapodziała się gdzieś w potrawce z tego zwierzęcia. Pieczone tarantule, które kupić można było na ulicznym straganie w Siem Reap, to chyba tylko ciekawostka dla turystów – nie widziałem, żeby aborygeni się tym zajadali.</p>
<p>Prócz wody, którą z racji panujących temperatur wchłania się tu w znacznych ilościach, nasza dieta płynna składa się głównie z owocowych szejków i piwa. Te pierwsze to wybrane owoce (my na ogół bierzemy banany, popularne są też ananas i papaja) zmiksowane z lodem, czasem, w bardziej luksusowych wersjach, również z mlekiem lub z jogurtem. Kosztują, w zależności od miejsca, od pół do dwóch dolarów i są bardzo smaczne. Piwo jest w Azji stosunkowo drogie (1-2$ za dużą, 640 ml butelkę) i niezbyt dobre. Każdy kraj ma dwie lub trzy popularne marki. Tajskie to Singha, Leo, i jeszcze jedno, którego nazwa mi umknęła, kambodżańskie to Angkor zaś laotańskie to Namkhong i Beer Lao – to ostatnie jest z wymienionych najsmaczniejsze.</p>
<p>W przewodnikach dużo się można naczytać o zagrożeniach związanych z brakiem higieny i badań produktów z których przyrządzane są potrawy. Istotnie, wokół leżącego na ladach jedzenia krążą nieraz chmary much a przenośne grille i gabloty nie sprawiają wrażenia starannie wyszorowanych. Tym niemniej w naszym przypadku obyło się jak na razie bez specjalnych problemów. Ja się lekko zatrułem raz, prawdopodobnie hotelowym śniadaniem, a żona, której żołądek jest bardzo delikatny, narzeka tylko czasem na bóle brzucha, ale większych awarii póki co uniknęła.</p>
<h2 id="ruch-uliczny">Ruch uliczny</h2>
<p>Elementem, który przyjezdnym Europejczykom wyda się bez wątpienia egzotyczny, jest ruch uliczyny w miastach. Po pierwsze, rodzaje pojazdów poruszających się po drogach: w przeważającej większości są to motorowery, z samochodów królują pickupy (wśród nich niekwestionowanym liderem jest Toyota Hilux). Typowych samochodów osobowych jest niewiele, duża część z tych, które jeżdżą, to taksówki, rowerów też nie widuje się często. Po drugie, sposób w jaki pojazdy te poruszają się: przy wyjeżdżaniu z ulicy podporządkowanej (o ile takie pojęcie w ogóle istnieje w tutejszym kodeksie drogowym) ruch z głównej ulicy przepuszcza się tylko jeśli jest naprawdę gęsty; w przeciwnym przypadku pojazd wyjeżdża licząc na to, że nadjeżdżające motorowery i samochody dostrzegą go i zwolnią, albo ominą. Przy skręcie w lewo powszechne jest zjeżdżanie na przeciwległy pas, o ile nic nim akurat nie jedzie. Często spotkać można motorowery jadące pod prąd: jeśli delikwent zatrzymał się po jednej ze stron drogi i chce się włączyć do ruchu po stronie przeciwnej, rusza w swoim kierunku poboczem lub skrajnym pasem tej strony, na której stał i czeka na dogodny moment do przejechania na właściwą. Klaksonów używa się niewiele, najczęściej stosują je na drogach poza miastem większe pojazdy, np. autokary, do ostrzegania wyprzedzanych motorowerzystów.</p>
<p>Brzmi to dość chaotycznie i niebezpiecznie, ale żadnych wypadków nie zaobserwowałem – dlatego chyba, że wszyscy jeżdża stosunkowo wolno i uważnie, spodziewając się zachowań takich, jak wymienione wyżej. Co więcej, nie miałem specjalnych problemów z dostosowaniem się do tych “reguł” zwiedzając Vientiane na rowerze. Małżonka moja, wykazując najwyraźniej więcej wyobraźni w kwestii drogowych niebezpieczeństw, podchodziła do tych manewrów z większą nieufnością i preferowała włączanie się do ruchu wtedy, gdy nie wymagało to wyjeżdżania tuż przed nadjeżdżające z przeciwka pojazdy.</p>
<h3 id="--">* * *</h3>
<p>Dziś (23 grudnia) wieczorem lecimy do Hanoi, gdzie spotkamy się z Martą i Kubą oraz Trungiem i Justyną.</p>
]]></content:encoded></item><item><title>Jedna z czterech tysięcy</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/jedna-z-czterech-tysi%C4%99cy/</link><pubDate>Sat, 18 Dec 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/jedna-z-czterech-tysi%C4%99cy/</guid><description>Właściciel wrócił po jakichś dwudziestu minutach. Na kierownicy motoroweru wisiała torba z jajkami i czymś, co wyglądało jak dynia. Ze świeżo zakupionymi wiktuałami udał się do znajdującej się za przepierzeniem z bambusowej plecionki kuchni i po chwili dało się słyszeć odgłosy przygotowywania naszego śniadania: naleśnika z ananasem i omletu z dynią. Siedzimy pod opartym na ażurowej konstrukcji z bambusowych pali dachem krytym ryżową słomą. Prócz nas w lokalu jest tylko dziesięcioletnia może córka właściciela, oglądająca w telewizji jakąś lokalną telenowelę i bawiąca się z małym kotem o przykrótkim, poskręcanym ogonie.</description><content:encoded><![CDATA[<p>Właściciel wrócił po jakichś dwudziestu minutach. Na kierownicy motoroweru wisiała torba z jajkami i czymś, co wyglądało jak dynia. Ze świeżo zakupionymi wiktuałami udał się do znajdującej się za przepierzeniem z bambusowej plecionki kuchni i po chwili dało się słyszeć odgłosy przygotowywania naszego śniadania: naleśnika z ananasem i omletu z dynią. Siedzimy pod opartym na ażurowej konstrukcji z bambusowych pali dachem krytym ryżową słomą. Prócz nas w lokalu jest tylko dziesięcioletnia może córka właściciela, oglądająca w telewizji jakąś lokalną telenowelę i bawiąca się z małym kotem o przykrótkim, poskręcanym ogonie. Z jakiegoś powodu wszystkie tutejsze koty są małe i mają niepełnosprawne ogony. Ania wyraża przypuszczenie, że są tak okaleczane, żeby utrudnić im polowanie na kurczaki, których stadka grzebią na poboczu piaszczystej drogi prowadzącej przez wioskę.</p>
<p>Naleśnik Ani przychodzi po 15 minutach, jest bardzo słodki, owoców jest w nim niewiele, ale polany jest obficie lekko skarmelizowanym, skondensowanym mlekiem. Ja po kolejnym kwadransie (dania najwyraźniej przygotowywane są jedno po drugim) zamiast omletu dostaję małą miseczkę czegoś pomiędzy zupą a dżemem dyniowym – podane na gorąco, dość słodkie i bardzo pikantne – do tego bagietkę. Na moje pytanie o omlet właściciel uśmiecha się przepraszająco i przy pomocy trzech angielskich słów, które zna, usiłuje mi wyjaśnić, że w jego języku omlet i zupa pisze się bardzo podobnie i że mu się pomyliło.</p>
<p><img src="https://farm6.static.flickr.com/5168/5270487683_f21d648a06.jpg" alt="domek na tratwie"></p>
<p>domek na tratwie</p>
<p>Jesteśmy w miejscu, gdzie tuż przed przekroczeniem granicy między Laosem a Kambodżą Mekong rozlewając się na szerokość kilkunastu kilometrów przepływa między wyspami i wysepkami, których, podobno, jest cztery tysiące. Nasza nazywa się Don Khon a sprowadziły nas na nią bliskość wodospadów, miejsc, gdzie zaobserwować można słodkowodne delfiny, stosunkowo – w porównaniu z sąsiednią Don Det – niewielka liczba turystów i obecność autentycznych, laotańskich wiosek. Wyspa jest niewielka, ma może cztery kilometry średnicy, najwygodniej poruszać się po niej na rowerach, które wynająć można w turystycznym centrum, w okolicach mostu łączącego Don Khon z Don Det. Nikomu się tu z niczym nie spieszy, właściciele interesów gastronomicznych wylegują się w cieniu na hamakach i gdy, z rzadka, zawita do nich jakiś klient, rozpalają piecyk z węglem drzewnym, idą kupić brakujące składniki zamówionych dań i przygotowują posiłek, który gotowy jest czasem po upływie pół godziny, czasem godziny – zależnie od liczby i stopnia skomplikowania potraw oraz od nastroju właściciela. Tak mógłby wyglądać dwadzieścia lat temu Tuchlin nad Bugiem, gdyby zamiast tamy na rzece wybuodowano wodospad i wpuszczono do niej trochę delfinów.</p>
<p><img src="https://farm6.static.flickr.com/5008/5271111140_718cdebb70.jpg" alt="podczas wyprawy na defliny"></p>
<p>podczas wyprawy na defliny</p>
<p>W okolicy Don Khon Mekong pokonuje na krótkim odcinku kilkadziesiąt metrów różnicy poziomów, tworząc spektakularne wodospady, największe w tej części Azji, mierząc w ilości przepływającej wody. Z wyspy zobaczyć można dwa: mniejszy po stronie wschodniej i większy, nazywany Somphamit, po stronie zachodniej, gdzie rwąca rzeka po tworzy w skałach głęboki kanion. Delfiny żyją poniżej wodospadów, w miejscu, gdzie dwie odnogi rzeki po połączeniu rozlewają się na szerokość ponad kilometra. Z łódki, którą wynajmuje się na wyspie, dostrzec można grzbiety delfinów gdy ssaki te wynurzają się by zaczerpnąć powietrza – nie podpływają jednak bliżej niż na dwadzieścia metrów, tak że widoki nie są oszałamiające.</p>
<p>Brzegi wyspy porośnięte są palmami kokosowymi, wewnątrz są pola ryżowe, palmowo-bambusowe lasy i małe wioski. Pastoralna idylla to jednak nie jest, przemysł turystyczny wdziera się drzwiami i oknami. Co krok konstruowane są nowe bungalowy pod wynajem, restauracyjek i guesthousów jest w części turystycznej kilkanaście, do tego są dość ekskluzywne – ceny bywają kilkakrotnie wyższe niż na “budżetowym” Don Det. Mieszkamy w domku zbudowanym na tratwie zacumowanej u brzegu wyspy, jest uroczy, lecz w ciągu dnia przed oknami kilka razy na godzinę przepływają łódki wożące turystów i towary między wyspami, ich silniki hałasują nieznośnie. Pływające domki (to ewenement w tej okolicy, większość turystycznych bungalowów stoi nad rzeką, na palach) są właśnie konwertowane na luksusowy ośrodek: drewniany płot zastępowany jest murem, stoi już jakiś basen, na razie pusty; ceny dostosowano jako pierwsze, i są trzy razy wyższe od tych podawanych w przewodniku, które już były na górnym krańcu backpackerskiej skali.</p>
<p>Pomimo tych niedogodności jest to całkiem niezłe miejsce na relaks, z czego korzystamy pozostając na wyspie przez cztery noce, spacerując i pijąc bananowe szejki, bardzo słodkie, ale pyszne. Rozstajemy się z Martą i z Kubą, którzy wyruszają w poszukiwaniu okolic Laosu nie tkniętych stopą masowego turysty; spotkamy się znów w Hanoi, gdzie planujemy być wieczorem 23 grudnia. Po drodze na kilka dni zatrzymamy się w stolicy Laosu, Vientiane, która przez przewodniki rekomendowana jest jako przyjemne i niewielkie miasto.</p>
<p><a href="https://flickr.com/gp/mmakowski/8toWai">4000 Islands</a></p>
]]></content:encoded></item><item><title>Phnom Penh</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/phnom-penh/</link><pubDate>Wed, 15 Dec 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/phnom-penh/</guid><description>Phnom Penh to druga, po Bangkoku, azjatycka stolica, którą przyszło nam odwiedzić. Jest od głównego miasta Tajlandii znacznie mniej turystyczna, kierowcy tuk tuków nie są natarczywi, można się przespacerować wzdłuż rzeki (w Bangkoku nabrzeże jest zabudowane) i generalnie jest jakby bardziej kameralnie, autentycznie i sympatycznie. Nas sprowadziły tu przede wszystkim dwie pamiątki po Czerwonych Khmerach: muzeum w osławionym więzieniu Toul Sleng i tzw. “pola śmierci” w Choeung Ek, pod miastem.</description><content:encoded><![CDATA[<p>Phnom Penh to druga, po Bangkoku, azjatycka stolica, którą przyszło nam odwiedzić. Jest od głównego miasta Tajlandii znacznie mniej turystyczna, kierowcy tuk tuków nie są natarczywi, można się przespacerować wzdłuż rzeki (w Bangkoku nabrzeże jest zabudowane) i generalnie jest jakby bardziej kameralnie, autentycznie i sympatycznie. Nas sprowadziły tu przede wszystkim dwie pamiątki po Czerwonych Khmerach: muzeum w osławionym więzieniu Toul Sleng i tzw. “pola śmierci” w Choeung Ek, pod miastem.</p>
<p>Muzeum położone jest dość blisko centrum. Więzienie stworzone zostało w budynku, który wcześniej pełnił funkcję szkoły. Część klas podzielono przy pomocy ścian z cegły lub desek na maleńkie cele, część była używana jako cele zbiorowe. Więźniowie byli przetrzymywani w nieludzkich warunkach, głodzeni, bici, okrutnie torturowani a na koniec mordowani. Oglądać można cele, galerie fotografii więźniów, narzędzia tortur oraz namalowane w prymitywistycznym stylu ilustracje procedur, którym poddawani byli więźniowie, czaszki z przykładami obrażeń zadanych podczas zabijania a także plansze informacyjne zawierające, między innymi, krótkie wywiady z byłymi Czerwonymi Khmerami.</p>
<p>Choeung Ek to wioska 15 km od Phnom Penh. Gdy teren Toul Sleng przestał wystarczać do grzebania pomordowanych, więźniów transportować zaczęto do skonstruowanego tu prowizorycznego obozu. Zabijani byli na ogół przez uderzenie w głowę lub szyję tępym, ciężkim narzędziem, czasem podrzynano im gardło. Ciała wrzucano do wykopanych wcześniej dołów, gdzie polewane były żrącymi substancjami mającymi przyspieszyć rozkład i zneutralizować smród. Po przepędzeniu Czerwonych Khmerów przez armię wietnamską część dołów odkopano i wydobyto z nich ponad osiem tysięcy ciał. Obecnie w centrum pola, na którym dokonywane były mordy, stoi wieża, wewnątrz której, na szklanych półkach, poukładane są odkopane kości. Prócz niej na terenie memoriału znajduje się muzeum, w którym obejrzeć można krótki film, przeczytać plansze informacyjne i obejrzeć narzędzia, którymi uśmiercani byli więźniowie.</p>
<p>Wizyta w obu miejscach była dość przygnębiająca i nie dowiedziałem się z niej wiele ponad to, co było mi na temat reżimu <em>Khmer Rouge</em> wiadome wcześniej. Było jednak kilka punktów, które dały mi do myślenia.</p>
<p><img src="https://farm6.static.flickr.com/5206/5267858847_611596e16c.jpg" alt="cela dla wysoko postawionych działaczy w Toul Sleng"></p>
<p>Po pierwsze: kim byli oprawcy, co ich motywowało, gdzie się podziali po upadku reżimu? Mechanizmy uwalniania okrucieństwa i zaniku ludzkich uczuć w sytuacji terroru i pod reżimami totalitarnymi były już dość dokładnie dokumentowany przy okazji niechlubnych kart europejskiej historii. Bez wątpienia oprawcy byli indoktrynowani a ich ofiary dehumanizowane, przedstawiane jako coś gorszego niż ludzie. Do ekstremum okrucieństwa dochodzili też zapewne stopniowo, odblokowując kolejne bariery zachowań poprzez oswajanie się z coraz bardziej nieludzkimi praktykami – tak, jak twierdzi Ania, odbywało się to w obozach hitlerowskich. Był też jeszcze jeden aspekt, który do głowy mi nie przyszedł dopóki nie wyczytałem go z rozmów ze strażnikami więziennymi: obawa, żeby z nimi nie stało się to samo. Zaleceniem, które ludzie żyjący w tamtych czasach wielokrotnie wspominali, było żeby pracować ciężko i bez wytchnienia, bo w przeciwnym wypadku straci się życie. Prawdopodobnie stosowało się to tak do uprawy ryżu jak do torturowania więźniów. Ten ostatni aspekt – strach – w największym stopniu tłumaczy bestialstwo oprawców.</p>
<p>Po drugie, uderzające była wybiórczość w prezentowaniu historii. Wedłu plansz informacyjnych, spod reżimu Angkar (jak Czerwoni Khmerzy nazywali swoją organizację) wyzwolił Kambodżę “naród kambodżański” – o tym, jak to ów naród, pod postacią samych Czerwonych Khmerów, którzy w obawie przed czystkami zdezerterowali, wjechał do Phnom Penh na wietnamskich czołgach, nie ma ani słowa. Temat jest niewątpliwie niewygodny dla obecnego rządu, w końcu premier Hun Sen był jednym z tych dezerterów. Bardziej wiarygodnie i szczerze brzmią tablice zadające pytanie, czy sprawiedliwości stało się za dość gdy w szef Toul Sleng, Duch, skazany został na 35 lat więzienia w zakończonym niedawno procesie. Sprawy takie uświadamiają, jak niejasnym pojęciem jest sprawiedliwość i jak wiele innych miar można przykładać do rozstrzygnięć i rozliczeń. Może od “sprawiedliwych” lepsze są rozwiązania, które utrwalają ład i zapobiegają dalszym cierpieniom i walkom wewnętrznym? Przywodzi to na myśl – przy zachowaniu proporcji – polski konflikt między krytykami i apologetami okrągłego stołu. Do historii i rozliczenia zbrodni Angkar wracając, oficjalne uzasadnienie opieszałości w ściganiu i sądzeniu winnych to pomoc, jakiej przez lata udzielały okopanym w zachodniej części Kambodży Czerwonym Khmerom inne państwa, w tym Tajlandia, USA i Chiny. Geopolityka jak widać nie zna sentymentów i prowadzi czasem do powstawania najbardziej zaskakujących koalicji. Bieżące interesy polityczne cenione są wyżej niż prawda historyczna i wymierzanie sprawiedliwości, nawet w kontekście tak głośnych i tragicznych epizodów jak zbrodnie Czerwonych Khmerów.</p>
<p>Po trzecie – to już jest obserwacja zupełnie na meta-poziomie – przy tym, jak ważny temat w historii nie tylko Khmerów ale i świata dokumentują te memoriały, zastanawiające jest pewne niechlujstwo i nieporadność, wrażenie których odnosi się przy ich odwiedzaniu. Kulawe angielskie tłumaczenia, sala projekcyjna z małym telewizorem gdzieś na dalekim końcu w Choeung Ek i nieczynna sala projekcyjna w Toul Sleng, film z wywiadami nakręconymi w krzakach koło ruchliwej drogi, gdzie pytania i odpowiedzi były dość mętne (a może to znów tłumaczenie?) – z wielu miejsc wyzierała amatorszczyzna nie licująca z wagą tematu. Można to sobie tłumaczyć na przeróżne sposoby. Być może biednej Kambodży po prostu nie stać na zorganizowanie profesjonalnie zrobionej ekspozycji? Mało to przekonujące, bo nie wątpię, że tak w kraju jak i za granicą znalazłoby się wiele osób gotowych bezinteresownie pomóc z angielskim tłumaczeniem chociażby. Może eksponowanie niechlubnych i tragicznych epizodów z historii własnego narodu jest czymś obcym tutejszej kulturze, i w organizację tych muzeów nie wkładano serca, robiąc to raczej na potrzeby turystów i opinii światowej? Może obecnemu rządowi nie zależy na pokazywaniu prawdy i stara się zmniejszyć rangę miejsc pamięci? Dla mnie bardziej prawdopodobne jest inne wytłumaczenie: niedoróbki te są manifestacją sposobu życia i patrzenia na świat mieszkańców tej części Azji. W regionie jestem dopiero tydzień i widziałem jedynie niewielkie fragmenty Tajlandii i Kambodży, wydaje mi się jednak, że jest pewien motyw który łączy przewody eletryczne podpinane gdzie bądź do głównej linii przesyłowej, baraki sklecone z nieheblowanych desek i przerdzewiałej blachy falistej, motory i samochody jeżdżące pod prąd, zatłuszczone stoliki i plastikowe krzesełka na przyulicznych stoiskach z jedzeniem, odpadki wyrzucane wprost na betonowy chodnik czy wylewkę i zamiatane na stertę pod koniec dnia i inne zjawiska, które turyście z europy wydają się egzotycznym bałaganem. Po prostu Tajom i Khmerom (a pewnie i Filipińczykom, Wietnamczykom, Chińczykom i innym narodom z tej części świata) obcy jest perfekcjonizm, dążenie do porządku i ładu, zachodnio pojętej estetyki. Tu wystarczy, żeby rzeczy pełniły swoją funkcję; nie muszą przy okazji być bezpieczne, szybkie, ładnie wyglądać i być równo poukładane. Być może koślawość angielskiego tłumaczenia jest dla tutejszych niezauważalna – jest w miarę zrozumiałe, spełnia więc swoje zadanie i nie ma potrzeby go poprawiać. Podobny pragmatyzm (czy też abnegację – jak zwał, tak zwał) można było zaobserwować i na polskich wsiach, tak, że linia podziału nie przebiega wzdłuż osi wschód/zachód lecz stanowi jakąś funkcję uwarunkowań kulturowych, dobrobytu, aspiracji.</p>
<p><a href="https://flickr.com/gp/mmakowski/0f5Ej8">Phnom Penh</a></p>
]]></content:encoded></item><item><title>Angkor</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/angkor/</link><pubDate>Mon, 13 Dec 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/angkor/</guid><description>Po opuszczeniu parku Khao Yai przedostaliśmy się przez granicę, dotarliśmy do Siem Reap, spotkaliśmy się z od dawna nie widzianą przyjaciółką z Japonii, uczciliśmy urodziny Marty i odwiedziliśmy jeden z głównych punktów naszej wizyty w Azji, ruiny świątyń z okresu świetności królestwa Khmerów. Angkor Wat zobaczyć na pewno warto, choć trzeba być przygotowanym na to, że pomimo niezbyt dogodnej lokalizacji turystów przybywają tam tysiące i że proponowane standardowo sposoby zwiedzania nie mają wiele sensu.</description><content:encoded><![CDATA[<p>Po opuszczeniu parku Khao Yai przedostaliśmy się przez granicę, dotarliśmy do Siem Reap, spotkaliśmy się z od dawna nie widzianą przyjaciółką z Japonii, uczciliśmy urodziny Marty i odwiedziliśmy jeden z głównych punktów naszej wizyty w Azji, ruiny świątyń z okresu świetności królestwa Khmerów. Angkor Wat zobaczyć na pewno warto, choć trzeba być przygotowanym na to, że pomimo niezbyt dogodnej lokalizacji turystów przybywają tam tysiące i że proponowane standardowo sposoby zwiedzania nie mają wiele sensu. Ale po kolei:</p>
<h2 id="przez-granicę">Przez granicę</h2>
<p>O przedostawaniu się z Tajlandii do Kambodży i podróży z granicy do Siem Reap naczytałem się na <a href="http://www.talesofasia.com/cambodia-overland-bkksr-self.htm">TalesOfAsia</a>, forach i w przewodnikach i obraz, który się wyłaniał, to lawirowanie między sprytem naciągaczy, korupcją urzędników i niepozorną powierzchownością kieszonkowców. Nasza podróż tymczasem przebiegła bez kłopotów. Z Khao Yai wydostaliśmy się, jak zwykle, stopem, na pickupach, które dowiozły nas do głównej drogi łączącej Bangkok z leżącym na granicy Aryanprathet.</p>
<p>Tam, tuż przy skrzyżowaniu, złapaliśmy przejeżdżający dziesięć minut później autobus, który dowiózł nas wprost na granicę (według naszej wcześniejszej wiedzy, autobusy jeździły tylko do dworca w Aryanprathet, skąd trzeba było na granicę dojechać tuk tukiem). Tam odczekaliśmy krótką chwilę w kolejce dla cudzoziemców – była znacznie krótsza od tajskiej, którą okupowały setki hazardzistów udających się do zajdujących się w strefie międzygranicznej kasyn.</p>
<p><img src="https://farm6.static.flickr.com/5001/5259704797_42914a0c8a.jpg" alt="https://farm6.static.flickr.com/5001/5259704797_42914a0c8a.jpg"></p>
<p>Zaraz po wyjściu z budynku tajskiej służby granicznej przywitał nas sympatyczny i mówiący nieźle po angielsku Khmer, który zaprowadził nas najpierw do miejsca, gdzie kupuje się wizy, potem do kambodżańskiej straży granicznej a w końcu wsiadł z nami w darmowego busa, który zawiózł nas na dworzec autobusowy. Przez calą drogę tłumaczył jakie są możliwości transportu, jakie waluty warto mieć ze sobą i dlaczego, i pomimo szczerych chęci i dużej dozy podejrzliwości ani razu nie złapaliśmy go na naciąganiu na skorzystanie z jakiejś usługi o cenie wyższej niż rynkowa.</p>
<p>Z opcji transportu do Siem Reap wybraliśmy autobus. TalesOfAsia ostrzega, że autobus odjeżdża dopiero wtedy, gdy zbierze się komplet pasażerów i że czekać można bardzo długo. W naszym przypadku komplet prawie już był i wyjechaliśmy nie później niż godzinę po tym, jak wsiedliśmy. Podczas postoju na jedzenie wykazaliśmy się też pewną dozą sprytu i zamiast jeść w restauracji dla turystów, przy której autobus się zatrzymał, poszliśmy kupić jakieś lokalne jedzenie na ulicy. Do Siem Reap dotarliśmy, zgodnie z zapewnieniami, po trzech godzinach jazdy.</p>
<h2 id="urodziny">Urodziny</h2>
<p>Siem Reap to miasto na wskroś turystyczne. Wjeżdżając do niego mieliśmy okazję podziwiać typowe okazy architektury hotelowej, z którą pierwszy raz styczność mieliśmy w Egipcie: budynki stylizowane czy to na secesję, czy na monumentalną architekturę Waszyngtonu, lśniące, rzęsiście oświetlone i pasujące do otoczenia jak pięść do nosa. Autobus wysadził nas w centrum, gdzie po pół godzinie poszukiwań znaleźliśmy hotelik w akceptowalnej dla nas cenie. Pokoje co prawda miały okna ktore wychodziły na wewnętrzne lobby i panował w nich wilgotny zaduch pięknie rozwijającego się grzyba, ale miały własne łazienki, bezprzewodowy internet, były blisko centrum miasta, no a za 5$ za noc trudno liczyć na wszystkie możliwe luksusy. Jako że było już dość późno, postanowiliśmy kolejny dzień zrobić wolny, bez konkretnych planów, a do ruin wybrać się za dwa dni, czyli w niedzielę dwunastego grudnia.</p>
<p>W Siem Reap umówiliśmy się z Azumi, przyjaciółką z czasów Kuby i mojej pracy w Londynie. Azumi kilka lat temu wróciła za Anglii do Japonii, później pracowała jako wolontariuszka w sierocińcu w Ugandzie a ostatnio przebywa sporo na wyspie Phuket w Tajlandii, gdzie trenuje tajski boks. Niedawno skończyła się jej wiza tajska, wybrała się więc na wycieczkę do Laosu i Kambodży, aby po powrocie dostać kolejną wizę – tzw. “visa run”, popularny wśród przyjezdnych, którzy przebywając na wizie turystycznej chcą dłużej zostać w Tajlandii. Spotkaliśmy się z nią rano po przyjeździe do Siem Reap, wypożyczyliśmy rowery i pojechaliśmy kupić bilety do ruin. Bilety jednodniowe – takie nas interesowały – kosztują po 20$ od osoby. Kupić je można dnia poprzedniego od 16:45, i przy ich pomocy można się jeszcze załapać na zwiedzanie pod koniec dnia, bo ruiny zamykają o 17:30. Skorzystaliśmy z tej możliwości i udaliśmy się do świątyni Bayon.</p>
<p>Po powrocie z rowerów Marta zaprosiła nas na kolację z okazji swoich urodzin. Nasze dotychczasowe doświadczenia z kuchnią tajską i kambodżańską były dość rozczarowujące. Dużo się słyszy o potrawach z południowo-wschodniej Azji jako jedynych w swoim rodzaju i niezwykle smacznych, ale to, co jak dotąd kupowaliśmy na ulicznych straganach i w budkach z jedzeniem za dolara nie było niczym specjalnym. Miało niewątpliwie swój egzotyczny urok, ale oceniając same walory smakowe wypadało nienajlepiej.</p>
<p><img src="https://farm6.static.flickr.com/5168/5260316424_6b08488876.jpg" alt="urodzinowy tort Marty"></p>
<p>urodzinowy tort Marty</p>
<p>Restauracja, do której zabrała nas Marta rozwiała wątpliwość co do potencjału tutejszej kuchni. Wszystkie dania (sałatka z mango i makaronu, fish amok, zielone curry z kurczakiem, panierowane warzywa smażone w głębokim tłuszczu i wiele innych) były pyszne i bardzo aromatyczne, choć nie ostre – kuchnia kambodżańska jest łagodna. Ciekawostką był sposób, w jaki w restauracji tej podawano piwo. Dużą butelkę (duże piwo ma w Azji 630 ml) umieszczano w wiaderku z lodem, szyjkę obwiązywano serwetką – zupełnie jak białe wino lub szampana. Dla europejczyka przyzywczajonego do tego, że piwo, w odróżnienieu od wina czy szampana, to napój pospolity, taka celebra wygląda dość groteskowo.</p>
<p>Na koniec Azumi zorganizowała tort, którym z racji pełnych żołądków podzieliliśmy się z obsługą lokalu, i wieczór zakończył się w bardzo miłej atmosferze.</p>
<h2 id="angkor-wat-et-al">Angkor Wat et al.</h2>
<p>Na początek, jak moim zdaniem warto zwiedzać Angkor Wat i przyległości. Po pierwsze, wystarcza bilet jednodniowy, trzy- i siedmiodniowe są tylko dla pasjonatów tego konkretnego stylu architektury i sztuki, zawodowych badaczy lub “zaliczaczy”, którzy koniecznie muszą odhaczyć każdy pomnik i każdy obraz w muzeum. Po drugie, rano należy się wyspać, a nie zrywać się przed piątą żeby w ciemnościach oczekiwać aż słońce pojawi się nad charakterystycznymi szyszkami Angkor Wat. Po trzecie, nie ma sensu brać tuk tuka ani innego zmotoryzowanego transportu, wystarczy rower, bo ciekawe rzeczy są stosunkowo blisko siebie, a są to:</p>
<ul>
<li>
<p><strong>Angkor Wat</strong>, czyli główna świątynia, która nadała nazwę całemu niejscu. Budynek jest wielki, jego frontowe galerie pokryte są słynnymi płaskorzeźbami przedstawiającymi sceny z mitologi hinduistycznej. Najciekawsze jest jednak założenie całego miejsca: ogromny teren otoczony stumetrowej szerokości fosą, brama, mury, i skala całego kompleksu.</p>
</li>
<li>
<p><strong>Ta Phrom</strong>. Tego klasztoru nie odrestaurowano, lecz pozostawiono go w mniej wiecej takim stanie, w jakim odkryty został przez europejczyków w XIX wieku. Z rozpadających się murów wyrastają ogromne drzewa z gatunku <em>Tetrameles Nudiflora</em> (ma to polską nazwę?), ktorych niesamowite korzenie wyglądają jak fragment budowli. Obiekt jest bardzo duży, samo przejście z jednego na drugi koniec zajmuje pół godziny. To miejsce zrobiło na mnie zdecydowanie największe wrażenie.</p>
</li>
</ul>
<p><img src="https://farm6.static.flickr.com/5043/5260320900_a37cf7141d.jpg" alt="https://farm6.static.flickr.com/5043/5260320900_a37cf7141d.jpg"></p>
<ul>
<li>Centrum <strong>Angkor Thom</strong> i świątynia <strong>Bayon</strong>. Angkor Thom było miastem, w którym za czasów świetności na 10 km² mieszkało podobno milion mieszkańców. W jego centrum znajduje się świątynia Bayon, różniąca się znacznie stylem od Angkor Wat i zawierające olbrzymie płaskorzeźby twarzy Buddy, które zobaczyć można też w kilku bardziej odległych świątyniach. Inne budowle w Thom to pozostałości królewskiego pałacu, których my akurat nie zdołaliśmy obejrzeć, ale przypuszczam, że warto na nie choćby pobieżnie rzucić okiem, aby mieć porównanie architektury stricte sakralnej z tą bardziej użytkową.</li>
</ul>
<p>Z pozostałych kompleksów zobaczyć można jeszcze <strong>Preah Khan</strong>, którego charakter podobny jest do Ta Phrom – to też drzewa przerastają mury i widać jak dżungla wdarła się do majestatycznych niegdyś budowli i pochłonęła je.</p>
<p>Wiedzy tej nie miałem kiedy wyruszaliśmy do ruin, a nawet gdybym miał to przypuszczam, że reszta wycieczki mogłaby nie podzielać moich preferencji w kwestii sposobu zwiedzania. Wynajęliśmy na cały dzień tuk tuka (nb. kambodżańskie tuk tuki to motorower plus czteroosobowa przyczepka, w odróżnieniu od tajskich, które są jednym, trójkołowym pojazdem i zabierają dwie osoby), który miał nas wozić po ruinach. Standardowa duża pętla oferowana turystom to kilkanaście kilometrów i jej zaletą jest to, że pokazuje jak duży obszar pokryty był tymi fascynującymi budowlami, zaś wadą to, że sporo czasu spędza się przy podobnych do siebie pozostałościach cywilizacji Khmerów i jadąc tuk tukiem. Wyruszyliśmy o piątej, żeby obejrzeć polecany przez przewodniki wschód słońca nad Angkor Wat – jak dla mnie nic specjalnego, gdy robi się jasno to jest fajne światło do robienia zdjęć, bo później słońce jest tak ostre, że bardzo trudno jest budowlę efektownie sfotografować, ale nie jest to wystarczający argument, żeby zarywać noc i psuć sobie przyjemność z późniejszego zwiedzania. Później jeśdziliśmy po pomniejszych świątyniach na wschód od Watu aby w końcu zamknąć pętlę i zakończyć na Preah Khan, Angkor Thom i Ta Phrom. Jak już wspomniałem to te ostatnie obiekty są najciekawsze i wizyta tam z wycieczki, która mogła pozostać w pamięci jako nieudana, uczyniła to niezwykłe doświadczenie, na które się w jakiś tam sposób nastawiałem. Te ruiny na prawdę są niesamowite i widać skąd rozmaici ilustratorzy fantasy i reżyserzy filmowi mogli czerpać inspiracje przy przedstawianiu miast i budowli różnych fantastycznych cywilizacji. Gdyby zabrać z tamtąd tłumy turystów i dzieciaki, które w okolicach wejść do atrakcji natrętnie usiłują sprzedać pocztówki, bransoletki i ręcznie wykonane instrumenty muzyczne, możnaby poczuć się jak w jakiejś baśni czy legendzie.</p>
<h3 id="--">* * *</h3>
<p>Kolejny przystanek: Phnom Penh. Zostaniemy tam pewnie dwie noce, wykorzystując dzień pomiędzy na odwiedzanie miejsc pamięci o reżimie i ofiarach Czerwonych Khmerów, a potem już jedziemy do Laosu.</p>
<p><a href="https://flickr.com/gp/mmakowski/95YGJE">Angkor</a></p>
]]></content:encoded></item><item><title>Park narodowy Khao Yai</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/park-narodowy-khao-yai/</link><pubDate>Thu, 09 Dec 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/park-narodowy-khao-yai/</guid><description>Do Pak Chong dotarliśmy zgodnie z planem i bez większych przygód. Do mniejszych zaliczyć można taksówkę, która zaczęła nas wieźć na nie tę stację kolejową, ale zapas czasu wystarczył na korektę i skończyło się jedynie na rachunku dwa razy wyższym, niż zakładaliśmy (lecz wciąż o połowę niższym niż wywoławcza cena tuktukersów z Khao San, ktorzy zawsze mówią “200”, dokąd by się nie chciało jechać). Dalej poszło gładko: wsiedliśmy w ten pociąg co trzeba, w Ayutthaya dosiedli się Kuba z Martą, udało nam się też wysiąść na właściwej stacji.</description><content:encoded><![CDATA[<p>Do Pak Chong dotarliśmy zgodnie z planem i bez większych przygód. Do mniejszych zaliczyć można taksówkę, która zaczęła nas wieźć na nie tę stację kolejową, ale zapas czasu wystarczył na korektę i skończyło się jedynie na rachunku dwa razy wyższym, niż zakładaliśmy (lecz wciąż o połowę niższym niż wywoławcza cena tuktukersów z Khao San, ktorzy zawsze mówią “200”, dokąd by się nie chciało jechać). Dalej poszło gładko: wsiedliśmy w ten pociąg co trzeba, w Ayutthaya dosiedli się Kuba z Martą, udało nam się też wysiąść na właściwej stacji.</p>
<p>Spotkanie z parą, która ma za pasem osiem miesięcy doświadczenia w dostawaniu się w różne ciekawe miejsca diametralnie zmieniło charakter naszej wycieczki (o ile powiedzenie, że po dwóch dniach zdążyła ona nabrać jakiegokolwiek charakteru nie jest nadużyciem). Koniec z precyzyjnym planowaniem każdego kroku, sprawdzaniu na dwa dni wcześniej w której kasie kupić bilet i poruszania się “oficjalnymi” środkami transportu. Do parku pojechaliśmy “busem” wykonanym z ciężarówki, na której platformie zamontowan dwie podłużne ławy. Przez kolejne dwa dni poruszaliśmy się głównie na pakach pickupów, wynajęliśmy też dwa motorki i na nich przebyliśmy kilkadziesiąt kilometrów szosami pośród dżungli, kursując między głównymi atrakcjami parku. Jednym słowem, zabawa była przednia. Przy okazji Tajlandia zmieniła też swoje oblicze: z chaotycznej, wielkomiejskiej pułapki na naiwnych turystów stała się krajem pełnym pięknych widoków i życzliwych ludzi.</p>
<p><img src="https://farm6.static.flickr.com/5169/5249544432_dab1828a2e.jpg" alt="https://farm6.static.flickr.com/5169/5249544432_dab1828a2e.jpg"></p>
<p>Sam park jest bardzo rozległy i znajduje się na wzgórzach porośniętych dżunglą, w związku z czym temperatury są o jakieś 10 stopni niższe niż w odległym o 250 kilometrów Bangkoku. W parku można podobno zobaczyć jakieś rzadkie gatunki gibona, słonie, ptaki i wodospady. Gibona nie widziałem, za to w niektórych miejscach pełno było makaków, których główną funkcją rozrywkową było machanie łapką przejeżdżającym turystom. Słoń się pojawił, i był to prawdziwy, dziki egzemplarz, łażący po krzakach i wcinający gałęzie – Ania była zachwycona. Wodospadów widzieliśmy kilka w tym dwa całkiem spore. Najfajniejsze jednak chyba było to, co pomiędzy: łażenie po dżungli i jeżdżenie motorkami. Na wynajęcie tych ostatnich sam bym się chyba nie zdecydował, ale Kuba jeździł już takim wcześniej i nie miał żadnych oporów. Jako doświadczonemu motocykliście przypadł mu więc w udziale egzemplarz z ręczną (a właściwie nożną) zmianą biegów, podczas gdy ja wziąłem wersję jednobiegową. Okazało się iż istotnie prowadzenie takiego pojazdu jest bardzo proste (Kuba miał początkowo problemy z jazdą pod górkę, ale i te zniknęły gdy opanował sztukę redukowania biegu) i przez 5 godzin pokonaliśmy około 80 kilometrów dzielących od siebie różne punkty widokowe.</p>
<p>Nocowaliśmy na kempingu, w namiotach. Marta i Kuba noszą własny, my wypożyczyliśmy czteroosobowy, bo mniejszych nie było. Nadmiaru miejsca szybko się jednak pozbyliśmy dokwaterowując na jedną noc poznaną w autobusie do parku parę Hiszpanów. Standard toalet, łazienek i sklepiku był porównywalny z przeciętnymi obiektami tego typu w Anglii – z tą różnicą, że w prysznicach nie było ciepłej wody, ale tu nie jest to wielkim problemem.</p>
<p>W Khao Yai spędzliśmy dwie noce, a po jego opuszczeniu skierowaliśmy się do Prachan Buri, skąd mieliśmy nadzieję znaleźć jakiś transport w stronę granicy z Kambodżą.</p>
<p><a href="https://flickr.com/gp/mmakowski/D3Pm4Q">Khao Yai National Park</a></p>
]]></content:encoded></item><item><title>Bangkok</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/bangkok/</link><pubDate>Tue, 07 Dec 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/bangkok/</guid><description>Do Bangkoku dotarliśmy przed siódmą rano, po jedenastogodzinnym locie, podczas którego przespałem może godzinę, tak że plan bezbolesnego przestawiania czasu diabli wzięli. Miejsca mieliśmy całkiem sporo, cały, trzymiejscowy rząd dla nas dwojga, ale nie sposób było znaleźć pozycji, w której dałoby się usnąć. Fotele w klasie biznes mają jednak tę istotną przewagę, że można z nich zrobić w pełni funkcjonalne łóżko. Jakoś dolecieliśmy, i kolejny etap stanowiło uzyskanie wizy do Tajlandii.</description><content:encoded><![CDATA[<p>Do Bangkoku dotarliśmy przed siódmą rano, po jedenastogodzinnym locie, podczas którego przespałem może godzinę, tak że plan <a href="/travel/wyprawa-2010-11/ostatni-tydzie%C5%84-przed-wyjazdem/">bezbolesnego przestawiania czasu</a> diabli wzięli. Miejsca mieliśmy całkiem sporo, cały, trzymiejscowy rząd dla nas dwojga, ale nie sposób było znaleźć pozycji, w której dałoby się usnąć. Fotele w klasie biznes mają jednak tę istotną przewagę, że można z nich zrobić w pełni funkcjonalne łóżko. Jakoś dolecieliśmy, i kolejny etap stanowiło uzyskanie wizy do Tajlandii. Tu okazało się, że fakt, iż będąc Polakami mieszkamy w Wielkiej Brytanii (a bardziej poprawnie, w Zjednoczonym Królestwie) i czytam głównie fora dla obywateli tegoż przeznaczone, jest czasem kłopotliwy.</p>
<p>Mianowicie, wbrew temu, co rzeczone fora insynuowały, i co wynikało z wymagań linii lotniczej, Polacy wizy turystyczne dostają na dni 15, nie 30, w związku z czym oczekuje się od nich, że są w stanie udokumentować zamiar opuszczenia kraju w tym okresie. Nasz trefny bilet był na 23 grudnia, czyli 17 dni po przylocie.</p>
<p><img src="https://farm6.static.flickr.com/5167/5240261619_71dd51f28a.jpg" alt="https://farm6.static.flickr.com/5167/5240261619_71dd51f28a.jpg"></p>
<p>Normalnie bym się zestresował nie na żarty, ale przed wyjazdem powtarzałem sobie, wzorem eletrycerza z lemowskich “Bajek robotów”, żeby tylko się nie denerwować, a wszystko będzie dobrze (elektrycerz chyba myślenia miał unikać, ale na jedno wychodzi). I rzeczywiście: urzędnicy imigracyjni przymknęli na to oko, informując nas jedynie, że pozostanie w Królestwie Tajlandii dłużej niż pozwala na to wiza pociąga za sobą karę 500 bahtów (przez “h”, na szczęście) za każdy dzień.</p>
<p>Bez specjalnych problemów dojechaliśmy na Khao San road i znaleźliśmy nasz guesthouse. Obawy o rezerwację okazały się bezpodstawne – na zewnątrz była co prawda wywieszka “Sorry, Full House”, ale uwzględniało to pokój zarezerwowany dla nas. Jako że w hoteliku pojawiliśmy się około 10, a wprowadzić się mogliśmy dopiero o 13, zostawiliśmy bagaże i wybraliśmy się na spacer po okolicy. Bangkok przytłoczył nas: nie znana nam bliżej kultura, chaos, specyficznego rodzaju brud, nagabujący co krok ludzie (zarówno życzliwi, jak i naciągacze), niewiele miejsc, w których można spokojnie usiąść i odpocząć, to nie jest mieszanka, którą należy polecać na pierwsze godziny po męczącym locie. Do guesthousu wróciliśmy w nienajlepszych nastrojach, odebraliśmy pokój i położyliśmy się odespać część chociaż zarwanej nocy.</p>
<p>Warto tu wspomnieć, że polecony przez TravelFish <a href="http://www.shambarabangkok.com">Shambara Boutique Hostel</a> okazał się bardzo fajny. Właściciele są sympatyczni, jest czysto, pokoi jest dziewięć, niezwykle prosto, ale ładnie urządzonych. Łazienka jest wspólna dla wszystkich pokoi, z dwoma prysznicami, dwiema toaletami i jedną umywalką – kolejek nie odnotowaliśmy. Nasz pokój (nr 6) ma klimatyzację, którą nastawiliśmy na 28 stopni, żeby było trochę chłodniej niż na zewnątrz, ale nie za bardzo. Jedyne jak dla mnie mankamenty to fakt, że jest maciupeńki (poza łóżkiem niewiele się w nim mieści) i jest ze stony domu, z której znajduje się pompa do wody, hałasująca gdy łazienka jest w użyciu. Śniadanie jest nad wyraz skromne, składa się z kawy, dwóch tostów, i dżemu. Je się w ogrodzie i po stolikach łazi masa mrówek, właściciele stosują więc ciekawy patent, aby obronić przed nimi słoik z dżemem: stawiają go na małej tacce wypełnionej wodą.</p>
<p><img src="https://farm6.static.flickr.com/5163/5240254031_6dd9c03137.jpg" alt="https://farm6.static.flickr.com/5163/5240254031_6dd9c03137.jpg"></p>
<p>Za niewielką opłatą można tu uzyskać dostęp do Internetu. Skorzystaliśmy z tego skwapliwie i skontaktowaliśmy się z Kubą i Martą. Okazało się, że są 100 km od Bangkoku, w Ayutthaya, i w środę wybierają się do parku narodowego Khao Yai i do Siem Reap dotrą w piątek lub sobotę. My planowaliśmy do Siem Reap pojechać w środę, a wyjechać z tamtąd w sobotę, czyli rozminęlibyśmy się. Postanowiliśmy więc dołączyć do nich i wspólnie zobaczyć park a później dostać się do Kambodży. Stosowne poprawki wprowadziłem już do <a href="/travel/wyprawa-2010-11/itinerer/">itinerera</a>.</p>
<p>Wieczorem, w lepszych już nastrojach, wybraliśmy się na kolację do mieszczącego się na czterech piętrach baru, galerii i restauracji Pranakorn. W barze nikogo nie było, w galerii wyłącznie portrety króla (Jego Wysokość miał w niedzielę osiemdziesiąte urodziny i wszystko jest nim tera obwieszone), nas najbardziej jednak interesowała restauracja, która mieści się na dachu. Zjedliśmy tam całkiem znośną kolację, ja wypróbowałem lokalnego piwa o nazwie Chang i było bardzo przyjemnie.</p>
<p>Dzisiaj przed południem popłynęliśmy łódką w okolice Grand Palace i Wat Pho. Świątynia ta słynie z czterdziestopięciometrowego posągu Buddy. Posąg leży w specjalnej kaplicy i rzeczywiście jest wielki, a najciekawszym jego elementem są podeszwy stóp, na których wypisano 108 cech, po których można poznać Buddę. Poza posągiem fajne są mozaiki, którymi wszystkie budynki są wyklejone z zewnątrz, i rozległy teren, na którym mieści się kompleks. Do Grand Palace nie wchodziliśmy, bo wyglądał na duży i niezbyt ciekawy, a my chcieliśmy już być w domu. Po popołudniowej sjeście udaliśmy się do Chinatown, spróbować ulicznego jedzenia, z którego część tej dzielnicy słynie.</p>
<p>Sprawą, która niepokoiła nas już przed wyjazdem, jest praktykowany w tej części świata sposób dokonywania zakupów. Ceny ustalane są między sprzedającym a kupującym w drodze negocjacji, a jest to proces, do którego zarówno Ania jak i ja nie czujemy powołania, a nawet czujemy awersję. Można oczywiście przystać od razu na propozycję sprzedającego, ale pozostaje wtedy poczucie, że wyszło się na frajera. Tak źle i tak niedobrze.</p>
<p><img src="https://farm6.static.flickr.com/5168/5241306666_a728e1329d.jpg" alt="https://farm6.static.flickr.com/5168/5241306666_a728e1329d.jpg"></p>
<p>Trzeba więc było przystosować się do tutejszej kultury. Ćwiczyliśmy najpierw na T-shircie. Z ceny wywoławczej 250 baht, udało nam się zejść do 150 – pierwszy sukces. Zachęcony tym osiągnięciem postanowiłem załatwić nam transport z Khao San na ulicę Yaowarat w Chinatown. Szacowałem, że licznik w taksówce nie przekroczyłby 50 bhat, ustawiłem więc swoją cenę za tuk tuka (środek transportu składający się z jednego koła i kierowcy z przodu oraz dwóch kół i platformy z siedzeniem dla pasażerów z tyłu) na 30-40. Pierwszy kierowca zażyczył sobie 200 bhat, ja zacząłem od 20 i nie doszliśmy do porozumienia. Drugi był bardziej do rzeczy, bo zaczął chyba od 140, ale na moje 30 powiedział, że za tyle to może mnie zawieźć do bardzo dobrego krawca, który mi zrobi garnitur, a nie na Yaowarat. Poniżej 80 zejść nie chciał. Postanowiłem więc sprawdzić teorię z taksówką, ale taksówkarz w ogóle na taką krótką trasę nie chciał jechać. Gadaliśmy jeszcze z jednym tuktukersem, ten zatrzymał się na 70, uznaliśmy więc, że przepłacać nie będziemy i idzemy na piechotę. Zajęło to około 45 minut, licząc z niewielkim zabłądzeniem. W drodze powrotnej natomiast pierwszy napotkany tuk tuk szybko zgodził się na 50 – wygląda więc na to, że przy Khao San mają większą podaż zdezorientowanych turystów.</p>
<p>Sama Yaowarat istotnie obfitowała w stragany z jedzeniem. Ja pożywiłem się smażoną rybą z imbirem, z której jadalna dla mnie byłą tylko tylna połowa, bo przednia składała się z głowy i przyległości – ale to, co zjadłem, bardzo mi smakowało. Ania zjadła pieczoną kaczkę z ryżem, też bardzo smaczna.</p>
<h3 id="--">* * *</h3>
<p>Jutro rano łapiemy pociąg do Pak Chong, na granicy parku Khao Yai i przez najbliższe parę dni prawdopodobnie nie będziemy dostępni. Kolejnych wieści od nas należy spodziewać się więc w weekend.</p>
<p><a href="https://flickr.com/gp/mmakowski/qRV7Y6">Bangkok</a></p>
]]></content:encoded></item><item><title>Ostatni tydzień przed wyjazdem</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/ostatni-tydzie%C5%84-przed-wyjazdem/</link><pubDate>Wed, 01 Dec 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/ostatni-tydzie%C5%84-przed-wyjazdem/</guid><description>Mam obawy, że ilość dywagacji nie na temat, którymi w ostatnim czasie okraszam ten blog, powoduje, że staje się on dla czytelników niestrawny. Z drugiej jednak strony muza (Klio to czy Kalliope?) najwyraźniej nie daje spokoju i wena twórcza musi znaleźć gdzieś ujście. Postanowiłem przeprowadzić więc eksperyment: nagłówki akapitów stanowią słowa kluczowe, z których wyczytać można, co się dzieje, a to, co pomiędzy nimi, to wypełniacz ze standardową dawką wodolejstwa.</description><content:encoded><![CDATA[<p>Mam obawy, że ilość dywagacji nie na temat, którymi w ostatnim czasie okraszam ten blog, powoduje, że staje się on dla czytelników niestrawny. Z drugiej jednak strony muza (Klio to czy Kalliope?) najwyraźniej nie daje spokoju i wena twórcza musi znaleźć gdzieś ujście. Postanowiłem przeprowadzić więc eksperyment: nagłówki akapitów stanowią słowa kluczowe, z których wyczytać można, co się dzieje, a to, co pomiędzy nimi, to wypełniacz ze standardową dawką wodolejstwa.</p>
<h2 id="przestawianie">Przestawianie</h2>
<p>się na czas azjatycki rozpocząłem na dwa tygodnie przed wyjazdem. Praktykowałem tę technikę – na mniejszą skalę, w okresie 3-4 dni – przed służbowymi wyjazdami do Azji, z dobrym skutkiem – jetlagu nie odczuwałem. Polega to na tym, że stopniowo zaczyna się swoje godziny snu dostosowywać do strefy, do której się podróżuje. Na przykład, jak w sobotę leci się do Singapuru, to w środę wstaje się o piątej rano, we czwartek o czwartej, w piątek o trzeciej, w sobotę o drugiej – odpowiednio wcześniej kładąc się też spać. Lot się przesypia i po przylocie wszystko jest całkiem znośnie, nie ma się wrażenia, że spać należy w dzień a ganiać w nocy.</p>
<p>Tym razem postanowiłem zastosować dłuższy okres przystosowawczy i nie wiem, czy to był dobry pomysł. Przez ostatnie kilka dni w ciągu dnia czułem się w połowie najwyżej przytomny. Zacząłem nawet konsumować kawę z automatu w pracy – niby żeby się obudzić, ale tak na prawdę chyba dlatego, że bardzo mi smakowała. Kawy z reguły nie pijam i konserem zdecydowanie nie jestem, do tej pracowej przekonała mnie hojność maszyny w dysponowaniu cukrem. Po wypiciu na dnie zawsze zostawała kilkumilimetrowa warstwa nie do końca rozpuszczonych kryształków.</p>
<p>W efekcie samopoczucie moje było w ostatnim tygodniu dość dziwne, świat wydawał się w pewnym stopniu nierealny. Po pierwsze, ostatnie dni w pracy mają specyficzną atmosferę. Doświadczałem jej drugi raz w ciągu tego roku, ale wciąż stanowi ona coś niecodziennego. Do tego doszły owe nietypowe godziny snu, no i</p>
<h2 id="śnieg">śnieg.</h2>
<p>Zjawisko to staje się w ostatnich latach bardziej powszechne. Dwa lata temu niespodziewany opad pozostawił w Londynie dwudziestocentymetrową warstwę śniegu. Komunikacja przestała działać, byłem jedną z nielicznych osób, którym udało się dotrzeć do biura (w porównaniu z innymi okołolondyńskimi i londyńskimi środkami komunikacji nasze lokalne pociągi c2c są wyjątkowo niezawodne) i uruchomiony w mojej firmie sztab zarządzania kryzysowego zadecydował, żeby kluczowych pracowników pozostawić na noc w pobliskich hotelach na wypadek, gdyby kolejnego dnia sytuacja miała się jeszcze pogorszyć i dojazd do biura okazał się dla nich niemożliwy. Najwyraźniej kluczowy był ten, komu udało się tego dnia dotrzeć do biura, w każdym razie zaliczyłem wówczas noc w hotelu Brittannia nieopodal Canary Wharf.</p>
<p>Zeszłej zimy śnieg leżał u nas, w Langdon Hills, przez tydzień chyba. Londyn był w znacznej mierze oszczędzony, choć w Anglii chaosu komunikacyjnego nie uniknięto, tym razem za sprawą szybkich pociągów, które okazały się nieprzystosowane do jazdy w tych warunkach: śnieg wwiewało im do elektrycznych silników, które pod wpływem wilgoci wysiadały.</p>
<p><img src="https://farm6.static.flickr.com/5050/5233224384_9d0ec86649.jpg" alt="https://farm6.static.flickr.com/5050/5233224384_9d0ec86649.jpg"></p>
<p>Tym razem padać zaczęło w nocy z poniedziałku na wtorek i przez wtorek i środę sypało naprawdę porządnie, tak, że pomimo temperatury odrobinę powyżej zera utrzymywała się trzydziestocentymetrowa warstwa. Pomimo regularności, z jaką ostatnio mamy do czynienia ze śniegiem, jego pojawienie się nieodmiennie sprawia nam dużo radości. Pewnie dlatego, że porządne zimy pamiętamy ze wczesnego dzieciństwa, z lat osiemdziesiątych; później śniegu robiło się coraz mniej, były lata, że trudno było utrafić z wyjazdem na narty, bo okazywało się, że nie ma po czym jeździć. Śnieg kojarzy się więc nam z dzieciństwem, a rzeczy związane z dzieciństwem z reguły wspomina się dobrze. Poza tym świat wygląda ładniej jak wszystkie jego brudy ukryte są pod warstwą bielutkiego puchu. Na szczęście w sobotę zaczęła się odwilż, nie żal nam więc wylatywać.</p>
<p>W związku z sytuacją atmosferyczną i zamknięciem niektórych lotnisk zatelefonowałem do Thai Airways, z którymi mamy lecieć do Bangkoku, w celu upewnienia się, że z naszym lotem nie będzie problemów. Przy okazji pani po drugiej stronie przewodu telefonicznego zapytała, czy aby na pewno</p>
<h2 id="mamy-wizę-do-tajlandii">mamy wizę do Tajlandii?</h2>
<p>Pytanie to zbiło mnie trochę z tropu.</p>
<p><img src="https://farm2.static.flickr.com/1174/556291139_4d8d336678.jpg" alt="https://farm2.static.flickr.com/1174/556291139_4d8d336678.jpg"></p>
<p>Do podróżowania bez nadmiaru dokumentów upoważniających do przekraczania granic przyzwyczaić jest się bardzo łatwo. Odkąd Polska wstąpiła do Unii Europejskiej na większość wyjazdów nie zabieram nawet paszportu. Odmowę wstępu do jakiegoś kraju potraktowałbym jako pogwałcenie moich praw mieszkańca planety Ziemia, każdy bowiem powinien mieć prawo oglądać sobie dowolny zakątek świata, o ile go przy okazji nie niszczy. Ten pogląd wyznawałem od dawna, choć nie zawsze było tak łatwo.</p>
<p>Podczas interrailowej podróży, o której już w tym cyklu wspominałem, naszła nas ochota na odwiedzenie Irlandii. Było to w czasach, gdy Polacy po Europie przemieszczali się bez większych problemów, wyjątkiem jednak były Wiela Brytania i Irlandia, gdzie pogranicznicy czatowali na wschodnich europejczyków, którzy niby przyjeżdżali pozwiedzać, a tak naprawdę do roboty. Postanowiliśmy zaryzykować mimo to i kupiliśmy bilet na prom z Cherbourga do Rosslare. Przy wejściu na prom pan sprawdzający paszporty zabrał nas na bok i zaczął wypytywać dokąd i po co. Mieliśmy taki fajny przewodnik, nie pamiętam już jaki miał tytuł, i mówiliśmy, że o, tu, w tym przewodniku mamy listę hosteli w Dublinie i coś z niej wybierzemy – uznaliśmy, że do naszych rzeczywistych planów, czyli jeżdżenia gdzie popadnie pociągami i spania w krzakach, lepiej się nie przyznawać. Pan wezwał jakiegoś umorusanego mechanika, który zaczął nas strofować, że trzeba wiedzieć dokąd się jedzie i że co to w ogóle ma znaczyć. Było to wszystko dość nieprzyjemne, chyba jakieś pieniądze musieliśmy pokazywać, w końcu nas jednak wpuścili. Kolejną przeprawę mieliśmy po dopłynięciu, z oficjalnymi służbami imigracyjnymi. Musieliśmy czekać pół godziny aż mnie sprawdzą w Interpolu czy na innej liście ludzi, których wpuszczać nie należy. Bardzo byłem zbulwersowany tą jawną niesprawiedliwością i dyskryminacją ze względu na narodowość. Teraz myślę, że zainteresowanie moją osobą mogło wynikać nie tylko z polskości mojego paszportu, ale też z faktu, że przez poprzedni tydzień się nie myłem; jak było naprawdę chyba nigdy się nie dowiem.</p>
<p>Nonszalancja, która rodzi się z wewnątrzeuropejskich przyzywczajeń przy dalszych podróżach może być zgubna. Doświadczyli tego nasi znajomi, których nie wpuszczono na pokład samolotu do Indii z powodu braku wizy. Pomny ich historii upewniłem się, że jedyne na naszej trasie kraje, gdzie wizę należy mieć zawczasu, to Wietnam i Australia. W pozostałych wizy dostaje się na lotniskach i przejściach granicznych. Pani z Thai Airways wyjaśniła, że polityka linii jest taka, że przy lotach w jedną stronę trzeba im pokazać albo wizę, albo bilet na dalsze połączenie, stanowiący jakoby dowód, że nie zamierza się w kraju zostać dłużej niż przysługujące turystom 30 dni. Upewniłem się później na forach podróżniczych, że istotnie, tajskich służb granicznych z reguły takie rzeczy nie interesują i wizy wystawiają, ale linie lotnicze są w tym względzie bardziej wymagające. Jedyne, co ich zadowala, to wiza lub bilet lotniczy – nawet autobusowe lub kolejowe nie wystarczają.</p>
<p>O uzyskaniu wizy nie było już mowy – od wylotu dzielił nas jeden dzień roboczy. Pozostało więc albo liczyć na łut szczęścia i pomyślne negocjacje na lotnisku, albo dokupić jakiś bilet z Tajlandii. Niby w kwestii planów podróży jesteśmy dość elastyczni, ale latanie z Tajlandii nijak nam nie pasowało – za dużo trzeba by było zmieniać i tracić czas na zupełnie niepotrzebne przeloty. Pozostało więc kupić byle jaki bilet, z którego nie skorzystamy. Przy pomocy <a href="http://skyscanner.net">Skyscannera</a> zidentyfikowałem najtańszy, albo prawie najtańszy lot wylatujący w grudniu z Tajlandii: Phuket – Kuala Lumpur 23 grudnia, z Asia Air. Opłata za niedoinformowanie wyniosła niecałe 90 funtów, a więc nie tak znowu strasznie dużo.</p>
<p>Ostatnią przeszkodą do pokonania był dojazd na lotnisko. Ostatecznie zdecydowaliśmy się pojechać</p>
<h2 id="taksówką">taksówką,</h2>
<p>a było to tak: normalnie na Heathrow dostajemy się idąc na piechotę do stacji (z bagażami 20 minut), potem pociągiem do Fenchurch Street (35 minut), następnie metrem do Paddington (25 minut o ile jeździ Circle Line – a często nie jeździ) i z Paddington Heathrow Express na lotnisko (20 minut). Razem wszystko zajmuje 2 godziny, o ile nie ma po drodze przygód. Tym razem nasza relatywnie niezawodna c2c zorganizowała prace na torach w weekend i pociągi nie jeździły między West Horndon (kolejna stacja za naszą) i Barking. Autobus zastępczy odcinek ten pokonywał w godzinę; trzebaby więc dostać się do West Horndon (taksówką, bo iść na naszą stację żeby przejechać do West Horndon nie miałoby sensu, a taksówka do nas na stację wyszłaby niewiele taniej niż do West Horndon), później telepać się przez godzinę w zimnym autobusie, w naszych letnich rzeczach (bo w końcu do ciepłych krajów jedziemy i nie będziemy przez dwa miesiące wozić puchowych kurtek), później czekać na pociąg w Barking, a dalej tak jak opisałem na początku, z tą różnicą, że Circle Line nie jeździ, więc jazda metrem wymagałaby dwóch przesiadek i zajęła 45 minut. Na domiar tego Heathrow Express kosztuje chyba z 15 funtów za osobę. Okazało się, że taksówkę można mieć za funtów 70, nie zastanawialiśmy się więc długo. Jedyny minus tego rozwiązania jest taki, że na lotnisko dotarliśmy na cztery godziny przed wylotem i miałem wystarczająco dużo czasu żeby napisać tę tyradę.</p>
]]></content:encoded></item><item><title>Wymiękanie noclegowe</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/wymi%C4%99kanie-noclegowe/</link><pubDate>Sun, 21 Nov 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/wymi%C4%99kanie-noclegowe/</guid><description>Zacząć się może tak pięknie. Wyśpiwszy się w samolocie przybywamy w do Bangkoku, wkraczamy do hotelu na Khao San road, oglądamy pokój, kręcimy nosem, w końcu zniesmaczeni wychodzimy, wchodzimy do innego, tam, wiedząc, na co powinniśmy być przygotowani, od razu podajemy cenę cztery razy niższą niż zaoferowana, i twardo negocjując pozbawiamy hotelarzy argumentów aż w końcu muszą oddać nam swój najlepszy pokój za połowę ceny. Wszystko razem zajmuje piętnaście minut, po upływie których idziemy na miasto i zażywamy uroków stolicy Tajlandii.</description><content:encoded><![CDATA[<p>Zacząć się może tak pięknie. Wyśpiwszy się w samolocie przybywamy w do Bangkoku, wkraczamy do hotelu na Khao San road, oglądamy pokój, kręcimy nosem, w końcu zniesmaczeni wychodzimy, wchodzimy do innego, tam, wiedząc, na co powinniśmy być przygotowani, od razu podajemy cenę cztery razy niższą niż zaoferowana, i twardo negocjując pozbawiamy hotelarzy argumentów aż w końcu muszą oddać nam swój najlepszy pokój za połowę ceny. Wszystko razem zajmuje piętnaście minut, po upływie których idziemy na miasto i zażywamy uroków stolicy Tajlandii.</p>
<p>Może też być inaczej. Wymęczeni po dwunastogodzinnym locie, podczas którego nie zmrużylismy oka, wysiadamy z lotniskowego autobusu, i udajemy się na Khao San road, do której w jakiś sposób wszyscy inni backpackerzy dotarli przed nami. Odprawieni z kwitkiem z pierwszych pięciu hoteli, w kolejnym pokój bez okna za cenę kilkakrotnie wyższą niż podawana w przewodniku nie do końca przypada nam do gustu, próbujemy więc się targować, ale kończy się na tym, że pokój dostają kolejni zdezorientowani agenci, który przyszli pięć minut po nas. Nauczeni tym doświadczeniem w kolejnym hotelu już nie wybrzydzamy, ale okazuje się, że jedyny wolny pokój dostępny jest tylko na jedną noc. Zrezygnowani bierzemy go, następnego dnia, zamiast oglądać zabytki Ko Rattanakosin zabieramy nasze graty i szukamy kolejnego noclegu, oczywiście nigdzie w pobliżu miejsca nie ma i po pół dnia poszukiwań znajdujemy jakąś dziurę, za bardzo duże pieniądze i gdzieś, skąd wszędzie jest daleko.</p>
<p>Pierwszy nocleg podczas nie do końca zaplanowanej podróży wygląda na ogół odmiennie od wyobrażeń. Gdy, wiele lat temu, wybierałem się z kumplami na InterRaila po Europie zachodniej, wymyśliliśmy sobie (to chyba był mój pomysł), że spać będziemy w pociągach nocnych. Pierwszego dnia przyjechaliśmy na dworzec Berlin Zoo i okazało się, że w nocy nic nie jeździ, a jeśli w ogóle, to nasze bilety na to nie działają. W końcu spędziliśmy noc w krzakach w Tiergarten, i ten system noclegów stosowaliśmy przez kolejny miesiąc.</p>
<p><img src="https://farm1.static.flickr.com/213/522006686_074e9a5798.jpg" alt="miejsce pierwszego noclegu"></p>
<p>Teraz też wymyśliłem, że nic planować nie będziemy i na miejscu, w Bangkoku, znajdziemy sobie szybko jakieś fajne locum na dwa dni. Jednakowoż, jak się zbyt dużo nad czymś rozmyśla to do głowy zaczynają przychodzić czarne scenariusze – a może to po prostu rozsądek dochodzi do głosu? Koniec końców poczytałem sobie trochę o noclegach w turystycznym centrum Bangkoku i zdecydowałem się skorzystać z rekomendacji <a href="http://www.travelfish.org/feature/137">Travelfish</a> i zarezerwować miejsce w <a href="http://www.travelfish.org/accommodation_profile/thailand/bangkok_and_surrounds/bangkok/khao_san_road/all/961">Shambara Boutique Hostel</a>, przy samym Khao San road. Cena okazała się nieco wyższa niż reklamowana, ale w zupełności akecptowalna. Pozostaje tylko mieć nadzieję, że rezerwacja zadziała i po przyjeździe nie okaże się, że nasz pokój ktoś już dostał.</p>
<p>Z Bangkoku wybieramy się do Siem Reap w Kambodży. Tu też postanowiłem nie iść na żywioł tak do końca – nic co prawda nie rezerwujemy, ale planujemy dokładnie się stosować do bardzo precyzyjnych wskazówek zamieszczonych na <a href="http://www.talesofasia.com/cambodia-overland-bkksr-self.htm">Tales of Asia</a>. Chciałbym, żeby wychodziło to bardziej spontanicznie, ale przynajmniej na początku przyda się ta odrobina poczucia bezpieczeństwa jaką daje planowanie zawczasu. Może po paru dniach się rozkręcimy i zacznie się przygoda.</p>
<h3 id="--">* * *</h3>
<p>Moje badanie na <a href="/travel/wyprawa-2010-11/na-zdrowie/">odporność na WZW B</a> dało wynik pozytywny, to znaczy mam przeciwciała w wystarczającej ilości. Niezależnie od tego Kozło przypomniał mi, że w liceum mieliśmy cykl trzech szczepień, które powinny były uodpornić nas do końca życia. Powiedział też, że nawet jeśli przeciwciał nie ma, to pamięć immunologiczna zostaje, i zostaną wytworzone jak będą potrzebne. Brzmi fachowo, chyba wie, co mówi.</p>
<h3 id="---1">* * *</h3>
<p>Wczoraj zrobiliśmy imprezę “pożegnalną”. Przyszło trochę stałych bywalców i sporo osób, które gościliśmy u nas po raz pierwszy. Szczególne wyrazy uznania należą się Emilowi, który na pierwszym w swoim życiu party zachowywał się bardzo kulturalnie.</p>
<p><img src="https://farm6.staticflickr.com/5163/5213979723_e222694cea_z.jpg" alt="party pożegnalne"></p>
]]></content:encoded></item><item><title>Na zdrowie</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/na-zdrowie/</link><pubDate>Mon, 15 Nov 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/na-zdrowie/</guid><description>Zajmowanie się sprawami zdrowotnymi przed wyjazdem to dla mnie zupełna nowość. Zawsze byłem zdania, że apteczki i lekarstwa to bezużyteczny ciężar, który zajmuje tylko miejsce w bagażu, zmniejsza szansę znalezienia w kieszeni plecaka tego, czego się akurat szuka i dodatkowo może przysporzyć kłopotów przy kontrolach granicznych, bo substancje dozwolone tu mogą być surowo zakazane tam, i na odwrót. Poza tym wiadomo, że najlepszym sposobem na chorobę jest udawać, że jej nie ma.</description><content:encoded><![CDATA[<p>Zajmowanie się sprawami zdrowotnymi przed wyjazdem to dla mnie zupełna nowość. Zawsze byłem zdania, że apteczki i lekarstwa to bezużyteczny ciężar, który zajmuje tylko miejsce w bagażu, zmniejsza szansę znalezienia w kieszeni plecaka tego, czego się akurat szuka i dodatkowo może przysporzyć kłopotów przy kontrolach granicznych, bo substancje dozwolone tu mogą być surowo zakazane tam, i na odwrót. Poza tym wiadomo, że najlepszym sposobem na chorobę jest udawać, że jej nie ma. Jeśli się powzięło jakieś plany, jak wyjście do baru, gra w piłkę czy wyjazd na rower, to nie należy rezygnować z nich tylko dlatego, że ma się katar, żołądek się rozregulował albo naciągnęło się mięsień. Choroba której nie poświęca sie uwagi przestaje istnieć; ta, którą się pielęgnuje poprzez leżenie w łóżku przez cały dzień, picie ziółek i łykanie tabletek, trzyma się dobrze.</p>
<p>Kontakty ze służbą zdrowia na ogół przynoszą efekt znacznie odbiegający od zamierzonego. W poprzedniej pracy firma fundowała mi prywatne ubezpieczenie zdrowotne i darmowe konsultacje u lekarzy z pobliskiej (z miejsca pracy patrząc) przychodni firmy Rood Lane, tak, że żeby trochę choć z owej polisy, fundowanej niechybnie z tego, co mogłoby być moją pensją, skorzystać, wybrałem się tam kiedyś zasięgnąć porady w kwestii krost na plecach. Za pierwszym razem otrzymałem do zażycia antybiotyk (musiałem go oczywiście wykupić w aptece, tego ubezpieczenie nie pokrywa), który miał mnie tej przypadłości pozbawić, a pozbawił mnie jedynie przyjemności spożywania alkoholu podczas pływania po cieśninie Solent. Nie zniechęcona tym niepowodzeniem pani doktor z Rood Lane wysłała mnie na konsultacje do specjalisty z London Bridge Hospital.</p>
<p><img src="https://farm4.static.flickr.com/3015/2950722319_09925c74e8.jpg" alt="zrujnowana sala szpitalna"></p>
<p>Przyjął mnie elegancki, młody mężczyzna, który po wymienieniu listy tytułów, które mu przysługują, obejrzał stosowną część mojego ciała i stwierdził, że jest taki bardzo dobry lek, który prawie na pewno pomoże, będzie to trochę kosztowało, ale nie więcej niż 300 funtów za pół roku kuracji, ale skuteczność jest bardzo wysoka. Jako że lek może mieć – choć, oczywiście, zdarza się to niezmiernie rzadko – drobne skutki uboczne, jak łysienie, depresja i problemy z wątrobą, to zrobią mi jeszcze badanie krwi, żeby sprawdzić, czy nie ma wyraźnych przeciwwskazań. Badań krwi bardzo nie lubię, bo nieodmiennie wiążą się one z wbijaniem igieł w moją rękę, a jest to czynność szczególnie mi niemiła. Jednakże, jak już powiedziało się “A”, to trzeba powiedzieć i “B” (tak naprawdę nie trzeba, ale jest jakiś psychologiczny mechanizm wywołujący iluzję tej konieczności), więc krew oddałem. Po upływie kilku dni otrzymałem z ubezpieczalni list informujący mnie, że rachunek za pięć minut wysłuchiwania listy tytułów naukowych pana konsultanta i dziesięć minut pogawędki wynosi £200, z czego ja muszę pokryć 20%, bo tak stanowi moja polisa. Po dwóch tygodniach dostałem pocztą list od pani doktor z Rood Lane – konsultanci piszą listy do lekarzy pierwszego kontaktu, którzy z kolei piszą do pacjenta – informujący mnie, że konsultant dermatolog napisał, iż jakieś parametry mojej krwi nie trzymają normy, co może świadczyć o syndromie Gilberta, który w ogóle nie jest groźny, ale lepiej żebym spotkał się ze specjalistą. Udałem się więc z kolejną wizytą do specjalisty z London Bridge Hospital. Tym razem pan był w wieku średnim i lista tytułów proporcjonalnie dłuższa; rozmowa za to długa nie była, poinformowany zostałem o nazwie jednostki chorobowej, która jest podejrzewana, całkowitym braku wpływu tejże choroby na koszt polisy na życie i skierowany zostałem na kolejne badanie krwi. W ciągu kilku tygodni, które upłynęły od pierwszej wizyty w Rood Lane mój zapał do wykorzystywania polisy znacznie osłabł, odpowiedziałem więc, że owszem, badaniu się poddam, bo warto być świadomym ułomności swojego organizmu, ale jeśli chodzi o tę kurację dermatologiczną to bardzo dziękuję, w sumie obecny stan rzeczy nie przeszkadza mi tak bardzo. Ostateczny wynik tej epopei był taki, że wydałem kilkadziesiąt funtów, dwa razy byłem kłuty, dowiedziałem się, że mam syndrom Gilberta, a krosty zostały.</p>
<p>Jedyna nieprzyjemność związana z podróżą, chorobą, i brakiem środków zaradczych, jaką jestem sobie w tej chwili w stanie przypomnieć nie dotknęła mnie osobiście. Było to wiele lat temu, podczas miesięcznej podróży pociągami po Europie. Jeden z moich towarzyszy podróży miał nieszczęście dorobić się przeziębienia. Na domiar złego apogeum choroby przypadło na czas, gdy akurat bawiliśmy w Szwajcarii. Biedak zmuszony był zakupić opakowanie Strepsils, albo innego wynalazku na gardło, w cenie bodajże 5 franków szwajcarskich, co wówczas stanowiło dla nas kilkudniowy budżet. Z podróżnych przypadłości zdrowotnych znanych mi za autopsji pozostaje chyba tylko choroba morska, ale to akurat jest nieodłączna część atrakcji pod tytułem “rejs morski szkoleniowy” i rezygnacja z niej przy pomocy apteczki byłaby posunięciem o tyle bezsensownym, co nieuczciwym.</p>
<p><img src="https://farm1.static.flickr.com/47/141865180_054265c334.jpg" alt="człowiek śpiący w koi z przywieszoną torebką na wymioty"></p>
<p>Przy nonszalanckim nieco nastawieniu jakie prezentuję w sprawach ze zdrowiem związanych, organizacja tychże spadła na barki Ani. Niebezpieczeństwa czyhające (podobno) na nas w dolinie Mekongu, lasach Virachey, na plażach Danang i w kafejkach Ho Chi Minh City na tyle różnią sie od oswojonej grypy czy pospolitego rozstroju żołądka, że postanowiłem nie przeszkadzać jej zbytnio i zobaczyć, co z tego wyjdzie. Przede wszystkim musieliśmy się dowiedzieć przed jakimi chorobami należy się zabezpieczyć.</p>
<p>W Anglii po zdrowie chodzi się albo do placówek NHS (publicznych, utrzymywanych z podatków), albo do prywatnych. W tych drugich dużo się płaci pieniędzmi, w tych pierwszych czasem i nerwami. Ania, mająca już pewne doświadczenie z NHS, postanowiła zacząć od tej ścieżki. Działa to tak, że z przychodni (mamy jedną blisko domu) bierze się formularze na których wypisuje się dokąd się jedzie i jakie szczepienia już się ma za sobą, oddaje się je potem w przychodni gdzie pielęgniarka sprawdza jakie są zagrożenia i jak im przeciwdziałać. Pierwsza trudność, na którą się natknęliśmy, to ustalenie, na co byliśmy szczepieni. Pamiętałem mgliście jakiąś żółtaczkę wszczepienną typu B i tężec, ale było to kilkanaście lat temu, tak że nie wiadomo, czy się liczy.</p>
<p>Drugi problem pojawił się gdy przy oddawaniu formularzy okazało się, że mojego przyjąć nie mogą, bo nie jestem u lekarza z tej przychodni zarejestrowany. Istotnie, jako że ze służbą zdrowia staram sie mieć do czynienia jak najmniej, a do niedawna cieszyłem się prywatną polisą, rejestrację w NHS zaniedbałem. Wyruszyłem więc czym prędzej naprawić to niedopatrzenie. Przychodnia jest maleńka, dwoje lekarzy, jedna pielęgniarka i pięć pań recepcjonistek. Aby się zarejestrować należy wypełnić kilka formularzy i przedstawić dokument ze zdjęciem. Dysponowałem prawem jazdy i dowodem osobistym, naczelnej pani recepcjonistki to jednak nie usatysfakcjonowało i zażądała paszportu. Paszport przebywał akurat w ambasadzie wietnamskiej, próbowałem więc dociec co jest nie tak z dokumentami, które przyniosłem i dlaczego akurat paszport. Pani stwierdziła, że ponieważ nie jestem obywatelem brytyjskim to musi sprawdzić, czy przebywam w kraju legalnie i czy mam prawo do opieki zdrowotnej. Byłem przekonany, że w potyczce tej będę w końcu górą, nie widziałem bowiem w jaki sposób adwersarz poradzi sobie z siłą logicznego argumentu, żę dowód osobisty zdaje się wystarczać służbom granicznym i jest wewnątrz Unii Europejskiej ekwiwalentem paszportu, w odpowiedzi jednak potraktowany zostałem magiczną formułą, że “takie są przepisy placówki” i było po wszystkim. Próbowałem jeszcze apelować do zdrowego rozsądku i dobrego serca, na nic się to jednak zdało. Z biurokracją stykam się rzadko; ilekroć jestem tą bronią potraktowany i zmarnowawszy czas i nerwy na bezowocne dyskusje wracam jak niepyszny do domu, snuję plany jak siły tej użyć przeciwko tym, którzy mnie nią sponiewierali, jakich to pism i petycji nie napisać, do kogo ich nie wysłać, ale nieodmiennie kończy się na tym, że nic takiego nie robię. Biurokracja jest po prostu niekompatybilna z racjonalnym myśleniem, najlepiej jej unikać i udawać, że nie istnieje – jak choroba.</p>
<p>W międzyczasie Ani formularze zostały obejrzane i dostała od pielęgniarki informację, że powinna zaszczepić się przeciw wściekliźnie. Informacja ta pozostawiona została, zgodnie z logiką działania placówk NHS, w miejscu, w którym najtrudniej było nam ją znaleźć, czyli na automatycznej sekretarce naszego domowego telefonu. Wiadomości pozostawianych tam z reguły nie odsłuchujemy i przypadek jedynie sprawił, że szukając jakiegoś numeru w powikłanym menu telefonu odtworzyłem parę dni później tę wiadomość. Oczywiście w przychodni mieli Ani numer komórkowy i do pracy, ale przecież wiadomo, że w środku dnia w dzień pracujący najłatwiej kogoś zastać w domu, tam więc pani pielęgniarka zadzwoniła. Z tego, co zdołaliśmy się zorientować jest tu tak, że większość szczepionek, które są nam potrzebne, możemy dostać za darmo w przychodni NHS, wścieklizna jednak do nich nie należy. Cykl szczepień przeciw wściekliźnie składa się z trzech dawek przyjmowancych w ciągu czterech tygodni, a do wyjazdu mieliśmy półtora miesiąca, umówiliśmy się więc na wizyty w placówkach firmy Masta, które prowadzi “travel clinics”, czyli takie mini-gabinety, gdzie szczepią przeciwko chorobom tropikalnym i wystawiają recepty na lekarstwa, które warto ze sobą zabrać.</p>
<p>Zastanawiam się czasem co się dzieje z miejscami, kiedy na nie nie patrzę i w nich nie przebywam. Niekiedy mam wrażenie, że nieobserwowane zamierają i czekają na kolejny moment, gdy będę ich potrzebował, aby powrócić do życia. To może dość egocentryczne i niezbyt mądre, tak sobie myśleć, ale nieraz znajduję niezbite dowody takiego stanu rzeczy. Gdy zbliżałem się do gabinetu Masta koło mojej pracy coś mi nie pasowało: przechodziłem tam wcześniej wielokrotnie i tego gabinetu tam nie było. Sąsiadująca z nim praktyka ortopedyczna z kościotrupem wystawionym przed drzwi – owszem; biuro prawnicze, w którym robiłem odpis jakiegoś dokumentu, kiedy kupowałem dom – od zawsze. Ale Masty tam nie było, tylko zakratowane drzwi.</p>
<p><img src="https://farm5.static.flickr.com/4112/5192038424_5cfa148a39.jpg" alt="Malarone i książeczka szczepień"></p>
<p>No nic, ważne, że jest teraz, kiedy akurat mam tam interes. Placówka działała sprawnie, wizyty trwały nie więcej niż 10 minut – za wyjątkiem pierwszej, kiedy to musiałem pochwialić się dokąd jadę i co będę robił – i kosztowały po £43 każda. Ania szczepiła się w innej placówce tej samej firmy i dostała szczepionkę o innej nazwie i o £6 droższą – podobno to dokładnie to samo, czym mnie szczepili, tylko od innego producenta. W każdym razie w zeszłym tygodniu, trzy dni po przyjęciu ostatniej dawki szczepionki przechodziłem – o tej samej porze, o której mnie wcześniej szczepili – koło gabinetu Masty. W środku żywego ducha, drzwi zakratowane.</p>
<p>W międzyczasie odzyskałem paszport i udało się zarejestrować w przychodni, choć nie obyło się bez literówki w moim imieniu i pomyłki w adresie, o której poinformował mnie sąsiad przynosząc jakiś papier, który NHS do mnie wysłał. Moje pismo do czytelnych nie należy, ale pomylenie 9 z 2 jest pewnym osiągnięciem mimo to. Oboje z Anią mieliśmy wizytę u pielęgniarki tego samego dnia, jedno po drugim. Ta zaaplikowała nam od razu trzy szczepionki: żółtaczkę typu A, tyfus i jedną która załatwia tężec, błonicę i polio. Jako że nie byłem przekonany co do tego kiedy i ile razy byłem szczepiony przeciwko żółtaczce typu B skierowany zostałem na badanie krwi, które miało stwierdzić, czy posiadam przeciwciała. Ania, będąc w tej samej sytuacji co ja, sformułowała swoje doświadczenia z szczepionką przeciwko żółtaczce B nieco inaczej i dostała też i tę szczepionkę, bez żadnych badań. W sumie wszystko przebiegło nadspodziewanie sprawnie, ramiona dokuczały nam przez kolejne dwa dni tylko trochę.</p>
<p>Pozostało jeszcze owo nieszczęsne badanie krwi. Pojechałem w tym celu do szpitala NHS w Basildon, który jest placówką dość obskurną i nie cieszącą się dobrą sławą. Wcześniej w tym roku dostało im się po jakiejś kontroli, która wykryła, że szpital nie spełnia <a href="http://www.youtube.com/watch?v=LxjxqgMG6GE">podstawowych zasad higieny</a>. Pobieralnia krwi otwarta jest od 8 rano, pojawiłem się o 7:45 i przede mną w kolejce było już kilkanaście osób. Oddział rozpoczął pracę o czasie i wszystko przebiegło dość sprawnie. Dowiedziałem się, że wyniki powinny być znane po tygodniu i zostaną wysłane do mojego lekarza pierwszego kontaktu. Oznacza to tyle, że na szczepienie i tak nie będzie już czasu, ale przynajmniej dowiem się, czy jestem odporny, czy nie. Dobre i to.</p>
<p>Poza szczepieniami pozostała jeszcze kwestia malarii. Na nią szczepionki nie ma, są za to różne tabletki, które zażywa się prewencyjnie. Powszechnie stosowane są trzy produkty: Doxycycline, który może powodować nadwrażliwość na słońce, Mefloquine, który może powodować halucynacje i nie działa w okolicach granicy Tajsko-Kambodżańskiej, oraz Malarone, który nie ma skutków ubocznych i działa wszędzie, ale jest drogi. Polecano nam ten ostatni, na niego więc się zdecydowaliśmy. Dostępny jest tylko na tzw. prywatną receptę. W Anglii funkcjonują dwa rodzaje recept: NHS i prywatna. Obie mogą być wystawiane przez lekarza NHS, różnica z tego co rozumiem jest taka, że za prywatną pobiera on opłatę (£15 od sztuki). Zorganizowaliśmy więc dwie recepty, po 28 tabletek dla Ani i dla mnie (gdzie indziej przeczytałem później, że 28 to maksymalna liczba jaką może nam lekarz przepisać), po jednej na każdy dzień w strefie malarycznej plus dwie przed i siedem po. Pozostawało znaleźć miejsce, gdzie można ten lek stosunkowo tanio nabyć. £2.24 za tabletkę w <a href="http://www.chemistdirect.co.uk/malarone-tablets-atovaquone-proguanil_4_11973.html">internetowej aptece</a> wydawało się być ceną akceptowalną; wystarczyło wysłać recepty pocztą do sklepu, i wkrótce dostaliśmy nasze paczki tabletek.</p>
<h3 id="--">* * *</h3>
<p>Załatwiając sprawy związane ze zdrowiem przed wyjazdem do Azji południowo-wschodniej należy być przygotowanym na to, że zajmie to miesiące czasu i pochłonie setki funtów. My, szczęśliwie, mamy już prawie wszystko za sobą.</p>
<p>P.S. niecierpliwych przepraszam za dygresyjny i rozwlekły nieco styl tego wpisu, ale jestem obecnie pod przemożnym wpływem <a href="http://en.wikipedia.org/wiki/Jerome_K._Jerome">Jerome Klapka Jerome</a>, którego “Three Men in a Boat” gorąco polecam. Może do następnego odcinka mi przejdzie, ale nie gwarantuję.</p>
]]></content:encoded></item><item><title>Ekwipunek tropikalny</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/ekwipunek-tropikalny/</link><pubDate>Wed, 10 Nov 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/ekwipunek-tropikalny/</guid><description>Przy okazji wcześniejszych wyjazdów zgromadziliśmy sporo sprzętu turystycznego: plecaki, kurtki, buty itp. Jako że nasze wycieczki ograniczały się dotychczas do Europy, a w ostatnich latach właściwie wyłącznie do Anglii, wyposażenie to przystosowane jest do innego nieco klimatu niż ten, który nas czeka w Azji i Australii. Ponadto charakter wyprawy będzie dość zróżnicowany: sporo czasu planujemy spędzać w miastach i miasteczkach Kambodży i Wietnamu, kilka tygodni w samochodzie, być może kilka dni w dżungli.</description><content:encoded><![CDATA[<p>Przy okazji wcześniejszych wyjazdów zgromadziliśmy sporo sprzętu turystycznego: plecaki, kurtki, buty itp. Jako że nasze wycieczki ograniczały się dotychczas do Europy, a w ostatnich latach właściwie wyłącznie do Anglii, wyposażenie to przystosowane jest do innego nieco klimatu niż ten, który nas czeka w Azji i Australii. Ponadto charakter wyprawy będzie dość zróżnicowany: sporo czasu planujemy spędzać w miastach i miasteczkach Kambodży i Wietnamu, kilka tygodni w samochodzie, być może kilka dni w dżungli. Wiele elementów wyposażenia – jak: buty trekkingowe, kurtka przeciwdeszczowa, długie spodnie – mieć ze sobą musimy, ale prawdopodobnie będziemy większość czasu dźwigać w plecaku, tak że dobrze by było, żeby były jak najlżejsze.</p>
<p>Przegląd naszego starego ekwipunku wykazał, że niewielka jego część spełnia te kryteria; moja para butów turystycznych waży ponad półtora kilo, kurtka (North Face Free Thinker II, którą nota bene gorąco polecam na wyprawy w chłodnym klimacie, w Laponii sprawdzała się świetnie) też jest duża i ciężka, to samo można powiedzieć o ulubionych spodniach turystycznych (M65), nie wspominając już o tym, że ugotowałbym się w nich w przeciągu kwadransa. Czekało nas trochę zakupów.</p>
<h2 id="ubrania-i-buty">Ubrania i buty</h2>
<p>Większość rzeczy nabywamy online, jednak w przypadku ubrań warto czasem wybrać się do sklepu osobiście, pomacać materiał, podreptać w butach i ogólnie zapoznać się bliżej z tym, co jest dostępne. Szczęśliwym trafem londyńskie zagłębie z ekwipunkiem turystycznym mieści się w samym centrum, wokół Covent Garden. W obrębie kilkudziesięciu metrów znaleźć można osiem dużych sklepów, a kolejne nieopodal, przy Long Acre.</p>
<p><img src="https://farm5.staticflickr.com/4104/5172664616_fc7498cd09.jpg" alt="https://farm5.staticflickr.com/4104/5172664616_fc7498cd09.jpg"></p>
<p>Obchód tych przybytków nie pozbawił mnie rozterek, wręcz przeciwnie. Kupić typowe buty trekkingowe czy tzw. “approach”, czyli półbuty na solidnej podeszwie? Kurtka Kathmandu czy Arc’teryx? I skąd, do cholery, wziąć bawełniane spodnie z odpinanymi nogawkami, skoro wszystkie dostępne są z plastiku? Ostatecznie decyzje udało się jakoś podjąć i do domu wróciliśmy obładowani dwiema nowymi parami butów, kurtką dla mnie oraz spodniami i koszulą dla Ani.</p>
<p>Ubrań standardowych weźmiemy niewiele – będzie można dokupić na miejscu, jeśli zajdzie taka potrzeba.</p>
<h2 id="bagaże-i-spanie">Bagaże i spanie</h2>
<p>Tu sytuacja była stosunkowo niezła: plecaki i samonadmuchujące się materacyki są w dobrym stanie, namiotu nie bierzemy, dokupić trzeba było tylko śpiwory i jakąś ochronę przed komarami. Za radą Kuby wybraliśmy syntetyczne, leciutkie, z komfortem do +12ºC i z suwakami, które pozwalają na spięcie w jeden duży śpiwór. Do tego jedwabne wkładki do śpiworów i jedna duża moskitiera na podwójne spanie.</p>
<p>Nabyliśmy też <a href="http://www.amazon.co.uk/Travel-Blue-Folding-Ruck-Sack/dp/B000R2FMTU/ref=pd_cp_ap_3">plecaczek, który zwija się do własnej kieszeni</a> i <a href="http://www.amazon.co.uk/Tatonka-Skin-Money-Belt-Natural/dp/B000FSEWMO/ref=sr_1_1?ie=UTF8&amp;s=sports&amp;qid=1289638677&amp;sr=8-1-spell">paski na pieniądze i dokumenty</a>.</p>
<h2 id="lekarstwa-i-kosmetyki">Lekarstwa i kosmetyki</h2>
<p>O zagadnieniach zdrowotnych napiszę pewnie jeszcze osobno, tu ograniczę się do zawartości apteczki. Przede wszystkim profilaktyka przeciwmalaryczna: preparat odstraszający owady <a href="http://lifesystems.co.uk/psec/insect_repellents/50_insect_repellent.htm">zawierający 50% DEET</a> i 56 tabletek Malarone, który jest polecany jako najlepsze z dostępnych lekarstw zapobiegających malarii. Inną nieprzyjemnością na którą trzeba być przygotowanym są zatrucia pokarmowe. Bierzemy Imodium i Bimuno (jedno przeciwdziała rozwolnieniu a drugie wspomaga florę bakteryjną) oraz preparat nawadniający. W zachowaniu higieny pomoże też uniwersalne, antybakteryjne mydło w płynie. Reszta to typowe wyposażenie podróżnej apteczki: jakiś preparat odkażający, plastry, bandaż i, w charakterze generycznego środka przeciwzapalno-przeciwbólowego, Paracetamol.</p>
<p>Bardzo ważna jest też ochrona przed słońcem, szczególnie w Australii. Ja biorę kapelusz turystyczny z szerokim rondem i bandanę; Ania jeszcze do końca nie przemyślała sprawy, ale przed wyjazdem coś sobie zapewne zorganizuje. Kremy z filtrem można będzie kupić na miejscu.</p>
<h2 id="elektronika">Elektronika</h2>
<p>Ta kategoria budziła mój szczególny entuzjazm – preteksty do nabywania nowych zabawek są zawsze mile widziane. Po pierwsze, narzędzia komunikacyjne. Nasze obecne telefony mają parę mankamentów: wymagają codziennego ładowania, są stosunkowo duże, ciężkie i niezbyt wytrzymałe. Mają też jednak tę istotną zaletę, że pozwalają na korzystanie z Internetu; poza tym większość podróży odbywać się będzie w cywilizowanych warunkach, tak że wymienione wcześniej wady nie powinny być zbyt dokuczliwe.</p>
<p><img src="https://farm5.staticflickr.com/4088/5172187677_b2587aea0f.jpg" alt="https://farm5.staticflickr.com/4088/5172187677_b2587aea0f.jpg"></p>
<p>W dzisiejszych czasach trudno sobie wyobrazić dłuższy wyjazd bez komputera (jak inaczej uzupełniałbym tę relację?). Zakupiliśmy <a href="http://uk.asus.com/product.aspx?P_ID=hbAiLQA6LRG0qcNH">Asusa Eee Pc 1018p</a>, ze względu na niewielką masę i aluminiową obudowę, która, miejmy nadzieję, zapewni wytrzymałość na trudy podróży. Firmowo zainstalowane Windows 7 zastąpiłem <a href="http://www.ubuntu.com/netbook">Ubuntu 10.10</a> i komputerek sprawuje się dobrze, jedyny odkryty dotychczas mankament to nie działające usypianie i hibernacja.</p>
<p>Wyjazd jest też doskonałą okazją do aktualizacji sprzętu fotograficznego. Od dłuższego czasu miałem na oku <a href="http://www.canon.co.uk/for_home/product_finder/cameras/digital_camera/powershot/powershot_s90/index.aspx">Canona S90</a>, a jako że niedawno ukazała się poprawiona wersja, <a href="http://www.canon.co.uk/For_Home/Product_Finder/Cameras/Digital_Camera/PowerShot/PowerShot_S95/">S95</a>, na nią padł wybór. Urządzenie to od typowych aparatów tego formatu odróżnia się bardzo jasnym obiektywem (f/2.0, cokolwiek by to nie znaczyło) i trybem pełnej kontroli ręcznej: można samemu ustawiać czas naświetlania, przesłonę i ostrość – choć z moich pobieżnych oględzin wynika, że przydatność tej ostatniej opcji jest dyskusyjna. Do aparatu dokupiłem specjalną <a href="http://www.google.co.uk/products/catalog?hl=en&amp;rlz=1C1SVED_enGB386GB386&amp;q=canon+wp-dc+38&amp;um=1&amp;ie=UTF-8&amp;cid=18179531017758787052&amp;ei=yEPeTJyDNIjJhAfNneC8DQ&amp;sa=X&amp;oi=product_catalog_result&amp;ct=result&amp;resnum=3&amp;sqi=2&amp;ved=0CCkQ8wIwAg#">kasetkę, która pozwala na robienie zdjęć pod wodą</a>. Jest to bardzo skomplikowany wynalazek, ciekaw jestem jak się sprawdzi w praktyce.</p>
<p>Mamy więc masę sprzętu na prąd, każdy z własnym zasilaczem w brytyjskim standardzie. Problem z ładowaniem planuję rozwiązać biorąc jedną przejściówkę, którą będzie można wetknąć do tamtejszych gniazdek, oraz rozgałęziacz, do którego bedzie można podpiąć cztery brytyjskie wtyczki.</p>
<p>No i w końcu nie mogłem się oprzeć pokusie sprawienia sobie nowego zegarka. Wybrałem <a href="http://www.google.co.uk/products?hl=en&amp;pwst=1&amp;rlz=1C1SVED_enGB386GB386&amp;q=Timex+Expedition+Titanium+E-Compass+Watch&amp;um=1&amp;ie=UTF-8&amp;ei=r8ndTPG5NITDhAfvoaywDQ&amp;sa=X&amp;oi=product_result_group&amp;ct=image&amp;resnum=1&amp;ved=0CCkQzAMwAA">Timex Expedition Titanium E-Compass</a>, i od razu po rozpakowaniu zacząłem trochę żałować, bo bydlę jest ogromne, grube na ponad centymetr, pasek sztywny i przez to niezbyt wygodny, a przydatność wbudowanego kompasu wątpliwa – ale zobaczymy, jak się sprawdzi w warunkach bojowych.</p>
<h2 id="lista-ciekawszego-sprzętu">Lista ciekawszego sprzętu</h2>
<h3 id="ania">Ania</h3>
<ul>
<li>plecak: Karrimor Jaguar 65+15</li>
<li>buty: <a href="http://www1.teva.com/gb/ProductDetails.aspx?g=w&amp;categoryID=793&amp;productID=4108&amp;model=Dalea+Mid+eVent">Teva Dalea Mid eVent</a></li>
<li>kurtka: North Face Aark</li>
<li>śpiwór: <a href="http://www.lifeventure.co.uk/htm/sleepgear/SL750-sleeping-bag.html">Lifeventure Sleeplight 750</a></li>
</ul>
<h3 id="maciek">Maciek</h3>
<ul>
<li>plecak: Karrimor Sabre 60-100</li>
<li>buty: <a href="http://www1.teva.com/gb/ProductDetails.aspx?g=m&amp;categoryID=784&amp;productID=4104&amp;model=Riva+Leather+Mid+eVent">Teva Riva Leather Mid eVent</a></li>
<li>kurtka: <a href="http://www.kathmandu.co.uk/Mens/Jackets_&amp;_Vests/Rainwear/12044/Armstrong_Jacket_v3_Men.html">Kathmandu Armstrong</a></li>
<li>śpiwór: <a href="http://www.lifeventure.co.uk/htm/sleepgear/SL750-sleeping-bag.html">Lifeventure Sleeplight 750</a></li>
</ul>
<h3 id="wspólne">Wspólne</h3>
<ul>
<li>netbook: <a href="http://uk.asus.com/product.aspx?P_ID=hbAiLQA6LRG0qcNH">Asus Eee Pc 1018p</a></li>
<li>aparat: <a href="http://www.canon.co.uk/For_Home/Product_Finder/Cameras/Digital_Camera/PowerShot/PowerShot_S95/">Canon S95</a> (+<a href="http://www.google.co.uk/products/catalog?hl=en&amp;rlz=1C1SVED_enGB386GB386&amp;q=canon+wp-dc+38&amp;um=1&amp;ie=UTF-8&amp;cid=18179531017758787052&amp;ei=yEPeTJyDNIjJhAfNneC8DQ&amp;sa=X&amp;oi=product_catalog_result&amp;ct=result&amp;resnum=3&amp;sqi=2&amp;ved=0CCkQ8wIwAg#">ubranko podwodne</a>)</li>
</ul>
]]></content:encoded></item><item><title>Itinerer</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/itinerer/</link><pubDate>Sat, 06 Nov 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/itinerer/</guid><description>Mały suplement do poprzedniego odcinka, czyli gdzie kiedy planujemy być:
kiedy co 5-6 lot Londyn — Bangkok 6-7 Bangkok 8-9 Khao Yai 10 w drodze do Siem Reap 11-12 Angkor Wat 13 w drodze do Phnom Penh 14-15 Phnom Penh 15 w drodze do Laosu 16-18 4000 wysp 19 w drodze do Vientiane 20-22 Vientiane 23 w drodze do Hanoi 24-26 zatoka Halong 27-31 z Hanoi do Sajgonu 1-2 loty Sajgon — Singapur oraz Singapur — Darwin — Cairns 3-5 Wielka Rafa 6-24 z Cairns do Sydney 25 Sydney 26 lot Sydney — Darwin — Singapur 27-28 Singapur 29-30 lot Singapur — Kuala Lumpur — Londyn</description><content:encoded><![CDATA[<p>Mały suplement do poprzedniego odcinka, czyli gdzie kiedy planujemy być:</p>
<table>
<thead>
<tr>
<th>kiedy</th>
<th>co</th>
</tr>
</thead>
<tbody>
<tr>
<td>5-6</td>
<td>lot Londyn — Bangkok</td>
</tr>
<tr>
<td>6-7</td>
<td>Bangkok</td>
</tr>
<tr>
<td>8-9</td>
<td>Khao Yai</td>
</tr>
<tr>
<td>10</td>
<td>w drodze do Siem Reap</td>
</tr>
<tr>
<td>11-12</td>
<td>Angkor Wat</td>
</tr>
<tr>
<td>13</td>
<td>w drodze do Phnom Penh</td>
</tr>
<tr>
<td>14-15</td>
<td>Phnom Penh</td>
</tr>
<tr>
<td>15</td>
<td>w drodze do Laosu</td>
</tr>
<tr>
<td>16-18</td>
<td>4000 wysp</td>
</tr>
<tr>
<td>19</td>
<td>w drodze do Vientiane</td>
</tr>
<tr>
<td>20-22</td>
<td>Vientiane</td>
</tr>
<tr>
<td>23</td>
<td>w drodze do Hanoi</td>
</tr>
<tr>
<td>24-26</td>
<td>zatoka Halong</td>
</tr>
<tr>
<td>27-31</td>
<td>z Hanoi do Sajgonu</td>
</tr>
<tr>
<td>1-2</td>
<td>loty Sajgon — Singapur oraz Singapur — Darwin — Cairns</td>
</tr>
<tr>
<td>3-5</td>
<td>Wielka Rafa</td>
</tr>
<tr>
<td>6-24</td>
<td>z Cairns do Sydney</td>
</tr>
<tr>
<td>25</td>
<td>Sydney</td>
</tr>
<tr>
<td>26</td>
<td>lot Sydney — Darwin — Singapur</td>
</tr>
<tr>
<td>27-28</td>
<td>Singapur</td>
</tr>
<tr>
<td>29-30</td>
<td>lot Singapur — Kuala Lumpur — Londyn</td>
</tr>
</tbody>
</table>
]]></content:encoded></item><item><title>Trasa</title><link>https://blog.mmakowski.com/travel/wyprawa-2010-11/trasa/</link><pubDate>Fri, 05 Nov 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/travel/wyprawa-2010-11/trasa/</guid><description>Jedziemy na wakacje! O dłuższej przerwie myślałem od jakichś dwóch lat i po licznych perypetiach, rezygnacji z ambitnych planów podróży z Alaski do Terra del Fuego, bojach Ani o urlop i zawirowaniach związanych z moją pracą stanęło na tym, że piątego grudnia wyjeżdżamy na osiem tygodni do Azji południowo-wschodniej i Australii.
Na początku tego roku, po ustaleniu, że do dyspozycji mamy około dwóch miesięcy, krystalizować zaczęły się pomysły na trasę: początkowo była to jazda samochodem z zachodu na wschód Australii, później do planu dołączyła Nowa Zelandia, w następnej kolejności fragmenty Azji południowo-wschodniej, które byłyby po drodze.</description><content:encoded><![CDATA[<p>Jedziemy na wakacje! O dłuższej przerwie myślałem od jakichś dwóch lat i po licznych perypetiach, rezygnacji z ambitnych planów podróży z Alaski do Terra del Fuego, bojach Ani o urlop i zawirowaniach związanych z moją pracą stanęło na tym, że piątego grudnia wyjeżdżamy na osiem tygodni do Azji południowo-wschodniej i Australii.</p>
<iframe src="https://www.google.com/maps/d/embed?mid=1Xp_34HEmX0j6qUICz4V52HqpqTs&ehbc=2E312F" width="640" height="480"></iframe>
<p>Na początku tego roku, po ustaleniu, że do dyspozycji mamy około dwóch miesięcy, krystalizować zaczęły się pomysły na trasę: początkowo była to jazda samochodem z zachodu na wschód Australii, później do planu dołączyła Nowa Zelandia, w następnej kolejności fragmenty Azji południowo-wschodniej, które byłyby po drodze. W pewnym momencie byliśmy niemalże zdecydowani na <a href="http://www.oneworld.com/ow/air-travel-options/round-the-world-fares/oneworld-explorer">bilet lotniczy dookoła świata</a>. Mieliśmy już wybrane wszystkie loty – przez Buenos Aires, Mendozę, Santiago de Chile, Limę, do Nowej Zelandii, później Australii i przez Singapur do domu – pozostawało tylko wykupić bilet. W międzyczasie okazało się jednak, że nasi przyjaciele, Marta i Kuba, którzy <a href="http://www.nastopach.pl/">w trasie są od kwietnia</a>, planują około świąt bożego narodzenia być w Wietnamie, gdzie spotykać się będą z Trungiem, naszym wspólnym, pochodzącym z Wietnamu, kumplem. Dołączyć do tak znakomitego towarzystwa w egzotycznej scenerii i zwiedzać wspólnie? Tej okazji przepuścić nie mogliśmy. Konieczna była zatem rewizja naszych planów, spotkanie odbyć się ma bowiem niemal dokładnie w połowie okresu, który mamy do dyspozycji, a Wietnam leżał dotąd na peryferiach naszych zainteresowań. Odpadła zatem Nowa Zelandia, pojawiła sie za to, jako jeden z głównych punktów programu, Kambodża.</p>
<p>Obecny szlak obejrzeć można na załączonym obrazku. Zaczynamy od przylotu do Bangkoku. Tam spędzimy kilka dni, po czym lądem ruszymy do Siem Reap, oglądać <a href="http://en.wikipedia.org/wiki/Angkor_Wat">Angkor Wat</a>; z tamtąd do stolicy Kambodży, Phnom Penh, następnie na trekking po dźungli do Banlung. Z tamtąd przedostać się musimy na północ Wietnamu, do Hanoi, gdzie spotykamy się z Trungiem a także Martą i Kubą – chyba, że na parę globtroterów natkniemy się wcześniej. Kilka dni poświęcimy na zwiedzanie <a href="http://en.wikipedia.org/wiki/Halong_Bay">zatoki Halong</a> i Hanoi, po czym pociągiem ruszymy na południe, do Sajgonu. W Nowy Rok lecimy przez Singapur i Darwin do Cairns, gdzie spędzimy kilka dni nurkując na <a href="http://en.wikipedia.org/wiki/Great_Barrier_Reef">Wielkiej Rafie</a>, następnie wynajętym <a href="http://www.jucy.com.au/jucy-choppa.asp">mini-karawanem</a> pojedziemy na południe, do Sydney, gdzie rozstaniemy się z Martą i Kubą i skąd, przez Singapur, wrócimy do Londynu.</p>
<p>Tak plan wygląda w zarysie; jego szkielet stanowią długodystansowe loty, które mamy już wykupione. Poza tym jest kilka elementów do których jesteśmy przywiązani – Angkor Wat, spotkanie z przyjaciółmi, pociąg Hanoi – Sajgon, Wielka Rafa – ale szczegóły mogą ulec, i pewnie ulegną, zmianom.</p>
<p>W kolejnych odcinkach tej przedwyjazdowej relacji postaram się zdać sprawę z innych aspektów przygotowań: kompletowania sprzętu, spraw zdrowotnych itp. Wszystkie wpisy znaleźć będzie można tutaj: <a href="https://blog.mmakowski.com/travel">https://blog.mmakowski.com/travel</a>.</p>
]]></content:encoded></item><item><title>Scala LiftOff London 2010 - Day 2</title><link>https://blog.mmakowski.com/technology/scala-liftoff-london-2010-day-2/</link><pubDate>Mon, 11 Oct 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/scala-liftoff-london-2010-day-2/</guid><description>← Day One
The second and last day of Scala Lift Off did not disappoint. Compared to yesterday, the sessions I attended turned out to be less focussed on presenting concrete projects or results and more on discussing the language features and tools from the position of users discovering them. Overall, less structure, more interaction.
Teasers The day started with half an hour of very short talks by authors of a number of Scala-based projects.</description><content:encoded><![CDATA[<p><a href="https://blog.mmakowski.com/technology/scala-liftoff-london-2010-day-1/">← Day One</a></p>
<p>The second and last day of Scala Lift Off did not disappoint. Compared to yesterday, the sessions I attended turned out to be less focussed on presenting concrete projects or results and more on discussing the language features and tools from the position of users discovering them. Overall, less structure, more interaction.</p>
<h2 id="teasers">Teasers</h2>
<p>The day started with half an hour of very short talks by authors of a number of Scala-based projects. Some of them were followed up later in the day by full sessions.</p>
<h3 id="scala-modules-by-heiko-seeberger">Scala Modules by Heiko Seeberger</h3>
<p>Heiko presented an internal DSL for referencing OSGi services. It is meant to get rid of the boilerplate required in Java to invoke a service method. After setting up an OSGi <code>context</code> (which, admittedly, still takes a couple of calls to a factory, a framework etc.), one can invoke a <code>hello</code> method of a service implementing <code>Hello</code> interface as follows:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span>context findService withInterface<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Hello</span><span style="color:#000;font-weight:bold">]</span> andApply <span style="color:#000;font-weight:bold">{</span> <span style="color:#000;font-weight:bold">_</span><span style="color:#000;font-weight:bold">.</span>hello <span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><h3 id="lift-in-a-start-up-by-jeppe-madsen">Lift in a Start-up by Jeppe Madsen</h3>
<p>In a short statement Jeppe mentioned the ways in which Scala and Lift proved helpful in developing a web application in a start-up he works for.</p>
<h3 id="lifty-by-mads-hartmann-jensen">Lifty by Mads Hartmann Jensen</h3>
<p>One of a number of Scala-related Google Summer of Code projects this year involved creating an SBT processor to perform the job similar to Ruby on Rails’s <code>scaffold</code>, i.e. to generate a rudimentary web app. Mads presented the result of his work, <a href="http://lifty.github.com/Lifty/">Lifty</a>. In SBT console try:</p>
<pre tabindex="0"><code>lifty is org.lifty lifty 1.3
lifty create project-blank
reload
</code></pre><p>And you should end up with a skeleton of a Lift web app.</p>
<h3 id="minesweeper-by-kevin-wright">Minesweeper by Kevin Wright</h3>
<p>Indefatigable Kevin shared with us an interesting algorithm for filling in the minesweeper board with the numbers indicating neighbouring mines. The idea is to mark the cells containing mines with 1s and the rest of the board with 0s and then apply a horizontal and veritcal blur:</p>
<pre tabindex="0"><code>0 0 1 0
0 1 0 0
0 0 0 0
0 0 0 0
</code></pre><p>– horizontal blur -&gt;</p>
<pre tabindex="0"><code>0 1 1 1
1 1 1 0
0 0 0 0
0 0 0 0
</code></pre><p>– vertical blur -&gt;</p>
<pre tabindex="0"><code>1 2 2 1
1 2 2 1
1 1 1 0
0 0 0 0
</code></pre><p>– put the mines in -&gt;</p>
<pre tabindex="0"><code>1 2 * 1
1 * 2 1
1 1 1 0
0 0 0 0
</code></pre><p>The implementation of the blur function fitted in a single line of code, thanks to <code>sliding</code> function on <code>Seq</code>. This was topped up with an <a href="http://minesweeper.kevwright.staxapps.net">Ajaxy GUI built in Lift</a>. The source code of the entire project is <a href="http://github.com/kevinwright/minesweeper">available on gitHub</a>.</p>
<h3 id="parboiled-parsing-library-by-mathias-doenitz">Parboiled Parsing Library by Mathias Doenitz</h3>
<p>Mathias presented <a href="http://parboiled.org">Parboiled</a>, a parsing library he has written. Originally motivated by the difficulty of debugging ANTLR-generated grammars, Parboiled, like Scala combinator parsers, relies on an internal DSL, but unlike them separates parser construction from execution, which leads to significant speedup. The run time performance is still below that of ANTLR, but a version that will compile the rules into bytecode is being worked on. There is also a Java DSL library available.</p>
<h2 id="session-1-testing-in-scala">Session 1: Testing in Scala</h2>
<p>In the first part of the session Robert Wills presented two approaches he used to test a code dealing with moves of chess pieces: behaviour tests written using Specs and unit regression test taking advantage of ScalaCheck input generators. In the discussion that followed it was noted that ScalaTest offers a superset of Specs functionality with traits supporting various styles of testing.</p>
<p>While Specs and ScalaTest provide functionality roughly corresponding to popular Java tools like JUnit or JBehave, ScalaCheck lends itself to a different style of testing: verification of function invariants. There seemed to be much less familiarity with this style – and, as a consequence, with the tool – among the audience.</p>
<p>In the second part Paweł Krupiński spoke about a DSL he built for testing the behaviour of a cell in Conway’s game of life:</p>
<pre tabindex="0"><code>Alive cell dies when there are more than 3 neighbours
Dead cell lives when there are 2 or 3 neighbours
// ...
</code></pre><p>The above naratives are expressions of the DSL. Given Scala’s flexible rules for omitting dots and parentheses, a simple implicit conversion mechanism sufficed to make it work; the first sentence is equivalent to:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#458;font-weight:bold">Alive</span><span style="color:#000;font-weight:bold">.</span>cell<span style="color:#000;font-weight:bold">(</span>dies<span style="color:#000;font-weight:bold">).</span>when<span style="color:#000;font-weight:bold">(</span>there<span style="color:#000;font-weight:bold">).</span>are<span style="color:#000;font-weight:bold">(</span>more<span style="color:#000;font-weight:bold">).</span>than<span style="color:#000;font-weight:bold">(</span><span style="color:#099">3</span><span style="color:#000;font-weight:bold">).</span>neighbours
</span></span></code></pre></div><p>Paweł mentioned that similar narrative DSL is used by his employer, YouDevise, in a commercial project. When compared with approach used by e.g. JBehave, which allows free-form text between keywords, this DSL seems very restrictive, but it remains to be seen how flexible and usable it will prove in the long run.</p>
<p>Paweł’s code can be found, as usual, on <a href="http://github.com/pawelkrupinski/Scala-Test-Narrative">GitHub</a>.</p>
<h2 id="session-2-functional-features-in-scala">Session 2: Functional Features in Scala</h2>
<p>Originally entitled “WTF is a Monad?”, this talk started with a list of terms, mostly related to the functional features of Scala, whose explanations were sought by the audience. The list roughly went as follows:</p>
<ul>
<li>monads</li>
<li>partial functions</li>
<li>partial function application and currying</li>
<li>by-name parameters</li>
<li>type classes</li>
<li>self types</li>
<li>implicit conversion</li>
</ul>
<p>Kevin Wright and Jon Pretty attempted to explain most of these concepts, with Robert Wills and Phil (Surname escaped me – my apologies for this) helping with Monads.</p>
<p>I have to admit that none of the multitude of monad explanations I have read, heard or seen before ever managed to convey the benefits these entities provide in terms I would understand, and the attempts made here did not improve this sad state of affairs. I still have some hope (<a href="http://github.com/leithaus/XTrace/tree/monadic">Greg Meredith’s book</a> perhaps?), but for now will have to remain in the dark. As to the other features, most of them are well explained in <em>Programming in Scala</em>, but it was still good to have the memory refreshed.</p>
<h2 id="session-3-scala-for-high-performance-and-grid-computing">Session 3: Scala for High Performance and Grid Computing</h2>
<p>Unlike most of the other sessions I attended, which have been mainstream, with twenty-plus people in the audience, this one was a niche talk where Chi Lang Ngo, Olle Kullberg and myself exchanged thoughts on how Scala can help with implementing distributed calculations on a grid. An interesting application of large-scale data processing suggested by Chi Lang was mining GitHub or other source code repository data to trace how coding styles have been changing over time and where the influences came from. The ideas discussed included:</p>
<ul>
<li>a Scala-based DSL for describing computations that would lend itself to automatic parallelisation (insipired by LINQ)</li>
<li>generalising parallel collections to distributed collections (possibly on top of Hadoop)</li>
<li>a DSL for describing DAGs of calculation dependencies, where the code to be executed in every vertex can be defined in-line and sent over to a node in the grid</li>
<li>using remote actors and pitfalls in hiding distribution of calculations from the programmer</li>
</ul>
<h2 id="session-4-type-classes-dependency-injection-cake-pattern">Session 4: Type Classes, Dependency Injection, Cake Pattern</h2>
<p>The session started with Jon Pretty showing how type classes help with code reuse. His <code>Mathematics</code> module contained type classes for magmas, monoids, groups, rings and fields and then defined implementations of these type classes on standard numeric types. He went on to define a <code>Complex</code> parameterised by a field and a function that given and evidence that type <code>T</code> is a field provides evidence that <code>Complex[T]</code> is a field:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">implicit</span> <span style="color:#000;font-weight:bold">def</span> complexIsField<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">](</span><span style="color:#000;font-weight:bold">implicit</span> base<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Field</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">])</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Field</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Complex</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">]]</span> <span style="color:#000;font-weight:bold">=</span>
</span></span><span style="display:flex;"><span>             <span style="color:#000;font-weight:bold">new</span> <span style="color:#458;font-weight:bold">Field</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Complex</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">]]</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> add<span style="color:#000;font-weight:bold">()</span> <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">...</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>Finally, he defined quaternions as <code>Complex[Complex[T]]</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">class</span> <span style="color:#458;font-weight:bold">Quaternion</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">](</span>x<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">,</span> i<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">,</span> j<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">,</span> k<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">)(</span><span style="color:#000;font-weight:bold">implicit</span> <span style="color:#000;font-weight:bold">val</span> b<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Field</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">])</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000;font-weight:bold">extends</span> <span style="color:#458;font-weight:bold">Complex</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Complext</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">]](</span><span style="color:#458;font-weight:bold">Complex</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">](</span>x<span style="color:#000;font-weight:bold">,</span> i<span style="color:#000;font-weight:bold">),</span> <span style="color:#458;font-weight:bold">Complex</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">](</span>j<span style="color:#000;font-weight:bold">,</span> k<span style="color:#000;font-weight:bold">))</span>
</span></span><span style="display:flex;"><span>                                  <span style="color:#000;font-weight:bold">(</span>complexIsField<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">T</span><span style="color:#000;font-weight:bold">])</span>
</span></span></code></pre></div><p>The elegance of this example ows not less to the coherence of mathematical concepts being modelled than to the language they are modelled in.</p>
<p>In the second part of the session Jon and Iulian Dragos have shown the Scala way of specifying dependencies of classes/or traits and injecting them. The approach advocated by Iulian was to have the dependencies expressed as the traits listed in the self-type. The sample below should illustrate this idea:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">DatabaseConf</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">{</span> <span style="color:#000;font-weight:bold">this:</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#458;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">DatabaseConf</span> <span style="color:#000;font-weight:bold">=&gt;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#998;font-style:italic">// Model depends on DatabaseConf
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">View</span> <span style="color:#000;font-weight:bold">{</span> <span style="color:#000;font-weight:bold">this:</span> <span style="color:#458;font-weight:bold">View</span> <span style="color:#458;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">=&gt;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#998;font-style:italic">// View depends on Model
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">Controller</span> <span style="color:#000;font-weight:bold">{</span> <span style="color:#000;font-weight:bold">this:</span> <span style="color:#458;font-weight:bold">Controller</span> <span style="color:#458;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">View</span> <span style="color:#458;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">=&gt;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#998;font-style:italic">// Controller depends on View and Model
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">LiveDatabaseConf</span> <span style="color:#000;font-weight:bold">extends</span> <span style="color:#458;font-weight:bold">DatabaseConf</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">TestDatabaseConf</span> <span style="color:#000;font-weight:bold">extends</span> <span style="color:#458;font-weight:bold">DatabaseConf</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">// this is where the dependency injection takes place; the required traits
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic">// are mixed into application instances:
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span><span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">LiveApp</span> <span style="color:#000;font-weight:bold">extends</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">View</span> <span style="color:#000;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">Controller</span> <span style="color:#000;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">LiveDatabaseConf</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">TestApp</span> <span style="color:#000;font-weight:bold">extends</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">View</span> <span style="color:#000;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">Controller</span> <span style="color:#000;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">TestDatabaseConf</span>
</span></span></code></pre></div><p>This way of specifying dependencies is much closer to the module system of Standard ML than to typical Java dependency injection as done by e.g. Spring. The “cake pattern”, as far as I understood the explanation, provides an alternative that would be more familiar to Java programmers. Say, <code>Model</code> and <code>Controller</code> both require an instance of a <code>Database</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">val</span> db<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Database</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">Controller</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">val</span> db<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">Database</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">object</span> <span style="color:#458;font-weight:bold">App</span> <span style="color:#000;font-weight:bold">extends</span> <span style="color:#458;font-weight:bold">Model</span> <span style="color:#000;font-weight:bold">with</span> <span style="color:#458;font-weight:bold">Controller</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#998;font-style:italic">// the Database object is constructed here and can be used by
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span>  <span style="color:#998;font-style:italic">// the code defiend in Model and Controller:
</span></span></span><span style="display:flex;"><span><span style="color:#998;font-style:italic"></span>  <span style="color:#000;font-weight:bold">val</span> db <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">new</span> <span style="color:#458;font-weight:bold">Database</span><span style="color:#000;font-weight:bold">()</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>(Note: the above is not a full example of cake pattern, just one of its mechanisms for injecting dependencies.)</p>
<p>In response to questions from the audience regarding type-based auto-wiring <code>implicitly[DatabaseConf]</code> has been suggested as a solution but no concrete examples have been provided and it’s not clear whether using it in a real-wrold application wouldn’t prove cumbersome.</p>
<h2 id="wrap-up-the-three-kings">Wrap Up: The Three Kings</h2>
<p>The conference ended in a charming little Clerkenwell pub with the first couple of rounds on SkillsMatter. Landlord and Black Sheep ales, a real jukebox playing vinyl singles and the company of fellow scalarians provided a fitting close to inspiring two days. I’m already looking forward to Scala LiftOff London 2011.</p>
]]></content:encoded></item><item><title>Scala LiftOff London 2010 - Day 1</title><link>https://blog.mmakowski.com/technology/scala-liftoff-london-2010-day-1/</link><pubDate>Sun, 10 Oct 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/scala-liftoff-london-2010-day-1/</guid><description>The first day of this year’s Scala Lift Off London exceeded my modest expectations. It was full of excellent presentations and interesting discussions attended by very friendly folk. I trust tomorrow will not be worse; in the mean time here are some notes from the sessions I attended.
Session 1: From Java to Scala Graham Tackley of guardian.co.uk told us about the experience of his team with embracing Scala. Guardian.co.uk had been a Java shop and when a project to provide API to access all of their content had been started their technology stack of choice was Java, Guice and Apache Solr.</description><content:encoded><![CDATA[<p>The first day of this year’s Scala Lift Off London exceeded my modest expectations. It was full of excellent presentations and interesting discussions attended by very friendly folk. I trust tomorrow will not be worse; in the mean time here are some notes from the sessions I attended.</p>
<h2 id="session-1-from-java-to-scala">Session 1: From Java to Scala</h2>
<p><a href="http://blog.tackley.net">Graham Tackley</a> of guardian.co.uk told us about the experience of his team with embracing Scala. Guardian.co.uk had been a Java shop and when a project to provide API to access all of their content had been started their technology stack of choice was Java, Guice and Apache Solr. Then, at some point, Graham started playing with Scala and decided to use it for testing. The experience was positive enough for him and his team to decide to rewrite the project in Scala, which has been aided by a Java-to-Scala conversion feature of IntelliJ IDEA. The team then progressed from, as Graham put it, “Java without semicolons”, to more advanced features of Scala, embracing functional concepts like <code>map</code> and <code>flatMap</code>. Overall the experience was a very positive one, with the use of a new programming language putting back excitement into what used to be a fairly mundane Java/Spring/Hibernate-based routine and with no major complaints about the tooling available. The message, confirmed by voices from the audience, was that it is easiest to start using Scala for the test code, and after a while the developers will be so put off by the unnecessary verbosity, noisiness and lack of expresiveness of Java that they will push for Scala all way through. It might be a bit more difficult to sell the language to the managers and customers though.</p>
<p>The slides from Graham’s talk are available <a href="http://www.slideshare.net/tackers/java-to-scala">here</a>.</p>
<p><a href="http://www.slideshare.net/tackers/java-to-scala">http://www.slideshare.net/tackers/java-to-scala</a></p>
<h2 id="session-2-akka">Session 2: Akka</h2>
<p>Presented by <a href="http://jonasboner.com">Jonas Bonér</a>, the creator of <a href="http://akkasource.org">Akka</a>, this session was an overview of the framework. Working as a consultant and faced with the challenges of high-concurrency, scalability and fault-tolerance Jonas wanted to employ the tried and tested mechanisms of Erlang. This, more often than not, did not go down well with the clients who treated Erlang as an exotic platform and would prefer something they are familiar with, e.g. the JVM. This prompted him to create a framework which could provide these mechanisms on the platform customers wanted. As a result Akka implements actors, multiple dispatch mechanisms to choose from, supervisors (actors that can react to failures of other actors) which can be organised into hierarchies, and strategies for restarting failed actors or groups thereof. All that is supported by interfaces in both Java and Scala. Furthermore, Akka actors and supervisors can be configured as Spring beans and the framework can make use of integration features provided by <a href="http://camel.apache.org">Apache Camel</a>.</p>
<p>Martin Odersky (the creator and main designer of Scala) turned up at this talk and a discussion ensued on Scala actors vs. Akka actors and their relatvie merits. The consensus seems to be that either have been designed with slightly different goals and that Scala actors are more feature-rich and closer to their Erlang counterparts at the expense of performance. The primary source of the performance difference is the fact that unhandled messages are left in Scala actor’s mailbox and make the search for further messages take longer, while Akka throws an exception whenever a message is not matched by any of the <code>receive</code> patterns. Another interesting comparison discussed was between Akka (or, more general, JVM) and Erlang. In Erlang each process (i.e. actor) has its own heap and messages have to be physically copied between process memories. In contrast all actors running in a single JVM share the same heap which provides an opportunity for better performance, but also for all the pitfalls of shared-state concurrency in case a reference to a mutable object is passed in a message. Finally, Jonas has shown how big an impact synchronicity has on the performance: using <code>!!</code> (synchronous <em>send</em> which waits on a <code>Future</code> to receive a response) as opposed to <code>!</code> (asynchronous <em>send</em> which returns immediately) reduced the throughput of the tested system by up to 80%.</p>
<p>An interesting piece of Scala trivia (from Martin Odersky): <code>asInstanceOf</code> was intentionally chosen to be long and unwieldy to discourage explicit casts.</p>
<h2 id="session-3-writing-compiler-plug-ins">Session 3: Writing Compiler Plug-ins</h2>
<p>I have been some ten minutes late to this session due to an unfortunate chain of events, which involved the Akka session taking half an hour more than the allocated time and me desiring to eat a proper lunch at a nearby Italian café. I have therefore missed out on Iulian Dragos explaining the basics of <a href="http://github.com/dragos/noboxing-plugin">noboxing plug-in</a>. Nevertheless, it could be inferred from the words of Iulian and Kevin Wright, who co-hosted this session, that Scala compiler’s plug-in infrastructure allows to easily instert a new compilation phase, but not modify what happens during the existing phases (parsing, typing, erasure, code generation). This leads to problems when trying to implement a <code>Transformer</code> that would add new definitions to the code: if it is run before the typer phase it won’t have access to all type information that might be required to generate the methods; if it is run after typer then any code that relies on the presence of definitions generated by the plug-in will report error during type-checking. The work-around used by Kevin in his <a href="http://github.com/scala-incubator/autoproxy-plugin">autoproxy plug-in</a> is to run a custom type-checking phase inside the plug-in, but it has been agreed that there is currently no easy way to make plug-in insert new methods based on the type information. Plug-ins that modify code withing existing methods or just analyse the AST are, on the other hand, relatively simple to write.</p>
<h2 id="session-4-scala-28-collections">Session 4: Scala 2.8 Collections</h2>
<p>The final session of the day was somewhat whimsically named “Scala Wizardry” and was meant to discuss more exotic features of the language like implicits, higher-kinded types, cake pattern and explicit self-typing. However, it has been swiftly taken over by Mr. Odersky who covered the re-design of collections in Scala 2.8 while touching upon most of these advanced subjects. He described how the requirement for methods like <code>filter</code> to return the type of collection it was invoked on led to a lot of code duplication and unsightly type casts in Scala 2.7. The initial attempt to tackle it in 2.8 involved higher-kinded types:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">TraversableLike</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span>, <span style="color:#458;font-weight:bold">CC</span><span style="color:#000;font-weight:bold">[</span><span style="color:#000;font-weight:bold">_</span><span style="color:#000;font-weight:bold">]]</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> filter<span style="color:#000;font-weight:bold">(</span>p<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">A</span> <span style="color:#000;font-weight:bold">=&gt;</span> <span style="color:#458;font-weight:bold">Boolean</span><span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">CC</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">]</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">def</span> map<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">](</span>f<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">A</span> <span style="color:#000;font-weight:bold">=&gt;</span> B<span style="color:#000;font-weight:bold">)</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">CC</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">]</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">Traversable</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#458;font-weight:bold">extends</span> <span style="color:#458;font-weight:bold">TraversableLike</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span>, <span style="color:#458;font-weight:bold">Traversable</span><span style="color:#000;font-weight:bold">]</span>
</span></span></code></pre></div><p><code>TraversableLike</code> is a higher-kinded type because its second parameter is not a type but a <em>type constructor</em>. When <code>Traversable[A]</code> is defined, <code>Traversable</code> (without type parameters) denotes said type constructor.</p>
<p>This initial design dealt with 90%+ of cases, but there were still some issues remaining; one of them was that <code>map</code> needs to change the type of the collection when the return type of supplied function requires it. For example:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">val</span> bits <span style="color:#000;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">BitSet</span><span style="color:#000;font-weight:bold">(</span><span style="color:#099">1</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#099">2</span><span style="color:#000;font-weight:bold">,</span> <span style="color:#099">4</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>bits map <span style="color:#000;font-weight:bold">(</span><span style="color:#000;font-weight:bold">_</span><span style="color:#000;font-weight:bold">.</span>toString<span style="color:#000;font-weight:bold">)</span>  <span style="color:#998;font-style:italic">// should return Set[String]
</span></span></span></code></pre></div><p>This required some sort of rule engine to work out the appropriate type in each case. One can imagine a predicate <code>CanBuildFrom[From, Elem, To]</code> where <code>From</code> and <code>To</code> are collection types and <code>Elem</code> is the return type of the function passed to <code>map</code>. The rules could then be expressed as:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#458;font-weight:bold">CanBuildFrom</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">BitSet</span>, <span style="color:#458;font-weight:bold">Int</span>, <span style="color:#458;font-weight:bold">BitSet</span><span style="color:#000;font-weight:bold">]</span>
</span></span><span style="display:flex;"><span><span style="color:#458;font-weight:bold">CanBuildFrom</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">BitSet</span>, <span style="color:#458;font-weight:bold">B</span>, <span style="color:#458;font-weight:bold">Set</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">]]</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">...</span>
</span></span></code></pre></div><p>We would also like to be able to express constraints like this (in Prolog-like notation):</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#458;font-weight:bold">CanBuildFrom</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">SortedSet</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">]</span>, <span style="color:#458;font-weight:bold">B</span>, <span style="color:#458;font-weight:bold">SortedSet</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">]]</span> <span style="color:#000;font-weight:bold">:</span><span style="color:#458;font-weight:bold">-</span> <span style="color:#458;font-weight:bold">Ordering</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">]</span>
</span></span></code></pre></div><p>It turns out these rules can be encoded in Scala using implicits. I’ve taken the below snippet from my notes and it might lack necessary details (or be partially incorrect, for that matter), but it should give an idea of the sort of machinery that is involved – and sophistication of the language that allows this to work:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scala" data-lang="scala"><span style="display:flex;"><span><span style="color:#000;font-weight:bold">implicit</span> <span style="color:#000;font-weight:bold">def</span> bf1<span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span>, <span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">]</span><span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">CanBuildFrom</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Set</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">]</span>, <span style="color:#458;font-weight:bold">B</span>, <span style="color:#458;font-weight:bold">Set</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">]]</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">implicit</span> <span style="color:#000;font-weight:bold">def</span> bf2<span style="color:#000;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">CanBuildFrom</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Set</span><span style="color:#000;font-weight:bold">[</span>
</span></span><span style="display:flex;"><span><span style="color:#458;font-weight:bold">implicit</span> <span style="color:#458;font-weight:bold">def</span> <span style="color:#458;font-weight:bold">bf3</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">]</span><span style="color:#458;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">CanBuildFrom</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">BitSet</span>, <span style="color:#458;font-weight:bold">A</span>, <span style="color:#458;font-weight:bold">Set</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">]]</span>
</span></span><span style="display:flex;"><span><span style="color:#458;font-weight:bold">//</span> <span style="color:#458;font-weight:bold">...</span>
</span></span><span style="display:flex;"><span><span style="color:#458;font-weight:bold">implicit</span> <span style="color:#458;font-weight:bold">def</span> <span style="color:#458;font-weight:bold">bfn</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span>, <span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">](</span><span style="color:#458;font-weight:bold">implicit</span> <span style="color:#458;font-weight:bold">ord:</span> <span style="color:#458;font-weight:bold">Ordering</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">])</span><span style="color:#458;font-weight:bold">:</span>
</span></span><span style="display:flex;"><span>            <span style="color:#458;font-weight:bold">CanBuildFrom</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">SortedSet</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span><span style="color:#000;font-weight:bold">]</span>, <span style="color:#458;font-weight:bold">B</span>, <span style="color:#458;font-weight:bold">SortedSet</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">]]</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#458;font-weight:bold">trait</span> <span style="color:#458;font-weight:bold">TraversableLike</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">A</span>, <span style="color:#458;font-weight:bold">Coll</span><span style="color:#000;font-weight:bold">]</span> <span style="color:#000;font-weight:bold">{</span> <span style="color:#458;font-weight:bold">this:</span> <span style="color:#458;font-weight:bold">Coll</span> <span style="color:#000;font-weight:bold">=&gt;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">def</span> <span style="color:#458;font-weight:bold">map</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">B</span>, <span style="color:#458;font-weight:bold">To</span><span style="color:#000;font-weight:bold">](</span><span style="color:#458;font-weight:bold">f:</span> <span style="color:#458;font-weight:bold">A</span> <span style="color:#000;font-weight:bold">=&gt;</span> <span style="color:#458;font-weight:bold">B</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000;font-weight:bold">(</span><span style="color:#458;font-weight:bold">implicit</span> <span style="color:#458;font-weight:bold">cbf:</span> <span style="color:#458;font-weight:bold">CanBuildFrom</span><span style="color:#000;font-weight:bold">[</span><span style="color:#458;font-weight:bold">Coll</span>, <span style="color:#458;font-weight:bold">B</span>, <span style="color:#458;font-weight:bold">To</span><span style="color:#000;font-weight:bold">])</span><span style="color:#458;font-weight:bold">:</span> <span style="color:#458;font-weight:bold">To</span> <span style="color:#458;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#458;font-weight:bold">val</span> <span style="color:#458;font-weight:bold">b</span> <span style="color:#458;font-weight:bold">=</span> <span style="color:#458;font-weight:bold">cbf</span><span style="color:#000;font-weight:bold">(</span><span style="color:#458;font-weight:bold">this</span><span style="color:#000;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#458;font-weight:bold">foreach</span> <span style="color:#000;font-weight:bold">(</span><span style="color:#458;font-weight:bold">x</span> <span style="color:#000;font-weight:bold">=&gt;</span> <span style="color:#458;font-weight:bold">b</span> <span style="color:#458;font-weight:bold">+=</span> <span style="color:#458;font-weight:bold">f</span><span style="color:#000;font-weight:bold">(</span><span style="color:#458;font-weight:bold">x</span><span style="color:#000;font-weight:bold">))</span>
</span></span><span style="display:flex;"><span>    <span style="color:#458;font-weight:bold">b.result</span>
</span></span><span style="display:flex;"><span>  <span style="color:#000;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#458;font-weight:bold">//</span> <span style="color:#458;font-weight:bold">...</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">}</span>
</span></span></code></pre></div><p>Martin did admit that these weird method signatures can scare people off and while they are relevant for library developers the users of the library should not be bothered with them. The rule of thumb is: if what you desire can be expressed in simple types then use simple types. Which seems as a special case of the universal KISS rule. Definitely advisable when dealing with implicits and higher-kinded types.</p>
<p>The collections re-design is described in a <a href="http://lampwww.epfl.ch/~odersky/papers/fsttcs2009.pdf">paper</a> written by Odersky and Adriaan Moors.</p>
<p><a href="https://blog.mmakowski.com/technology/scala-liftoff-london-2010-day-2/">Day Two →</a></p>
]]></content:encoded></item><item><title>E-mail Testing with Mock SMTP Server</title><link>https://blog.mmakowski.com/technology/e-mail-testing-with-mock-smtp-server/</link><pubDate>Fri, 20 Aug 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/e-mail-testing-with-mock-smtp-server/</guid><description>If our application can send e-mail (and, according to Letts’ Law, it eventually will), we would want our integration tests to verify that the e-mail has indeed been sent, and that its contents are as expected. If we have written the integration tests in Python this will be pretty straightforward: Python library provides smtpd package with an implementation of SMTP server class, all we need to do is extend it to store the received messages and provide a way for the test code to verify that message has indeed been received.</description><content:encoded><![CDATA[<p>If our application can send e-mail (and, according to <a href="http://www.natpryce.com/articles/000749.html">Letts’ Law</a>, it eventually will), we would want our <a href="https://blog.mmakowski.com/technology/integration-testing-with-teamcity/">integration tests</a> to verify that the e-mail has indeed been sent, and that its contents are as expected. If we have written the integration tests in Python this will be pretty straightforward: Python library provides <code>smtpd</code> package with an implementation of SMTP server class, all we need to do is extend it to store the received messages and provide a way for the test code to verify that message has indeed been received. The Mock server class presented below runs in a separate thread and can be started and interrogated from existing test scripts.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#d14">&#39;&#39;&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">Provides a mock SMTP server implementation, MockSMTPServer.
</span></span></span><span style="display:flex;"><span><span style="color:#d14">
</span></span></span><span style="display:flex;"><span><span style="color:#d14">Sample usage:
</span></span></span><span style="display:flex;"><span><span style="color:#d14">----
</span></span></span><span style="display:flex;"><span><span style="color:#d14"># create the server -- will start automatically
</span></span></span><span style="display:flex;"><span><span style="color:#d14">import smtpmock
</span></span></span><span style="display:flex;"><span><span style="color:#d14">mock_server = smtpmock.MockSMTPServer(&#34;localhost&#34;, 25025)
</span></span></span><span style="display:flex;"><span><span style="color:#d14">
</span></span></span><span style="display:flex;"><span><span style="color:#d14">#send a test message
</span></span></span><span style="display:flex;"><span><span style="color:#d14">import smtplib
</span></span></span><span style="display:flex;"><span><span style="color:#d14">client = smtplib.SMTP(&#34;localhost&#34;, 25025)
</span></span></span><span style="display:flex;"><span><span style="color:#d14">fromaddr = &#34;test.sender@mydomain.com&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">toaddrs = [&#34;test.recipient1@mydomain.com&#34;, &#34;test.recipient2@mydomain.com&#34;]
</span></span></span><span style="display:flex;"><span><span style="color:#d14">content = &#34;test message content&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">msg = &#34;From: </span><span style="color:#d14">%s</span><span style="color:#d14">\r\n</span><span style="color:#d14">To: </span><span style="color:#d14">%s</span><span style="color:#d14">\r\n\r\n</span><span style="color:#d14">%s</span><span style="color:#d14">&#34; % (fromaddr, &#34;, &#34;.join(toaddrs), content)
</span></span></span><span style="display:flex;"><span><span style="color:#d14">client.sendmail(fromaddr, toaddrs, msg)
</span></span></span><span style="display:flex;"><span><span style="color:#d14">client.quit()
</span></span></span><span style="display:flex;"><span><span style="color:#d14">
</span></span></span><span style="display:flex;"><span><span style="color:#d14"># verify that the message has been recieved
</span></span></span><span style="display:flex;"><span><span style="color:#d14">assert(mock_server.received_message_matching(&#34;From: .*</span><span style="color:#d14">\\</span><span style="color:#d14">nTo: .*</span><span style="color:#d14">\\</span><span style="color:#d14">n+.+tent&#34;))
</span></span></span><span style="display:flex;"><span><span style="color:#d14">
</span></span></span><span style="display:flex;"><span><span style="color:#d14"># reset the server to be ready for a new test
</span></span></span><span style="display:flex;"><span><span style="color:#d14">mock_server.reset()
</span></span></span><span style="display:flex;"><span><span style="color:#d14">assert(mock_server.received_messages_count() == 0)
</span></span></span><span style="display:flex;"><span><span style="color:#d14">----
</span></span></span><span style="display:flex;"><span><span style="color:#d14">&#39;&#39;&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">asyncore</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">re</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">smtpd</span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">import</span> <span style="color:#555">threading</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000;font-weight:bold">class</span> <span style="color:#458;font-weight:bold">MockSMTPServer</span>(smtpd<span style="color:#000;font-weight:bold">.</span>SMTPServer, threading<span style="color:#000;font-weight:bold">.</span>Thread):
</span></span><span style="display:flex;"><span>    <span style="color:#d14">&#39;&#39;&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">    A mock SMTP server. Runs in a separate thread so can be started from
</span></span></span><span style="display:flex;"><span><span style="color:#d14">    existing test code.
</span></span></span><span style="display:flex;"><span><span style="color:#d14">    &#39;&#39;&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> __init__(<span style="color:#999">self</span>, hostname, port):
</span></span><span style="display:flex;"><span>        threading<span style="color:#000;font-weight:bold">.</span>Thread<span style="color:#000;font-weight:bold">.</span>__init__(<span style="color:#999">self</span>)
</span></span><span style="display:flex;"><span>        smtpd<span style="color:#000;font-weight:bold">.</span>SMTPServer<span style="color:#000;font-weight:bold">.</span>__init__(<span style="color:#999">self</span>, (hostname, port), <span style="color:#000;font-weight:bold">None</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>daemon <span style="color:#000;font-weight:bold">=</span> <span style="color:#000;font-weight:bold">True</span>
</span></span><span style="display:flex;"><span>        <span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>received_messages <span style="color:#000;font-weight:bold">=</span> []
</span></span><span style="display:flex;"><span>        <span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> <span style="color:#900;font-weight:bold">run</span>(<span style="color:#999">self</span>):
</span></span><span style="display:flex;"><span>        asyncore<span style="color:#000;font-weight:bold">.</span>loop()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> <span style="color:#900;font-weight:bold">process_message</span>(<span style="color:#999">self</span>, peer, mailfrom, rcpttos, data):
</span></span><span style="display:flex;"><span>        <span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>received_messages<span style="color:#000;font-weight:bold">.</span>append(data)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> <span style="color:#900;font-weight:bold">reset</span>(<span style="color:#999">self</span>):
</span></span><span style="display:flex;"><span>        <span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>received_messages <span style="color:#000;font-weight:bold">=</span> []
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#998;font-style:italic"># helper methods for assertions in test cases</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> <span style="color:#900;font-weight:bold">received_message_matching</span>(<span style="color:#999">self</span>, template):
</span></span><span style="display:flex;"><span>        <span style="color:#000;font-weight:bold">for</span> message <span style="color:#000;font-weight:bold">in</span> <span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>received_messages:
</span></span><span style="display:flex;"><span>            <span style="color:#000;font-weight:bold">if</span> re<span style="color:#000;font-weight:bold">.</span>match(template, message): <span style="color:#000;font-weight:bold">return</span> <span style="color:#000;font-weight:bold">True</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000;font-weight:bold">return</span> <span style="color:#000;font-weight:bold">False</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000;font-weight:bold">def</span> <span style="color:#900;font-weight:bold">received_messages_count</span>(<span style="color:#999">self</span>):
</span></span><span style="display:flex;"><span>        <span style="color:#000;font-weight:bold">return</span> <span style="color:#0086b3">len</span>(<span style="color:#999">self</span><span style="color:#000;font-weight:bold">.</span>received_messages)
</span></span></code></pre></div>]]></content:encoded></item><item><title>Integration Testing with TeamCity</title><link>https://blog.mmakowski.com/technology/integration-testing-with-teamcity/</link><pubDate>Fri, 20 Aug 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/integration-testing-with-teamcity/</guid><description>Inspired by a recent seminar Ken Schwaber presented at the company I work for, I decided to provide the means for ensuring that the high-level functionality of an application package built in our continuous integration environment (we use TeamCity) can be tested automatically.
The Context Suppose we are working on a stand-alone java app (let’s call it tc-rec, after the app I have been setting up integration tests for) and have an existing build which generates a zip file containing all the jars and scripts required to run the app.</description><content:encoded><![CDATA[<p>Inspired by a recent seminar <a href="http://en.wikipedia.org/wiki/Ken_Schwaber">Ken Schwaber</a> presented at the company I work for, I decided to provide the means for ensuring that the high-level functionality of an application package built in our continuous integration environment (we use TeamCity) can be tested automatically.</p>
<h2 id="the-context">The Context</h2>
<p>Suppose we are working on a stand-alone java app (let’s call it <em>tc-rec</em>, after the app I have been setting up integration tests for) and have an existing build which generates a zip file containing all the jars and scripts required to run the app. The unit test coverage is decent, but by their nature unit tests do not prove that the built package can actually be executed -– a bug in the execution scripts or in the code performing dependency injection of the live app would not be detected by them. To test that the apps are actually runnable as built we are downloading the zip built by TeamCity, extracting it to some temporary directory and running through a series of sample input data sets and then inspecting the output to see if it matches what we expected.</p>
<p>Most of this is fairly easy to automate. The approach I chose was to have a script which grabs the built zip, extracts it to a temporary directory, runs a series of test cases, each containing input and expected output, and verifies that the output produced matches expected output. These integration test scripts are set up as a separate project –- in this way it is not tied to a particular build of a tested app and we can just drop a zip file into the test directory and have it tested. The directory structure is as follows:</p>
<pre tabindex="0"><code>/tc-rec
  /src
  /target         &lt;-- the build puts tc-rec-x.y.z.zip in this directory
/tc-rec-integration-tests
  /tests
    /test-suite-1
      /test-case-1
        /input
        /output
      ... (more test suites and cases)
  /target         &lt;-- this directory is created by test scripts
    /test-suite-1
      /test-case-1
      ...
  /work           &lt;-- created by test scripts and deleted at the end
    /app          &lt;-- the app is unzipped to this directory
    /test-suite-1 &lt;-- each test case has its own work area
      /test-case-1
      ...
</code></pre><p>I decided to script it up in Python because of prior familiarity and it already having been used in our environment, but anything that can be run from TeamCity (or just a command line, for that matter) would do.</p>
<h2 id="teamcity-setup">TeamCity Setup</h2>
<p>In TeamCity, <em>tc-rec</em> was set up as a separate build configuration, generating a single artifact: <code>tc-rec-x.y.z.zip</code>. I set up a new TeamCity build configuration, <em>tc-rec-integration-tests</em> and made it dependent on the zip file generated by <em>tc-rec</em> in such a way, that the latest zip would be copied to <em>tc-rec-integration-tests</em> root directory when that build kicks off. <em>tc-rec-integration-tests</em> build was also made to run whenever <em>tc-rec</em> build completed, thus testing that every zip produced by TeamCity passes the integration tests.</p>
<h2 id="reporting-test-results">Reporting Test Results</h2>
<p>Now, after a couple of failed builds and sorting out the build agent’s settings and paths, the build should be up and running in TeamCity. The point of the exercise, though, is to have an easy way of checking the health of latest build. How do we tell TeamCity to fail the <em>tc-rec-integration-tests</em> build if any of the tests fail?</p>
<p>Assuming we are using command line runner (as I do for running the Python scripts), TeamCity will check the exit code of the command executed and set the build status accordingly. The first step is then to make sure that any failure during the execution of the test scripts sets the exit code to non-zero. That will provide the basic passed/failed indication for the entire integration tests build.</p>
<p>Even more helpful would be the ability to tell which exact test failed and what the reason was. Printing out diagnostics to stdout/stderr can help – all these messages will end up in the build log displayed in one of TeamCity’s tabs, and which can be looked at to determine the reason for failure. There is a more practical solution though: command line runner can be set up to watch for test result files in common formats (Ant’s JUnit, Maven’s Surefire) and nothing prevents us from writing these from the test scripts. I decided on Surefire XML, which can be generated using these templates:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>REPORT_TEMPLATE <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">&#39;&#39;&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">&lt;testsuite name=&#34;</span><span style="color:#d14">%s</span><span style="color:#d14">&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">           errors=&#34;0&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">           skipped=&#34;0&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">           tests=&#34;</span><span style="color:#d14">%s</span><span style="color:#d14">&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">           failures=&#34;</span><span style="color:#d14">%s</span><span style="color:#d14">&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">           time=&#34;</span><span style="color:#d14">%s</span><span style="color:#d14">&#34;&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#d14"></span><span style="color:#d14">%s</span><span style="color:#d14">
</span></span></span><span style="display:flex;"><span><span style="color:#d14">&lt;/testsuite&gt;&#39;&#39;&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>SUCCESSFUL_TEST_CASE_TEMPLATE <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">&#39;&#39;&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">  &lt;testcase name=&#34;</span><span style="color:#d14">%s</span><span style="color:#d14">&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">            time=&#34;</span><span style="color:#d14">%s</span><span style="color:#d14">&#34;/&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">&#39;&#39;&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>FAILED_TEST_CASE_TEMPLATE <span style="color:#000;font-weight:bold">=</span> <span style="color:#d14">&#39;&#39;&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">  &lt;testcase name=&#34;</span><span style="color:#d14">%s</span><span style="color:#d14">&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">            time=&#34;</span><span style="color:#d14">%s</span><span style="color:#d14">&#34;&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">    &lt;failure type=&#34;failure&#34;&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">        </span><span style="color:#d14">%s</span><span style="color:#d14">
</span></span></span><span style="display:flex;"><span><span style="color:#d14">    &lt;/failure&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">  &lt;/testcase&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#d14">&#39;&#39;&#39;</span>
</span></span></code></pre></div><p>With test report files in place TeamCity will display a nice summary and track performance of the tests over subsequent builds – as it does with standard JUnit tests.</p>
<h2 id="viewing-the-output">Viewing the Output</h2>
<p>One final useful thing would be to be able to visually inspect the output generated by the application during test runs. TeamCity makes it easy through its artifact publishing mechanism. After adding the path to the <code>target</code> directory to artifact paths we can browse the output directly from TeamCity’s web page.</p>
<p>Now we are all set for quick feedback on the build health. All that remains is writing some meaningful integration test cases.</p>
]]></content:encoded></item></channel></rss>