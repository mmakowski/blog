<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>conference on Maciek's blog</title><link>https://mmakowski.github.io/blog/tags/conference/</link><description>Recent content in conference on Maciek's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Aug 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://mmakowski.github.io/blog/tags/conference/index.xml" rel="self" type="application/rss+xml"/><item><title>KDD 2018: The Rest</title><link>https://mmakowski.github.io/blog/technology/kdd-2018-the-rest/</link><pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/kdd-2018-the-rest/</guid><description>KDD 2018 was intense. Workshops and keynotes started at 8 AM and the poster sessions were runing until 9 PM. There was a dozen tracks running in parallel, so choosing the session to attend was hard – there was always something else potentially interesting going on at the same time. For the first two days I tried to pay close attention and write up comprehensible notes from the tutorials and workshops, but that was not sustainable, so from the third day on I sat back, relaxed, listened more, wrote less.</description></item><item><title>KDD 2018: Quantum Machine Learning</title><link>https://mmakowski.github.io/blog/technology/kdd-2018-quantum-machine-learning/</link><pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/kdd-2018-quantum-machine-learning/</guid><description>It must be an exciting time for quantum computing researches. Up until a few years ago all work in this domain was about building theoretical models of what will be possible once we have a quantum computer. Today, a number of companies have built and made available physical quantum computers. So far those are toy-size, proofs of concept, with no practical application, but this gives hope that practical devices will become available in a few years’ time, so wider community should take notice.</description></item><item><title>KDD 2018: Common Model Infrastructure</title><link>https://mmakowski.github.io/blog/technology/kdd-2018-common-model-infrastructure/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/kdd-2018-common-model-infrastructure/</guid><description>Go away and have fun building models like there is no tomorrow. After all, we do the real creative work, innovation, science. The software and operations engineers just deal with the plumbing and have an easy, predictable job compared to us, data scientists. This might not be a mindset many would admit to, but subconciously we do tend to underestimate the importance of others’ jobs. To be fair, the enginneering and operations folks are not much better in this respect – everyone tends to think their work is more demanding and output more valuable than average.</description></item><item><title>KDD 2018: Explainable Models for Healthcare AI</title><link>https://mmakowski.github.io/blog/technology/kdd-2018-explainable-models-for-healthcare-ai/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/kdd-2018-explainable-models-for-healthcare-ai/</guid><description>The Explainable Models for Healthcare AI tutorial was presented by a trio from KenSci Inc. that included a data scientist and a clinician. The premise of the session was that explainability is particularly important in healthcare applications of machine learning, due to the far-reaching consequences of decisions, high cost of mistakes, fairness and compliance requirements. The tutorial walked through a number of aspects of interpretability and discussed techniques that can be applied to explain model predictions.</description></item><item><title>KDD 2018: Deep Learning for Computational Health</title><link>https://mmakowski.github.io/blog/technology/kdd-2018-deep-learning-for-computational-health/</link><pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/kdd-2018-deep-learning-for-computational-health/</guid><description>The Deep Learnig for Computational Health tutorial was presented by Jimeng Sun, Edward Choi and Cao Xiao. With the electronic health record (EHR) data comprising free text, structured codes, time series and images, a wide range of deep learning techniques has been successfully applied to their analysis. The presenters focussed on capturing the information about the sequence of patient’s visits, interpretability of models and representation learning for textual and structured data.</description></item><item><title>RAPIDS 2018</title><link>https://mmakowski.github.io/blog/technology/rapids-2018/</link><pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/rapids-2018/</guid><description>Having for the last year incessantly worried about the day when someone asks how we achieved a certain model metric, and not being able to answer or even replicate the result, I found the subject of Reproducibility and Provenance in Data Science mini-conference – RAPIDS in short – much to my interest. The solutions to the provenance tracking and reproducibility problem I came up with so far were hand-cranked and built on top of tools whose selection was influenced more by my personal preferences than the prevailing industry practices.</description></item><item><title>Datapalooza, or IBM's Land Grab</title><link>https://mmakowski.github.io/blog/technology/datapalooza-or-ibms-land-grab/</link><pubDate>Thu, 30 Jun 2016 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/datapalooza-or-ibms-land-grab/</guid><description>IBM Watson’s spectacular success in Jeopardy a couple years ago was widely reported and highlighted the fact that the company, not generally considered to be at the forefront of technological innovation for the past 15 years or so, is attempting to carve for itself a large slice of the big data/data science/machine learning/cognitive computing/whatever term is fashionable this week pie. I did not appreciate the scope of their foray into this space until the Datapalooza Mashup event today.</description></item><item><title>Scala in North Lakes</title><link>https://mmakowski.github.io/blog/technology/scala-in-north-lakes/</link><pubDate>Wed, 23 Sep 2015 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/scala-in-north-lakes/</guid><description>A Scala conference, far from any significant technology hub? With no call for papers? With hikes planned in what is one of the wettest parts of the country? Without Martin Odersky? What could possibly go wrong? A lot. But, apart from a few of the speakers not making it, nothing did, and Scala World was probably as good as a Scala conference can get.
Instead of summarising individual talks, I will focus on the major themes.</description></item><item><title>Haskell Exchange 2014</title><link>https://mmakowski.github.io/blog/technology/haskell-exchange-2014/</link><pubDate>Wed, 08 Oct 2014 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/haskell-exchange-2014/</guid><description>I was surprised to find that despite all-star line-up of speakers, this year’s Haskell Exchange was not as well attended and lower key than the 2013 edition. We were back to SkillsMatter headquarters, this time round with gym music blasting from the speakers during breaks and with no aircon for added frowziness. The talks were good though, some of them very much so.
Safe, Zero-Cost Coercions in Haskell Simon Peyton-Jones arrived bare-footed and dispelled one of the illusions I have been holding on to for quite a while, that the minimal core language of GHC, System FC, is sound beyond any reasonable doubt.</description></item><item><title>Haskell Exchange 2013</title><link>https://mmakowski.github.io/blog/technology/haskell-exchange-2013/</link><pubDate>Wed, 09 Oct 2013 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/haskell-exchange-2013/</guid><description>The second edition of Haskell Exchange has seen over 70 enthusiasts – primarily from London area, but Hungarian and German contingents were noticeable as well – gathered in a crypt of a church in Clerkenwell. The schedule was intense, so unlike with the events I related in the past I won’t attempt to describe all of the talks in detail, but will just focus on the ones which I found particularly intriguing – i.</description></item><item><title>Functional Programming Exchange 2013</title><link>https://mmakowski.github.io/blog/technology/functional-programming-exchange-2013/</link><pubDate>Fri, 15 Mar 2013 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/functional-programming-exchange-2013/</guid><description>After slightly disappointing FPX 2012, this year’s edition of Skills Matter-run one day gathering of functional programming enthusiasts bounced back with promising speaker line-up. The participant numbers were up compared to last year and seem to have even exceeded the excellent 2011 edition.
Adventures with Types in Haskell If anyone had any doubt about the reputation Simon Peyton Jones enjoys in fuctional programming community, the enthusiastic welcome he received must have dispelled it.</description></item><item><title>Scala LiftOff London 2011 - Day 1</title><link>https://mmakowski.github.io/blog/technology/scala-liftoff-london-2011-day-1/</link><pubDate>Sat, 15 Oct 2011 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/scala-liftoff-london-2011-day-1/</guid><description>Compared to last year’s LiftOff, which was an un-conference pretty much all the way, this year’s is split into morning, structured sessions, and afternoon open spaces resembling 2010 format. As usual, I tried to jot down the more interesting points from the day. The below is by no means a complete record and definitely suffers from insufficient editing and research (no time for that, sorry!). With this disclaimer out of the way:</description></item><item><title>Scala Exchange 2011 - Day 1</title><link>https://mmakowski.github.io/blog/technology/scala-exchange-2011-day-1/</link><pubDate>Fri, 15 Jul 2011 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/scala-exchange-2011-day-1/</guid><description>I’ve attended a day full of Scala-related talks at Scala Exchange 2011, and, as was the case with the previous events organised by SkillsMatter, I felt that relating what was said and what my impressions were will help me digest all the new pieces of information. So, here it goes.
State of Scala In the keynote talk Martin Odersky explained how his perception of usefulness of functional programming in the real world shifted from a good fit for XML manipulation to concurrent and parallel computing.</description></item><item><title>Functional Programming Exchange 2011</title><link>https://mmakowski.github.io/blog/technology/functional-programming-exchange-2011/</link><pubDate>Sun, 20 Mar 2011 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/functional-programming-exchange-2011/</guid><description>After the success that Scala LiftOff London 2010 was I didn’t hesitate long before signing up for a number of other Scala and functional programming events hosted by Skills Matter. The first of them was Functional Programming Exchange. Below are notes from most of the sessions of this one-day conference.
Managing Parallelism - Embrace Diversity The event started with Simon Peyton Jones discussing the importance of parallel computing, how different problems call for different approaches and how functional languages (and Haskell in particular) are well suited for the task.</description></item><item><title>Scala LiftOff London 2010 - Day 2</title><link>https://mmakowski.github.io/blog/technology/scala-liftoff-london-2010-day-2/</link><pubDate>Mon, 11 Oct 2010 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/scala-liftoff-london-2010-day-2/</guid><description>← Day One
The second and last day of Scala Lift Off did not disappoint. Compared to yesterday, the sessions I attended turned out to be less focussed on presenting concrete projects or results and more on discussing the language features and tools from the position of users discovering them. Overall, less structure, more interaction.
Teasers The day started with half an hour of very short talks by authors of a number of Scala-based projects.</description></item><item><title>Scala LiftOff London 2010 - Day 1</title><link>https://mmakowski.github.io/blog/technology/scala-liftoff-london-2010-day-1/</link><pubDate>Sun, 10 Oct 2010 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/scala-liftoff-london-2010-day-1/</guid><description>The first day of this year’s Scala Lift Off London exceeded my modest expectations. It was full of excellent presentations and interesting discussions attended by very friendly folk. I trust tomorrow will not be worse; in the mean time here are some notes from the sessions I attended.
Session 1: From Java to Scala Graham Tackley of guardian.co.uk told us about the experience of his team with embracing Scala. Guardian.co.uk had been a Java shop and when a project to provide API to access all of their content had been started their technology stack of choice was Java, Guice and Apache Solr.</description></item></channel></rss>