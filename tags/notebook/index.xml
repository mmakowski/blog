<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>notebook on Maciek's blog</title><link>https://mmakowski.github.io/blog/tags/notebook/</link><description>Recent content in notebook on Maciek's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 31 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://mmakowski.github.io/blog/tags/notebook/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating slide decks in Jupyter notebook</title><link>https://mmakowski.github.io/blog/technology/creating-slide-decks-in-jupyter-notebook/</link><pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/creating-slide-decks-in-jupyter-notebook/</guid><description>My job involves organising and analysing data, and training and evaluating machine learning models. In addition, the customers like to see demonstrations or progress updates for their models, so every now and then I also have to put together a slide deck. For better or worse, I use Jupyter notebooks as the main tool for the data management part, so I thought it would be convenient to prepare my slides in the same environment.</description></item><item><title>A Software Developer's Take on Zeppelin Notebooks</title><link>https://mmakowski.github.io/blog/technology/a-software-developers-take-on-zeppelin-notebooks/</link><pubDate>Sat, 02 Sep 2017 00:00:00 +0000</pubDate><guid>https://mmakowski.github.io/blog/technology/a-software-developers-take-on-zeppelin-notebooks/</guid><description>For the past two months I have used Zeppelin-based notebooks as my primary IDE for data exploration, experiment documentation and prototyping of production code. While the former two notebook use cases are perfectly legitimate, I would argue that Zeppelin is poorly suited for production code prototyping. This is primarily due to high barrier to extraction of common code to libraries. In Jupyter, for example, all it takes to extract a function to a shareable module is to copy it from the notebook to a Python file stored in the same directory as the notebook.</description></item></channel></rss>