<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>opinion on Maciek's blog</title><link>https://blog.mmakowski.com/tags/opinion/</link><description>Recent content in opinion on Maciek's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 24 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.mmakowski.com/tags/opinion/index.xml" rel="self" type="application/rss+xml"/><item><title>Welcome to the Fediverse</title><link>https://blog.mmakowski.com/technology/welcome-to-the-fediverse/</link><pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/welcome-to-the-fediverse/</guid><description>In April, in the wake of Elon Musk&amp;rsquo;s move to acquire Twitter, Andi McClure left that platform for Mastodon. Andi&amp;rsquo;s tweets and retweets have been for me a continuous source of wonder and delight, so I moved after her.
Unlike Twitter, which is centralised, Mastodon is a collection of servers (instances) that communicate with each other. They use the ActivityPub protocol, which is a W3C-recommended standard for publishing and receiving all kinds of status updates.</description></item><item><title>Build or Buy</title><link>https://blog.mmakowski.com/technology/build-or-buy/</link><pubDate>Sat, 19 Dec 2015 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/build-or-buy/</guid><description>As programmers, whenever we embark on writing a piece of code, we risk being accused of reinventing the wheel and succumbing to Not Invented Here syndrome. There are nowadays dozens of libraries, framework and other software products of some description for every task imaginable. Yet, the answer to buy vs. build is not as clear-cut as might appear at a glance. The Programmer’s Paradox blog post which made rounds in programming circles in November points out that effective use of third-party software requires deep understanding of its inner workings.</description></item><item><title>Five Languages</title><link>https://blog.mmakowski.com/technology/five-languages/</link><pubDate>Sun, 13 Jan 2013 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/five-languages/</guid><description>Pick three to five programming languages for teaching orthogonal programming paradigms. Which did you choose? Why? Blog and I&amp;#39;ll share.
&amp;mdash; Rosetta Code (@rosettacode) January 12, 2013 Interesting you should ask that, Rosetta Code. I’ve been pondering similar questions before, most recently inspired by Bruce Tate’s Seven Languages in Seven Weeks, whose languages of choice were sometimes overlapping (e.g. Io and Ruby) while leaving certain areas, such as concatenative languages, unexplored.</description></item></channel></rss>