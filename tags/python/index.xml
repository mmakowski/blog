<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Maciek's blog</title><link>https://blog.mmakowski.com/tags/python/</link><description>Recent content in python on Maciek's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 07 Aug 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.mmakowski.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Precision confidence interval in the presence of unreliable labels</title><link>https://blog.mmakowski.com/technology/precision-confidence-interval-in-the-presence-of-unreliable-labels/</link><pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/precision-confidence-interval-in-the-presence-of-unreliable-labels/</guid><description>Consider a binary classifier that produced the following counts of true positives (TP) and false positives (FP) on test data.
tp_observed = 5285 fp_observed = 3184 We would like to know the 95% confidence interval for precision metric of this classifier. Goutte and Gaussier showed that precision follows the Beta distribution with the counts of TPs and FPs as parameters, adjusted for prior. We will use uniform prior, $Beta(1,1)$.
import pymc3 as pm with pm.</description></item><item><title>E-mail Testing with Mock SMTP Server</title><link>https://blog.mmakowski.com/technology/e-mail-testing-with-mock-smtp-server/</link><pubDate>Fri, 20 Aug 2010 00:00:00 +0000</pubDate><guid>https://blog.mmakowski.com/technology/e-mail-testing-with-mock-smtp-server/</guid><description>If our application can send e-mail (and, according to Lettsâ€™ Law, it eventually will), we would want our integration tests to verify that the e-mail has indeed been sent, and that its contents are as expected. If we have written the integration tests in Python this will be pretty straightforward: Python library provides smtpd package with an implementation of SMTP server class, all we need to do is extend it to store the received messages and provide a way for the test code to verify that message has indeed been received.</description></item></channel></rss>